{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9dd564c6-bc21-49de-8858-c6c9b82842f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ca73fd23-c38b-4de5-967a-cdd5d851fae3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e58066b-bbc4-4a8c-bc6d-53b9feb6c2b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f85ccd9-9541-46a2-bdf4-364ad2212d80"
                }
              }
            ]
          },
          {
            "id": "8a921e02-1f97-43da-9e84-5d462b74583f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e96cc93a-be37-42c5-9701-937e7eadcd35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "963a8e4d-a10d-4486-8a47-b288dba4b5a4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "838b7ef5-e8d4-4fc9-b8fd-bc1e4d78faa5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cd7c784b-5a96-4d99-8f80-2203eb3d9d82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aef502a3-c77c-4308-8236-72296bb13de1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40ee09bc-8c98-452e-90bd-a9e350f3142e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8d23050-abcb-4f69-8471-b52bf92dd817"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b57073ae-b044-4d9e-989b-7b3485ade69e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6542baa-e939-40c0-a365-020f659f8f14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3166fc02-63fd-4a72-8b1b-d50c5db88451",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b8ca026-a74c-4dc4-9b61-13afa044caa1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b987b32-4578-4a63-b7e2-f887162e9523",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b56faa7f-be73-40ed-81e4-74640110272e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd4f9365-81f3-4e4d-976c-a72d9ad8e208",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2dea134-d0df-480a-89e4-5c5dc9b06630"
            }
          }
        ]
      },
      {
        "id": "85931b87-cfb2-41f3-99f0-e4e31539346c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6751bff9-1fe4-469b-adb3-5e9ce80d41d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1bdb5bd-5272-4af9-9877-af88c3eb50a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b07e7131-ef46-4827-b398-018e480eb918",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1560de-7bc4-4a13-9704-2e2306ce3f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3898fce-010a-4b12-99d8-7c414f2bdba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd7dc1-c1c9-4ed7-ab32-bb9cb8e22096",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f25e8e-f345-449a-83db-082066acb1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfdede8f-bd0b-4d1e-a36b-d9497d8db7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f007268e-20cd-4b28-9957-8c1d2c1ea498",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae45ca-e858-49b2-965c-67149816beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9b857c7-3dd8-4238-aaa3-593d573806d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "192ea294-6793-4e8a-b30f-8c75aa32dfde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a65a635-902f-4e77-92c8-6ea6d373f4d1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ac2566-2613-4acc-b989-bc65b4b866fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a60f36ce-658e-42cc-b186-3cef093efb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e53ad73-fd64-457a-8484-09d13f6cb906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75fb0f6-c648-4ebd-be7c-6b6a12d6acc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a9f096d-32be-4779-aaaa-92dc2cdfe692",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0477be3a-9993-4cd1-a44f-075bba97af6a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cf2c27c-d569-4b51-9eae-b082a255c768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c4f2be63-5ebd-4c18-8a38-b02867d37bd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bd9d9e6-7563-4591-bc44-c57756b0695d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "42898c0d-4f9a-4ab5-81f1-9d149eb3f63a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51e2524d-c032-4d0d-b84e-1327cf5c82c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d27fdeeb-a673-4a2f-ac11-79e357ea90c7"
            }
          }
        ]
      },
      {
        "id": "de2b34f4-19b8-49eb-bca4-6e937c1e1da7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0778c354-fd7a-4472-8939-dbf78738c60d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "701dc6c6-a649-49f9-9927-3ec3ff509aa2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "876952fd-1e49-438b-a157-32c1c7f1ad60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617de581-861e-42b4-9c25-4135101d8678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755988a4-ffca-4ce6-a0bb-3aec4d243152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21ff1d8-e9cf-4ba7-9410-a11bc3fe03a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "058f39b7-23f9-4440-92a7-76761674d31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10662615-b7fc-40ba-94be-9b0f2fc64420",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a778d5f-bb82-4ab5-a114-ae4d2f3b9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a5c2c1-e876-4b7e-9c33-57c1fada139f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07bc028-d93f-470b-b21d-7746bb136275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eab582fb-31ae-46b9-b9b4-717155edf855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0613ef89-c1e6-42e2-b01c-50efafa9d980",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabaea89-ecb0-42ae-93bc-4545f5f96569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9130a7-b68b-4de2-873c-6d3e766ce3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd65ae8b-69cc-4aec-99e4-ab84186b873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "825258e7-a37f-4248-8065-a5e9102215ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6e7938-92e0-484d-988b-d8ea0f522bfd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209a2314-4476-44aa-ba72-2adc1a749bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd675dc-f694-4b3a-adf5-67c8ad1cf8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c05078-ecc1-4aa9-b579-64207371b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66cef7b7-b73a-40ce-98ee-55abc4c68f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bd605c-d2f8-4203-bb0c-e2ad7aeb3fe1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5324d6-fcb8-49d8-8017-ebe8027caf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c07a8e0-5d03-4389-939a-7ee6fe46bbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c10d3a-037a-4c6e-9400-768408fcede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c249fe17-0687-402f-990b-7ab0349be875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71fcc1d-1da2-45cf-a6e5-d9e5abd5a65b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3653306-7573-4c99-bacc-b8dd9e28f19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14353800-922f-4bf9-9b79-e6ee16fc351d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef3ed1c-2e6d-46d3-bb0b-0c3677c9a56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bddb232a-88c8-4785-8992-4dc5c9973129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7b31b-f49f-4073-b8e1-4ce05dfc0209",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf83d86d-6039-44fa-b06a-57c2c239712d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe5cacb-13a1-47fe-8503-266cc1482b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d3e6bd-5e42-4509-b965-67ed4e5fa8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c810f9-96fa-4e71-8f6c-1d81efd49ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9d6b48-f3cd-483a-9993-04a30073c770",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b566ebf8-3e94-4e8c-bd40-826d99b9bb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018fc3e4-1044-451c-87cb-5c0a7690ff6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6db1f28-e407-481a-8d61-fbc75bb4d161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f50f594e-e333-480f-be11-7d26ef67e01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68766d20-0280-4800-bb87-022d7c6b0d59",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae81bbe-aeff-4cbf-84e5-d53aa3c6906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d946e8-a11e-4391-9424-329bd94fa354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8740a163-a5b8-4784-b1da-dde7e434bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d867668c-bbe1-4458-994b-f11508c9d8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962add42-923d-44cf-b461-f382b448dde1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2fca3e-290e-4699-a1bf-ba06e1a77ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985f87db-dc7b-489b-9142-41c046fc9ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efea984-df5b-444c-8718-103d2169e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44b66cf5-4b4c-4f73-9321-7ca477adb8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff2547-8f95-4da3-9feb-109b637b7c60",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e848fb9-1b0b-42c2-a2a6-e00cda8c4acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8488a7f6-bf24-4830-974c-02a3a5612b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212f5726-5522-46c0-b5a4-6ad1a652095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4630e1f5-cbc5-4fe0-884b-4c16de7f5273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd0b1f-be79-4d1c-8464-50cdf5071637",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16debf61-1c3c-43fd-b58e-7f3a881b7c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db0e849-d564-4a07-87b8-2951f24e5d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028536c-5b55-4caf-a701-b49f1ef0ad3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a309e0bc-7505-422d-89f1-e0ffbc455887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf5a727-f29a-4c2a-9f48-a2a5d0178b70",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e68c2d5-16c3-4717-a764-41a25b481a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a130452b-8bd3-47d5-8d42-3e7c6c6726c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca9d7b1-c321-4033-837f-10b59daa5605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b16d4a6-a7fa-4944-9b46-68606fd5e71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6106cb-d788-4d79-8040-75e81ea92c9c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db826a10-dcdc-4329-9927-e52c6955d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47083811-40eb-4f23-9e87-94a403ae2265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852ffc52-3d62-47f5-b722-97b5e7fe01cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73908fa-1fa0-4a87-9bf4-352057226a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82024f00-f7b0-40b7-9bd5-9555081b5d77",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb75a0-dbc0-478b-b4a0-a85680e17903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0681825f-c671-4c26-a579-6b6b5533591b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d38acaa-31dd-41f7-ae8a-04907a936c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca9a3a18-ba49-49fb-b436-d62e5b65ed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6e5d6a-1bb3-48b8-a3df-1b93420cbc44",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f0477f-6882-43ca-bbe9-80925787718c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cb6c84-1d25-4446-8e7b-f8769a8ba5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b8fb93-a4fe-41db-aa65-2e2622fb8ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f062d321-39ef-455d-840c-c71c049f2a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ad194-7f1c-4078-973e-2b34f4eef842",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ba9259-bf0e-4ef9-aad8-e79f1603b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383332f8-8587-437a-ab16-f9e67b9de749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81da987-74e9-4916-9a37-1431f7fde117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7d0d8ae-3e51-40b7-a97b-f41dab9e2c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a47ad2-8b7a-4ed0-b82a-4ede093db573",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be08c2f-a455-4293-8a07-f4c80403ea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf2128-3872-47b9-94cf-87445d2cd634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a20c0c-f4d7-4d90-a466-0d9622203799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7168e6b-9f67-4e0f-b85a-de953764283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66783f01-7dfe-4836-8cea-e4f245d3f6d9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e8111d-ecea-4088-9238-e6355427d5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c6636e-229f-450d-aa97-19781c2f0a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f710062-5146-4572-825c-92a082bf03b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0678ee-e6fa-4c87-beb5-fb6e414af36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fc4937-e9a8-4ca8-8710-3d957302fab1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff14db0-89ff-44bb-820a-483f0b6ed33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737cb6cf-4a81-49f4-92f6-9a8a12557d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2515604-2e6e-4ce0-8093-4cf08463c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e1d81a-7a89-4988-bba2-71812277130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2900d898-ba6d-4025-82e4-9adae8ba4337",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c5a9d5-ba23-4f06-b62d-edeaaf443b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96118eae-e847-4200-aa34-74e2a99e3120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35019f4b-d137-45d9-aedf-c97b15d825ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "923edbed-cba6-4b04-b804-9fb1d7e0a7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af707a4c-81d2-4515-96b6-036730c904b4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dfa400-5811-406d-a357-24b7de723948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18f78e3-2cb2-44c2-b849-7e7af2e3647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2149ae-733f-4e3c-b578-eccf68ed8806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d748b592-5ea3-48a2-a32f-e3e9a88995e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80e96f8-fa9a-4919-bc2b-9643f479af51",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2881fd74-77e3-4e1c-b609-a6c60b78e206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212ed962-f80d-4ae9-8549-4f10ae6a57c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ffde51-bba2-46d9-8cbd-051390632e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6417b9-874d-4777-810e-fcf92704e15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d67830e-6e83-4335-a7c5-5d290fcd6f4a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a5a7fd-f7b1-4c29-bc0a-ad05e21d7f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51b2e78-83b1-4863-bfe6-bf3b2afd1eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e4a202-516d-461c-93d9-fe42e8a38011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eab3c0d-b142-44af-8add-94bb05bd7825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba6ce5-7029-46a0-a622-aef3f0fd7154",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc897084-5365-4eb6-9b63-ab94204b1f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff07e80c-319a-4562-b25e-f2abecb9d285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65015584-07fd-4ced-9dba-3bdd9a3fdce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "beefbe41-cf72-4e8a-abe6-31ce5fda9521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829c4a58-1112-438e-8cf6-4215152a86ec",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e59d97-fa92-4a75-a6d2-ab223bfe1d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419d9267-1b8a-488a-bc61-f6f1b9dd730e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30afe3b-3d32-43e4-8469-d5939c33344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8bfdb7-fada-4e6b-b42c-2122186d193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e753ea1c-ee07-4739-b46d-4a2b0c0db170",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9096b3-c2da-410a-b9d9-41e59f238769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eab387-807b-4f5b-b81a-e4c5cd3a1e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee018819-87f0-44e2-9aaf-2726ae400d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bcbaa8-8e55-4bad-addb-c94c6c2c609c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc1d082-51a1-46cb-961f-c2797739792c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98a23d-48ac-4fe7-badd-a7a20bae54de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9dbf85-9b32-4f5e-b98a-bb64b23dde56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83af46b0-e0ec-4f29-bde8-f6a00a71d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb076ab8-19fd-4d4d-88a0-30e174f1f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be53e87-3a1c-4b50-a82a-261078ccb25c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d07f78-d1a2-49eb-b593-aa827b05b220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83307db3-f8fc-4071-aba3-bfc16874af2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400781e5-4594-46a3-afcc-c576c4f90f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "544d319c-4d9e-4fb4-a52d-d284624797f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1ea8f9-1ad0-417a-a39d-03713c6d025c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e053768-3999-4f15-a5c8-7502ef09a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8438c1-43cc-42f1-ab64-268faaaeb879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dfedbd-0cf3-4f2f-b967-4c6d72dab35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fafe282-ffc2-44b6-8df3-30b1876bd8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd085c7-ee28-438f-a778-7f0f551eee96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eec0ce3-2cc4-4170-9418-53ebdb40b494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2311778-4ad1-44ff-8477-b940e597c726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa703a89-e4c3-40e2-95bd-86db5ba3a356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c24aa7-e403-4780-80d0-14a4f88c0c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83054f71-197d-4356-b18a-b96b05cf16bc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a6c9dd-bc4b-40e7-9cdf-61133e9b6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7529bc-c642-4cc1-bd59-48a1d548310c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824c89e9-c226-4eaa-86f7-c7b68bef666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9eaeaa-0128-48a5-86dd-65f775b566e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae4abc-4e33-4568-a06c-ab2155381795",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c550e4ff-2e29-4fd6-9989-279e1148714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614a12d2-5505-497f-ad0d-b26e818dd8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f002c-92b7-4399-9adf-dca315b919c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6364f49b-233b-422f-93eb-89d82fd05881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091fa89a-29d5-4f49-9542-5d4f15b0c8af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86190346-1b6f-4970-b789-be696d87f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52278051-4773-4fd7-9cc5-76f204296626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593101e1-2f02-4a46-a668-fd5b8766c1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0575b9ae-ee14-44fe-a7bf-38f7d20a2a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13588ca-8fd9-48fd-9f99-0198b59bdc73",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d664081-3446-48cf-825e-076dc2863320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34aef46-df50-49b5-8498-da5ed5523268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad1ee4d-c406-4e65-9d60-4932723113c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "822d719d-0c5b-47fa-9e8e-bbf946988653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0afe624-bb5c-4935-8232-ad2e3dae1f81",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dbed64-95cf-43b4-8234-2bd0301be326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f67e8388-d025-4d47-8aa6-3987851bae7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51a7caf-52c6-469f-85e7-41853412c3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d63a7d41-474c-4d42-b066-a85bf311ee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3a2ff8-d2af-449f-bacd-0d41ae2ce78b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3b96d-d590-4b04-8649-597c7821cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7e41cf-83f2-4f78-9667-63c7f29785cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ef8ea7-1581-41fa-a8cd-9447f96d197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b32e773-29ec-4052-a2ac-a50c649b1fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a03d8-ac76-4ebc-aea1-58a3e2e22e19",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133df8bc-6a79-4074-97d8-4a9964734216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427485e3-f463-4be1-bc7a-0df5ea6ebe6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f28f54a-ff15-4fa6-81d0-10218781dbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2d82d9-9697-4c05-b8cf-5ebe9c18363a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e6813e-fb7a-4ac0-b04c-73c2da2f83ae",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0afc59-c9c2-4fc5-a4dc-4f137bb0bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836bf69b-08bd-4cbd-8cde-c552962875fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96394ade-8c20-4f91-add9-425960399eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc4ff82-b712-452c-b2d0-1f04d6d24e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646fe82a-f258-48c1-b691-6757ca680abb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d170217b-f2c2-4ae3-8f7b-65016d23f881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2749d036-8831-4ecc-b771-50d62fa9322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831a6c4a-70fa-40ce-873b-88f06dcf6fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab58600-4ba1-454f-8406-5d186eb9abe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82590f74-16a4-4a33-8ad0-a163a45a8dd3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6318e90b-1a9f-44d7-a051-8187487ee9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0554e2-2899-4e69-b08e-229821e918fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556393f-0110-422b-ae27-e140994b9df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2763ce18-33b3-4ff5-8004-e19dad7bce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d449e4-c005-4658-b29c-522cc4ac4b32",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa508a6-191b-4bcb-ad57-757ab569253d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762a5fbc-a48d-49ad-a044-91de8a75df1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e9db00-7454-4599-9ded-d54363758f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ae32e732-a355-4baf-8e18-1ef514d8a605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b1eda5-6a27-4b3a-9414-5362227387a8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1c7b6f-fead-4ad1-a58c-ca9e26143012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66106ad8-424d-4540-b53c-c01f32c53b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6fb95b-5d89-46e3-9c6f-d9fc39225511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dee24c-4453-461c-885e-a292845deffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae9927b-aed4-4491-ad06-b603cc6de96b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638963ed-4b8e-41ec-9d68-d887993aeb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357952ef-c403-4c2a-b675-2713b0e36030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b2c19-05e0-4b5f-a6ee-35dfbd53316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d2c08c-4e21-4623-8a8d-982faf4ac535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44e8ba5-fe1f-4425-994a-e267cedea15c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c02d66-d834-46dd-8988-133cc038b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207619fe-07a3-4716-a95b-f128c165833f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39a9386-93e3-4a6c-b008-3cf67a8d3745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "797b7abf-94e7-4875-99af-3ce4f0231465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dfc8cd-b53b-4708-8c7a-4fa3375aad90",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f2f768-0fe9-4923-9189-a8d4c3cd150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bf6279-d2ad-4f51-93c3-5f7cc31c9762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a871b-3406-4f66-9324-5d9ff8c9a8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "323ad8d5-21cf-4b94-b056-383f1f8e9314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44ae08-bdc3-43ed-a5e9-5e05ef6da60f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5266ad-89a4-47ee-9704-cad24a2c5945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3b4d76-4fcc-49a4-ad9d-9e5669587c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3456d95-2fb1-482f-8d34-cb1ad614165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a695d1-493b-488f-8f42-5ef227e112a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018c2f97-b846-4332-bddc-2bf943f144bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f851f7-b5de-4f24-964d-5514435bdaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbab2f83-9fbd-4769-9cc7-b46b6c1d7032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd71d6-ddf9-4e56-aef4-143c41446405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f702c0b-6ba4-4ca1-9907-fabe7f622513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f33a1b9-d54d-4f76-a13a-a9fefeaaa15f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae1d0f2-1390-4753-9e2c-4fb1ab9ad89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e54315-5f66-4980-afd6-d10f0e4c882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11297c88-76c2-43f1-9124-62adc5f74ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6840c1bc-5be3-41eb-9bcf-812a286b00ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d7bf48-b9e5-4e71-95fe-7ec9851606f1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b131e-9ed2-4f8e-9e28-5a897ec688eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a0d148-6acb-420d-bc05-d3915bcefb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeaad5f-ef0b-4294-b123-44b9bb45f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ede8f073-fe39-4b85-8685-29fe0df9c09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f589c-b30b-4db0-8fe4-ae472b5f8f63",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cacb13-487e-4401-9cf8-94afe5fbae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83489c8-2150-439b-a3e8-d6005e569962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ff06b1-0215-4c20-8357-009b5debac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcfa1f3-02b1-475a-adf7-54d6031f7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2809861b-4d73-4ec0-99bb-c9b53afc42f4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf71dc92-d2aa-47ed-b3ec-0484bcfe974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b39cf4-115a-4b68-ada5-03c38c06038b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a39d2d-ae22-4eac-8116-6f4aba6b65c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8303045-6198-4aa6-94d3-cb1e0cec0b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f3eea9-0549-4070-b9f2-df45eac86ad7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511fcd7a-bf9c-4fec-b99b-7a9a13b0878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb858a3-981d-46ee-8d5f-49bb57e45aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c6594d-91b8-4522-a8db-faacbfc0d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9caaa4de-fd9e-4849-907a-6113397bbc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8020682e-3ecf-41b5-bcc9-7ca3ba5af17d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b24a229-8bea-4fd2-8051-25adf0ea58cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952315c1-388d-4307-8f0d-535bbcee8b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8da2a9-17e6-4227-9b68-e9d328c46b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "771c15ff-eab1-4cd2-85e3-13ac7607e1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f442393-ac46-42f5-b018-746c6d806547",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af6b7e9-a4c9-4f2c-81b5-209e387710b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e87e830-8af9-4934-a29a-18596badbc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d277ff-9d19-4db1-8bfe-5b0f2dbf66c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d034ac8c-8856-4215-bdc1-c3caf3f09a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688a3a96-7262-49e9-98b9-c8814ead13eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7e797-8148-4e16-8547-c04ca2c4437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96297fa-b89f-4e76-a1bb-6de625b79bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7877044d-7cb9-4b4a-86fe-fa075f660056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d73488c7-84c2-4fd2-8859-8ba910eb11af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487d443-a0f9-45b9-92a3-c45974e9bc4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a0acab-328f-43e4-8ad2-9ae85ff55f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4812409c-2f4e-46fe-bfa4-13865fd68b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01053b3d-dbb6-4e73-bd60-06686f22fae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c90057-84c8-425a-9111-4ad2aa3ecbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54793260-2ff8-4123-9d71-161dddc32c19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792bf7f-62af-4ae3-a484-f642f76cc4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7773c4-cc6a-4fe8-b319-82391bddb4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ce8b0d-990a-4a2e-b47a-c28c36851f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cac24c60-3bc2-4901-936f-afadddf52976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23db7f5c-6d4f-430b-baa6-8bd22798b126",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee807df5-e7ea-4f09-9a85-a7270e54d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dbaa70-2ff8-403c-8ec2-ec498658625a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee4201-1fca-4cf8-b6f8-b16d95d2dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9605096b-d9c6-4695-9a32-813ca3c4ea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85c7711-dcc6-490f-8fe8-87c5fa8a104f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d031f794-2631-4f1d-bd24-f1c8bec626d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad66da18-f3f2-49c4-a7e1-94cf26973b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577fec92-e9e1-46e9-81bc-a6ab10fb8544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f40192-28d6-4db1-b42d-570ba7c452d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb81885-54a2-4f1d-a0de-6c32e8f29730",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0096fb92-726b-4109-954b-036f9f3375dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bc8daf-f526-4dca-99b7-16094983bc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c980aac-2558-4188-9b93-b23d902f59a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb337160-6763-483a-9667-a9f490ea1189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d98e7-7233-4f49-bed1-cb52bda271b4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41466d96-d5e1-4cca-b071-745525edb68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b22a13-f42e-4537-ab70-9af98f0ada8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19eac6a-9da3-4b74-afc6-d7da23744358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4552855-a8fd-42b8-9dcf-cab831c18c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec996f-4c7f-4717-a689-1e006b3e6586",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9573f1a1-db9e-4eaf-8911-f9a35400dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce07bd9-b79f-4b9b-8afb-9023d7fbd4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60457b21-ef34-428c-9b7b-3e051e480032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "716b1659-29e1-4384-890d-f1a577970b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a90a951-9a8b-43c8-9290-f76e1a32667b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603fce7-6ef5-46b2-86df-2ac6b8e5f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636fc806-e90f-45ab-97bc-584cb5a2db5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a949306f-6f24-4c5d-a5ea-613d33a2f66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40355a08-7cfd-4177-815d-f045b0ff267b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3687b0-93cc-4bb5-9104-de9aadc7d09c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03afc514-f951-4867-99d8-0977bc113e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfc6892-737c-42de-8efe-d1f985e852f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da428ae8-5473-4265-9003-2013772afc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e2f168-768d-4daa-8662-99a349fa2161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425597a6-4c93-40f9-b96b-82ba888b0fa5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8e682-2ef8-4c5a-bb0b-4d0d9bd42bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d9878e-e1ec-4be5-8139-653c3928698d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184f12b2-9dc1-489d-b061-8183cf8c2be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c40d302-cdc5-440e-abff-3c4a2dcec782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226f3b6a-da55-476f-afd0-96c98b425be6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0e3606-ff0d-4ac5-b0b5-5cf954c8d629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c9f762-4dcf-418c-9e63-e0be8dcc2259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75760a1-a63f-4e36-9995-74e506ef0f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a7c057-4bc3-4aa9-80d5-5a40c44aa4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff0a8c8-5b33-43f7-beeb-1cb0d31c2de7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e518331b-fd59-4c05-8f8b-66c0abbcd46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f3d991-6a21-46af-8549-24d37101f652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa50d5e9-586e-4ff7-a46d-3d79d0ac6128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8fa307-bb3a-461f-b381-a288383e9699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d63c23-4e83-4f67-a04a-a47f13811b45",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8ec5b-79c5-4ba0-bc7a-948123f5757d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e8858c-82e9-4355-8f46-765de7116300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4e6264-a737-488e-aee9-2337fd95d713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15a803a-91cb-41f7-9750-dfdca367a8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e24f9f9-45f8-4b5e-b641-5813bdaf97f5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b329141-e2c5-4860-91d3-8dc42b4d69fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5257bd5-516d-4eab-8a8a-2b30c6a5dc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe46d12-9532-4ce5-98f0-b4bcd1169b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e41ee4-b8c8-4e50-bc0c-3568e45d4eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbc2560-b68d-4448-abbf-42bae6716b93",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfb1388-adcd-4cbf-af0b-ac603d17b900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901afd42-badd-45e0-8e68-f6d0ece64b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4885b6fa-87b4-4298-b0ec-b21f8bb3fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd30893c-6c24-4e25-84a4-84f25f1dd8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80deb11b-2230-4e34-a294-b7e56c9e3407",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cabee3-464d-43c9-8e15-1724613cbc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592bdb2c-6f25-4e92-94f7-67122e552454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf02d4-626c-4ef8-9589-04d1476de1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b20c4e-3b3b-4818-b76f-54efacb09fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c344fc-f7ee-4400-b17b-9b8cd10b91e0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6835a566-65a6-4d44-a714-a50e3ae3f4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e358c2-938f-4551-893a-f6245baca43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1894e08-3d95-4176-8a5e-395ceb1b3b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb20a93-2b27-4a32-8758-28d13e0123e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80228fc7-63b3-4439-9257-db46de4a1796",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8d07d4-cb6b-4f93-89bd-a19486d89417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfb3133-3077-445b-acc9-d423dc53eb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54643fe0-6ed8-4a1a-a3ca-319dbdd4ec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e34d0e8-0c2d-4f78-9eb4-f530c8ec1b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62efc88d-ac17-41cf-9f18-af6d0b93385d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84680647-4864-4d8b-b643-79c12805c026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e804a3-8482-4b37-b920-ea6295ef8c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d71ae-3613-4267-ba6d-54d9002ee3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79a5adc-d635-4136-87cd-9d596f987207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea95c4c-ca3c-45fe-93ee-7c0479bd7d32",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b86bb0-2d1d-44d3-b242-2c77d6fc3ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85c6658-1d70-46c5-ba6c-1c82e6124eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a70a02-c30c-4c7d-a2ab-8cb705b17309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a4d593-e288-4967-ac05-56ff33d8683f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52f1c98-59ed-4d18-aed3-75c0a65ca914",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e41e121-e26d-44dc-9a7d-a50c06820fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f59073a-0545-4aea-8dac-8ef08cbab966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7008ec71-0283-4974-9441-56de3e55c730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "487317e8-8983-4cca-b963-1720a8b13750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa190036-f611-47ab-8748-db7efac4c710",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd74184-a73f-4c79-9cf7-52b3d439fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c02ef2d-6052-4246-8369-c7502d90b138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7796f385-f212-4ef6-924f-fc10ef77a6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46f605e-0cb1-4a2c-b40f-59a9e4f53671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ef145f-9798-4bbc-8100-39eb7f64e0d0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba7ca54-daa0-41f4-a496-3f6b69ec5321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1ffa4b-492a-4285-9218-10fd74dd2f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb200e-2447-4f93-a7dd-72fd34e389fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e12d3df-83a2-4a81-8469-77a09661db5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5096475-e78b-4e61-9812-8fbbc2171cc8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68f7374-8c47-4066-aa5e-7614f5929d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa23de66-8a75-4243-ac91-e0a22f028164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db33bbd-ce29-499f-8a9c-0ab9e17ccead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c690531-7cdc-4de8-be2c-7493c60a0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74395875-15a7-4e3b-91f7-5ef6afc48c26",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb85a288-45d2-467a-a960-ee0e1ec09d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f99fea0-0a77-4d43-9938-f61cdd8f172d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3979877-7218-4711-ac1b-8f8410955403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f553100c-6093-46e8-9f7d-ab951c997515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaa40b8-affc-4e80-85f6-35141bd41110",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b4c451-eaa2-482d-a0ff-99c61822100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7e2250-cba9-404b-b143-d3b7a7b79d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552bb3c2-c7e9-4c89-b032-fffc552c8046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ebd2b5-f60e-4c9b-894d-2a7cbab87fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2207dba5-4fec-4a53-8887-31fe59b07e45",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b80f0c5-6917-4daa-ad4e-f00e1128261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4290a3-563a-45c2-b9c7-352171a50c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee040793-75cf-427b-bb1f-6860348f1ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55b0465a-223b-4d93-af30-90dc5a666596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86075d92-d035-45ed-bbdc-143e982f29d9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ae575-9370-40e2-86c9-ec28b081bd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3900df-a084-479e-823a-950c25eb2d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9ff68-71f1-40e6-97f5-45f3b30b5e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ea40bb-467f-4aad-a79a-696bea519359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21672fc6-9cab-4cc8-9b04-1b2ab2b986b1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dcc5a5-f59d-45fb-a3dc-d0d1c85957aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dfba62-9fb4-492f-b1f3-37afcaf6866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283a8f2a-7a1c-4c69-b905-26c5beffa25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17bf15d5-531b-4158-9a60-1eb0690c257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6173d9-7640-4804-ac40-c41950816d3e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e7a196-8c5e-4e6a-9f00-914ee033c819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd94a62-4aee-43ab-9013-3999a1802c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469d9a76-5a8c-4bc8-b750-2f9c3ef9d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18206bb7-cf49-447a-b146-000a8a6117a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2c0fd1-0c8f-41cf-b2af-72c95fbe1b98",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2728a4-ade1-4286-b016-3b1cdf470fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff833866-3205-4034-823c-4514b423aa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f8f20c-42ec-4c9b-8468-5f1f8ea1e17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b60b111-58bb-4d06-9dbf-141331a2635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9f6eec-bce9-45a4-b16b-c43a2d60c0d4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05c8573-2692-4462-bdb6-ecbfb0683494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96b5565-af96-4a32-b6dd-a4304f8843e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d693375a-a1d3-4f22-ad3d-dabf746e2a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9313ea24-4f46-4308-8b10-771a0d6d2f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25722332-e162-46b7-8ef7-54f95cc3024c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b41b58-012b-4044-a4dc-ee2bca2511f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa4ab4e-98d5-4ceb-92fb-257a3cec059a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35567598-f6f1-434c-b93b-4fd92e0dd853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0a5de-a6e9-46a1-9696-dee6d61f2d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ded539f-3db0-4feb-9da7-50a5846a7f53",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97a2b60-c969-4e20-81f0-eb6711b1c36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e93811-f309-4e31-bd57-9770c9a81d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815a48a3-f61f-4c4e-b02b-57bb01f64439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "39075b6a-5709-467a-b232-4f7cdc3ce866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa1aaf6-a301-4992-965a-536c17d53a35",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c393d-df2a-4efb-8132-ab80fc798c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e98c42-0c82-4879-9611-ea24af7fbe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9c3d8-aedc-44c6-983d-0e688b336aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbdf244-92df-489f-a47b-262e570f1c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0817ac-f4e1-4725-acf1-f399197b2f59",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965a89ea-5bc3-4789-b9c1-87d43d1c5878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5de92ea5-7214-409e-87f7-2ee93095ecce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f4c55b-e74d-430e-9569-f3955fccc11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ce2776-c33a-4101-8ab7-0c4f713fbf97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0440d6ac-ae96-4ec7-8631-88928d5fe3b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ca26349-34c2-4325-83e7-ba68ad9f0a13",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd585c0c-c25d-4de1-8cd9-0a0dfb50023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d08071a1-67df-4751-8ee1-57feb00de909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc5b3a2-f83a-4efb-8e05-c4596e9cfd99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a544896f-135c-49ae-8821-ffde24935f6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe9222a-6ae1-43c4-a3a8-11e8ffa37fb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "911927c2-886a-4559-8867-515977564da8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4120b826-44c0-4963-ba35-445a0b35adf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0c4106b-24d0-4448-a5d8-86d35bfbdc5c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbc3e084-2392-4d09-aae6-82c1cb421912",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c4faafd-ef60-4956-bfe5-23269d4891c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d75832c-655a-431e-8a97-413bc59184d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a9a39e0-c86c-4945-9f92-e07d694f1d6e"
                }
              }
            ]
          },
          {
            "id": "21d07c08-233f-4ccc-af3e-be3cb77bbfaa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d1d215a-e574-4d01-a359-85b492c61a19",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3333a40d-ad78-423b-adba-a9887bdf7e29",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b36a9-0115-4f7a-ac17-7d42b8ebdbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d4793027-20f5-4ae4-963d-dc04251ce050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f607ef7c-7e95-4541-9b59-8296a7c57671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a0f361-66c5-4959-96c7-3ba067bf348d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d6beba5-6f1a-4296-8aae-180a48c37e4d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33344f07-480c-46db-a564-b9bb63e333a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "728d7bfa-be2f-48b1-88d9-58d3ff66d27f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7b83f91-6249-437d-a014-df9983b5db92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76c5fe86-decd-4cbf-a649-ad66045db096"
                    }
                  }
                ]
              },
              {
                "id": "183ce018-654c-4376-96ec-641c2884172e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad14bb52-1948-4349-830a-a107c2bc5017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9849ffd0-565c-40f8-910b-821aed2cb88e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abbdfbd0-6294-4e57-8cac-3381a342b4b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9533728c-b337-46d6-bba2-0e6c3b77338c"
                    }
                  }
                ]
              },
              {
                "id": "cb60123b-50e6-4689-a78c-822230f6f765",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ceb5858-98b2-4334-a73a-cba1b24f98f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "062a5ef3-a21f-44fe-b579-9c994c1cbd79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "665b1ed3-6c45-465c-8eb4-fcf37e46edb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64370f25-f688-4873-82b5-9e210c84573f"
                    }
                  }
                ]
              },
              {
                "id": "4aba6c6b-0b7c-4b53-90e2-bbdd7f6e1ce8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "935bbef9-47f1-48d7-a488-e380286fbccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1b009d2-f9b5-42c4-b073-7bcfb05b4867"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a77a18d-baeb-458e-b214-897179e8708b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "23424cdd-15b4-46e9-b05d-1a336571524e"
                    }
                  }
                ]
              },
              {
                "id": "7bd89bce-66ed-4bc0-aa8f-831f3361eb49",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9ce55ba-8eea-4807-bc4a-bf3094633acb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4316b085-49a3-4a29-9e06-fe7660d50fea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ed1e3b9-d06c-4ef2-81ed-3122292b29af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6fc5fbe7-0a09-4588-bca1-1bdcec858b21"
                    }
                  }
                ]
              },
              {
                "id": "0f28c5e0-bd71-4ed9-8966-f00f4013ce38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c2d54d0-7977-4202-897f-8e935627f51d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a2c55b9-826e-44fd-85b3-774c4e4060f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c332e492-5017-456d-83d6-3a9ef3127897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4b45d24-0b65-4119-9157-b6cd1b3be8b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdf255e4-b294-4650-a6cf-60e55a51cb8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78ca6da4-c23f-4432-9c4d-bea302fa4b72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6392b7e6-149f-41e9-ae1c-9abfb5f3e1bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c5e556f-5d9a-472d-a6b4-eb8d1d6066b8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57822778-3be7-4b93-9bd0-5ff8c84f3c7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f732eb4-4051-45cb-9765-dcf1cb8f7e02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b9bbe14-da39-40c3-b667-98981f55d477",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "617b50c5-623e-4172-ba39-d41ae195e15c"
            }
          }
        ]
      },
      {
        "id": "60d15368-d127-4d14-b5c3-525be10d9ce8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "90e84f2d-e1f7-46a9-a25c-82bc1db76c51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b3ffeb3-cf7e-49db-8136-e5acd153e184",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7edbf75-490b-49e4-8495-718ba055bb2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679b91c5-d0a7-4f8d-a0db-09d95d2f80d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f8496b-25c0-4184-bd7d-fba2c2437a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63130920-10e1-4a67-9a55-abcf46cc0e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "532e77a4-f037-482d-8bac-78dfcb707fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140c6453-9915-4a33-83fb-858c0db81645",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113a8a3b-5cad-43f7-b92e-a75d831e322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d9ccbb-c987-4ac2-a98d-95376361b6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e3992b-438c-46e7-bfa9-e3a295fe485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "288e06b1-b1b6-4896-a99c-6de577e835be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6147cb7-acac-4010-a317-b415f1d7cb74",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6413677-c3dc-461e-89e3-c16f6a7d8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bae4aeb-1776-4b10-8e88-8d77fe780648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd2793e-4bbe-4d98-8a84-9218a10bffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d24d057-2d58-4ed9-b714-0ee51f1ba496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbd59e5-e065-4241-9014-0b3ccf260f75",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bf562c-74c2-4d44-b353-48362613f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0be7b3-1b17-41a4-9b66-ba945ddf0f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb3fa0c-1bec-4fc8-a916-078e1c2c70a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc3da29-997a-476c-9da2-a41933900cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b7eb6-101c-4c89-b75c-ee5a86b15a2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7950bedd-2aea-452e-9ad9-e0417b349d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd3114f-ff24-4f0e-b1d2-64549139d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168d2ee0-48e8-4bcc-8e5a-7345f3637efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "690a96ac-bb1a-409f-977b-4bb2010f7f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031a413-7908-4b5c-bf18-db092ada39a3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ef4b76-8e8f-4c51-aadc-eab0ab0b4bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa936e13-be90-4b06-b64a-b8bd18bef1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e31595b-4e6d-471f-8418-2af22831a8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7358d0a-be19-49a9-85e0-134721fe5df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839dfe1c-121d-4f40-8642-d00f577bcedf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b49a261-0d60-4dee-9a6f-0ff2782da680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0c086b-9c77-49d1-ab2f-d080bb865e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed8788e-c00c-46d4-9447-874d83298579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "98705984-009e-41e2-adbb-1139f5ed6633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b41017f-cff4-4faf-94b1-71e917eb2a5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63744a34-b63e-4416-b7f6-efcf4a5f49ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd31996f-70a9-483a-a3c8-804c424674fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c8f3f5-0303-4386-9a26-28ab15235f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5b41cb-3a3d-4748-9154-940e21ea2bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21da5f7d-0e3e-4737-8bd3-654d4922dbed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e865b33e-1acb-419f-b98c-2f43a8f9ebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae4f130-179f-4003-9c19-5441cccf5202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02911f5e-2897-4a7b-87a1-c3e711ef72c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93824778-0282-4c6e-9caf-b0b6effd499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3322cf88-e1d9-411c-98cc-c4341ca0b2b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e4ba2c-fe60-412e-9a0d-32fc63043da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f415aae5-95f1-4b36-b01f-112c6d2c46fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcfa3ec-99a1-4fc4-96ec-3d1e1dbdc9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f345776e-225c-4610-aff6-f524e24afc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cf8ff9-5144-4c0b-be98-912ffa74a1c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f349c7a-3787-4de1-8bd4-f2eb3bf1d13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e321c12-60db-4891-821a-06c267d122ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae100155-2b5c-4f7d-9229-8e924f01636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "60ea7fd2-41aa-4b18-b752-888a57230692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15748be-4b57-479f-8dc6-c2d7608c2f94",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572306b3-cd82-49f1-8fdd-95723804fd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fb8242-6c48-400b-b8ed-df57d7b22b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83537e39-4951-485e-9474-a36fd479bc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5178a8f-d307-4349-84a4-b66f280d9d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fa8ecd-161f-4a99-a9fd-d4e53a851e2c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741135d2-084d-476f-b282-0581d0a5eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a2b8ba-87fb-4421-843f-b4e67b363b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e588fb-e749-4b81-a652-5f28da0a7acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fb501d-daca-410b-913a-a9475f24991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fea2a0-8325-4a9f-84a5-987742dca663",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe96ed4-7751-4909-95be-5ddacc349536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de989ceb-05e0-4afe-a706-3457ede97605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be74083-5e5e-42b0-9dc8-2aab700acb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "463dad94-54ba-499c-8044-929e4f8b6d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bb92b4-ef6a-4a02-9f20-eee64900ec80",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b344723-ee51-4f34-a7c1-2abec5628e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865690d1-5a93-4824-b873-4f9f6412f114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bf5b1c-fa87-49a9-8ffc-35a5a5833d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ae4966-8763-48cc-96b1-c88878ce8c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be026ab0-4ced-46c8-ad8c-c683b3aa17af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5243c5b-82bd-4a16-98a8-013153b8a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a47ea4-a021-46f8-aadd-aadeef227aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f50d2e-43a6-4789-a51d-d82850d81fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f45155c-79e6-41b8-93a1-929c88fb776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ea8dc4-848f-41a0-835b-4df1e2ba6920",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64316b0b-9d5a-4407-a817-f12e414dba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce98bd46-47d3-44db-acd6-f448a063cb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fd28d2-5bb3-4b4b-ba7a-ed0c7ab9d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "837f516c-97dc-4456-be40-3169ac3717d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8378187-a72f-41e2-becb-d3b99f2a9194",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b311732-d613-4474-bec2-99bc0666325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a308bf1d-454c-416e-bb8a-a377c790a283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e1ca6f-f557-458c-bd56-53f1c2458d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ae5a61-b246-4039-8333-210abb1d8c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca406802-9731-4591-9f56-c8cec1114e42",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516fa936-a52e-4597-8094-06c9f44d7efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b00ae9d-4990-4a7c-ade1-79a2fd8feed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e08ed10-9699-4d33-bc24-fa49123ea47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65bb448-8a7c-4604-b5c6-09230033c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf8417-049b-450b-b40f-027eb863cbc3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c2cb7f-d44f-4e63-ab3b-779156877bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d587a25-e8c1-4057-98c9-e5f3a23a4d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91b079-0508-4fd2-ba6c-d2a6969b5329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a17acdc-2422-44bc-82b1-e184d21965e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0845490f-1766-4b73-9a5e-6b99b07e5b7f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3405c5-b463-4e23-b02a-6b26b0c6866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b967ab5-f107-4e66-8f89-6b9dd210c47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da78b4a2-f4d0-4ea4-866d-909f389c29d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac297b5-65e5-4988-945b-ed2f58bae4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b496dd-ba2b-46c7-9c7e-59c277f5f51a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e467fc58-81ec-413a-abc4-d8e20d567134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cbdcf4-0e8a-4bef-9c2a-5d2c39764cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22d4ed6-6e76-4b6e-9e64-7e6d9dc18f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b40f2a33-17f9-4bea-8dfa-4222e8b164ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689601ed-0c68-4c94-8c67-b0aa20adab07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7376a3-3d8d-4704-84e9-2a4000e5602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a516b8-7b69-4734-b794-87bf54966a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c9ab7d-d9af-4308-81bf-75e65bc62c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c780ca9-b774-4b0a-9f13-041a4f9dc063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a57a706-ba9b-4af8-9413-1b4bb1af8b9f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df12051-00ac-452b-9224-669d7e241cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186f5005-afc0-4dbe-97f0-863e017bedf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a66f69e-d6db-4a62-97dd-dda92ec7de3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a6e8b3-cd33-4fb9-be32-e8d82c3d7ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97327add-8e1a-4c32-b940-4c835d5f873e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7899bb53-d137-413a-9a23-158119a7f1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabcc958-567e-4e52-b3c2-f3412bda4794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c7adf0-100b-4b7d-97d4-2f3684bf53af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d080f8-5932-4cbb-b425-f3c4bfcca0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e117ad-50e4-42e2-aed8-1e9fe0698315",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b7b222-8c80-4de4-9e8a-fbe24c8294cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b179705e-fb56-4f13-bee4-b70af5ad07f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc36ae2-0c29-42da-b11a-42e677d3f80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65915d32-5f5c-4c72-b0e2-3532de71143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae5ee3e-d72d-46cb-a220-88b85acf30da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1d3ab-aff1-4981-9935-97754b9049d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0125d2e4-9e91-4949-8932-88f048e2e0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024221c7-0439-4ad4-aad1-209a63d593f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4782c536-c007-4350-82ec-89d1b933b44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ebf65e-d242-467a-a1a6-c8a311b47e6b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84c4257-6e70-4cb6-adbc-1fa5dc124699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905460ee-149a-4d06-b73d-5476f80df223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96107ff9-13d0-4f34-9f12-62ba1f433eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae2cfb8-0074-43af-972d-dfa437746d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb14ec5-eae3-4e6d-a6cd-02e165f373f0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5f9da2-5fd8-4955-86ec-80745a71eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b0e63d-55a2-49ad-b0c6-f756070fe3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897cf8b3-5569-4b4f-a3ff-35d5a1029e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a3adba-9147-4946-abb8-144458d97cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0682cb71-d91e-4473-8904-aa788c32ab9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de740591-809d-481e-9208-6f55447605bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570e54d0-771c-4223-8f4a-583acf46e5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41381c51-4d99-4749-94dd-16f6f9fb4d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e118ff-8f52-464b-99ba-cd4880d6d72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d585d0d-9b07-4243-8260-38887fedc85c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c61788-487f-440c-b365-0a1c77874b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665f07b3-3bc7-443c-a75e-4bc0e9fffcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9033111e-cd2c-465f-8dbd-3798a66d6986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f938c82-7569-49c2-be0a-160ec9eca6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704993a-2043-4c79-ba3e-536036c2e637",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078e24d-a4d1-46ed-9ab4-f9a6f1e452f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75e48e7-b32d-4f2d-a205-f9d2dd066a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dd2489-fec9-4d0d-a4a6-8f5b66afd03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d338aee-f665-487d-b059-771830997a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7eb099f2-ffd7-48d8-b98c-5c600c9bb6d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fadde72-31ab-49fb-96e1-2764f885d00d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00dc56-c851-4bed-af01-9a0436307ef1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f513c00f-55b5-4c7c-a6d6-5f2626e8be45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220cd047-e1f6-426a-9b79-5e71add18f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddd11e81-6088-4e62-ac96-59c53be1f1d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf80ddc-97d1-464e-a9db-17f7eb903b9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58c5b144-ff00-4cea-a9bb-a6612604428d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59e50877-22ce-41f4-ae4e-ffa42c450cc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10f67f9b-d04f-45ff-8c7f-add9fbe428d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9d5b2b3-8c08-40e3-906e-ee51d8e964c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51cbed53-6f6c-4c97-bfe2-a677bc54305f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b53c51b2-f6ef-406a-b590-29edd85b339d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff1f1a9a-1a57-4a5b-9bbc-62e6bee3264c"
            }
          }
        ]
      },
      {
        "id": "9b04bc1f-31c3-46b1-990b-6faff591cdcb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a6592b06-7dbb-4e58-82c3-8fcd2efe5708",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aa9b5a0-1d65-463e-b133-280c5255978e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25ea4587-3699-4855-bbcf-a57f8dfe1db9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb14ffbc-6808-4f60-b29d-3d8439c99c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5eb303-5c38-4fd6-ad7e-b9e2b0ef2d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983adc93-18f0-4f0c-86ec-8f54956172e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04b5c34-1cbe-44de-bbb7-476cc1d21c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353ff161-afe7-4eb9-bdd8-fa91ab81fa85",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98d11d3-1410-4aa7-ae2e-9bc61b1db2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972b5f05-3720-4bba-9084-a92a4d394f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5678039f-c52e-41ac-88fe-0a520a5eefd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "508aee77-1785-4106-b67b-8b29b093f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ce733e-b247-4c6d-91c0-8f5d6173e801",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52052ab7-3846-4976-957b-9df181d9fa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993621fb-d2f4-4169-8c75-b985266b1fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430c2e2b-c1e4-46c8-bc07-be24fc336a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce5a000-acf4-456e-a2f2-73b1563af997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f3e6f-2789-47b6-a3da-b409ca6044f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63794bae-f1f5-4397-ab5f-979206d98a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85f85d7-8ae9-4b72-b5a5-1980caa8b1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a18a22e-994f-4852-ac6a-a93d33d83bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33138c6c-9230-401c-8a00-163b672b5a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d066fa6e-6201-424b-b4d9-5dc780180eb0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d0467a-4740-4a3c-8af1-bbc947c776ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ab8a80-6ac9-4c0b-9856-09fec4560ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8831e330-7949-419a-b449-3fb6053d52ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9460f6ff-c095-47ea-8123-680f45aba9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0c65d-9ffe-4bd9-9298-89f4057b22db",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b33791-10c0-41e7-8357-0ff65cb7158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091cd30f-93b9-4042-8a1e-e50e08b0793b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb00eb-8c01-421d-b3c4-b1c8a11583c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f82363c0-f6e6-4d3b-8d72-7239e85ed40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafff483-c7a0-433d-bfc1-0582e13d8c1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a74406-88c3-432b-bfc2-de78c0f94e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf21cbd9-bff5-46c2-a7da-1b6aabd45fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9230a6-5daa-4b38-b8cd-d47461e830e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fea841-46b2-48f6-9b34-3ec7fad651d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ee309-fb01-4964-8c4c-f032cee54e3c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da6577c-c69d-47c1-8c1d-43624fa9f572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806681ab-1c3f-425f-8c8f-9f5b8ef5bded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43475967-51a3-4159-bd21-690840f1c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9c1504-4358-4158-bcc9-67c6129bae5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1775f3-5fea-4c98-a3a6-28c192558f9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cff8b05-dab2-4f3b-8dab-da20686913ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976b1713-b5a3-497b-9f79-a24529353a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc88934-9b26-40da-8a1c-7d4734ae298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9815ff-04b9-4f43-9205-dc49839d199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cee8b8-23aa-4850-a03d-25f520224050",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c876fc49-d263-4c29-9751-df25981d83fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417fb524-d4e7-4fee-83a7-df264cebd598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f040db80-ad9e-40f2-bd36-6c39b1483dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70cf6d90-c001-40a6-bbc3-db164c4ceabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5809ecc-9196-4c01-a485-29a1c0e75eac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a62116-6910-49e7-aea6-9a9a7bfa35cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8bdaa0-e71c-4f22-a2a3-11c0b086e046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4a8e5f-a3dd-4645-bb64-fa6776e27913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ae48bc-e6d6-4be2-9e3a-4d6e520a5d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e6299c-1c13-4db6-b5e4-58c02ece15d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9977eb69-c70b-406c-979d-05a7e82d01e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba965c7-cda6-4279-99d4-74012ebb6d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bac4db3-86a7-4fe0-a404-9ae82b22630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd19ded1-d7e8-4889-9851-c16c746f24bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da004202-bab7-4e95-9d7c-3df67b38ffed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a8e013-5be8-4beb-af85-e60a79314682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2839b4cb-a81b-47d3-aee2-820f6148320f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19784eb4-7b20-4f1f-a39b-f13b19e1e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c93c2f-43cb-401f-829a-18dae982d5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8206a694-372c-400f-bdda-e82b0c381b56",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5807f4e-a4a3-4d3b-8ff0-8ba32994912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901de1af-1b5f-4a42-b09f-64812b835052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf7af8d-ec7c-449a-a13a-809c4e776489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c59b84-f22f-4539-999b-8e5b268042ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e3907-d7c6-4483-ad88-be8eaeafc7f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50751ed6-6a46-4abe-bada-99f4e124ca6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b36bc56-3fe2-453a-bc95-e6222ae8e20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cb2944-6639-4a1b-8093-0f9149bd0908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10beb5c-4e95-4122-839e-bd7288b95e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1865bc-b815-44d8-b4db-1597b52afb70",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a902de-a364-4ef6-a483-1adfb66bf867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0221ae-f61b-4f69-953b-371639cb8b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4cd2f5-3ecc-4f67-9125-729e890fa3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e37ef37-87ef-4d10-b70d-a2fc20d907fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbd246-6db6-4c69-984f-2626d9db976b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1f0ef3-7475-4a43-9fb4-54f0dd6c3f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ea9fd1-b830-4510-a151-277e8fb602a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577424a-8d84-4468-87be-833e8dae10a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "775a64e1-2870-4ca8-b1b6-cc9395499cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051abc09-15ad-4fa3-a9e6-bc29928c07e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1e4d9-1452-4344-8b23-b7a29fb65f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7085eb-40af-417e-8939-f5819d1d426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82b90d-0d30-4191-9683-806f9b34e643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce272cf-33b9-4cf4-bebb-646b301315dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e0dff-a420-408a-84f3-08abe64a63b4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d3f5ed-571a-4368-8ac9-3745df12ee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fee1344-7f8a-4a97-9bcc-6dae00b714e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8871f496-9302-4187-be25-f0f0545aa124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b439321-b41c-4ec4-bb62-fda2fa66147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737937c8-8bce-47d7-88ec-62e35570bf19",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab301e3-3086-4cdd-9f42-703ef7aa77ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ce3a07-f31d-4df5-943e-1c0dfb4fd2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d3c28c-bd97-4917-933e-e8b58a2aa638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4500ab97-78a6-438f-b989-7e712f141043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd4aab7-821b-49e9-a1c2-43ce489b2a40",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e40b9-c388-48f1-8919-2fffee892a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd0edb6-d5cd-4ab7-a476-ef43adb6b21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468dddf7-bb6d-4f05-aa47-0770b7485402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64b151e-3c46-4d02-9763-12cda44f2269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa464f70-5b23-49a8-9bfe-dc8e39c6e119",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f24400-c2ab-4f3f-9572-263dd50f26e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42b2111-306b-4eb1-a992-2001c6a72716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e79df80-956a-4226-afaf-7c27181be994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f6753a-4ed2-4254-a2f2-e7167fa0f8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf894ad-962a-4c9b-9437-a1b74a4483bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fffa71d-eed7-4c07-b6b2-df17f8eb4bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52bc052-be13-4746-9f87-314fa9d23dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6a144-3236-4d80-b2a9-a0d0215291a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d047cd-fd59-4892-9590-81c7900be211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa30658-3408-438e-9091-03cd0b9b10c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4875812-6586-4ea6-988a-36f1888ba49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32261e1a-d4de-4d57-a678-f56c1fbdcc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99a89bf-afce-4787-b0cc-d95857bdfe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb676b-53a6-4b04-95ed-e9986ac00fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e537d7f-7f0d-4428-8d01-792238aa2bf3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae10fb0a-c6e0-4279-aea7-7ad73e76a0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a04d92e-2b3b-45da-8884-86e1c7293e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14aced3-8571-4b2a-a1cf-86bbf582221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25285d3-f525-4b59-87ef-12a389a66691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0954d8f-8682-4142-b92f-8d3a309949cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffef1466-56ae-49ed-8be6-20590774544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f3f8cd-047b-43af-8169-a0ba5ebcfe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d8a1d5-2268-423e-b7e0-960124491090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e6463c-7f53-4da0-a6c6-996dc16c6b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5853f6aa-a096-4a7e-bf24-0afad3305d70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5b578-caba-4658-a5ca-78e614622ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507bf00f-e1cc-475b-88bc-b16b2ea1efa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec0e733-db88-4e67-a848-b37b9bbe5f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd8ce9e-75e9-4564-95df-dd77544195fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfc1522-d536-4917-9161-ab3d7c40c952",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b41409-cd0d-48be-886e-f5e14ea13ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff95a5-5811-4af5-a2a8-bb44629c4252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6cf66e-eb35-4d19-97b1-3e5757ff9c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "666c0f14-d920-46ad-b242-654eb2be9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2062da8a-d38b-46bd-bcca-ce3aa6b79e18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13070a3d-f436-4839-8a37-f036dfdef268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ba421-fd16-4953-b416-dafe0f70606f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8f04c0-fdd3-489c-8023-aa2e31add5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22b1241-a8c8-4199-ad2f-c89a965a00ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965cb87e-08b7-4947-8990-a78d706d257d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eea56b5-50d8-41d6-83d4-115eacd96b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f033409b-b796-4816-b40f-5eff601e3af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b5985b-4b2a-4791-a215-beb01ae482bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0047b4ca-d58e-4d92-805d-1bd75681f399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21dad94-40af-4a62-b914-7aa630c2ecff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f67846e-ac36-45da-8f2f-766cadec9be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5ac955-3d59-437c-b64f-339395f76ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdac4280-7580-45e7-beec-95d1217aa396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a9fe5a-caa0-461f-b702-84ce0f481b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918a569e-b95a-4e71-b310-9a5d82e75117",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb531fa-037c-472d-8531-0147881c7da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f9ed29-ce33-45af-8b34-04e238da2882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa8989f-dd4d-4549-a055-61270d71535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f62a18-b74b-4935-ba01-a33eb3346f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90db71e8-2acb-48d7-81f4-67afa2dc9f35",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6cde99-ed17-4535-82ca-2f1254fc2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fac02cc-9a20-4304-b529-6f120bd96a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b29e5ed-1397-40a2-a0fc-1ea8d5101c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d453252d-1b09-4e99-8f69-dd9e86cd789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc83e5ac-e631-4e0f-a740-a210be88f638",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf4373-ab13-40bb-a9c3-4e2106e469c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e4f4c7-b0c7-429f-abc1-ae8c92ec488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23198c8c-a9d1-4d22-a9f1-a564805b77a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0439f04-8159-4bfa-b9bc-a89257adc203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51492d14-bbf1-4a66-af7c-b7704aa3eb5c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a8b54f-46f4-4b18-8a99-c2a1fcda13bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396d147f-3226-4957-b894-298774369c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dc4b25-f1d3-4706-ae80-d9c01ba7e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c1d6da-360f-4d62-83e3-b02854a79fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09be6d6-3f28-4c6f-8654-b4217be20797",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd395029-6b8c-402b-8003-372c26a8be79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e20a22-9fcb-4a89-9836-0c6ddf0735da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed749f8-4b4c-4f5d-a024-28967850cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52027203-9657-423e-a7c5-85445e694516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d20422-2657-45bb-816e-59a2f988f088",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc280c7c-bf92-4eae-80fb-72e76d429cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80205846-1944-448d-83a9-6575a0bd67ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16416cac-f995-4a70-992d-1da57f25a384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed6e72e-90de-41d3-acb6-19d425c5d343"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46ab909f-db66-429f-a2f3-08851bcee8f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0c9e879-5bca-4e54-b23f-d1f7230d335c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a14e36-90d9-4463-8b64-c8d217fe34e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9932676a-0411-4764-a3c8-2fd2308ebff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e81c06-6e2f-41f1-b4da-506a0d0dd824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57171796-6eca-4a0f-b3ef-49f6d5f2329c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "411b068c-7b25-450b-b328-6b549ce3d0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2add604-c742-49e1-8d82-fb9b36ecff64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7447e915-04e1-4ef6-b7f3-d1a80ddae96f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2782a64f-c999-468c-9040-a0df47974c11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "708cdc97-88e4-422f-801b-241687de6e8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "764994bc-2704-4b1d-904f-4e5076605d1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "995e69c4-1c57-46cb-9c8b-0798a116bbfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18d86463-333b-4552-ac00-3bebe240f310"
            }
          }
        ]
      },
      {
        "id": "3952c118-0c39-4e8a-9ca3-08d86d374c43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3155ff38-0c5f-4391-b8c3-acfc7115efc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04169155-66ec-4e61-8a88-240e9831af03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16fda60f-d615-4b1a-b1de-f58fc4950a71",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030c069-ab2c-4bab-a809-cb1e6bf8d1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9c7d20-acb0-49ff-aa8a-043f0879a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6d055c-20c0-49d5-b08e-07cf5e3998fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0ed477-0461-4841-9dce-94a3ee96ea1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dd2c6e-f90d-44b4-8389-1edd34890f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123a213c-e682-4466-baaa-4108c6378214",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c379851-92ca-4c17-9fa0-9d9a8ad506d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ac34d3-326c-4697-a274-a133fe9bb7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37203f18-b4fe-4175-b6fa-c06d38854fb0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b30bde3-7189-46bb-aa19-e15ddcb1e1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56697ba-39c9-4321-b423-958abc736ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ead98e4-3583-43cd-a496-147910ab432c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebbf5f0-a12a-4151-804f-6461fb207093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5e2d75-599d-4257-ac81-e63f842b566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efae9e29-5480-4603-a5d7-eb352d688971",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307440fc-851d-4718-a971-099bf4155bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815042d4-a4f3-4c23-84b5-e2ac3b85a37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c26cd63-936f-4d02-92a0-763abbd5f5a1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb53b2b-b224-4766-8bca-6aa2dff5dd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12db0c3b-f856-4944-8e7c-b2fdbadda18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3683f3ef-fab5-4239-9968-db69cb702e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e1109c-12b2-4b40-bd39-0c7af3e66368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35280844-627d-46dd-9474-37be616e5e91",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630f5bd1-dfbe-439f-9ed6-0f168f119cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e558b61-f196-48ef-bad4-cd227747bfdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ce384a-817e-4490-96b7-e426afd85a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7c9ea6-2f45-4b4a-aa55-a6dfc6ee5367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28ac6ae-fbf6-4173-ac51-10ab1fb24ec8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86260ce1-0de8-4f8e-83c9-6aeda3d4dbb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcf89ec-2896-48ea-b8a9-9720a60998f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf02a63-5c19-41bf-b39d-1e371816070e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10ee497-034c-4c91-ad1b-4fd892ae69cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccfabec-e12f-44b6-b53c-bbf8f894e8ff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cc2502-70f3-4bec-983b-c4e4695fa5ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4597056b-9c73-45cd-84a9-de8b00297a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295dc2aa-45d4-4ebc-bc4c-360d903be6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a51645-76ea-4344-b38c-a41bb89ccd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a5356-fff6-4e59-b2e7-84321f162248",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb96442d-8a0b-49b8-8c09-e577f27ca745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd624c6d-528b-48c0-80a4-446a966deced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371d2b4-3eae-4442-9ae6-438e523a3502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54407be0-5ec3-4857-88f3-dc3be6ebbbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097adb75-0498-4c35-b8f3-9ce82e7ebb3c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6687b9-a819-45d7-af0f-e4d6cb255067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9687a983-34b4-44d5-ac51-cd96dc9dca36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a5f7a6-c250-4963-8e5f-832ca6ffcf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dae3e8-e3bf-427e-a5c7-2f8522adf852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c40497-2975-495a-8cd1-c7f1edc3e893",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e1ca28-66c4-44c8-b63e-ec4cf74c08f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee39b7e-7d6a-4e0d-b88b-ff45f48f7031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86572d75-5afc-4d31-b22b-8c9f5156afdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc01789f-dc30-4fe9-a099-65d14216a52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4661c038-5f05-47c0-ad1b-717be46a9d03",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e144d-58d0-41a8-b666-e27980043c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a5d13f-01e5-4211-a57f-457b9505a88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0f4679-8cb2-470b-a8a2-1e589384c5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7622ad50-65f8-47fe-bc12-7abc39cb8b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47631cd2-a419-4d05-963f-1c2e6747084b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc267eb1-42a5-4ed4-8f2f-e8f890097ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195d800a-c66a-4289-bdb3-dba751acfb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b3b8f-02f8-48ce-9b61-c2fb012277d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcb454f-5125-4fd9-8322-1cb34ff81342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d63607-63f8-4c76-ba4f-e07395843296",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df02fc-2a4b-4d8d-b060-53e042cc46aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a855dac-3fc2-4f27-b6e6-0cfdc2ee0c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d11b3c-3c9b-47c6-b936-0340098228e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd440bf1-74a9-470d-923f-4b78cb8257ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d8ff68-60eb-4bf9-8f89-5874b86969d8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e8657-f297-402e-b566-438cf73c44b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54017fe7-f30f-4207-912d-34d542e6ed8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ec2049-b0bc-46e8-aed6-3fa802fd4474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5ac21f-c474-403e-b1dc-d8339d5068aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3094358-2884-437e-b51c-cf416c82e861",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f62e9f-5ecd-4951-9756-384757050f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb10cf7-574e-4745-a956-f122b88b4c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f39e6-9b67-4fc7-b1c6-fa03719fdda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372fe95c-7ca1-4884-95ac-a8f66af53d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b2f19-e01a-4895-889c-e4ed117ef26f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c8ac56-4d88-46bd-804d-14751702e366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da0d648-b9f5-4ee1-9e32-db287b248f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9557fe6d-a1e1-4399-bce6-e31bdf23adb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa37e63-12bc-4493-82e5-c314bf8d5b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dfec73-cc2f-4035-b85d-7e5dc0c7cc13",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427053ef-6364-4f35-98c7-f281476a4bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec68702b-7015-44b5-855b-af22ac7e100d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef7d601-93d6-4edf-8ef1-d3824caa4094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ffe73b-45ec-416b-b37d-ec47b8a6b228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b171d-b21d-46b9-bf9d-920d67833b37",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fb795e-6b32-47f4-b4c1-abbff41d4f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859a308b-352f-4792-be3f-fc2e91f2078b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae874cb-59f9-4607-bff1-ffee94ddb923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb140ce-8523-4d61-9065-1c1a997912d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a593dd0a-ca50-43ac-ba9b-a3fc924713eb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1604c2-5b14-4761-89e6-ce5ed2eed35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f41c82-498a-4808-a177-43ddd071a82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33ebdcc-8149-44d7-a3fb-2a07a8eefdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213ad9dd-c8d1-4db0-bd9d-7f5ac9841d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a2a8b4-d68a-4b9b-9304-b195281604cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499cc88e-aa73-42d3-99e9-7212a7602d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc65c646-ed92-4269-9663-2b5e074e6b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd1e329-bdf7-46e8-bfb8-b582a3d9400c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc2e47c-191c-44f9-95a8-9ad856e979a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf8438-a1c4-45ae-9de3-b3c41234b03a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee73287-24df-4bf7-9acf-ea95fdfa178a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb274e6-6c3f-4d64-b017-f4f4376da609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63cf4bf-5c05-48cf-8f34-feb58d4372c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167681ee-5353-4bac-a25c-c94380b6b994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdecc170-1776-4225-910e-1f41afaf79a2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2187a1-2c1b-45c5-8b26-8751c0443e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051ee5df-9fda-4fd8-b527-50469626e1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4140b346-ab84-4a15-ab1d-1a6d9dc55f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe24ef65-d3f0-4aac-8a1e-e0020945c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e75e9d5-536b-44a5-912e-ac1572404ea6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62349164-b2dd-48dd-bf55-52ffaaa0f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b217d8-dd7e-4d6c-a8cc-8709f9327a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac998c-c10c-4165-87e0-6df5db9e73db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d69084-8d15-4ec7-95cf-0b7e55b69aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd16143-f0c0-4160-945b-ee0f2b0e4df0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c3150-bb42-40de-b682-89425a3423e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87ff01e-e0e3-459b-a05c-f4dea8600b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a677ac19-4938-432e-bf8f-1824753260a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd17628-bea9-4680-a76f-6b9ff1aa2b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fecaf3-5bf1-43c8-8d85-ab051c57d940",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbe0e06-ee79-4fe9-9731-ec67cae90665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507fb479-fd24-4eaf-b08f-fb67e4cf98d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f36252-fd62-4ce2-8080-f21570d7b7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5fbf45-0ff4-411b-8967-b76a625bff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17266c62-7761-469e-9009-d21643a31619",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904ee7e8-bd3f-4bb0-a228-48c136f1727b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca2f17c-89f7-42c9-b0b7-34bd748297eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304135fb-eb5d-4566-b2fc-a5ed5b838cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284484f1-c4c8-4d20-9f82-dc37113ba0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd0d991-fc6d-45c7-9364-cc2070391d54",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2c53db-87c3-472a-820a-44d13fecf35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518800b9-987a-43ba-a9c0-434b2f9c4d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6db67e-f6bf-4e42-b5c6-29846ce19f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338a9789-6f06-4692-b8a2-38da3d3d42f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3dfd80-b23b-4a50-9385-49a10bec2aab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fec52d-bce2-4312-8be0-e22388b896d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd5fab9-dd21-49a0-be7c-8bc7799a0091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b2a3b3-ce90-47f0-b8ad-efd1f9f653e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3af1381-3fdd-4981-a9f5-bdabcd327ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db444f1-fcdd-47bc-9204-84263b68a20d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe2405-3a0f-48e3-904d-0d96dfdc9b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec79871-7114-4808-9679-cce121d81f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4468a3c0-4c0b-4700-bd95-3fedc0b7df29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1275110-3b77-4910-8d6d-0408baeb5d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824d1dda-7e60-40d1-aef2-d2347473425a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60938dd3-8781-42ff-98e7-f862f00da7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb3939c-3120-4a1e-9682-f95e962e341d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b4e027-af21-4993-8e7c-85fd79d3e181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b576051-34d2-4f46-b183-d36c6d966846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220e1f4-4939-4abc-9591-f17e50e540a5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c810d6-0f96-40d8-89fd-880e528caab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40957e91-c0d0-49bf-afd1-341024fb991f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f993adb-31af-496b-8e13-2e508c9f8265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c51814f-ded5-4c4a-a257-07da6d0a753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e256090-0f4d-4ae6-a300-997c10daee61",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354c9696-ac4d-4595-9f69-bb6aaba43f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bafa02-85c0-4f2d-814e-107325e03933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f3d74d-69f4-429b-a843-b2b345db075a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515e4f32-8821-4d3c-b3a4-ca9c267876c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a648115d-2ea3-42bb-8e5a-2b64a974869a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b665b0eb-73bc-4b1e-923f-0220b58ddde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e711ca1-7b18-4476-ac72-a2e30934abe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39574228-0a67-4b1d-a5d6-84b7539358fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcd1e11-89fa-4a85-bed9-3779f2da9c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3291e3-ce31-430e-869a-19cf2e21d948",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7e27a-3a5a-4008-bc41-cb22e9da7669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f38e785-b140-4566-8b88-ec7e67a72f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e318a8ea-c198-4db0-a650-361287fb73e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd2375b-d393-4111-a903-f73e42ae0ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6158a5-2aee-47d9-8b6d-28faa19daf2c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bff80b-64cb-40e3-8176-a7ca4e91413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2854b138-4a63-408d-87cd-343397cd8e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec478c2-241f-4363-8f8d-a6a8353bc117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509ceabb-abcb-4b14-90a0-4825adba9e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d123e8cf-ca26-4620-8da3-1ab47cbc7a20",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b43942-6981-4b3e-954d-ca3c3b35f16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e5dbbc-8d4b-472e-9a37-dd0cc2571427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1c2682-f324-4aa1-8772-c02188d73118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d62216a-9f62-4817-95f3-cd41bc636131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2b2cd-82cd-41c0-88d6-8442f822c56a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7cd5ca-cbfd-4adc-8829-7ca77b8c70df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aada0b5-70bc-4983-af47-73a9f0ebbc65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac95fd80-38e0-47e4-9fe8-52aac05073d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9274fe1-f03d-4c8c-8ff2-5b60bc700859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eb5ce8-065e-43c3-8040-ce5ac63b2bd5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26215639-40ad-4f72-885b-048bd7c9e062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ef8ab3-ff9d-4daf-a7d8-cf6603ada947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159a9c75-890d-48cb-b5a2-45b0199c4089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5493b086-26c2-49fa-b96a-513c98e55687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d168b16-5f5c-4121-b695-8cce0ee16030",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d7856-00ac-4fc7-88fc-7d78d0a604c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892fa30e-5f9a-4562-8aa9-f91945e3a54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c2e22-3c4d-4c0b-b9d1-0b129d08f7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b60909-5567-4ef6-88db-6e00b6f4235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20d30aa-cb98-4790-a56c-f78dc8434195",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5712fbe0-d019-4f77-bd7e-30cef1d002d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d263d8a-f8e2-4a9d-ba2f-0583820c4bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12df9a37-ee43-4eb9-97d8-fbee04383e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919ccc68-9488-45bd-ba22-37f299f0a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9cbf2a-c92a-4944-904c-a71097f834bd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03447148-1e40-4bc2-bdf4-20409ed8d162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a4bae6-3a69-4e31-9626-9d52cc46c46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68652671-4b2f-4b64-8141-387e69d22e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a1882a-41e0-4bb3-bf0d-98c5db25d87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfe3648-8eef-4ceb-beda-9a4efca0a98a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a2869c-0fc5-4927-9871-f11641f3cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3110cc-d6dd-4927-ac94-4ce5feb7f1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141d8de8-1474-4606-a3ff-71822aa958d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc1bd56-d030-4d41-ac50-87a36f492d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55613e74-e62c-4797-9e72-8c764b5b9a45",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681568a2-bb9e-411b-9f21-d9c33a6358e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e08bf2-8ccc-40e4-9236-97f670f18da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9209d4-be8c-42a3-9169-9d124f298a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0154db-6f86-4670-bb7f-cfb1f7287c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c10dc0-9c88-49cd-bc28-5fcac1104a0d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf5a2db-e8de-4367-a60d-f0c7e4dc1f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c09f8d0-1a8c-466d-b275-a934b40bfbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f73811-315b-4ccc-9d9d-293238fb1c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eae60ce-52af-4241-aba6-0d4bd0a1a990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d78597-bcfb-4c76-9b8e-c4f391e1aa1c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4652dfa-51b0-4e25-b0bc-ebc8b1e06223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd2102f-0d0f-420e-8f3f-a1eceeb71d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0877f5-ca02-43ce-bd73-7c6613a80d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4346d8b-c4d1-46ef-b6f1-2f36d46ee39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffcc84d-cbc8-48f9-a430-6dd6ec7864a9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb299113-8c30-47da-983b-710010d2ce37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75daf346-93a5-4fee-b793-e66407e3fb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67042f5-1ce8-46bd-a1d1-2cb28907e347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cbd386-d8d2-47f4-bd98-caca396b70b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2074d5a-81ab-4c71-a99a-c3d0ea0f4d53",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad3de0d-818c-44f1-b611-d116a680858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb135c31-b73f-40dc-b826-6a3fd56b0684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5efc08-aaa4-49f1-b173-d68379d560b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cf91bd-339b-4f99-8b3c-3d6bc57a477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d7dd2-08af-4dcd-9898-9eccbda3da18",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ebba5b-9929-4450-8ee0-267d6be6c609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca02e704-f90b-48f1-baca-1037ca6b8da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc324b-ab27-4bdd-83cf-656c8b92a335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f66c53-a7b1-4ce4-8042-53e29d8ba531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857e8d39-bc55-4cdd-b33e-03cd22376ffa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fbda06-f44f-4d96-b2e6-66637a500490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c18589-13f3-4fe4-a8ca-3114d2a65436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a84ff1a-6eed-48d6-a1df-fe7cb9608490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3318e63-f00b-4461-84a9-ced97e70dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e07106b-42cf-4ff4-9f08-33fbf84f81a2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e823cf-d5c2-42ff-ba10-37b5548c6143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625cf17f-ac06-4668-9156-8a1d21e6825b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74a3687-6352-4fb6-9b01-a2713b7ad1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f3a578-67fa-4bb3-9c13-c6bffdeec39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf2ef96-f252-45db-a052-166e52ffa16c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302ff515-ea81-4945-b332-e50ebcc59398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3211f097-96fe-4150-8d31-0cdd38dbc679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d9f124-2921-4055-93e2-e36ae1be3794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c851d655-0f90-4a80-8512-8f1c0411bde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc0b7a4-0b59-49f3-b0b4-10993d191bea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce6a569-a743-45dc-92a3-b7a305888229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8096930e-2bfd-40e6-aba6-6773488c88cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea523888-f897-4e75-ace1-478a04255b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a169cd1-0f64-4f98-bc47-6067e28835f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d1e80-7459-4209-90f3-f4f709e9278c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa8f96d-d6d9-40c4-a30e-a6e282cecb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac43332-e417-492e-b839-b13bca594056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352b2874-700b-4a96-a0ca-4a90247aa9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa0938c-e65d-4aa9-a734-016ea36a4726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaff91f-2505-4f5a-b7a3-1e6711b2d9e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34c5614-6c5d-47ee-849e-3fe93871702f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0583723-c113-44d4-90e8-0fd2d8317021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779f0d23-94e0-4001-a1a4-971821d33980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0329b1-a168-4caa-b107-a2f7d06b7d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aba631-9fcf-482e-8145-acf74648417a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfc8eb8-9b14-4078-a072-94d8525dd830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a538fd33-f9b4-4637-baa9-192ab64f6556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a42b77e-2d1b-4c92-8e0e-2fa2ddd7170e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e1fcee-c5e8-475b-920a-78319eb08643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ffb20a-908c-4b3d-aed7-fa1bf5c83f98",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19557de2-8214-4d8c-b1e8-4a2989155232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bfda76-a1bf-41e4-a5e9-0343c32ac0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1972fd10-c334-4b6c-b963-a2cffc3ba899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71afe68-bed0-442f-a488-c7a9be75af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51defc68-650c-4172-ab63-5555a6e29195",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a05fc-cc50-45fa-91d1-70569afcb2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9bcb6-d515-4a78-bc9b-d614584473e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bda860-e3e1-4c00-9c27-5131a120aedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767013c-5a6d-4682-926d-75b633ac1713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc707f0d-373f-4fdd-b52a-cee3f943ac1e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d0f05e-59be-4d0d-9940-948ac31045f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0b2f6f-0332-465b-a26c-d3781e6777a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f739d45-ce31-4c99-9dd4-1b9efbc6fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ee3dbe-247d-458f-beff-df60c8fa05c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a08742-4f8d-458c-9eff-12f049b79773",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0471dc-0b2e-4de0-a565-5ab70522c193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66afa7e4-82a8-4927-a05e-5af6bcaf361f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e0b981-d19a-454c-8144-d1803597f6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d352546e-76f4-45d2-abe2-12907582d6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b0f9cf-f272-433b-9da1-ee2f47862ea5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c912d431-7154-4dc0-be26-18ea5c50d839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b228d-f521-41c9-bd2d-b82c05420295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac828a-e5f5-4e21-90b0-efe3914a0447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a1486f-4b20-4981-8421-c92f064f63b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a629ac2-e865-4026-a4c0-de78987c26ad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c414da2e-482a-4a8a-8ae0-4eedac207270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82489fa-38c0-4c0d-9860-3b154e555f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4a434d-ca2f-4068-98b4-a8611612757e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f874f632-37c6-4f06-a179-a7298f0e32fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83f5381-70b2-4bfa-b88b-6d3e885afa78",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f3bdf4-7500-4370-bc69-ca1fec54a392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce25394-c999-4c90-b0d9-7a5031296d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c919e10a-92d3-473d-8b83-3386aa25375b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9baf6d-72dc-4834-870f-fccd654d7b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2101a97c-0e29-42d2-a50e-5050af160d9f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb93fd9-0f87-44e9-a13c-5491bf980904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90073ac-2fb2-4fa7-ae86-169b2a964e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a41e41-885f-402c-b673-ff3ecc13cba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bf45cc-2e54-42c4-9624-bcb153327d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9c7fd1-1618-4732-a9fa-6d321997d780",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e28209a-9b2b-4857-b7e1-cbe25c412761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a0c765-6c4c-4768-b907-4b0737990ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd09125d-4ea4-4ccf-81b9-d0bd605f8cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793d0651-dd27-43e1-8340-6ff7a8e84fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35c3ee1-b93f-4360-8f5d-4db4d4035000",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa81635d-be62-4091-8d4d-cc981a7415b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecde3541-648f-468e-9fb2-b714dd9a9cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b63d0f-9580-4e23-a5e0-c8f8589fa072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c58278f-b7b0-4835-b4dd-388c7eeaaffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aabdf7-732a-43c6-9301-45343da0f9c6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb575b6-7281-4b05-a7de-9f5dde2e4d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8eb5e17-7837-4806-8b67-e0d9735525ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b9933b-a706-4f41-9010-66048adbc0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbde32ad-9099-43bf-a481-6943ab5c8a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a991219-2ae6-4e54-bace-0ebc2762d953",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f576e5-ac23-4196-be89-d66056e606cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c6ad50-3108-48a6-8cfc-ff90e36bd67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9830bc-21c9-4a81-824a-86a6f9bf0639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a479e7c7-8943-4cdc-b1a4-6ee2e98c8c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5668d071-03de-4ef0-bf1c-91190913f68f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc87d9-e914-410e-a718-6d446d1fa4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e7a88f-75ac-41a6-9691-ccb1cdce4ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582b852-9820-4662-b8e3-7fbbcaba62b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643360ff-7db6-4779-a81b-0f17f01d1cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871b16f9-77e4-46ae-b096-5447ef6ef408",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70c6b61-d677-4a35-8d03-2e3c592e2e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f53788-9e4b-4f50-bd46-ccf3cce2f46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797104c5-09d7-47fc-8876-c44d1e136ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1a2e3f-1e4e-4a51-be11-b2dbd9a1450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374c8be1-90de-4216-9dd1-ead1104a24c0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657781e7-aed8-469e-93d1-a07c8a24fd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ffe9604-d531-499f-91c0-c3716ff47b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456f5f97-6dbd-4b95-a40b-2471378b5057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b89305e-d13d-4f27-8465-d4f9e4136147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feffac0d-a12a-4f58-873b-8bc94b7efce0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870f39b9-ced1-4e75-8129-79c08b131106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8c310e-cfcb-4d27-9976-bae05ec15424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3da562-0bb5-4b52-a2b2-d3ff64102b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b1fee9-defc-41a8-a76b-b89f5d20fd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a7416d-5852-4530-9b91-adacc37a3070",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec9d8ab-5b36-423a-a4b2-f23e06c2be62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33349467-2824-4670-b88f-136faf710123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52051b14-60e2-4ae8-8538-fd279ae606fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddcbc0b-0a4a-4002-bd5f-7b135c3ed5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56b3a84-a09b-4693-99a9-44ba9b5a79d3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4e23f1-14c9-46ba-952c-027fdb7bee17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d58e1d-96c9-4283-b0c5-4f0f5ef223f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39753e30-40cf-4497-9642-0cdd697777fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccca9e60-e73d-4320-80f0-56a4169887f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d5dde1-0de1-47d4-a006-4935a3d29a75",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c6bc3f-a3b3-4f99-9de7-760d6720e814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6da4f2-0661-4cf3-9f56-ac7716b28fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c593d939-0682-4d12-b781-602a2313059b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fecdb3-1eed-4497-aa00-9ed7a38c9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb52c2cd-9d8a-49e6-a5fe-a1073ab3328d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d9bde-7341-4f8d-9487-0c808ea4cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42de929e-54cd-4209-bc8d-7fb25b99f0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08b083b-f319-4746-b877-839dd7108e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26d67b0-265f-4704-be4d-d26ac3e1b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24eb928-04e0-46c5-8b3f-57da15d18ad4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d7b8a2-a9b6-4ee0-9a2a-092553d868f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33726bfc-8eb6-457a-ab5a-894225ec0529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9326e39-c47f-4bfb-ae4e-68c2c5008d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf5e29e-4ffe-4df7-89a0-86c1626e677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311d0b2-7af2-4264-997a-ae6e82e1e733",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6012cbe7-c7b2-4af8-b5ec-b2f133b8a68c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277149c7-7f97-4777-a3a7-1d48011127a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4119a056-5322-497a-9b44-c10535ecc99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e77663-6e7f-43df-86f6-165fdc3bd128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67af3623-ee67-485a-a756-e2283de070c7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5881eb7-0a2b-408e-aa8c-47f859f7dff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de4940a-470e-4d9c-ad7b-a721a7962bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63ac112-5928-4c6f-a15e-56426332c5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e741ee-d500-4c71-befa-431604dcc83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939859f-b718-4dd2-a7e0-da27aff75998",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a300feb5-5a46-4ef3-97c4-eda65edfa44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a92422e-fa9b-4c46-bce9-3c511cbbeba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e352a-dff1-4b86-8de2-8aadea10990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adfa42f-bd8e-4a73-9838-e2c53b39257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac0128-2a02-431f-b6d4-c6df88aebb94",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23749ddf-c907-49bf-8d1e-c32b7f2a92f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceaa70a7-0b59-4e0e-b495-acda68d14a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51644bb-071d-4f97-87dd-09a5d512a167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b895e2d-ab57-4dcf-bca0-d068e500691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc85e2-77d8-467c-9fed-ebb12664fb05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7b3720-0b73-42f1-9df8-c48e24e946b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc163ef7-a6a1-45db-a34f-26d571b10fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0ba1a-9736-44bd-b2ef-10cfa9a04017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227559e9-416f-4fe2-a0f5-7961ccf66baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124f0d90-86fc-4888-b1c2-9f893d9e7196",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca15bed-aaba-4d03-b488-c21637b3a8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5d1949-7e28-4b91-a08f-982d5f3bf5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb75d199-8b25-4992-98ce-ad9bfcb6c695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a63cb9-ed46-4055-94f7-740496c41983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a969bec-69a1-43f7-9d9a-ffe83ce943e5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42dd536-2681-440b-a0d0-ec24b8a652eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a162a2-2afa-4dc4-836f-d4b275fbef6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c795303-a753-4d68-b3fb-37dbcb79c5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb69ff38-398f-4e62-93c0-a8f862507281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47930896-bd16-411e-8e6d-fbb3370752ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d01ede6-bc8c-4e4c-8ccb-8ca37c0c6268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db373b80-c7b7-4e68-9d43-196fbaf53c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fade605-0289-404c-93ff-346cd9a8acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c5bc72-2346-4833-8c7c-d903f3d5dfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc72a3af-0db0-4dd6-a380-c60f6f2a4d6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef9c85e-c6c4-4ad4-998c-9839bdbced61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50358223-647c-4a7d-8853-25cd7e24c388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acfec8a-530e-4fb3-a108-343c9438c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd7dac3-95f5-4aea-86c3-b7552ab5fcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c6c300-bdbd-4ea0-8cb3-dc0fa85f51dd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5e8ed-bd3b-4fb0-8d07-af3084af3555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c961166b-236c-480c-9dd2-4a448c097399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423712cc-8f09-4133-98b0-7245f38815fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56d1502-cf9f-4c76-b46f-61e4534f5aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0487a20d-4512-4bd1-8e0c-638a464e55c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d56283-9330-4f64-b8be-049ab6c02784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d283404-d4b7-4455-a605-7dedb64d6360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8edca-bcb0-4c10-8995-ebe18e422863",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62fe490-c0b6-4454-af41-4283737d7943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e7243d-6867-4630-97ef-273d82133543",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1aeed9-19a5-4ca8-8eb8-83e7e6d1deb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3adca06-0083-408d-8a19-b6c858c99974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7a8f4c-79be-44d2-866e-82f58f958640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fbf430-5bf6-48ea-a369-73de2a2c87c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c41e10-78fa-4aea-84e6-95f0874bee8b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910c6382-af0f-4a3d-89b9-3778e0c133ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb64231-9c47-4b13-8827-20407f63244a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8cec33-6fbb-49d5-a1a8-8cf0ff40ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c21e619-a70b-44ea-96d7-ceb24621d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099b6dd8-1b4c-4e1a-ac85-cc88ee72ac6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed3928e-7fa0-443b-9234-9930a75bf31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5886173-d87e-44d6-93b0-960561c92bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d606b087-3efb-46ea-8785-84b79ab2d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bdd129-f2c0-42fb-aa61-30a5383d093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b3b435-aef8-47f4-b378-dbef6e3fe834",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e67104a-1612-4cd4-ba88-756f654e6303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc9942e-e44f-4857-ad6c-97b636111b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab6e018-758d-4c03-8edb-cd3b94828ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df05242-2fda-49f9-94f8-c7b197c1a0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efa323b-317f-460f-8834-0fe8bc0ca92f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a77fa18-74ea-41ed-916e-170159f69717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4c76af-5ee4-4bcc-b0b6-2c9b016ece7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd727b6c-4b51-4579-b675-f92b5d642d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caebaf0-6803-4fb0-b5b4-6ffc6884621b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6ddb62-ea10-4890-9df8-481215b1bd0d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e442c3-0e08-4a07-9ac0-eb850392f63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7499e9-b5b0-4736-824a-d2f4d3c3da9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b742cc-85ad-441d-9146-27a1ba247e85",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b10cdbe-39c6-4b53-bf08-cdfd0210b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1651d278-6ace-44b7-bbe2-0bda1240fca5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c5656a-0701-46e8-a345-81fea2d9c37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8c571f-d176-44f7-860d-2a7e723a258f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e4ad1e-c678-438e-9514-1767ace79768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad2632e-a73c-40b8-a092-eced969b035f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf51dee3-dbd3-438a-a50c-7c21bfb8c9a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff33f22-43ef-4897-ba74-b24ce54ef1cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69fb293b-65cc-4511-8a0b-4b7f0de377b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "429ac0c3-1653-44a2-8458-488775c99e07"
                    }
                  }
                ]
              },
              {
                "id": "235eabd2-7aa3-48b8-b906-020fb1fefb41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e002a5d6-1610-4e1c-ac39-932b2fe08586",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1255b6-2cc9-4b97-9406-114209646625",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d88d1fe6-7eab-4f26-a4f5-874f9cce8623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c38615-b5d4-4d00-9cb8-c4060b02dfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d5f3ed-0b20-4db1-bd47-8c61233ce71f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d407b87-f8bf-48ca-9c8c-e4f8180addf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c4a7235-5ab9-4f28-9b5e-9664ee6da318"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93fdb4dc-ad48-43aa-8422-b9741c0c322a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9696eb48-42c9-44b6-9b85-55265f052718"
                    }
                  }
                ]
              },
              {
                "id": "95d39a5f-659a-45bb-b0a3-308cd6b9dbc4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "78937be3-4de1-4f97-9a0a-1b8d910a8d50",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098115b9-d41f-4958-9c09-348195b8c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3c23fcb3-dd5d-4430-8a76-b112e65d7034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d965f598-0481-4074-a433-0db72322c789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f125fc6e-01a7-4793-8892-92c6580b6171"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d48c66a-9a3e-428e-9ecd-4986f2d9824a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbb10ea7-78cf-4623-8969-130823172d1c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0834603-5909-43ad-b3a4-7676670d83c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "169ca1da-9768-4e96-a0c1-5a20ad4bca0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "803598f3-b6b0-47ad-9fd0-ffb1568aa348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d83d28a-6823-4528-a2a9-6086b66f402a"
                    }
                  }
                ]
              },
              {
                "id": "e5266378-e0e9-4b96-9844-ecd1a11ae050",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5443990b-0644-47db-8133-dbc41e65f1da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1eb3a97-6111-4013-9438-9ffe9c1ebf60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8daf3a4-3305-49d0-ba26-77f31f9887a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff0ec81-cb5d-46f8-84c0-6cf5e9369f18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "641bb336-a81e-44a2-b50e-7d40b00557c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f968d324-4730-4ff8-aea1-8ffe7e2b885e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5994a46c-e79d-4f29-b332-005362a2ab33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af13f930-d768-484f-9fa9-074aae1578f4"
            }
          }
        ]
      },
      {
        "id": "cb9a86c9-49f9-46b6-9f07-8ef32795d3aa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e4a0a5e7-a393-45d1-b8c7-c64d4e7df522",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57585f38-472b-460d-a8d7-980210d6eaac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6573ab0f-5104-48dc-b0e2-2742641ea5e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b4bac6-d54d-4cfb-a583-202d86385c53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d0eabd7-80e7-46a0-80bc-c5c6950259cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c1a02e-8f55-4d2c-98f1-fd054bd635b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f50d37f-e7b2-4dfe-a343-f14bc16ea571"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b98ea3b4-f92b-4069-b1d3-28ca85a446fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63c28aff-23e7-40b8-a731-8cd6fde8ad14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfec37a2-3fbb-4389-94f0-cb51bd2cf741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e396ba64-7c00-49a3-9438-8f7036dfa518"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcf6d746-82a4-4589-8138-63190431a06c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b31c098f-4caa-46d6-b5a5-48c56adb13b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "524e8731-5087-43bb-b051-faa136c120d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a2b6795-1ef3-4d65-94c8-2b8290b738f2"
            }
          }
        ]
      },
      {
        "id": "3538ab67-af02-4124-8d27-9d1d519b027d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "509c1075-ed0f-442e-8bc6-aefd8f2c7093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dda7d346-ed9b-4466-b110-2a66d6964e15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9410a04c-3a6c-411e-a9e2-48458d18e946",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b857a9-9168-452e-8c3c-10470739ede4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4535691e-b727-4c31-904a-3db8de7ca8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ac5c96-d463-4b15-890d-00fdd987374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44b31b79-cd92-49b4-bef2-dfefde127ad6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75956895-ef49-46d8-9fbe-819b52474315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bb9559b-ee5d-42e7-9869-32da455d32e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4847db5d-7435-4a26-98da-707649768029",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc61eefc-fe96-4993-8fc1-fae4d12037d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9aac45c-f23b-426a-bd88-5acaeab2538b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6254393-9e38-417c-9290-9b00816065dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bc3003c-ca78-43f7-875c-e76add210793",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f49852d6-2a34-4124-9118-c53ea3b30dc3"
            }
          }
        ]
      },
      {
        "id": "d4dba0c3-7ab0-4fac-82ae-bb2ab6dc1b85",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c56576bf-7e8f-4367-aea7-698f8aceb016",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c837dbb8-5179-40f4-b5ab-fe6fd7445515",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c39c24d6-471a-4f88-b03a-540937e1ebea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3d0b9-558a-49f0-93f5-501b1d36ff81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3dc2b7-277a-44d8-8400-6b1a19e8696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84c496a-70f4-4541-b61c-3f94b2eb3eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e63016b-e9f1-4b4d-8d18-c9aff6a889d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a51528b9-717f-46e3-82f1-4dca8ccf0cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64d35dfe-624c-4040-9536-5e19c241a82b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48ba6cd9-1d0e-440f-a8e6-8036fec22602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24cafb26-561a-49d7-a657-4ca5be390460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "617b1141-c2bd-4892-8941-b2290bb7d0c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1ad48a1-d609-4d75-96cf-ee966c2f900d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136be5f3-14fc-4595-8072-c1959375cbd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b027185-c3a5-426a-a9d1-03fafb78b70a"
            }
          }
        ]
      },
      {
        "id": "06c80a7f-4c44-41c9-992e-ed804d9a909f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50e52aa7-1ff8-4d71-9cdd-f4cedd7ae8b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "278aaf4a-ddda-4c9b-bb5b-d6164e858632",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b5896b3c-d091-4550-9a70-57166662e3c0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba2971c1-dbc9-4512-afae-a45679867900",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9db9d561-9a47-4397-bb47-d4d88d08fdc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.708771929824562,
      "responseMin": 2,
      "responseMax": 394,
      "responseSd": 27.819898726604144,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700440578313,
      "completed": 1700440589383
    },
    "executions": [
      {
        "id": "ca73fd23-c38b-4de5-967a-cdd5d851fae3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0d4ea8ad-9d48-40ee-9c54-fe411646234a",
          "httpRequestId": "80aa8bf8-1b89-495f-bf29-8ee89de22d7c"
        },
        "item": {
          "id": "ca73fd23-c38b-4de5-967a-cdd5d851fae3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3bbd5eaa-baa5-402b-a051-79408cff29f0",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "8a921e02-1f97-43da-9e84-5d462b74583f",
        "cursor": {
          "ref": "3aea6732-2250-4887-b267-e224317b4efe",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce203bca-5e19-49a4-a4c0-4441ab9a4701"
        },
        "item": {
          "id": "8a921e02-1f97-43da-9e84-5d462b74583f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a57ef3c9-c904-45b4-bc6d-49a13becb506",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "aef502a3-c77c-4308-8236-72296bb13de1",
        "cursor": {
          "ref": "1197e71e-d8bb-4d24-9e88-a7203d9a6464",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "83cbdf99-5cb7-4bf0-9a07-f88320b61189"
        },
        "item": {
          "id": "aef502a3-c77c-4308-8236-72296bb13de1",
          "name": "did_json"
        },
        "response": {
          "id": "7ac0f7e8-ffb4-4e11-94ab-e339dce45bcb",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07e7131-ef46-4827-b398-018e480eb918",
        "cursor": {
          "ref": "a7eda3e9-15a0-41e1-af37-9cb15eaf50db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa91537a-17cd-4414-9b3e-2080c4ff5024"
        },
        "item": {
          "id": "b07e7131-ef46-4827-b398-018e480eb918",
          "name": "did:invalid"
        },
        "response": {
          "id": "148e22a4-68b2-41f5-9725-49667633254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07e7131-ef46-4827-b398-018e480eb918",
        "cursor": {
          "ref": "a7eda3e9-15a0-41e1-af37-9cb15eaf50db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa91537a-17cd-4414-9b3e-2080c4ff5024"
        },
        "item": {
          "id": "b07e7131-ef46-4827-b398-018e480eb918",
          "name": "did:invalid"
        },
        "response": {
          "id": "148e22a4-68b2-41f5-9725-49667633254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd7dc1-c1c9-4ed7-ab32-bb9cb8e22096",
        "cursor": {
          "ref": "256248bc-cc52-4208-b817-a878ac16b647",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "875e90cf-fee0-47c1-9a7f-6af1838efa2b"
        },
        "item": {
          "id": "98dd7dc1-c1c9-4ed7-ab32-bb9cb8e22096",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0a69f129-bac1-4733-ac06-3999d2d9fcaf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f007268e-20cd-4b28-9957-8c1d2c1ea498",
        "cursor": {
          "ref": "cbe56b6c-f7bc-46e6-bb14-da9ecebf1b3f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e14d6b1-91d9-445e-8589-0243f8402df6"
        },
        "item": {
          "id": "f007268e-20cd-4b28-9957-8c1d2c1ea498",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3d9412eb-bce0-4b16-8fd8-10907a5c4e65",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a65a635-902f-4e77-92c8-6ea6d373f4d1",
        "cursor": {
          "ref": "46e7c484-cb17-4bbf-b28e-f2029af24993",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c8ee7157-a88e-46c2-9ae7-b9c202a0341a"
        },
        "item": {
          "id": "5a65a635-902f-4e77-92c8-6ea6d373f4d1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aea3a5e3-dce3-4e4d-bfaa-808693d618ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0477be3a-9993-4cd1-a44f-075bba97af6a",
        "cursor": {
          "ref": "84898415-7af5-4749-85ff-323adaace15c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9bfb0db5-a5f1-48dd-bdfc-5343ccf0f424"
        },
        "item": {
          "id": "0477be3a-9993-4cd1-a44f-075bba97af6a",
          "name": "identifiers"
        },
        "response": {
          "id": "a69e406c-d464-4a2e-a737-f12c377a96bb",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876952fd-1e49-438b-a157-32c1c7f1ad60",
        "cursor": {
          "ref": "98d97015-6e0e-43bc-bee9-b36fab0fde5e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "94408b62-2d65-4c14-a640-77b71cd3c5f9"
        },
        "item": {
          "id": "876952fd-1e49-438b-a157-32c1c7f1ad60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "031a5627-d13a-4ef8-9ba1-e4d74e2313cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10662615-b7fc-40ba-94be-9b0f2fc64420",
        "cursor": {
          "ref": "4315a8e7-e569-4635-ac25-4449da4f9d38",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f403fc7-1860-4821-af15-1739a6560110"
        },
        "item": {
          "id": "10662615-b7fc-40ba-94be-9b0f2fc64420",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fd2cc317-fd23-481c-8217-cdbba46805c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0613ef89-c1e6-42e2-b01c-50efafa9d980",
        "cursor": {
          "ref": "80297075-9acc-488b-bab6-c85dbfc60593",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60bd0d62-2e30-48a6-bc14-d40c0b74c534"
        },
        "item": {
          "id": "0613ef89-c1e6-42e2-b01c-50efafa9d980",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "653685e9-070a-4bc8-8511-2176bb17fea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6e7938-92e0-484d-988b-d8ea0f522bfd",
        "cursor": {
          "ref": "fb94f502-b8bf-45ae-96bc-4001f3b3c8a9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1ccd1cd0-b34f-4d3c-920a-d934e5ed05d8"
        },
        "item": {
          "id": "4f6e7938-92e0-484d-988b-d8ea0f522bfd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b948f5b9-c4e5-4a0f-b404-6b97aae9f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bd605c-d2f8-4203-bb0c-e2ad7aeb3fe1",
        "cursor": {
          "ref": "b74f2f97-0351-42fb-818c-8fb6e62f6fdd",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a260a893-a04e-4d71-b8b2-473e1fe1adb4"
        },
        "item": {
          "id": "78bd605c-d2f8-4203-bb0c-e2ad7aeb3fe1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "056e22ee-3a90-440c-866c-5da88a701b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71fcc1d-1da2-45cf-a6e5-d9e5abd5a65b",
        "cursor": {
          "ref": "86a8ea45-ba8b-45d7-8dee-77bf4fc0e9b2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "efa1328f-b298-40d1-979c-c4088843de3a"
        },
        "item": {
          "id": "f71fcc1d-1da2-45cf-a6e5-d9e5abd5a65b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b0cbd113-0e52-4674-911a-946db758f038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7b31b-f49f-4073-b8e1-4ce05dfc0209",
        "cursor": {
          "ref": "d7037cfb-8b03-438d-b7fc-6deaf398f4e0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc4ff483-574d-45f4-8771-814d1bac01b7"
        },
        "item": {
          "id": "f5d7b31b-f49f-4073-b8e1-4ce05dfc0209",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f39725ce-e493-49e3-9caa-098bc8cab05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d6b48-f3cd-483a-9993-04a30073c770",
        "cursor": {
          "ref": "3f7b20c6-cf77-4ed1-a383-60cccd1cf734",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e24324d8-6151-411d-8b42-02f7f9389603"
        },
        "item": {
          "id": "eb9d6b48-f3cd-483a-9993-04a30073c770",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fef7f49a-1662-4528-bce5-c842d753b72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68766d20-0280-4800-bb87-022d7c6b0d59",
        "cursor": {
          "ref": "d78824ac-05c3-48e3-aad8-4f00d9e87e6a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1784dab4-9d61-4652-8f09-3684c3fe0873"
        },
        "item": {
          "id": "68766d20-0280-4800-bb87-022d7c6b0d59",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "852fc1fa-a53f-419a-9a2e-cd52501972a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962add42-923d-44cf-b461-f382b448dde1",
        "cursor": {
          "ref": "bf2fd374-8806-4c58-8819-3f00957cc1d1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "43ed3089-53ef-4151-b48b-a9cfb1b05c59"
        },
        "item": {
          "id": "962add42-923d-44cf-b461-f382b448dde1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "402b5900-d3f6-4f30-9aed-365c9f9dacb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff2547-8f95-4da3-9feb-109b637b7c60",
        "cursor": {
          "ref": "776263bf-347c-4c16-8f22-c2001f893b0f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f7d97140-d064-418d-8a2b-0717f876d551"
        },
        "item": {
          "id": "dbff2547-8f95-4da3-9feb-109b637b7c60",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "968641e6-a190-4b7b-88a8-741f5a43a81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd0b1f-be79-4d1c-8464-50cdf5071637",
        "cursor": {
          "ref": "21dfde9b-ab92-4174-8da9-b3e83b8a1d18",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f23ec492-9a93-4caf-bce2-eadc64aa657b"
        },
        "item": {
          "id": "8edd0b1f-be79-4d1c-8464-50cdf5071637",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "73b088d2-4b85-4e2c-ac27-372c20ff12ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf5a727-f29a-4c2a-9f48-a2a5d0178b70",
        "cursor": {
          "ref": "c0c387c8-7e46-46e3-a790-95e13f804fe7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4bf0f20f-9358-4ab8-bf74-ab03db611252"
        },
        "item": {
          "id": "baf5a727-f29a-4c2a-9f48-a2a5d0178b70",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f5815380-1d1a-4f14-b4d3-324a9083b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6106cb-d788-4d79-8040-75e81ea92c9c",
        "cursor": {
          "ref": "4131dd24-06e2-44f4-a70b-132bd29e4622",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8a095a5d-4d30-4417-ac20-65276e2204cb"
        },
        "item": {
          "id": "7a6106cb-d788-4d79-8040-75e81ea92c9c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "425346b5-fb70-45a2-9a4f-f6957e9e5dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82024f00-f7b0-40b7-9bd5-9555081b5d77",
        "cursor": {
          "ref": "09bf3378-c95d-46f5-9b01-b7e408d46e4b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f4aaed5-e1ca-47a0-a52c-d97bbbde2156"
        },
        "item": {
          "id": "82024f00-f7b0-40b7-9bd5-9555081b5d77",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6f450875-907f-4d95-87c6-c844502c70e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6e5d6a-1bb3-48b8-a3df-1b93420cbc44",
        "cursor": {
          "ref": "558f0544-fa21-45e9-9109-3631d9e26770",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6fbda794-e94c-40d0-9eb1-f8f9de15b70d"
        },
        "item": {
          "id": "5f6e5d6a-1bb3-48b8-a3df-1b93420cbc44",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea4a09b0-7fa5-40bd-a5b3-750b7ae8cad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ad194-7f1c-4078-973e-2b34f4eef842",
        "cursor": {
          "ref": "a054ccb8-bb0f-4a05-b7e2-74cfcdda7365",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf77fc99-7a3f-4f87-b358-bc13b9e3ace9"
        },
        "item": {
          "id": "7d8ad194-7f1c-4078-973e-2b34f4eef842",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "10ef6605-a736-4ad7-a6ad-a5edb15ff108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a47ad2-8b7a-4ed0-b82a-4ede093db573",
        "cursor": {
          "ref": "1baa1b30-e56f-4326-b60b-b650d3e8b445",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "147a3c9d-944e-4f76-8f8f-77b130718e2e"
        },
        "item": {
          "id": "c7a47ad2-8b7a-4ed0-b82a-4ede093db573",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "23f3f693-1c53-4bb6-9bb0-39887ebabc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66783f01-7dfe-4836-8cea-e4f245d3f6d9",
        "cursor": {
          "ref": "c57169f8-a94f-4eb9-8d30-e9eecf2f865a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fa1736e9-e1e7-4135-bc70-10e191bd2441"
        },
        "item": {
          "id": "66783f01-7dfe-4836-8cea-e4f245d3f6d9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c90e806a-1074-4e86-9c24-10017e50cec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc4937-e9a8-4ca8-8710-3d957302fab1",
        "cursor": {
          "ref": "d50651e4-ee60-4939-8f35-71657e5d9e71",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ba7bb4e0-5935-4024-b937-8f99a2644928"
        },
        "item": {
          "id": "87fc4937-e9a8-4ca8-8710-3d957302fab1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "19b113ff-3fbb-4f5d-946f-4ad511e1e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2900d898-ba6d-4025-82e4-9adae8ba4337",
        "cursor": {
          "ref": "89addcc8-899a-4db3-a8da-d7ec267f2718",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "de77ae58-44c5-4324-9730-5854dac04b48"
        },
        "item": {
          "id": "2900d898-ba6d-4025-82e4-9adae8ba4337",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "beec5426-2ca0-40dc-97eb-224307d7098e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af707a4c-81d2-4515-96b6-036730c904b4",
        "cursor": {
          "ref": "41d15179-bec1-4731-b1d5-652cf0294d3f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3863498a-79eb-4ac9-862d-0a43f9518622"
        },
        "item": {
          "id": "af707a4c-81d2-4515-96b6-036730c904b4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "25ca5702-62a7-499d-8285-d5060138868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80e96f8-fa9a-4919-bc2b-9643f479af51",
        "cursor": {
          "ref": "d5b20712-6652-44d2-898e-88383ee8390a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f2ef88bc-f085-4cac-a79d-5e5dc508180c"
        },
        "item": {
          "id": "a80e96f8-fa9a-4919-bc2b-9643f479af51",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "82afab5e-e1e2-4469-94dc-87c33747bf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d67830e-6e83-4335-a7c5-5d290fcd6f4a",
        "cursor": {
          "ref": "de9c5895-fe2c-4efa-82ef-ce4594a1e1e7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "825483c2-323a-4f6c-9a00-35b210acb6c9"
        },
        "item": {
          "id": "3d67830e-6e83-4335-a7c5-5d290fcd6f4a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2350d19d-c70a-45b3-953a-8dbc8fd00fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba6ce5-7029-46a0-a622-aef3f0fd7154",
        "cursor": {
          "ref": "f754040f-e824-4273-9221-a51a9b0f80b7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "00be254d-17b6-49b6-827e-fe17ef0d2391"
        },
        "item": {
          "id": "b7ba6ce5-7029-46a0-a622-aef3f0fd7154",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "92bb89cc-a205-4132-9881-502f14f1c3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829c4a58-1112-438e-8cf6-4215152a86ec",
        "cursor": {
          "ref": "a0e3ce8b-294b-473b-bc3f-345b2e433cb1",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "082b0d0d-55a2-4e28-9232-ee5a959e2d85"
        },
        "item": {
          "id": "829c4a58-1112-438e-8cf6-4215152a86ec",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a18ca057-3b0a-4f71-a82e-439007f07771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e753ea1c-ee07-4739-b46d-4a2b0c0db170",
        "cursor": {
          "ref": "c3f9b9a7-67b8-4c27-a33b-05532c81180b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9e40f6ef-aff8-443d-8eb7-c77234ff5492"
        },
        "item": {
          "id": "e753ea1c-ee07-4739-b46d-4a2b0c0db170",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c5aa6d35-8d71-4bd3-a4a6-2f8fd24b0134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc1d082-51a1-46cb-961f-c2797739792c",
        "cursor": {
          "ref": "2542689a-8f1c-4ee5-b490-8509036cbbb2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c7499bd7-9999-40ef-91d3-84360b78273d"
        },
        "item": {
          "id": "ebc1d082-51a1-46cb-961f-c2797739792c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "16872250-cc6d-4966-b75c-5d4b235a2f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be53e87-3a1c-4b50-a82a-261078ccb25c",
        "cursor": {
          "ref": "026f92db-65f8-4a90-b590-99cff46aa645",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f0769416-26dd-494e-ad35-5d595cc3ab34"
        },
        "item": {
          "id": "2be53e87-3a1c-4b50-a82a-261078ccb25c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "577c2cbc-5bcf-4617-8392-2aace5528625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1ea8f9-1ad0-417a-a39d-03713c6d025c",
        "cursor": {
          "ref": "959fdee8-349d-48d6-b09e-ab990c4fbc9a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7121a8b1-5579-46d8-86cf-ac29d4f868e2"
        },
        "item": {
          "id": "6e1ea8f9-1ad0-417a-a39d-03713c6d025c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5db6425d-e024-42ce-bace-caac97f844e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd085c7-ee28-438f-a778-7f0f551eee96",
        "cursor": {
          "ref": "9c4965eb-1cb8-4e41-a658-1598c1c84677",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c48cddad-bcfb-4ea1-8b22-cacafed60f6f"
        },
        "item": {
          "id": "2dd085c7-ee28-438f-a778-7f0f551eee96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6caedade-0e1b-4f6f-af73-7f7d95946f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83054f71-197d-4356-b18a-b96b05cf16bc",
        "cursor": {
          "ref": "b6ab76e3-63bc-403e-b55a-f9b37465186e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "48d4e5c7-6d82-4220-8104-3442a71885c1"
        },
        "item": {
          "id": "83054f71-197d-4356-b18a-b96b05cf16bc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f20d63af-663c-4032-bf15-4af66e78e141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae4abc-4e33-4568-a06c-ab2155381795",
        "cursor": {
          "ref": "36fc59fb-defb-4e2e-96d7-9172df5423e9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f35347a9-02aa-4e5d-8ab2-e7c792074b62"
        },
        "item": {
          "id": "47ae4abc-4e33-4568-a06c-ab2155381795",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "61c8c2c5-ba20-44f7-b781-687a9a8a4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091fa89a-29d5-4f49-9542-5d4f15b0c8af",
        "cursor": {
          "ref": "90badbbe-e2ea-4ffa-8115-3bfa485ceade",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59a97e8d-191b-4042-9c12-87416082d996"
        },
        "item": {
          "id": "091fa89a-29d5-4f49-9542-5d4f15b0c8af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "251ab25b-0bf8-4988-8eaa-cb031df32ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13588ca-8fd9-48fd-9f99-0198b59bdc73",
        "cursor": {
          "ref": "266db245-fc71-42bc-b7f6-33f2f7ed5e61",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70234f70-9b33-45ab-bea4-204ba459f4d9"
        },
        "item": {
          "id": "e13588ca-8fd9-48fd-9f99-0198b59bdc73",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "695b8dab-b3cb-49ec-8a65-5e40ad79c268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0afe624-bb5c-4935-8232-ad2e3dae1f81",
        "cursor": {
          "ref": "1d454c7f-3eeb-404c-826e-88ee6de81649",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8674ccdf-c6bb-4a32-9ec1-77eb0b0ee25a"
        },
        "item": {
          "id": "f0afe624-bb5c-4935-8232-ad2e3dae1f81",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b8b40c5f-9902-4797-8d2b-d78034a310e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3a2ff8-d2af-449f-bacd-0d41ae2ce78b",
        "cursor": {
          "ref": "e6d8b6a5-999e-45a8-a59d-d4cf18640ee5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7a394ee0-beca-43af-8863-2a2cdf7d2321"
        },
        "item": {
          "id": "4e3a2ff8-d2af-449f-bacd-0d41ae2ce78b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5db724e8-423e-4985-93fe-b83f006026a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a03d8-ac76-4ebc-aea1-58a3e2e22e19",
        "cursor": {
          "ref": "efbf80c8-5414-4677-9316-a0101dbec2f0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "027ec111-da88-4de4-b8b8-4492ad6b484f"
        },
        "item": {
          "id": "ce5a03d8-ac76-4ebc-aea1-58a3e2e22e19",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45d4fff8-28e6-4694-ab59-8e380d94e959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6813e-fb7a-4ac0-b04c-73c2da2f83ae",
        "cursor": {
          "ref": "fd878d3d-84f6-4d69-83e1-a185a1b2af88",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6c1e5492-bc2c-4e05-90b0-8a85ca0b4eb3"
        },
        "item": {
          "id": "06e6813e-fb7a-4ac0-b04c-73c2da2f83ae",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c64ee0d4-f9cb-43c8-ab97-63fce591aaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646fe82a-f258-48c1-b691-6757ca680abb",
        "cursor": {
          "ref": "ba0ed2cb-1a17-4b55-a7dd-5bd3618fc9c9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "18ebde7b-d184-4b0c-9b81-46506c8e60cf"
        },
        "item": {
          "id": "646fe82a-f258-48c1-b691-6757ca680abb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae71b21e-51ac-4664-9627-cb838a3be05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82590f74-16a4-4a33-8ad0-a163a45a8dd3",
        "cursor": {
          "ref": "4eddd0d6-7383-49c9-9c38-54d9954ff1fa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a6b52bda-a0f3-467a-bbe6-da197e2fe871"
        },
        "item": {
          "id": "82590f74-16a4-4a33-8ad0-a163a45a8dd3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e2094a9d-ee1a-4a2b-8845-aa44e61638d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d449e4-c005-4658-b29c-522cc4ac4b32",
        "cursor": {
          "ref": "2795ab81-caf4-4f4d-91cc-3ea7eb048d81",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bb1341d-abc2-4e12-ad75-254977135497"
        },
        "item": {
          "id": "47d449e4-c005-4658-b29c-522cc4ac4b32",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "29539522-08fe-46d6-a079-1b79d7de5529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b1eda5-6a27-4b3a-9414-5362227387a8",
        "cursor": {
          "ref": "7ff4d9c4-b2dd-41f2-9bad-d6af83b5da0f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f9a3c8f-00db-46a4-8d98-eb7a721b1d10"
        },
        "item": {
          "id": "63b1eda5-6a27-4b3a-9414-5362227387a8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "195666de-edbf-4964-821a-24b1cdfa029a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae9927b-aed4-4491-ad06-b603cc6de96b",
        "cursor": {
          "ref": "e4f993d7-995e-404e-8fce-3a4869340c1c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2df1e272-e198-48ad-aef3-aaf5ab238828"
        },
        "item": {
          "id": "fae9927b-aed4-4491-ad06-b603cc6de96b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7d6cedb5-2085-44af-87f1-0bc3cf1efb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44e8ba5-fe1f-4425-994a-e267cedea15c",
        "cursor": {
          "ref": "83adb56f-c676-4dc9-93c8-306b028ad08f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd673094-6e9e-485b-abe7-86b7155805e3"
        },
        "item": {
          "id": "b44e8ba5-fe1f-4425-994a-e267cedea15c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bdc628ac-3c7a-48de-a0e5-4733172eeb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfc8cd-b53b-4708-8c7a-4fa3375aad90",
        "cursor": {
          "ref": "33dc60f2-dbe1-458d-aac2-c0d99b1f7bd9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "36c6ab1e-a4ed-44c8-ae6b-43d6e4d08257"
        },
        "item": {
          "id": "16dfc8cd-b53b-4708-8c7a-4fa3375aad90",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "98e87415-a825-46e2-b010-948f32450a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44ae08-bdc3-43ed-a5e9-5e05ef6da60f",
        "cursor": {
          "ref": "a619c819-b002-4811-9ec9-e979d560a351",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c321fa6c-7257-4381-a0b2-d18fcba5d5b7"
        },
        "item": {
          "id": "2a44ae08-bdc3-43ed-a5e9-5e05ef6da60f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c78fd992-4410-4bd3-af89-bbba54ae1fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018c2f97-b846-4332-bddc-2bf943f144bf",
        "cursor": {
          "ref": "61538305-d219-4651-9682-ee402636887c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0f7db35b-1b06-40f7-ac04-c32ee65244fa"
        },
        "item": {
          "id": "018c2f97-b846-4332-bddc-2bf943f144bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dabf6c42-5590-49c9-90ce-739c8f1c5284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f33a1b9-d54d-4f76-a13a-a9fefeaaa15f",
        "cursor": {
          "ref": "5fca42cd-9f17-4a89-a15c-8107dd5c1115",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "67eceabe-e60b-44e3-8f0f-7931778bd23f"
        },
        "item": {
          "id": "7f33a1b9-d54d-4f76-a13a-a9fefeaaa15f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c257e0fd-1f5f-4763-9548-ce65418f98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d7bf48-b9e5-4e71-95fe-7ec9851606f1",
        "cursor": {
          "ref": "3b0341d2-6327-4b23-8ec6-df6b5f132db8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "efbd29ab-ae09-4aef-9d17-90683c10db13"
        },
        "item": {
          "id": "98d7bf48-b9e5-4e71-95fe-7ec9851606f1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d74bdc76-6ee0-4f19-a6af-3157e1822d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f589c-b30b-4db0-8fe4-ae472b5f8f63",
        "cursor": {
          "ref": "19cc3aa8-bf55-434c-963a-3aa3b1a91b65",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d5e46d42-70f4-4567-ad85-6d7356e9bcdd"
        },
        "item": {
          "id": "475f589c-b30b-4db0-8fe4-ae472b5f8f63",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64412d0f-ee84-43f9-9f3b-d200c3ba2cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2809861b-4d73-4ec0-99bb-c9b53afc42f4",
        "cursor": {
          "ref": "5fcdc0b3-1176-48e1-8066-f35dc8621197",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d51fa3c6-be6e-4c98-8bff-2ea056c187e6"
        },
        "item": {
          "id": "2809861b-4d73-4ec0-99bb-c9b53afc42f4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "34b05bfc-a5ca-4851-b509-fcd2faabb0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f3eea9-0549-4070-b9f2-df45eac86ad7",
        "cursor": {
          "ref": "d39135b9-fd20-459c-9ff8-de13940fa066",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a5a39efc-5e4c-49cd-bebb-c3cd7b997bb6"
        },
        "item": {
          "id": "09f3eea9-0549-4070-b9f2-df45eac86ad7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "781f6c80-be01-482b-a867-114707b7c681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020682e-3ecf-41b5-bcc9-7ca3ba5af17d",
        "cursor": {
          "ref": "9d1f2061-6369-4f51-96bd-688782f3752e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "48cf2cd5-c1dd-42f4-b8a8-f3e614634186"
        },
        "item": {
          "id": "8020682e-3ecf-41b5-bcc9-7ca3ba5af17d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ebef9a59-e1f8-42f4-8a58-7bc8b4d0e1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f442393-ac46-42f5-b018-746c6d806547",
        "cursor": {
          "ref": "257a981b-8628-41d1-b690-97ae5f5c17fd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6f78c51-2ac9-4190-8c3a-c14b61d928f8"
        },
        "item": {
          "id": "2f442393-ac46-42f5-b018-746c6d806547",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "418a25a6-1095-4932-b96d-199f529c8d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688a3a96-7262-49e9-98b9-c8814ead13eb",
        "cursor": {
          "ref": "888cc20b-0d79-459f-b611-892b4894ae3b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "48bfbf98-6145-48a7-afff-90196e300a86"
        },
        "item": {
          "id": "688a3a96-7262-49e9-98b9-c8814ead13eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "34636893-7829-4815-ae7f-2c8ec0d40029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487d443-a0f9-45b9-92a3-c45974e9bc4a",
        "cursor": {
          "ref": "e39f136b-1c57-45e3-a98d-2019e1488651",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5713e990-9c74-42e9-b6d5-6bc0929900e0"
        },
        "item": {
          "id": "7487d443-a0f9-45b9-92a3-c45974e9bc4a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90939fa2-a610-46d1-a1be-b14d0af60578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54793260-2ff8-4123-9d71-161dddc32c19",
        "cursor": {
          "ref": "646a8073-e351-4bc2-91ce-fb83c0ff2eb1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "00b6cfdb-9899-4538-9ba8-5951f1fca65a"
        },
        "item": {
          "id": "54793260-2ff8-4123-9d71-161dddc32c19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "83b85140-1be8-49b1-a8e8-ffec5508bd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db7f5c-6d4f-430b-baa6-8bd22798b126",
        "cursor": {
          "ref": "efc90a37-08b9-4e0f-bc9d-d82e77041855",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "53ce7119-ab8a-462f-bf16-ab0e096f4ae8"
        },
        "item": {
          "id": "23db7f5c-6d4f-430b-baa6-8bd22798b126",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6da65247-c3e0-44b4-be8c-be42d889fe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c7711-dcc6-490f-8fe8-87c5fa8a104f",
        "cursor": {
          "ref": "c19bb7d3-fecf-4173-ad78-e5cc0ca633ab",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fd1c9673-79b9-4a1e-852b-7d9233029eb0"
        },
        "item": {
          "id": "b85c7711-dcc6-490f-8fe8-87c5fa8a104f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4bcf83ca-91ec-4e67-82e4-6a6f4be721b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb81885-54a2-4f1d-a0de-6c32e8f29730",
        "cursor": {
          "ref": "97561408-4eb6-4aed-8c19-42b20054f8d7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e76f993b-8045-4186-b9f8-0973b429c71d"
        },
        "item": {
          "id": "fdb81885-54a2-4f1d-a0de-6c32e8f29730",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "259f2c21-8094-45ce-8820-c2a80425ec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d98e7-7233-4f49-bed1-cb52bda271b4",
        "cursor": {
          "ref": "7ab6cd6f-d794-4e95-bea3-55bcdb6efdea",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e7483ed0-4240-4492-937c-0ab741a0c39d"
        },
        "item": {
          "id": "c52d98e7-7233-4f49-bed1-cb52bda271b4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b76ce5a-5976-4550-9ce9-60d0d5c3382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec996f-4c7f-4717-a689-1e006b3e6586",
        "cursor": {
          "ref": "a0b4b6e6-fdfb-4840-8e34-2012a31bbe65",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "535ebea8-ab68-4362-87a3-a844c7d70ed0"
        },
        "item": {
          "id": "87ec996f-4c7f-4717-a689-1e006b3e6586",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "91835eef-259f-41bf-a222-7ca41bb9dfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a90a951-9a8b-43c8-9290-f76e1a32667b",
        "cursor": {
          "ref": "8979097d-c142-42af-9684-5660444b72b4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e3a9e6bd-3c6a-4a3b-9ae4-f3e8a5822aec"
        },
        "item": {
          "id": "1a90a951-9a8b-43c8-9290-f76e1a32667b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7840c309-32ac-4e68-9430-ebc3956bb15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3687b0-93cc-4bb5-9104-de9aadc7d09c",
        "cursor": {
          "ref": "0ad91a19-f665-4b61-a61f-bfac513b5aac",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aca0e517-d0a2-4f6b-b8cc-dfa4461afc82"
        },
        "item": {
          "id": "4a3687b0-93cc-4bb5-9104-de9aadc7d09c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "363f0e05-a70e-4ca5-9f6c-047badbe8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425597a6-4c93-40f9-b96b-82ba888b0fa5",
        "cursor": {
          "ref": "a021d9bf-7eb7-402c-b246-0b16c2d11df0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "09c58bf7-92a8-4ec6-9ea2-2fab8b2b5548"
        },
        "item": {
          "id": "425597a6-4c93-40f9-b96b-82ba888b0fa5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b569ad3a-cfe8-44a4-8c52-beaa9ec495c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226f3b6a-da55-476f-afd0-96c98b425be6",
        "cursor": {
          "ref": "147678b7-83a2-4b71-878f-74d06bcd8fb2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c2678262-5642-4d4f-bb24-0c84a9031645"
        },
        "item": {
          "id": "226f3b6a-da55-476f-afd0-96c98b425be6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "faa4b8d9-2a1d-4107-8b98-bc7a5d186d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff0a8c8-5b33-43f7-beeb-1cb0d31c2de7",
        "cursor": {
          "ref": "f2b63c4c-9dd1-4cb5-aa76-21dcfe2a2839",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed448d60-a896-4f59-90ad-f1d90f24d184"
        },
        "item": {
          "id": "1ff0a8c8-5b33-43f7-beeb-1cb0d31c2de7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62e22a8b-f37f-452f-813a-5ba02c309953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d63c23-4e83-4f67-a04a-a47f13811b45",
        "cursor": {
          "ref": "aeba7f04-116c-44fd-a683-40fa0156f2df",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5aad02cf-a8a3-45af-8d85-efbe107b71b5"
        },
        "item": {
          "id": "f6d63c23-4e83-4f67-a04a-a47f13811b45",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "161626a7-eeab-473c-b092-4aadf0e9bb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e24f9f9-45f8-4b5e-b641-5813bdaf97f5",
        "cursor": {
          "ref": "277066e3-ab9f-4fd6-9215-c4d6064227c7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f903d487-2dda-4d96-858d-43cd347015d1"
        },
        "item": {
          "id": "7e24f9f9-45f8-4b5e-b641-5813bdaf97f5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d7453ba2-1489-4797-b295-3345bec7b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbc2560-b68d-4448-abbf-42bae6716b93",
        "cursor": {
          "ref": "d18f139e-bb56-44dd-96b9-d265f582dc41",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c9c845aa-977b-4635-afcc-c3cd3ff3698c"
        },
        "item": {
          "id": "6bbc2560-b68d-4448-abbf-42bae6716b93",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7ea33c52-b12e-40d2-9752-c582b45cd820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80deb11b-2230-4e34-a294-b7e56c9e3407",
        "cursor": {
          "ref": "36d1ccac-42f3-4f13-84de-0a17f6dae687",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "402d82fc-ed29-4d60-bfdc-64c067f8f467"
        },
        "item": {
          "id": "80deb11b-2230-4e34-a294-b7e56c9e3407",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eecf0579-5c5f-4bc3-8e8e-f94c5e875cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c344fc-f7ee-4400-b17b-9b8cd10b91e0",
        "cursor": {
          "ref": "7ee26401-bcfd-4f84-a920-28622001e194",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d8900f05-fde1-466c-a1ca-9aeae8c50cc4"
        },
        "item": {
          "id": "e0c344fc-f7ee-4400-b17b-9b8cd10b91e0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "159cd9a4-fda0-46af-87a8-a12005c468e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80228fc7-63b3-4439-9257-db46de4a1796",
        "cursor": {
          "ref": "7ed310b0-eec0-4e90-b327-d4b4e6118dec",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42033a23-21c6-4101-9823-45c155d09639"
        },
        "item": {
          "id": "80228fc7-63b3-4439-9257-db46de4a1796",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "72acbb2f-94e7-40ed-9e56-937028ac61dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62efc88d-ac17-41cf-9f18-af6d0b93385d",
        "cursor": {
          "ref": "226cbbb3-9452-4f19-b4fd-e53600e47b8e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99b24733-a2e7-49ff-b7af-735b25257d7f"
        },
        "item": {
          "id": "62efc88d-ac17-41cf-9f18-af6d0b93385d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "96ffba95-45c3-4550-be27-4ca38a0acff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea95c4c-ca3c-45fe-93ee-7c0479bd7d32",
        "cursor": {
          "ref": "b402ec5c-ed08-4dba-ba12-3c704ba3aa79",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ed58620b-9237-4b76-bd09-3265a5afde5a"
        },
        "item": {
          "id": "7ea95c4c-ca3c-45fe-93ee-7c0479bd7d32",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e3277121-2b26-44b1-a480-8124475e0b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52f1c98-59ed-4d18-aed3-75c0a65ca914",
        "cursor": {
          "ref": "6e06a3ae-bcba-4db4-a5c1-18bca85b528f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "085c121b-4cd0-44ac-ae5a-d8c9fc547fb8"
        },
        "item": {
          "id": "d52f1c98-59ed-4d18-aed3-75c0a65ca914",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a974a179-2a6f-4cea-9177-900d097c978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa190036-f611-47ab-8748-db7efac4c710",
        "cursor": {
          "ref": "aeb82458-fb5a-4a08-a041-19bda821028c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e6638af0-1fd5-4675-8ddb-5fe5e32e6012"
        },
        "item": {
          "id": "aa190036-f611-47ab-8748-db7efac4c710",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4b50afac-9d31-4ae3-9931-20f5ccd1cc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ef145f-9798-4bbc-8100-39eb7f64e0d0",
        "cursor": {
          "ref": "1ccf839d-8410-4cc0-855d-3537619b177b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "39a23328-d9b1-40f3-9652-a2c7c351c84e"
        },
        "item": {
          "id": "91ef145f-9798-4bbc-8100-39eb7f64e0d0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b1ce153-1cab-45a7-ac2d-db270b42f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5096475-e78b-4e61-9812-8fbbc2171cc8",
        "cursor": {
          "ref": "5a5a015a-0984-43bc-92fe-4ad2b2d9d026",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "67dba229-d78e-49a9-b32c-df40624b0e17"
        },
        "item": {
          "id": "f5096475-e78b-4e61-9812-8fbbc2171cc8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "82be58cf-b54b-4134-8b07-4a0aa3099bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74395875-15a7-4e3b-91f7-5ef6afc48c26",
        "cursor": {
          "ref": "4ca03bb6-28be-49d7-b100-3622545bd343",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0e9ee874-5d8e-4031-b827-861f662f777a"
        },
        "item": {
          "id": "74395875-15a7-4e3b-91f7-5ef6afc48c26",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bbd68f33-dfc9-4649-98fa-a71010745fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaa40b8-affc-4e80-85f6-35141bd41110",
        "cursor": {
          "ref": "f5779583-9e27-4878-8f3a-6bbce4c02af4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4be083e8-497e-48cf-9023-41099ee1d997"
        },
        "item": {
          "id": "abaa40b8-affc-4e80-85f6-35141bd41110",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "68172198-3998-4a46-b905-d636eb8fa07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2207dba5-4fec-4a53-8887-31fe59b07e45",
        "cursor": {
          "ref": "af3c57ac-61f2-4d98-9363-3119d984514e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dc5f0423-5e9c-4b14-afb1-fc60a1daff82"
        },
        "item": {
          "id": "2207dba5-4fec-4a53-8887-31fe59b07e45",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4bbdc01b-d077-4e26-98b9-aa4c33d8d179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86075d92-d035-45ed-bbdc-143e982f29d9",
        "cursor": {
          "ref": "7c090b3d-5dff-44e0-9576-7876c416f003",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b7234202-5790-4881-88e5-a6fc0c3b514f"
        },
        "item": {
          "id": "86075d92-d035-45ed-bbdc-143e982f29d9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89c4ea6f-d020-45ab-98ce-d763e982ec71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21672fc6-9cab-4cc8-9b04-1b2ab2b986b1",
        "cursor": {
          "ref": "53b8ea72-0ccf-47a6-b01a-07a4e231f364",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d929984a-396d-4b55-bab6-fcb82df60bd7"
        },
        "item": {
          "id": "21672fc6-9cab-4cc8-9b04-1b2ab2b986b1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "150927ae-792d-4a83-9be0-988eabfab3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6173d9-7640-4804-ac40-c41950816d3e",
        "cursor": {
          "ref": "837bdba1-b7a9-44e8-9ec2-b0ad38811408",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c231921-ca43-4017-8240-0dd2d903dfd0"
        },
        "item": {
          "id": "3c6173d9-7640-4804-ac40-c41950816d3e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ddaafeac-2a2e-4da4-b968-86870bf0e389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2c0fd1-0c8f-41cf-b2af-72c95fbe1b98",
        "cursor": {
          "ref": "f4710200-425e-4a68-b08e-90b3de2edcdb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2ec7c7d9-db30-4c2c-bf96-693ad8817ff9"
        },
        "item": {
          "id": "1e2c0fd1-0c8f-41cf-b2af-72c95fbe1b98",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "49e35624-d2a6-4d8c-99a3-4ada9fd841f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9f6eec-bce9-45a4-b16b-c43a2d60c0d4",
        "cursor": {
          "ref": "dc92071f-53a5-4c24-820a-17865a39f0e2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "caebca63-3b3c-4b69-b0fd-30593541c658"
        },
        "item": {
          "id": "af9f6eec-bce9-45a4-b16b-c43a2d60c0d4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "281c57be-bc3f-49b6-9e8a-bb981b1f2816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25722332-e162-46b7-8ef7-54f95cc3024c",
        "cursor": {
          "ref": "8b4797d4-0bb6-4797-a87d-b6d960a9f228",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "478a3e00-5275-435c-bb7d-ba01904f0277"
        },
        "item": {
          "id": "25722332-e162-46b7-8ef7-54f95cc3024c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1b3bf55c-6aba-4130-89d3-34030e307a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ded539f-3db0-4feb-9da7-50a5846a7f53",
        "cursor": {
          "ref": "d928c4a4-8ab6-4437-ae81-bf8ea67148fd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5670c1bd-3cd2-415d-ad7a-3bf1922d8cf9"
        },
        "item": {
          "id": "7ded539f-3db0-4feb-9da7-50a5846a7f53",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72ca97da-9dc9-4ab8-8b4d-8e312bdc58a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa1aaf6-a301-4992-965a-536c17d53a35",
        "cursor": {
          "ref": "2ec00830-6f3f-487f-8391-fae53586c0b8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "94aec4c9-bd39-4af8-a811-64a532920000"
        },
        "item": {
          "id": "caa1aaf6-a301-4992-965a-536c17d53a35",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7e6077d0-4192-4bca-8ba5-85154b0bc3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0817ac-f4e1-4725-acf1-f399197b2f59",
        "cursor": {
          "ref": "47d71fff-f00c-45a6-822f-441549cca123",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ca2d3cb-6a3f-496b-af11-de9f9972ed7e"
        },
        "item": {
          "id": "7f0817ac-f4e1-4725-acf1-f399197b2f59",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a6b28867-30ee-4d3f-8972-25339f993dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca26349-34c2-4325-83e7-ba68ad9f0a13",
        "cursor": {
          "ref": "51b08863-361d-4ba0-825f-ca96748a0418",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1e52fd71-da64-4c10-aa37-f4c15bb5a0d4"
        },
        "item": {
          "id": "4ca26349-34c2-4325-83e7-ba68ad9f0a13",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84d6793b-ec70-4cbd-bc69-0a85d37f6181",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3333a40d-ad78-423b-adba-a9887bdf7e29",
        "cursor": {
          "ref": "28609380-bd85-4375-8919-809252cddde2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "67f9e78e-5f48-4c76-a800-4bf958f2eae6"
        },
        "item": {
          "id": "3333a40d-ad78-423b-adba-a9887bdf7e29",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0a2e1a95-3397-4a34-a3d6-a71603de58ce",
          "status": "Created",
          "code": 201,
          "responseTime": 43,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6beba5-6f1a-4296-8aae-180a48c37e4d",
        "cursor": {
          "ref": "fd313de4-c6d5-453a-95a8-616600c9e607",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "998fe5b0-3d45-4e35-854e-e5649ee7cf46"
        },
        "item": {
          "id": "3d6beba5-6f1a-4296-8aae-180a48c37e4d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "172e07f1-1992-4ace-ac0b-b20c9b0208d3",
          "status": "Created",
          "code": 201,
          "responseTime": 235,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ce018-654c-4376-96ec-641c2884172e",
        "cursor": {
          "ref": "902a1c38-9a56-49f8-b4c1-cb65bad67727",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "29f331c0-4335-497e-9ee4-df0c1f3b390e"
        },
        "item": {
          "id": "183ce018-654c-4376-96ec-641c2884172e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "70a7b24a-974f-4311-97ba-4da394d559bc",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb60123b-50e6-4689-a78c-822230f6f765",
        "cursor": {
          "ref": "0ca1cb71-1dd4-458e-b332-49bdfec899cd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f156ec14-bc3b-4be9-b652-a1bd0d41d5a6"
        },
        "item": {
          "id": "cb60123b-50e6-4689-a78c-822230f6f765",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5c1e460a-09bf-4fb9-bc1d-adc6a9820a1d",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba6c6b-0b7c-4b53-90e2-bbdd7f6e1ce8",
        "cursor": {
          "ref": "fd3aaa89-3b2a-4971-b3ee-acec4aa954d3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d8a092d-7547-4020-94cb-d0ab8d317c08"
        },
        "item": {
          "id": "4aba6c6b-0b7c-4b53-90e2-bbdd7f6e1ce8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d106b0bd-bf97-4196-99bc-7a7f8f41138c",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd89bce-66ed-4bc0-aa8f-831f3361eb49",
        "cursor": {
          "ref": "f4c3c18c-b319-45e2-8457-a6a0c4362ce4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "88807a9d-857b-427b-803b-ecda6e5f403f"
        },
        "item": {
          "id": "7bd89bce-66ed-4bc0-aa8f-831f3361eb49",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "982f1146-d68d-48d5-bdac-e4abb1b04278",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f28c5e0-bd71-4ed9-8966-f00f4013ce38",
        "cursor": {
          "ref": "57cfdff3-2d14-4f51-8c39-a85c8a31e6fc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d4c06a02-4f95-4ad3-aed4-83e028a6c24b"
        },
        "item": {
          "id": "0f28c5e0-bd71-4ed9-8966-f00f4013ce38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8d85b6aa-3590-4721-a62c-c8e51c10c99d",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7edbf75-490b-49e4-8495-718ba055bb2f",
        "cursor": {
          "ref": "745e9846-ae50-48d1-8b34-10595715f3ed",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "82260ffb-62cc-468f-a176-d2443e2ba7bf"
        },
        "item": {
          "id": "f7edbf75-490b-49e4-8495-718ba055bb2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bce2999f-23e0-4fc0-9080-b85d14e20cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140c6453-9915-4a33-83fb-858c0db81645",
        "cursor": {
          "ref": "8ca6b6d1-50e1-4362-adee-045a8c554634",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d72f003-6afa-49bb-a1b3-e8a5ed62af39"
        },
        "item": {
          "id": "140c6453-9915-4a33-83fb-858c0db81645",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b5ba6097-d2c9-4ead-b188-7e21346a062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6147cb7-acac-4010-a317-b415f1d7cb74",
        "cursor": {
          "ref": "ae61277d-14df-4798-9a62-2dda0f08b8e2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b6e03678-9986-46ae-9d65-05f7bbe47d81"
        },
        "item": {
          "id": "a6147cb7-acac-4010-a317-b415f1d7cb74",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eeaa83b1-677d-450a-ba52-026ce7fc480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbd59e5-e065-4241-9014-0b3ccf260f75",
        "cursor": {
          "ref": "5edf3d93-84b6-4748-ba77-9c7d96189ed7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c697cdb0-d8a4-4189-9263-c1a66d243c0e"
        },
        "item": {
          "id": "2dbd59e5-e065-4241-9014-0b3ccf260f75",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "35fdfe77-f24b-4136-ac54-ac199e54ba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b7eb6-101c-4c89-b75c-ee5a86b15a2e",
        "cursor": {
          "ref": "23748fe7-69b1-46c2-b21b-c88be9661fc5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "31dedf97-efa6-4fff-b2dc-78d9c006bc4a"
        },
        "item": {
          "id": "999b7eb6-101c-4c89-b75c-ee5a86b15a2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8792516-1ffc-4cfd-888a-e77d55bafaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031a413-7908-4b5c-bf18-db092ada39a3",
        "cursor": {
          "ref": "f5c5fe1e-9b95-4d61-950c-5c7b5d96f88b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ba4c1127-5468-45b4-bf8b-ffa1002c0a4b"
        },
        "item": {
          "id": "6031a413-7908-4b5c-bf18-db092ada39a3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b90b69c5-5f19-4ab9-89c3-bb5ce71ed9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839dfe1c-121d-4f40-8642-d00f577bcedf",
        "cursor": {
          "ref": "a3d900eb-40cf-4474-9037-85730bc44db4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "46eaf9fc-4aaf-4ed9-af53-3872d07b181e"
        },
        "item": {
          "id": "839dfe1c-121d-4f40-8642-d00f577bcedf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4bc8d41f-b48d-4eaf-874f-34c40547bb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b41017f-cff4-4faf-94b1-71e917eb2a5e",
        "cursor": {
          "ref": "98e84a92-cce5-4247-881c-f317fd5a049b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ad8d169f-e5c1-467d-b272-47eb387c6a76"
        },
        "item": {
          "id": "9b41017f-cff4-4faf-94b1-71e917eb2a5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f82d85c0-3f17-44c0-a8ba-41e84e4acd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21da5f7d-0e3e-4737-8bd3-654d4922dbed",
        "cursor": {
          "ref": "3c3a7dd5-d63b-4255-8bc7-f7f44dc4910d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c61d3d49-09a0-4372-a910-83e4178e36bb"
        },
        "item": {
          "id": "21da5f7d-0e3e-4737-8bd3-654d4922dbed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "833841c9-3fc1-4e21-aaf3-d4e391fec43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3322cf88-e1d9-411c-98cc-c4341ca0b2b1",
        "cursor": {
          "ref": "e551987b-2678-4a00-a6a3-d13e0c0997dc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d698f873-7665-4d5f-912d-34c76ef356b6"
        },
        "item": {
          "id": "3322cf88-e1d9-411c-98cc-c4341ca0b2b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "25aed049-ad12-4d1e-ba7e-fec5238d937b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cf8ff9-5144-4c0b-be98-912ffa74a1c5",
        "cursor": {
          "ref": "28474605-00d8-4c7a-88dd-b32660539819",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15e18fa7-0abf-4fcb-a91d-fcfdd1769d8a"
        },
        "item": {
          "id": "07cf8ff9-5144-4c0b-be98-912ffa74a1c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03fd20cf-802a-42ac-9d1f-913a861aa756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15748be-4b57-479f-8dc6-c2d7608c2f94",
        "cursor": {
          "ref": "086390ab-ccd3-4df4-8bab-f8f3a3568606",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "533e2038-af1a-48ca-bcef-b8a1876b57cb"
        },
        "item": {
          "id": "c15748be-4b57-479f-8dc6-c2d7608c2f94",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29afb354-c5ba-4d9d-bad6-054340de7e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fa8ecd-161f-4a99-a9fd-d4e53a851e2c",
        "cursor": {
          "ref": "64c3f052-cb0f-4b8c-af32-c3c8978d16dd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e03b4f95-c4fc-48fe-9ba4-f3276f6992c4"
        },
        "item": {
          "id": "b8fa8ecd-161f-4a99-a9fd-d4e53a851e2c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4e840301-455d-4ac6-accc-3427f738bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fea2a0-8325-4a9f-84a5-987742dca663",
        "cursor": {
          "ref": "9eca4dda-8c88-4950-a2d6-b8c452ec9002",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "268de880-02a3-4380-b41e-62deee59b483"
        },
        "item": {
          "id": "60fea2a0-8325-4a9f-84a5-987742dca663",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7c2b0710-e9ad-445c-86e7-b52acd425e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bb92b4-ef6a-4a02-9f20-eee64900ec80",
        "cursor": {
          "ref": "37aeafc4-ceac-4da5-8842-568258bdec79",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "974530ba-d4ec-4dd1-a786-d181c5ad6bea"
        },
        "item": {
          "id": "c0bb92b4-ef6a-4a02-9f20-eee64900ec80",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d67c244-15bf-4b9a-870d-34e1181c16a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be026ab0-4ced-46c8-ad8c-c683b3aa17af",
        "cursor": {
          "ref": "6b6565b1-9d94-4aa4-a844-41b889de35f9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d3fdc1e-6089-411e-bf04-d9eebb0404b4"
        },
        "item": {
          "id": "be026ab0-4ced-46c8-ad8c-c683b3aa17af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0532f616-3414-4f84-a22b-8a10602ee797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ea8dc4-848f-41a0-835b-4df1e2ba6920",
        "cursor": {
          "ref": "85fa5c0f-b9b9-4a88-8a8a-44a9d6fc8374",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4873c004-dacd-486e-8367-2b44c9b292f2"
        },
        "item": {
          "id": "58ea8dc4-848f-41a0-835b-4df1e2ba6920",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3557107f-f93d-4a05-9dc5-a637e5040e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8378187-a72f-41e2-becb-d3b99f2a9194",
        "cursor": {
          "ref": "9f30911d-372d-473a-906d-c4ec18f9ddbc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "efe2bb87-3e6f-4d95-94bc-9b1afd934d8c"
        },
        "item": {
          "id": "b8378187-a72f-41e2-becb-d3b99f2a9194",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8315e93e-fcec-4ae9-992c-156d2f7244b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca406802-9731-4591-9f56-c8cec1114e42",
        "cursor": {
          "ref": "f9a4c630-b9df-4e07-b990-7e1de726221d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "45a2c94e-5b63-4e36-8c3c-609887d1823f"
        },
        "item": {
          "id": "ca406802-9731-4591-9f56-c8cec1114e42",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1cece669-3d46-4fcf-b31e-1cee46a4097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf8417-049b-450b-b40f-027eb863cbc3",
        "cursor": {
          "ref": "fbcaf081-baca-42f5-9201-8c43c2cc62fe",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c1195ed-2685-4648-bf1d-bffd218e268b"
        },
        "item": {
          "id": "c1cf8417-049b-450b-b40f-027eb863cbc3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d8c01bc7-487f-4a62-9621-941fa5bf7a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0845490f-1766-4b73-9a5e-6b99b07e5b7f",
        "cursor": {
          "ref": "ec73a10d-b321-46b7-99fe-5f419e73b8b7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "47092552-1802-4898-99ba-b683d2615525"
        },
        "item": {
          "id": "0845490f-1766-4b73-9a5e-6b99b07e5b7f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c8e22ca3-0ea1-4a7c-983d-73b559fa1e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b496dd-ba2b-46c7-9c7e-59c277f5f51a",
        "cursor": {
          "ref": "67f14d86-d732-4e49-921e-4130fcdad6d8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c44f8f2e-62ac-4366-9067-8ffc65bfcc3d"
        },
        "item": {
          "id": "10b496dd-ba2b-46c7-9c7e-59c277f5f51a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07138e92-70f7-4498-aa3a-f8e542e4fffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689601ed-0c68-4c94-8c67-b0aa20adab07",
        "cursor": {
          "ref": "ad0f72a0-d476-4538-9ad2-8d7df1121074",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5fcb6fc0-fe9b-4377-95f3-cd7da5d9b2c4"
        },
        "item": {
          "id": "689601ed-0c68-4c94-8c67-b0aa20adab07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d428264-e971-4da7-bffb-69640626cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57a706-ba9b-4af8-9413-1b4bb1af8b9f",
        "cursor": {
          "ref": "2dc5e827-e7fc-4d69-89da-bcb7923c8468",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "63bf9183-8d58-422b-80bd-c9799c7d066d"
        },
        "item": {
          "id": "6a57a706-ba9b-4af8-9413-1b4bb1af8b9f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fdba901a-ca33-4de0-9b91-330605d6650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97327add-8e1a-4c32-b940-4c835d5f873e",
        "cursor": {
          "ref": "cbdba2f2-9404-4f69-b14e-83e0002c31e7",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c96a453f-f322-4c79-aff8-356a694648a3"
        },
        "item": {
          "id": "97327add-8e1a-4c32-b940-4c835d5f873e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e70540f3-c213-4062-9a68-91c5c2932720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e117ad-50e4-42e2-aed8-1e9fe0698315",
        "cursor": {
          "ref": "fa26ab24-c92f-4d61-80ab-bceb45c78d03",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "570b695e-07e9-4589-a907-d772feac4873"
        },
        "item": {
          "id": "70e117ad-50e4-42e2-aed8-1e9fe0698315",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fdd90e44-bb1e-49d2-b40d-6958397d91d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae5ee3e-d72d-46cb-a220-88b85acf30da",
        "cursor": {
          "ref": "2108f98c-3e98-4dec-b9cf-b881b059b7c4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b945fe39-7ef0-4639-9c5c-a913ec426497"
        },
        "item": {
          "id": "cae5ee3e-d72d-46cb-a220-88b85acf30da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0a21a72-2984-4420-af69-ec26bc1ef267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ebf65e-d242-467a-a1a6-c8a311b47e6b",
        "cursor": {
          "ref": "6e201b00-cc70-4cb4-b260-f8048da577b3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6367a979-724f-4732-ba3a-40a264fcc7bb"
        },
        "item": {
          "id": "20ebf65e-d242-467a-a1a6-c8a311b47e6b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e7ca847e-57a6-4c09-a8f7-97e650731044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb14ec5-eae3-4e6d-a6cd-02e165f373f0",
        "cursor": {
          "ref": "0962ce6f-a8a1-45f0-9bfe-8801d9dfd242",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1baa8876-dcba-4aae-a221-d6d08fffe4d8"
        },
        "item": {
          "id": "ebb14ec5-eae3-4e6d-a6cd-02e165f373f0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cf26d8f-9638-4ee1-9fa7-20afe1195259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0682cb71-d91e-4473-8904-aa788c32ab9d",
        "cursor": {
          "ref": "7411e977-0497-47a4-a1eb-945640d11b4b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "79999244-413b-418d-9602-7127d6c7e1d2"
        },
        "item": {
          "id": "0682cb71-d91e-4473-8904-aa788c32ab9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "251224e8-ef5e-4d10-95b4-b6857c333477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d585d0d-9b07-4243-8260-38887fedc85c",
        "cursor": {
          "ref": "3776c970-62f8-40aa-b2f8-6b818ba24da2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aa906634-dec1-4141-8959-5e740f3756af"
        },
        "item": {
          "id": "5d585d0d-9b07-4243-8260-38887fedc85c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "87911794-0253-41d5-b72a-a625da8a506f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704993a-2043-4c79-ba3e-536036c2e637",
        "cursor": {
          "ref": "6b1aebe8-ea9a-4646-ba52-be3e058e29cd",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a31a8727-57f9-4bc6-9d8b-ca74f35d2541"
        },
        "item": {
          "id": "c704993a-2043-4c79-ba3e-536036c2e637",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "38bc8b46-dbb5-4f07-ad91-ccca2180b62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fadde72-31ab-49fb-96e1-2764f885d00d",
        "cursor": {
          "ref": "c4017b61-d773-4f40-9965-8de5d8c3e426",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6bb71ec1-71e7-48a3-beef-d5d04e7372f5"
        },
        "item": {
          "id": "4fadde72-31ab-49fb-96e1-2764f885d00d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70eac634-ed4d-4104-8a13-858c9b456c4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea4587-3699-4855-bbcf-a57f8dfe1db9",
        "cursor": {
          "ref": "f2b6a684-965e-4696-93d5-81d8bd336c3c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0472b2a4-c33c-487e-9e2e-e0f4ac9d979e"
        },
        "item": {
          "id": "25ea4587-3699-4855-bbcf-a57f8dfe1db9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57077163-6c50-4d90-b83b-58c2e19446b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353ff161-afe7-4eb9-bdd8-fa91ab81fa85",
        "cursor": {
          "ref": "3e760b4d-3995-4de3-b3ec-c8fa7893fed7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "929202de-182b-42fe-b588-71bcd4da2d21"
        },
        "item": {
          "id": "353ff161-afe7-4eb9-bdd8-fa91ab81fa85",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0da9f1ad-1d79-4c4e-915c-e150ceb1c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ce733e-b247-4c6d-91c0-8f5d6173e801",
        "cursor": {
          "ref": "ea66ab4b-23d1-44f6-94a3-3121e192762d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "25012ab1-6ff9-4509-a077-ed30a9be2c72"
        },
        "item": {
          "id": "05ce733e-b247-4c6d-91c0-8f5d6173e801",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2260a84f-868a-412a-adc1-a0e553e1545e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f3e6f-2789-47b6-a3da-b409ca6044f7",
        "cursor": {
          "ref": "40c176fb-0c1e-44c3-9ec7-87f56c78ddd9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b95a908b-cd27-4898-bb63-d9599bf5ea09"
        },
        "item": {
          "id": "f26f3e6f-2789-47b6-a3da-b409ca6044f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2467ebc1-dae0-4589-bd10-91f19171d573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d066fa6e-6201-424b-b4d9-5dc780180eb0",
        "cursor": {
          "ref": "f2640554-7ee2-4bfc-8948-12922541901a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "26a36b91-3f15-4f65-93a5-376ea0e5913f"
        },
        "item": {
          "id": "d066fa6e-6201-424b-b4d9-5dc780180eb0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "879defbf-10c2-4a23-8a62-200afb18803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0c65d-9ffe-4bd9-9298-89f4057b22db",
        "cursor": {
          "ref": "ad5d4f11-ac4a-4e51-85c5-a0343f4504c5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e232095-6c5e-4e06-b648-069ca3e1d09d"
        },
        "item": {
          "id": "35f0c65d-9ffe-4bd9-9298-89f4057b22db",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f481967b-49c1-492c-9346-9d124485d9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafff483-c7a0-433d-bfc1-0582e13d8c1a",
        "cursor": {
          "ref": "c6c4e110-0722-475d-9ca7-7f7e4a76abf8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4b6c67e3-d3c9-4952-8e6e-bcb0dadb472f"
        },
        "item": {
          "id": "bafff483-c7a0-433d-bfc1-0582e13d8c1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff8e5ada-8ad9-4d43-b58a-252fc2f94b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ee309-fb01-4964-8c4c-f032cee54e3c",
        "cursor": {
          "ref": "5c555856-1ff6-464e-a215-6724f5c58c4e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3ea79b62-ede2-4337-aa79-55a1ea44a9bb"
        },
        "item": {
          "id": "d59ee309-fb01-4964-8c4c-f032cee54e3c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59a4e957-3beb-4bbb-bf7d-00a465edcb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1775f3-5fea-4c98-a3a6-28c192558f9a",
        "cursor": {
          "ref": "cb46ee0f-9933-4817-96f7-f6f7b003a332",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4aa0c06c-e8c8-4ce9-9f11-c8cac302e46d"
        },
        "item": {
          "id": "6c1775f3-5fea-4c98-a3a6-28c192558f9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80738d69-81ec-4350-b8f1-4375267414dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cee8b8-23aa-4850-a03d-25f520224050",
        "cursor": {
          "ref": "6103faeb-b91e-4fa9-9f11-7324773bbf0b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6e510a80-1b3b-4630-9515-fde7800c5564"
        },
        "item": {
          "id": "a9cee8b8-23aa-4850-a03d-25f520224050",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1692f855-93db-4495-95ca-344f2d0a0d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5809ecc-9196-4c01-a485-29a1c0e75eac",
        "cursor": {
          "ref": "48f48c4f-d76d-48f2-b501-abdd012999d8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14439283-9425-4de8-812d-9b83241428e6"
        },
        "item": {
          "id": "a5809ecc-9196-4c01-a485-29a1c0e75eac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "59ba757b-cf50-4add-829d-e5d0e2662e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e6299c-1c13-4db6-b5e4-58c02ece15d3",
        "cursor": {
          "ref": "06bfff5c-2b41-474e-a6e6-f6bae4cf2555",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "00dc2df9-297f-4886-95fe-7a127c2955ed"
        },
        "item": {
          "id": "13e6299c-1c13-4db6-b5e4-58c02ece15d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42f9def0-43d8-477f-85dc-03e2a46495e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da004202-bab7-4e95-9d7c-3df67b38ffed",
        "cursor": {
          "ref": "ffbf7670-134a-4b65-b254-f6302f931b13",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "135b8292-cebb-4768-a1fd-f54a8fc654bb"
        },
        "item": {
          "id": "da004202-bab7-4e95-9d7c-3df67b38ffed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d41fad21-86db-4a9e-8f14-8725976f00f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8206a694-372c-400f-bdda-e82b0c381b56",
        "cursor": {
          "ref": "f6fcf3ec-da18-4589-a029-248b86727e28",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "838f4ad6-1ae7-4720-9a6c-d056fb317cdc"
        },
        "item": {
          "id": "8206a694-372c-400f-bdda-e82b0c381b56",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1da348a3-8f52-46d3-8368-8e0e0b8f3b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e3907-d7c6-4483-ad88-be8eaeafc7f5",
        "cursor": {
          "ref": "6c7b196f-3be4-4ec7-bc1a-194162aaa833",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ac90bb0-f36a-4dd7-931d-dfd7e1b495a2"
        },
        "item": {
          "id": "801e3907-d7c6-4483-ad88-be8eaeafc7f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "23e2e532-389b-4a14-91b8-4543e2e7564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1865bc-b815-44d8-b4db-1597b52afb70",
        "cursor": {
          "ref": "2af0ce55-c632-40fe-a1d3-9a94c40bfc07",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "68e7935b-e9a4-4986-91b6-0f1de240dc06"
        },
        "item": {
          "id": "fd1865bc-b815-44d8-b4db-1597b52afb70",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a2786e0-5393-4f9f-a332-84503018eac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbd246-6db6-4c69-984f-2626d9db976b",
        "cursor": {
          "ref": "b9d5d558-3257-4196-b8d4-d7ca091fdd1b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ce58e7f-28f5-4e87-8e0e-2c9c49e0ca24"
        },
        "item": {
          "id": "62bbd246-6db6-4c69-984f-2626d9db976b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a6e0e9cb-f448-490a-98f0-4174698824be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051abc09-15ad-4fa3-a9e6-bc29928c07e3",
        "cursor": {
          "ref": "5dafa597-0702-495b-ad10-745e22d741bf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "84c7f7bb-bc07-4474-b8d0-8dbf2c64ff73"
        },
        "item": {
          "id": "051abc09-15ad-4fa3-a9e6-bc29928c07e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e7058548-5198-4b15-9a72-d271cbddc3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e0dff-a420-408a-84f3-08abe64a63b4",
        "cursor": {
          "ref": "56f9680e-b4a8-40c2-835b-2b88ecbcacf3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8a35c1e6-bb6b-4625-a164-c3393e27bbbf"
        },
        "item": {
          "id": "ab5e0dff-a420-408a-84f3-08abe64a63b4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d77a555-6551-4462-888c-5cef3ae25ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737937c8-8bce-47d7-88ec-62e35570bf19",
        "cursor": {
          "ref": "d0774cdd-1be5-43f6-8688-6cb85e21abad",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "50441151-ca9a-4d27-ba6d-ad4caa476a47"
        },
        "item": {
          "id": "737937c8-8bce-47d7-88ec-62e35570bf19",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b75c95dc-d54c-4fad-8cd8-a141520a643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd4aab7-821b-49e9-a1c2-43ce489b2a40",
        "cursor": {
          "ref": "0ea1db3e-b82b-4fb2-b59e-196cfdad6791",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fb06a59f-afd8-45ee-b8ea-ca9c3587575d"
        },
        "item": {
          "id": "8dd4aab7-821b-49e9-a1c2-43ce489b2a40",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d8caa568-aa1c-4694-b29a-a7d1d910bb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa464f70-5b23-49a8-9bfe-dc8e39c6e119",
        "cursor": {
          "ref": "403fd8f6-ab7f-4935-b966-00e94bd9e4b2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d85d9326-8528-45f1-a4b5-9d2e32189539"
        },
        "item": {
          "id": "aa464f70-5b23-49a8-9bfe-dc8e39c6e119",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aee46f7c-a695-4a16-a5ff-c555e82a1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf894ad-962a-4c9b-9437-a1b74a4483bc",
        "cursor": {
          "ref": "86340aaf-cc41-4f60-b88f-aba4524b9ab4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "498727df-69c1-4866-803a-7f7c443962ef"
        },
        "item": {
          "id": "0bf894ad-962a-4c9b-9437-a1b74a4483bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f3d97a2f-1836-4543-bfe8-f994b8f7d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa30658-3408-438e-9091-03cd0b9b10c6",
        "cursor": {
          "ref": "ad12c114-2727-4c6c-a736-43afbc4174b6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1ae98b8c-aff3-4a86-97d6-374bc96a919d"
        },
        "item": {
          "id": "8fa30658-3408-438e-9091-03cd0b9b10c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "efdddf1b-098d-4c27-84d0-1576cecbfb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e537d7f-7f0d-4428-8d01-792238aa2bf3",
        "cursor": {
          "ref": "d468645a-5410-4a75-92c6-8ddb9808eb89",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1b4d1762-b10d-4430-93cf-08767d749e1b"
        },
        "item": {
          "id": "1e537d7f-7f0d-4428-8d01-792238aa2bf3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58ec6e0c-faec-496f-b02b-02c2cc8c6a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0954d8f-8682-4142-b92f-8d3a309949cb",
        "cursor": {
          "ref": "40816b9b-8bdc-4ac5-94f3-c3477b86e324",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2d20eee2-8fbc-48eb-ba44-e878723dc656"
        },
        "item": {
          "id": "b0954d8f-8682-4142-b92f-8d3a309949cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8e05d8ab-2e7d-42cb-b06f-3e4cc8e6b5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5853f6aa-a096-4a7e-bf24-0afad3305d70",
        "cursor": {
          "ref": "5529ebe5-50e0-4aa7-aa81-09217e7b071f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0571cea5-b0ad-4f6a-85d0-64c54495413c"
        },
        "item": {
          "id": "5853f6aa-a096-4a7e-bf24-0afad3305d70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8523060-f842-4e35-ba59-5b097566e793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfc1522-d536-4917-9161-ab3d7c40c952",
        "cursor": {
          "ref": "ee8a5a61-ea99-4a4c-84bf-b13438477a4d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "92cac100-e9ff-4628-88e3-a7d4d0c89412"
        },
        "item": {
          "id": "bdfc1522-d536-4917-9161-ab3d7c40c952",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "514c754a-9d1d-440f-aee0-0807e9cc60ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2062da8a-d38b-46bd-bcca-ce3aa6b79e18",
        "cursor": {
          "ref": "ef612250-8a23-43c2-ac27-92d4cd6cac60",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d50d8f9-806b-481e-b1c3-6eb54f24f132"
        },
        "item": {
          "id": "2062da8a-d38b-46bd-bcca-ce3aa6b79e18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7b68f54-bed0-43da-b49f-aa860c740a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965cb87e-08b7-4947-8990-a78d706d257d",
        "cursor": {
          "ref": "503a34b1-b49c-4d3b-ab39-53a1ebf56e43",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5918ff71-9b75-4edb-a300-732007402307"
        },
        "item": {
          "id": "965cb87e-08b7-4947-8990-a78d706d257d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8c57a85-0871-4de2-8721-b94955e6b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21dad94-40af-4a62-b914-7aa630c2ecff",
        "cursor": {
          "ref": "c93fc016-69d7-4163-8981-a1d66a0a0b30",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d7c610da-f604-4b81-adb5-7553b48d0333"
        },
        "item": {
          "id": "f21dad94-40af-4a62-b914-7aa630c2ecff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2730635a-e611-443d-a602-0c5fe0906011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918a569e-b95a-4e71-b310-9a5d82e75117",
        "cursor": {
          "ref": "716b6260-5e7d-4807-919a-88078fa90d91",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c6b15690-3662-4e71-bd8e-6992d45eb0e2"
        },
        "item": {
          "id": "918a569e-b95a-4e71-b310-9a5d82e75117",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3517d1a6-6437-4ab8-ad33-d6523dce96e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90db71e8-2acb-48d7-81f4-67afa2dc9f35",
        "cursor": {
          "ref": "3a467bc1-6ed6-4d8b-8051-3197f3d11290",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "06dda985-c765-4b10-b20b-15f1fae64671"
        },
        "item": {
          "id": "90db71e8-2acb-48d7-81f4-67afa2dc9f35",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae403edf-1255-4247-8a05-0572c9803de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc83e5ac-e631-4e0f-a740-a210be88f638",
        "cursor": {
          "ref": "6fcec72f-f099-4bad-a160-57c2030e4986",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b8c28b2e-0e3d-4b70-9abc-8f9994824f99"
        },
        "item": {
          "id": "bc83e5ac-e631-4e0f-a740-a210be88f638",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f42829e5-e314-4ef1-ae5e-9352026c1ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51492d14-bbf1-4a66-af7c-b7704aa3eb5c",
        "cursor": {
          "ref": "4515d487-c13e-45cc-a448-9fe3117b9184",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1a73dfa2-1877-448e-8e09-6fe0a477ac0a"
        },
        "item": {
          "id": "51492d14-bbf1-4a66-af7c-b7704aa3eb5c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4468ca2e-e299-43dd-92a8-7b3cb31dd5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09be6d6-3f28-4c6f-8654-b4217be20797",
        "cursor": {
          "ref": "284fa507-9128-4439-bb87-1fb7dffed68b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ff2d9b46-9d34-4f80-b752-ffdc145226b3"
        },
        "item": {
          "id": "d09be6d6-3f28-4c6f-8654-b4217be20797",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "43765fa4-f58e-42ac-b122-178eab705498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d20422-2657-45bb-816e-59a2f988f088",
        "cursor": {
          "ref": "81da65ef-8166-4b57-a577-0f85f40cc4fe",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5def7bfe-b319-4c5d-b0a7-04f0cd19b246"
        },
        "item": {
          "id": "80d20422-2657-45bb-816e-59a2f988f088",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a8d21329-9454-45d1-a9de-a2d5a4c0ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c9e879-5bca-4e54-b23f-d1f7230d335c",
        "cursor": {
          "ref": "4898d065-850a-4830-a366-da6b5e262d9c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "678b7c70-2f21-40ec-bc03-1e4a8e5b76d9"
        },
        "item": {
          "id": "d0c9e879-5bca-4e54-b23f-d1f7230d335c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9295d2df-9f57-4533-9ab9-3648ba5c6648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fda60f-d615-4b1a-b1de-f58fc4950a71",
        "cursor": {
          "ref": "7300021c-5768-4340-8fa6-0f0db420a27b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "63ab553d-1d02-4d86-ab76-2aea3a2c224d"
        },
        "item": {
          "id": "16fda60f-d615-4b1a-b1de-f58fc4950a71",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aa609ff2-b91f-4013-89a3-efd01828804e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6d055c-20c0-49d5-b08e-07cf5e3998fc",
        "cursor": {
          "ref": "cc4b2500-c0de-4331-962a-20bfc4cb4fa6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f46d7cc2-f53f-4d2f-b68c-b5ddf25b36cc"
        },
        "item": {
          "id": "9e6d055c-20c0-49d5-b08e-07cf5e3998fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "338c40d9-456a-490e-b0aa-28f7fddb284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123a213c-e682-4466-baaa-4108c6378214",
        "cursor": {
          "ref": "7aa583f1-f0a6-4aab-b200-23b9aaab9d4e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ea51a613-7d63-4551-b880-ef6b9a16964e"
        },
        "item": {
          "id": "123a213c-e682-4466-baaa-4108c6378214",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b2d5f14-665c-4eb0-9c46-399732f2287c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37203f18-b4fe-4175-b6fa-c06d38854fb0",
        "cursor": {
          "ref": "f41e4e01-de59-4717-8d78-ded0e3f32d74",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d6826850-b0bd-4a62-aa90-04523509e34c"
        },
        "item": {
          "id": "37203f18-b4fe-4175-b6fa-c06d38854fb0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "78a023ec-b191-40fe-b858-09b1bb8cf973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ead98e4-3583-43cd-a496-147910ab432c",
        "cursor": {
          "ref": "59a5bf4b-63cc-4292-8bd1-cb4bc645690c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "272cdada-7ee7-4da0-abe3-1611a6d37e7d"
        },
        "item": {
          "id": "3ead98e4-3583-43cd-a496-147910ab432c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "badc7e36-c7ce-4ee1-9ac0-cd200e66f196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efae9e29-5480-4603-a5d7-eb352d688971",
        "cursor": {
          "ref": "abbd65a2-5aa3-4d8b-8c3c-6c99c6591057",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64daaa7e-25b2-414a-8aaf-e6f84e1f4f27"
        },
        "item": {
          "id": "efae9e29-5480-4603-a5d7-eb352d688971",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fe303c73-7efb-429f-b884-e70a039896b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c26cd63-936f-4d02-92a0-763abbd5f5a1",
        "cursor": {
          "ref": "9ede47a9-c02e-4109-83fc-21830238125f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "43ca990e-b4c3-4fc6-96c4-97deb4bdc4e9"
        },
        "item": {
          "id": "6c26cd63-936f-4d02-92a0-763abbd5f5a1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "20fa9245-52bd-4f1f-a526-81e916180032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35280844-627d-46dd-9474-37be616e5e91",
        "cursor": {
          "ref": "c0ae01c5-f2aa-4824-8815-d1d1b568dfbb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d8392496-2dab-46ad-9796-b70a78f40651"
        },
        "item": {
          "id": "35280844-627d-46dd-9474-37be616e5e91",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "06052a5e-9fb0-4397-88a0-9f886c6d16d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28ac6ae-fbf6-4173-ac51-10ab1fb24ec8",
        "cursor": {
          "ref": "cc42014a-dfc3-4c3c-91de-f696f4850e3e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c2b2e8e-3858-4046-9435-ccb1b5cf169b"
        },
        "item": {
          "id": "e28ac6ae-fbf6-4173-ac51-10ab1fb24ec8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "171d2b7c-2942-4dec-8291-8d57a7d45cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccfabec-e12f-44b6-b53c-bbf8f894e8ff",
        "cursor": {
          "ref": "b8acc576-10d6-451d-bffe-7a55d3ccca12",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "38d977b4-0fd0-49f3-bcd5-ed311fd44982"
        },
        "item": {
          "id": "bccfabec-e12f-44b6-b53c-bbf8f894e8ff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ee1b39b9-8a38-4915-bd0d-fb1c74f308df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a5356-fff6-4e59-b2e7-84321f162248",
        "cursor": {
          "ref": "927712d5-7ff4-4136-8d44-9d9474a195db",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cc312f09-d1d3-4d45-b0fd-23f7b8325f11"
        },
        "item": {
          "id": "7c2a5356-fff6-4e59-b2e7-84321f162248",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ff04d003-1209-4c6c-a908-ea3a09b5271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097adb75-0498-4c35-b8f3-9ce82e7ebb3c",
        "cursor": {
          "ref": "ac016ced-9591-4983-9eb3-221161ebd984",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60fa7a52-bcfe-486b-8212-15328e31ed80"
        },
        "item": {
          "id": "097adb75-0498-4c35-b8f3-9ce82e7ebb3c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ab66507-a304-4013-a363-6371b20a4284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c40497-2975-495a-8cd1-c7f1edc3e893",
        "cursor": {
          "ref": "97db93e9-8d77-4c5e-a10e-e79d9b3c8342",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd014642-c4e7-40f7-88ec-b8ca05960a48"
        },
        "item": {
          "id": "c8c40497-2975-495a-8cd1-c7f1edc3e893",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "35f4b9f5-5c96-4775-aafc-85e2fb945ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4661c038-5f05-47c0-ad1b-717be46a9d03",
        "cursor": {
          "ref": "c192d8e6-024b-42fc-93f7-fa14dafb33fa",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8246f50-4449-4e55-95f2-c53216beef4f"
        },
        "item": {
          "id": "4661c038-5f05-47c0-ad1b-717be46a9d03",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3289b1bd-f871-46ed-9e3a-4a6d8f38a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47631cd2-a419-4d05-963f-1c2e6747084b",
        "cursor": {
          "ref": "4548b89f-61e4-46b6-803a-62a15853a313",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "db5eda3f-fbc0-4dee-8b3c-dd9c6291f0a0"
        },
        "item": {
          "id": "47631cd2-a419-4d05-963f-1c2e6747084b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c87fce98-9e0b-438a-9fa3-ff66c20d2296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d63607-63f8-4c76-ba4f-e07395843296",
        "cursor": {
          "ref": "84bd278a-e4bd-4e7f-a970-7e8471a16c65",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "efddebc1-8b9b-4940-83fa-ea12baac5cc2"
        },
        "item": {
          "id": "46d63607-63f8-4c76-ba4f-e07395843296",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4662df4d-c693-4aa1-a670-cf319afb9a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d8ff68-60eb-4bf9-8f89-5874b86969d8",
        "cursor": {
          "ref": "3c74c97d-78c3-45d1-81cf-2c108f7e4395",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f093edba-8d7a-4739-8819-4144bb06c56c"
        },
        "item": {
          "id": "02d8ff68-60eb-4bf9-8f89-5874b86969d8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9e4b4462-b156-46b0-b899-bd0e93795ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3094358-2884-437e-b51c-cf416c82e861",
        "cursor": {
          "ref": "280b2b04-cac0-433f-be61-efdb40b76e4f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "66022188-8f44-4d77-880e-088785d607a0"
        },
        "item": {
          "id": "a3094358-2884-437e-b51c-cf416c82e861",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b24822df-e6a2-46e7-9a09-ae1e4ed54b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b2f19-e01a-4895-889c-e4ed117ef26f",
        "cursor": {
          "ref": "e4b542ab-bef1-4b24-8254-9a13102b5391",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7c574766-d517-4aaa-b142-9dbb2b1de2c6"
        },
        "item": {
          "id": "498b2f19-e01a-4895-889c-e4ed117ef26f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "83ba5ebf-31d2-401a-b3bf-c2ea1f97b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dfec73-cc2f-4035-b85d-7e5dc0c7cc13",
        "cursor": {
          "ref": "76c7a01a-cf53-4690-840f-02562e039cce",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "205f99c1-025a-4c61-9746-884c3add9fc1"
        },
        "item": {
          "id": "d9dfec73-cc2f-4035-b85d-7e5dc0c7cc13",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "79b9b783-c2a3-4836-932c-48cb0f82cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b171d-b21d-46b9-bf9d-920d67833b37",
        "cursor": {
          "ref": "d1289cc2-d5a5-4b49-9642-a35ac624f38f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76ad7d4a-e95a-4032-ac4c-84d671598362"
        },
        "item": {
          "id": "067b171d-b21d-46b9-bf9d-920d67833b37",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "14880833-4760-40f4-bd99-ae50573bf166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a593dd0a-ca50-43ac-ba9b-a3fc924713eb",
        "cursor": {
          "ref": "d05c3808-9d3f-42fe-8a45-8e4f823b8d59",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a2f2708c-903f-440c-8242-0552503eed1d"
        },
        "item": {
          "id": "a593dd0a-ca50-43ac-ba9b-a3fc924713eb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "32eac030-a24f-489c-8e8c-54bb4e6e325e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2a8b4-d68a-4b9b-9304-b195281604cd",
        "cursor": {
          "ref": "c19f24db-b62b-450f-98d9-bdc0cf6e6bd6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bc71dd1d-a533-4377-b008-ec438eb3f200"
        },
        "item": {
          "id": "f0a2a8b4-d68a-4b9b-9304-b195281604cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "18f24266-8381-49bd-8625-9d873d4edb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf8438-a1c4-45ae-9de3-b3c41234b03a",
        "cursor": {
          "ref": "4f2a8ce4-e6fc-4e64-bfa6-8dd361fcd8be",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0c2cb5ac-8293-4e34-8cef-a2167dedd0d8"
        },
        "item": {
          "id": "c1cf8438-a1c4-45ae-9de3-b3c41234b03a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8773a441-4eee-4589-aa0e-d33715cf8adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdecc170-1776-4225-910e-1f41afaf79a2",
        "cursor": {
          "ref": "931fe0e3-7905-4665-b663-7e36e39e6884",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3c2587b8-8b1f-497a-a9e4-5b2d5d9de44b"
        },
        "item": {
          "id": "cdecc170-1776-4225-910e-1f41afaf79a2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ecb2c42f-ee06-497f-867e-e59d826a8836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e75e9d5-536b-44a5-912e-ac1572404ea6",
        "cursor": {
          "ref": "5cd01d2b-cccf-4986-ae25-ede5eff1b4df",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f63f0d2e-6ff9-43e3-a4b9-dc3c40202f7d"
        },
        "item": {
          "id": "2e75e9d5-536b-44a5-912e-ac1572404ea6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8443b390-1ad4-43b1-ba5e-0b0312962fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd16143-f0c0-4160-945b-ee0f2b0e4df0",
        "cursor": {
          "ref": "1f6e2ad2-8944-49f3-9ffc-83ed35664fa5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d978f18b-3d90-4592-8dc4-cf96bf71867a"
        },
        "item": {
          "id": "7dd16143-f0c0-4160-945b-ee0f2b0e4df0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "725f5ada-a45d-49b5-b61a-1e6ceaf9db2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fecaf3-5bf1-43c8-8d85-ab051c57d940",
        "cursor": {
          "ref": "e7a39d39-5c16-4eba-806c-5ae1119d4176",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "76b46d2a-3a5e-4f5f-8987-c6564613080c"
        },
        "item": {
          "id": "30fecaf3-5bf1-43c8-8d85-ab051c57d940",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d4776e75-389b-46c4-9b4c-929805662df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17266c62-7761-469e-9009-d21643a31619",
        "cursor": {
          "ref": "3f0fd3b9-5eb4-456c-9fee-e5b55e8392e0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7af7901c-290a-430b-8c09-fcbddef109f1"
        },
        "item": {
          "id": "17266c62-7761-469e-9009-d21643a31619",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3666da89-75c8-444d-841a-659c4b3d1823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd0d991-fc6d-45c7-9364-cc2070391d54",
        "cursor": {
          "ref": "ef35f171-10ee-4a68-83cf-d6d0947b1b47",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a0cc8e8f-3953-43cc-a6d2-0391ec7185c0"
        },
        "item": {
          "id": "dbd0d991-fc6d-45c7-9364-cc2070391d54",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5007b1f-de76-469e-89b8-57fd53b16f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3dfd80-b23b-4a50-9385-49a10bec2aab",
        "cursor": {
          "ref": "31d6c04b-2e22-4ede-aa42-0ebdaba44f6b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f001860b-e334-487f-a9f2-f455fcc54337"
        },
        "item": {
          "id": "3d3dfd80-b23b-4a50-9385-49a10bec2aab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "55eaaf0e-d348-4b75-81bc-ffb32ef7293f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db444f1-fcdd-47bc-9204-84263b68a20d",
        "cursor": {
          "ref": "827e8a4a-6e6f-4954-a8cc-ddfe3087f850",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6467e264-4461-4bbc-9dc0-edcd7a2a86ee"
        },
        "item": {
          "id": "2db444f1-fcdd-47bc-9204-84263b68a20d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dae9620c-600b-4d10-9fcc-63a822a49f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824d1dda-7e60-40d1-aef2-d2347473425a",
        "cursor": {
          "ref": "656cb2e9-40ca-4e67-9163-c5f7c33091be",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b1ef5380-6af3-4517-9714-52a483b2dd68"
        },
        "item": {
          "id": "824d1dda-7e60-40d1-aef2-d2347473425a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "404749f4-2f0f-4579-979b-71c52b0a13eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220e1f4-4939-4abc-9591-f17e50e540a5",
        "cursor": {
          "ref": "ee4908da-a810-4f5a-8625-2a4f4dd55a3f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "469a7caa-9ce9-4b03-9676-d68f8ddb1939"
        },
        "item": {
          "id": "f220e1f4-4939-4abc-9591-f17e50e540a5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9bdb9e7d-2515-4321-b708-021679514c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e256090-0f4d-4ae6-a300-997c10daee61",
        "cursor": {
          "ref": "62710ca9-7d6c-4322-8c14-c375015a6dcf",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b0dff740-1aa6-487f-b636-05b03e895d03"
        },
        "item": {
          "id": "6e256090-0f4d-4ae6-a300-997c10daee61",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fbee171f-47e5-4d91-84f7-aea8d4501187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a648115d-2ea3-42bb-8e5a-2b64a974869a",
        "cursor": {
          "ref": "13d2f642-5e48-4e2e-97ec-c8a3abce336e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "24148a72-46b8-4154-ba73-f2d342dac305"
        },
        "item": {
          "id": "a648115d-2ea3-42bb-8e5a-2b64a974869a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "175825fe-5988-4daa-b38b-15b1c1e1dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3291e3-ce31-430e-869a-19cf2e21d948",
        "cursor": {
          "ref": "427ccb8c-21a2-41ba-bf02-113428a61d9d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d13aeb90-ffc8-4645-870b-b8f34d3ba58c"
        },
        "item": {
          "id": "7b3291e3-ce31-430e-869a-19cf2e21d948",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b21b5706-cf9e-417c-bed4-07411f129cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6158a5-2aee-47d9-8b6d-28faa19daf2c",
        "cursor": {
          "ref": "804230cb-3dc4-49fc-9bbe-470f3143189c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "090a1a88-cd16-40ea-bc57-ee0420c9ac4e"
        },
        "item": {
          "id": "2e6158a5-2aee-47d9-8b6d-28faa19daf2c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3af4211-84f8-4429-83d2-23c884695a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d123e8cf-ca26-4620-8da3-1ab47cbc7a20",
        "cursor": {
          "ref": "8fb724d6-e1f1-463e-8abb-4db42497ab10",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9738aedb-b211-4e3a-879d-4be3dfa178c0"
        },
        "item": {
          "id": "d123e8cf-ca26-4620-8da3-1ab47cbc7a20",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8264ec6-7ad1-4008-9167-105d7590844e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2b2cd-82cd-41c0-88d6-8442f822c56a",
        "cursor": {
          "ref": "2075adfe-51f2-40c4-be0c-3ad4125fcb19",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "50182dec-3ce1-48ef-8aa7-ec33f5b308ff"
        },
        "item": {
          "id": "68a2b2cd-82cd-41c0-88d6-8442f822c56a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "35d9ad4f-68c2-4b1f-b158-edd2bcd011e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eb5ce8-065e-43c3-8040-ce5ac63b2bd5",
        "cursor": {
          "ref": "dc830291-6daf-47f9-86ee-96605266b2c7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d913c523-316d-4da9-8a03-2f0ad405783b"
        },
        "item": {
          "id": "10eb5ce8-065e-43c3-8040-ce5ac63b2bd5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e8ca39d8-b357-4ade-9ade-27eb0f1eaadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d168b16-5f5c-4121-b695-8cce0ee16030",
        "cursor": {
          "ref": "6a70cc69-272c-476e-b71d-45e820ec8512",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "59c09f45-f936-497d-8c64-78d352df8e8f"
        },
        "item": {
          "id": "9d168b16-5f5c-4121-b695-8cce0ee16030",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7962233a-6530-4d43-9a16-d3812c84c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20d30aa-cb98-4790-a56c-f78dc8434195",
        "cursor": {
          "ref": "d8538593-8490-4d1d-9ff4-98bc70491ee6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "94cdcf42-160a-4b75-a7b3-e7f24edf245d"
        },
        "item": {
          "id": "c20d30aa-cb98-4790-a56c-f78dc8434195",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8a31679c-77f7-4032-8e68-57f07700a273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9cbf2a-c92a-4944-904c-a71097f834bd",
        "cursor": {
          "ref": "b50bc6a2-8abc-4144-a6e4-c91ed502f5e7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3923ac19-01f2-4eb8-8614-55354240d706"
        },
        "item": {
          "id": "9e9cbf2a-c92a-4944-904c-a71097f834bd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7483e830-2e43-4ae1-a8c7-989a88b40ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfe3648-8eef-4ceb-beda-9a4efca0a98a",
        "cursor": {
          "ref": "47eddb60-2ad2-4585-9a1b-02a7ec7297b9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa1943bb-eb59-4967-89dc-749a9c4f39ea"
        },
        "item": {
          "id": "cdfe3648-8eef-4ceb-beda-9a4efca0a98a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "aff59fd6-a5e9-47bd-9b8d-5ff781028840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55613e74-e62c-4797-9e72-8c764b5b9a45",
        "cursor": {
          "ref": "2d26b3b3-ee01-44bf-978a-abf90371487d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2977b08b-ed2a-45ad-8442-fffb784023ba"
        },
        "item": {
          "id": "55613e74-e62c-4797-9e72-8c764b5b9a45",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b8baed6-a700-4051-b3cc-18d30dfecc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c10dc0-9c88-49cd-bc28-5fcac1104a0d",
        "cursor": {
          "ref": "7a40612c-896c-4d0f-b344-0751c5a73dd9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "80d6ef81-8cf0-4d79-8553-e4343b95a96b"
        },
        "item": {
          "id": "c0c10dc0-9c88-49cd-bc28-5fcac1104a0d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b03a256-c148-42e2-be1b-b9f7d37c7282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d78597-bcfb-4c76-9b8e-c4f391e1aa1c",
        "cursor": {
          "ref": "24915592-cb77-434c-8806-003c8eafd177",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4df43b5d-3379-4a61-a6e6-0174566fb8e6"
        },
        "item": {
          "id": "a2d78597-bcfb-4c76-9b8e-c4f391e1aa1c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "36fa8474-eb33-4927-8713-0999f94a55b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffcc84d-cbc8-48f9-a430-6dd6ec7864a9",
        "cursor": {
          "ref": "96a97c87-96ca-4d89-8885-5dcb293f1665",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b097f1c2-ba6a-4a3b-b5df-eb0a9971e2c1"
        },
        "item": {
          "id": "fffcc84d-cbc8-48f9-a430-6dd6ec7864a9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "507c661d-e19b-4730-a415-6a86b274ee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2074d5a-81ab-4c71-a99a-c3d0ea0f4d53",
        "cursor": {
          "ref": "e73751da-9d80-4e53-bc63-31ba59c4fd62",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "37b49cb5-d657-4165-983c-5c52627c50d5"
        },
        "item": {
          "id": "d2074d5a-81ab-4c71-a99a-c3d0ea0f4d53",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e7ac57e9-eab9-4a8e-ad1f-46a5817eef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d7dd2-08af-4dcd-9898-9eccbda3da18",
        "cursor": {
          "ref": "6dfd8b0b-252d-41fe-b9c6-d0cc414f00a6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "11cc1002-c138-4e7a-ab08-dce32b6569a8"
        },
        "item": {
          "id": "c03d7dd2-08af-4dcd-9898-9eccbda3da18",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "445d28c3-5be5-44bb-8c42-221f87a7a4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857e8d39-bc55-4cdd-b33e-03cd22376ffa",
        "cursor": {
          "ref": "42257c42-566b-4979-a85c-f7dce0498620",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ebf317a-ec10-46ce-91ee-efec56bf6b9f"
        },
        "item": {
          "id": "857e8d39-bc55-4cdd-b33e-03cd22376ffa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ff08d168-0f55-4ad8-9c47-dae1e45a570b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e07106b-42cf-4ff4-9f08-33fbf84f81a2",
        "cursor": {
          "ref": "9e555ef5-e77f-45ba-b7b7-77515d33c3d4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1ec3b6e0-4d35-4c7e-a00e-5f3d1fc04b53"
        },
        "item": {
          "id": "7e07106b-42cf-4ff4-9f08-33fbf84f81a2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f5a05f7a-7db6-4e8a-b6dd-e7b5cd5630a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2ef96-f252-45db-a052-166e52ffa16c",
        "cursor": {
          "ref": "5f4b6712-b8a8-4250-97a7-36ef32c20036",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eac9f054-ef6d-4605-9e08-d9cbbc6d6366"
        },
        "item": {
          "id": "9cf2ef96-f252-45db-a052-166e52ffa16c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1341a4c6-2f46-4e4e-baa0-7cd8b87d2e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc0b7a4-0b59-49f3-b0b4-10993d191bea",
        "cursor": {
          "ref": "4e4a0c8c-b42d-430e-99d8-66f0295f4dc6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c9f54878-1263-4339-9ef1-83db6a8f344d"
        },
        "item": {
          "id": "efc0b7a4-0b59-49f3-b0b4-10993d191bea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e664e926-e993-4065-bae3-20de4b9b7c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d1e80-7459-4209-90f3-f4f709e9278c",
        "cursor": {
          "ref": "86a88540-774f-4174-8e1b-961def806667",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a487403e-91de-482b-9061-d97f7a725605"
        },
        "item": {
          "id": "ab5d1e80-7459-4209-90f3-f4f709e9278c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ce5a0c63-4072-4ac9-b379-83f868ebf964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaff91f-2505-4f5a-b7a3-1e6711b2d9e8",
        "cursor": {
          "ref": "f4297c53-2943-462a-8c19-54530eaba444",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8f84843b-6cf6-4247-a5dc-b073c8fd8cbb"
        },
        "item": {
          "id": "bdaff91f-2505-4f5a-b7a3-1e6711b2d9e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72cc15ab-9494-43a3-a5a8-b3942606a785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aba631-9fcf-482e-8145-acf74648417a",
        "cursor": {
          "ref": "eae71c27-daf3-4adc-9ece-67b1a2618923",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ca7deed3-05a9-4b45-bdef-6c5e18b81c02"
        },
        "item": {
          "id": "b3aba631-9fcf-482e-8145-acf74648417a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ca712b99-6153-4dfd-ae0a-bcb41bad3d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ffb20a-908c-4b3d-aed7-fa1bf5c83f98",
        "cursor": {
          "ref": "277341c3-7618-4422-9b72-25b2cae91ab9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "965ee572-6b88-4740-9e31-6cce4b04640c"
        },
        "item": {
          "id": "e0ffb20a-908c-4b3d-aed7-fa1bf5c83f98",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f8254383-b50c-4acd-b82d-b7ce4024fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51defc68-650c-4172-ab63-5555a6e29195",
        "cursor": {
          "ref": "9489e037-728c-463a-b8a2-627c9126dcf7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31ebbdda-8990-445b-bb1d-e1bdfb5087d0"
        },
        "item": {
          "id": "51defc68-650c-4172-ab63-5555a6e29195",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f449124b-23fa-4ef6-b7d0-c3fb3e5b1de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc707f0d-373f-4fdd-b52a-cee3f943ac1e",
        "cursor": {
          "ref": "d3ab240f-ac98-488e-bf54-d704236cdbff",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bbf00839-a4a3-446e-a901-605992f3fc3b"
        },
        "item": {
          "id": "dc707f0d-373f-4fdd-b52a-cee3f943ac1e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f2dfa39a-e349-4a1c-8a30-23a8cf6aed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a08742-4f8d-458c-9eff-12f049b79773",
        "cursor": {
          "ref": "337cc8a0-62fd-4061-9299-8cd6472d4b27",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d4f3bc6-00ed-43de-859b-76eea4b1c1b8"
        },
        "item": {
          "id": "70a08742-4f8d-458c-9eff-12f049b79773",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2a15fec1-1170-4e40-bc4a-efd4bdc99575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b0f9cf-f272-433b-9da1-ee2f47862ea5",
        "cursor": {
          "ref": "227eca75-4935-47fd-b8d2-bd40a658c44b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4ae94cfd-707f-4469-8b71-47ed2e11883a"
        },
        "item": {
          "id": "e4b0f9cf-f272-433b-9da1-ee2f47862ea5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a8ba227d-b243-46f1-802a-26bb130eb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a629ac2-e865-4026-a4c0-de78987c26ad",
        "cursor": {
          "ref": "48a95aa8-6b9f-4616-84bb-8ea090692345",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "130ae37b-1961-4131-9f9f-3c5d754f3495"
        },
        "item": {
          "id": "1a629ac2-e865-4026-a4c0-de78987c26ad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "05c8d835-1d0e-4213-b253-8b9e986f16a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83f5381-70b2-4bfa-b88b-6d3e885afa78",
        "cursor": {
          "ref": "da1dde69-fb9b-4b8e-a5f0-f67482128970",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9576bf83-e099-4b0b-b4e6-6b53a87b77dd"
        },
        "item": {
          "id": "c83f5381-70b2-4bfa-b88b-6d3e885afa78",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc4fbf2e-af04-4ece-b2a8-0b91e9088a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2101a97c-0e29-42d2-a50e-5050af160d9f",
        "cursor": {
          "ref": "410ce9ce-43c5-46f5-9b5f-55fdfa9291d1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1da935cc-3cff-4950-8b68-4e90f40cb5bb"
        },
        "item": {
          "id": "2101a97c-0e29-42d2-a50e-5050af160d9f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6ffa8df-7df6-4058-bc03-8a516451bf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9c7fd1-1618-4732-a9fa-6d321997d780",
        "cursor": {
          "ref": "48dd7502-3906-4c4d-8862-3acde79183a6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de7a4c27-bfd7-4b77-a622-b7fde3fe60a7"
        },
        "item": {
          "id": "2f9c7fd1-1618-4732-a9fa-6d321997d780",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd5585f4-8992-443a-b90f-95505ddd7c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35c3ee1-b93f-4360-8f5d-4db4d4035000",
        "cursor": {
          "ref": "20339f82-c733-43ba-bf61-88dca49e29c1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf353198-8ab8-46f0-ada4-28b3e262c63e"
        },
        "item": {
          "id": "f35c3ee1-b93f-4360-8f5d-4db4d4035000",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19cc8b57-49f5-4c1c-9015-512f8fa781cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aabdf7-732a-43c6-9301-45343da0f9c6",
        "cursor": {
          "ref": "7eed85fc-3239-4eb5-af73-ceba1ed94924",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8430fd3e-413a-46c2-b6fd-7df42df515c6"
        },
        "item": {
          "id": "c6aabdf7-732a-43c6-9301-45343da0f9c6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82cab820-afaf-4212-9162-345964887588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a991219-2ae6-4e54-bace-0ebc2762d953",
        "cursor": {
          "ref": "8c2d18e6-9785-45a8-9aa9-f76d0cafb786",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0feaf316-35e7-461c-bbce-e3059420941f"
        },
        "item": {
          "id": "0a991219-2ae6-4e54-bace-0ebc2762d953",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b709cf4a-8118-46c7-b9a6-6886fd50cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5668d071-03de-4ef0-bf1c-91190913f68f",
        "cursor": {
          "ref": "ea14ff7b-1f1a-4ac0-9472-b51bf8e7b4df",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b8ba2db-3686-44d5-8770-430b82c32be3"
        },
        "item": {
          "id": "5668d071-03de-4ef0-bf1c-91190913f68f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d31721ac-1ed7-4e9f-abf0-f4c46d98d134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871b16f9-77e4-46ae-b096-5447ef6ef408",
        "cursor": {
          "ref": "516026c6-9b6e-49bb-80a1-b5d7306b5512",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2cf68277-342b-44b0-a4da-54b9bb988c6d"
        },
        "item": {
          "id": "871b16f9-77e4-46ae-b096-5447ef6ef408",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "223bdeb9-f393-40ca-b0a2-53a33e561be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374c8be1-90de-4216-9dd1-ead1104a24c0",
        "cursor": {
          "ref": "29ec30c2-edab-4c55-a7d7-203b073980f6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e3d3d4a8-6cec-4b36-a905-b9bc2991ae34"
        },
        "item": {
          "id": "374c8be1-90de-4216-9dd1-ead1104a24c0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "41d76631-d65d-41b2-bd60-9e8589f88c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feffac0d-a12a-4f58-873b-8bc94b7efce0",
        "cursor": {
          "ref": "67fe284f-2ae9-4e41-b234-60e89d2b64dd",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d29d0310-a323-4271-8c2a-459e42f15fec"
        },
        "item": {
          "id": "feffac0d-a12a-4f58-873b-8bc94b7efce0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "39426e6c-8d8b-4527-9d47-6dc03053243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a7416d-5852-4530-9b91-adacc37a3070",
        "cursor": {
          "ref": "8242e6b0-52c4-428f-8a56-19569f6734c6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a49b9c9-a115-4759-8251-b740e5abde4a"
        },
        "item": {
          "id": "33a7416d-5852-4530-9b91-adacc37a3070",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "71c82b94-9cc9-491c-99e1-b2e4d1062364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56b3a84-a09b-4693-99a9-44ba9b5a79d3",
        "cursor": {
          "ref": "0e208d42-a0cc-4726-8818-3d787bad9743",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "60af2ea0-0e71-4b4b-a7d8-a8341e386c28"
        },
        "item": {
          "id": "b56b3a84-a09b-4693-99a9-44ba9b5a79d3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0bef447a-7b8e-4994-bb7a-5c45ca4c8d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d5dde1-0de1-47d4-a006-4935a3d29a75",
        "cursor": {
          "ref": "3b9bc0c6-fcf6-4ead-9c6c-e0404bddc0aa",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3a2be522-f018-43ce-8f4a-e77c36652176"
        },
        "item": {
          "id": "59d5dde1-0de1-47d4-a006-4935a3d29a75",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cf4ab724-d81d-45b6-9c49-c28af63c1367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb52c2cd-9d8a-49e6-a5fe-a1073ab3328d",
        "cursor": {
          "ref": "9311a5c2-e0bd-4024-a46a-a3588db4f5c6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3714638c-4ec4-4e27-b546-955f8a3d3b75"
        },
        "item": {
          "id": "fb52c2cd-9d8a-49e6-a5fe-a1073ab3328d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5e097390-63fb-44ff-b133-747acceafbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24eb928-04e0-46c5-8b3f-57da15d18ad4",
        "cursor": {
          "ref": "36f4b975-5c86-4377-a968-26b5c7a28731",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "35cf1bc7-d35f-4938-9949-b81f794a5940"
        },
        "item": {
          "id": "d24eb928-04e0-46c5-8b3f-57da15d18ad4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab2042bc-5ed9-457f-848c-0d97704d2593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311d0b2-7af2-4264-997a-ae6e82e1e733",
        "cursor": {
          "ref": "775e6b3e-5b0a-43a7-8a7c-98ce35a5eb5e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "12dabaf0-ed98-4ad9-adcd-50e75c7264dd"
        },
        "item": {
          "id": "4311d0b2-7af2-4264-997a-ae6e82e1e733",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f90312ae-d716-44a9-946c-93d0ca024c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67af3623-ee67-485a-a756-e2283de070c7",
        "cursor": {
          "ref": "67097e4a-a3e0-4be8-be3f-00014c84e6ec",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "eed8500c-3fdf-437b-91e3-35a7e5e1764a"
        },
        "item": {
          "id": "67af3623-ee67-485a-a756-e2283de070c7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d5d906dd-36e8-459b-9eaa-f072af4842e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939859f-b718-4dd2-a7e0-da27aff75998",
        "cursor": {
          "ref": "60f143e0-e45d-4e1c-8b04-7bcda6c149a8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c5ce2c59-18df-4213-9177-213fdd9cd088"
        },
        "item": {
          "id": "d939859f-b718-4dd2-a7e0-da27aff75998",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "69657960-1eab-486d-a370-cf34271f148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ac0128-2a02-431f-b6d4-c6df88aebb94",
        "cursor": {
          "ref": "eae18efb-e1bb-458b-bc49-04cc73a46f41",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a58d024d-4bd0-47e8-8ef4-97cc679e0037"
        },
        "item": {
          "id": "d3ac0128-2a02-431f-b6d4-c6df88aebb94",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1e5dc66f-2579-4e7c-b83b-d2c1dca1685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc85e2-77d8-467c-9fed-ebb12664fb05",
        "cursor": {
          "ref": "041502b4-60f9-40ec-bf09-f28fe83a1626",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf62ec35-3550-4c99-ba23-b0192e0da946"
        },
        "item": {
          "id": "79bc85e2-77d8-467c-9fed-ebb12664fb05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c1cdaf4-4c41-4b52-a5a9-2f58d908e4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124f0d90-86fc-4888-b1c2-9f893d9e7196",
        "cursor": {
          "ref": "453417ef-3369-4b7f-8c2d-b230c013a6d6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "597227fc-657b-4cd5-9df7-9edd8672d548"
        },
        "item": {
          "id": "124f0d90-86fc-4888-b1c2-9f893d9e7196",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "14fe0aac-bbd2-4195-9e39-62cd7854767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a969bec-69a1-43f7-9d9a-ffe83ce943e5",
        "cursor": {
          "ref": "fabeb8c6-9f0b-44d4-981e-9f0d4fec7d7d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "eecabd59-0958-4f4a-ab9e-186588159623"
        },
        "item": {
          "id": "4a969bec-69a1-43f7-9d9a-ffe83ce943e5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "04a4b008-9774-4f3b-a33b-e0dc57de2e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47930896-bd16-411e-8e6d-fbb3370752ce",
        "cursor": {
          "ref": "3ee5097f-d971-4019-ad54-794553e14aea",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9bfac66f-bd73-4ccb-a699-d0f80a29200a"
        },
        "item": {
          "id": "47930896-bd16-411e-8e6d-fbb3370752ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "509698bd-96aa-47eb-8e6c-2942e132ad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc72a3af-0db0-4dd6-a380-c60f6f2a4d6c",
        "cursor": {
          "ref": "8b38381c-8939-4c17-bb8e-800b05f31016",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9cfca44e-34ff-4371-a4d6-2c345390f0c8"
        },
        "item": {
          "id": "bc72a3af-0db0-4dd6-a380-c60f6f2a4d6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a495e412-1f29-4e98-a3db-595e31cb4e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c6c300-bdbd-4ea0-8cb3-dc0fa85f51dd",
        "cursor": {
          "ref": "ffabb9d1-7141-4223-b47b-daaa980884cf",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "78078d36-2b95-4b1e-aee6-79a22b3b2de2"
        },
        "item": {
          "id": "87c6c300-bdbd-4ea0-8cb3-dc0fa85f51dd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d12e2544-6486-4a08-b62b-a957fb984282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0487a20d-4512-4bd1-8e0c-638a464e55c0",
        "cursor": {
          "ref": "c151faaf-1a22-4eab-9ee1-98c8e81ed9c3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a790fd0d-66fb-4250-b0d3-05c43ad16d0f"
        },
        "item": {
          "id": "0487a20d-4512-4bd1-8e0c-638a464e55c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f94e96e7-7b2b-47b2-9d54-50aad1344a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e7243d-6867-4630-97ef-273d82133543",
        "cursor": {
          "ref": "3182e812-6783-419f-8d21-1c55418dce9b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a69b6377-6554-40f5-806a-a107868c10e0"
        },
        "item": {
          "id": "33e7243d-6867-4630-97ef-273d82133543",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4d9ba865-b367-4e1f-8614-73f1328b783b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c41e10-78fa-4aea-84e6-95f0874bee8b",
        "cursor": {
          "ref": "33a0f573-7263-41a4-a449-79400ca31aed",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b406fdfd-7800-41ce-a3f5-e691c81dd0ee"
        },
        "item": {
          "id": "23c41e10-78fa-4aea-84e6-95f0874bee8b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5c54bab7-127a-4a18-b84e-c0cfcfa215e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099b6dd8-1b4c-4e1a-ac85-cc88ee72ac6d",
        "cursor": {
          "ref": "09ecab1c-0e01-4cf7-bacb-4c8f9abf7743",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "908cfced-0c3d-46e8-8c70-6c812035ac08"
        },
        "item": {
          "id": "099b6dd8-1b4c-4e1a-ac85-cc88ee72ac6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "526b6cfe-d315-464b-8725-7179e138602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b3b435-aef8-47f4-b378-dbef6e3fe834",
        "cursor": {
          "ref": "1f08dcd4-4cf4-4404-b161-8de293c17bc1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d47a54d0-5602-4fc1-9c28-50a7f2a32767"
        },
        "item": {
          "id": "52b3b435-aef8-47f4-b378-dbef6e3fe834",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4e30fed-9226-4370-ac16-2f6c84c90226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efa323b-317f-460f-8834-0fe8bc0ca92f",
        "cursor": {
          "ref": "01eca29b-425b-4fe1-a213-c5d960e3ee2f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0fed757a-44b8-4b0d-880a-574084115a06"
        },
        "item": {
          "id": "7efa323b-317f-460f-8834-0fe8bc0ca92f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "660a7844-0635-44a4-9507-39397b8b19b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ddb62-ea10-4890-9df8-481215b1bd0d",
        "cursor": {
          "ref": "315fb2c7-50cc-48a5-a669-721c4debaf87",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76f58428-2425-481e-8193-c51bbbd6391e"
        },
        "item": {
          "id": "2a6ddb62-ea10-4890-9df8-481215b1bd0d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "09cfd568-60a7-4fb7-9ec8-0e987061aade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1651d278-6ace-44b7-bbe2-0bda1240fca5",
        "cursor": {
          "ref": "c9b1b4be-2c27-4b48-8837-1c3720047f0b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b69690b8-31ac-40d2-9ea4-58351d43de90"
        },
        "item": {
          "id": "1651d278-6ace-44b7-bbe2-0bda1240fca5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fa6267e8-49d4-402b-b351-c693b98c759e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e002a5d6-1610-4e1c-ac39-932b2fe08586",
        "cursor": {
          "ref": "318bc85d-00d6-4739-93ee-49314857ef22",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e47836e9-90ec-457b-af6d-cb6e9b3d5b0e"
        },
        "item": {
          "id": "e002a5d6-1610-4e1c-ac39-932b2fe08586",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6df15288-5655-458d-ad19-9a18d4557218",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78937be3-4de1-4f97-9a0a-1b8d910a8d50",
        "cursor": {
          "ref": "fe308329-a874-4a57-ac94-86d5c4b7e257",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ddeba24f-2309-470e-8a2c-133566f579da"
        },
        "item": {
          "id": "78937be3-4de1-4f97-9a0a-1b8d910a8d50",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96afd9f3-fd70-4148-a370-31ae562c635e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb10ea7-78cf-4623-8969-130823172d1c",
        "cursor": {
          "ref": "25be3a87-31d3-4e78-a222-17cf4317400d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "250cc817-2a91-40ab-b487-1048aabbb8be"
        },
        "item": {
          "id": "dbb10ea7-78cf-4623-8969-130823172d1c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "31b96a8c-6924-4b9c-a8e2-356a11cc55db",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5266378-e0e9-4b96-9844-ecd1a11ae050",
        "cursor": {
          "ref": "e2b80397-7013-4f87-b94c-6d2eb4fd699a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da9adb97-6bf0-4a9c-a9f1-60acaa5922a8"
        },
        "item": {
          "id": "e5266378-e0e9-4b96-9844-ecd1a11ae050",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c0ac8885-f8da-42ad-b508-d711d4e7ee46",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573ab0f-5104-48dc-b0e2-2742641ea5e7",
        "cursor": {
          "ref": "3bbdadd1-f179-4ebf-9150-a9a32c8d10b8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f531b325-a71b-429d-ba3f-c146247928e0"
        },
        "item": {
          "id": "6573ab0f-5104-48dc-b0e2-2742641ea5e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "876e26da-ea4e-476f-bcf5-089ac32fc433",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573ab0f-5104-48dc-b0e2-2742641ea5e7",
        "cursor": {
          "ref": "3bbdadd1-f179-4ebf-9150-a9a32c8d10b8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f531b325-a71b-429d-ba3f-c146247928e0"
        },
        "item": {
          "id": "6573ab0f-5104-48dc-b0e2-2742641ea5e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "876e26da-ea4e-476f-bcf5-089ac32fc433",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9410a04c-3a6c-411e-a9e2-48458d18e946",
        "cursor": {
          "ref": "0b7ecdba-6f15-4eed-a044-257ee642bde8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "92667127-38da-438f-afb3-03728de9ab2f"
        },
        "item": {
          "id": "9410a04c-3a6c-411e-a9e2-48458d18e946",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2002be72-5a8a-4134-a2e5-ebcd0c30e373",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39c24d6-471a-4f88-b03a-540937e1ebea",
        "cursor": {
          "ref": "abf7424c-acba-4f11-a793-9030737906b4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a2d70cc1-f21b-40e8-b9ae-3752a2766a65"
        },
        "item": {
          "id": "c39c24d6-471a-4f88-b03a-540937e1ebea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e0dabb47-aaf1-4592-a808-66dba911a986",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}