{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a94b5c1f-d6f7-499f-a1ea-9df17b41057a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "844a8bb6-ad68-49a5-bcb7-3939167d7113",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4eef5fe-c68d-46df-a278-250452dd2bb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "323f8ee9-3ec2-4c04-adc7-29ae345ec5b6"
                }
              }
            ]
          },
          {
            "id": "d304e5ad-bdcd-4683-92dd-ecec1850d327",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37004350-a747-4f14-99f2-172a088000ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e98d2241-0cfd-4adc-a175-8243ce0bd3bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4f1a4101-789c-4c22-99a4-5eb3d792bbb6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c71f8e55-d0e6-408c-a71b-8e9f6def68ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72ec806e-ef49-4f9a-969a-ed52acadb4e8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ec66a11-9735-45e8-acfc-845147d6ebfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0aebdacc-4708-43f8-8b87-94d3f88f906e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1daedcd9-5008-432d-b4f4-e50823ae0496",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5106b87-a2fb-4cdd-b144-420bfe41ef48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "023d9d88-7878-4822-95ec-811b35d0e6cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c815ee92-4def-46d9-9e2d-40ca758d9117"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "651e1177-1144-4b7f-b118-d2992bd56e29",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cfe597d7-215e-45cb-985d-6b32ebfca9ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d2ec462-2069-444e-9a66-fd7d2df37ab8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48dfa33c-ecfd-4061-9e5c-d35a8e2de1f9"
            }
          }
        ]
      },
      {
        "id": "d4b45578-bcda-4785-8aae-54abf35eba5e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "19f27e13-f4d8-43af-a09d-efc2e0abdb6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4950508-f8dd-4905-9422-49fe05bc2148",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "919d1fb9-c7f8-420b-bf0d-9e52e8a64d5b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179b1f2b-d79d-4e2b-b56b-811cba63c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73d715dd-b6c1-4808-ae0e-e52cdd372f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c073c44f-b953-4430-b5a0-7aa0beaacb28",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1f480-2b37-44ca-a5cc-875834473d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aff5644-4fe1-47c4-bbf2-d55b0e0786b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda6ba02-7402-4439-8eb3-fd886c00aadc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0c66ab-8ed5-471a-bbd3-c5365b78359e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "237c942c-dae5-4c15-876e-10ebb1f3ed24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ea2e1da-0cf5-44c4-a6b0-e5245ba4f112",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "827bbf8f-f1da-4094-adbe-cb3441cfa280",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dd7533-19ce-45c6-a110-27510b1020c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e61d0c1-0af9-4c17-bb7e-2869b5165f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae97ae27-cf8c-45ea-8b8f-4feaada8b8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3859aac-0f6c-40af-ae57-16bb432bcc07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e05cc9a-dc02-42c3-b61e-f01c05766bb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b32d78bf-e589-4b73-bb62-1ea88106dd33",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79b9e184-11a4-471f-96d0-7fea6eb404b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8da5b5e8-d890-432c-9011-fac60da06548"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14b818f0-fa07-4cfb-a794-4cd03051084c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2af02676-c175-4684-ba7a-bfa9e0a77752"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77479270-f115-4497-9433-97ae45aec9e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61d12e10-8173-4515-98c7-a83910716b9d"
            }
          }
        ]
      },
      {
        "id": "b73ea660-8068-4bf0-843d-d206d1210629",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ad8f4c4b-97ad-4952-babf-8294ccc997e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fa296af-991a-4a2c-aae3-c6f67154c5a1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d67e6032-59df-460b-a342-63448f13c7d8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75682c2b-a7bd-47d9-aa9a-0d42d40e160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ff55e0-f026-4490-97d9-12a1b59e02b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c98521-6c88-42e9-874d-351d21bbe771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f218d7b9-2940-4c96-b3c6-efd38acb0a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b25118a-1452-43aa-a03a-44c2155c21ba",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c533e-7272-4926-8f10-f24f24b7d305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66db6abf-9639-41ef-bfd0-1eb6393167c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212e640d-c0f7-4d0e-8196-921b71ec69c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9e6f543-2998-456e-953f-734cd788c4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7532ba03-64a1-4248-8f60-6170540463d3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c654c36c-ee00-440f-bbd4-a1d80319d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e5599b-68e2-469d-8e38-a4ac775cab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aa3795-82a1-4d74-a0e5-6f0befc9e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "092d83d0-e9ac-4d76-93f5-fa0384adc9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd042927-f7d0-4d5e-b288-ca52f15d7bd0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697d7e65-1c76-4202-a470-e29a2f28e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674f14c-34cb-4c23-8698-097c7b915659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ba41a7-7d55-49e0-80f6-2ca8b01aa56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65328dab-e810-425e-9d20-c86d4acc523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b5d71-f9dc-41a9-aa09-b2ad38c6ca29",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e1c8d9-13b5-4944-9925-180a1fc81a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f70b96-28f5-4eb7-b86a-3472c686bc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aecbad4-dc21-486f-b519-00124bdbbfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91a122f1-15a7-405c-a007-4a2e2bcd52d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703ad5db-3898-4892-97e1-04cb29427104",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddab4b7c-42cb-4419-9c77-db773d012c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f6e4d2-c5bf-472f-9d02-d45cf2481298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0019e47c-1013-45b9-b01a-01c817aee77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce626cd-8f38-439f-927a-e0dca552d888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6796e77a-eb60-4e3c-a87f-c587a3ce3789",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555cc8d3-e875-4f6f-ac8b-daff27f531a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c7b3d1-5d35-4ccc-ab44-2a2c1e1836e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82206068-6250-4104-bb9d-ebaebaed4a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea9c154-8163-43ad-89d7-5e3217baf3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c547d98-4702-4567-965a-b424fd9af414",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a3a0c-248d-4b42-8fad-c792d102cb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4610c85d-5a88-4429-a806-9c9d6d52c065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d7776-2c3f-4722-a693-8861741ef489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef4fc2b7-70ad-4fe3-a296-5b43e062b6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d8554a-4179-47ec-8f95-152af67eb0a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c7738-ea3d-475a-b55c-3333e025aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa42fedc-49a7-438d-960b-a87c5337c175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98917012-450c-4ea2-ba4e-187a7eb83e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66a18bc6-3e13-4181-80b0-04845f4eb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f39e7c-65ad-455d-8a6d-8c60f1de2c00",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9753eae-04e3-4296-b386-b7b256cacbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b212ff49-1634-4b72-a01c-99e42181becc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6731acf-af3e-4f6c-8e8f-d29bfc732eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c055c791-a4f6-4ddf-928a-6978a670e086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8e538d-f0b9-4731-8a7d-6828de4a93e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b101ff-bf7d-490d-9f00-e1bb6b46bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c86383-d66a-439f-b2ed-11409cfea160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2703a0d5-e18b-4d60-9516-5779edff765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66bd5b33-ca51-4d50-a2ac-5f12b8f1ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de7aaa-33b8-457f-9491-82dfd374ad90",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce61185e-80c3-4162-b975-17f09e4a04e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd1d8ba-bea5-43e2-a86a-155a25fc615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91cd22b-ba13-4228-b487-5577817eee57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76e81ec4-75d9-48b5-9f54-9b6b10980f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae7dd06-348a-4ff0-959a-560199bf9e3b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e379fe4-120a-4b52-914f-e59cd173e77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee70c80-5911-44c8-8a6a-2df1a7767787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01f01d-d77f-4600-abad-2fc111ee50db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dffff3d7-081c-46dc-8dc0-37ee00e95cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b1fd5d-148b-4e24-8fff-4c7fde612b7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d78b5-dff2-4c6c-a67d-af59881268fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3f4530-ab67-4f03-9ebe-08051867f596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2446249-3f0c-47e0-98f1-b0cdcaec8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebd24b63-7b36-4d72-9d44-8e5953f549dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f835a89e-55bc-477f-b552-cbebbdf91dc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33122d54-97da-47c5-beab-faf2b6beaad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54bac8e-1871-432b-8e85-368703180534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09d6909-4500-4ad6-bb47-d41d2eefdbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccf36469-a01b-4c2b-9abf-afc921227d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c944ada3-7ac8-4df7-9e0a-b4bbb0f7d251",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33cbce0-5892-4601-a8be-a47ccb4df29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68784d5a-cf98-47fa-8f7d-c7ec4ed1a1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db567e-899f-4ee7-aab3-d9ba19300eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d3b5496-fd01-45a5-83fb-16b492654dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f83c3b-61f8-4e80-9531-8a6bf2ad542d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b362cfd2-cf8c-4187-9d87-9638d159bad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8796f228-4efa-420b-9a66-7ef206d561fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ffcb0d-2b8e-4d97-8998-a0f60a8bdce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9317aa7c-34f1-41db-b27e-aa0e459b8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e1394a-d68c-495a-9cd7-b16ef46ddb2b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e8d467-ec6c-43a6-b65c-1ce0cd42feaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a99b75-c166-4372-a27d-f0250322c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfafa9ea-c129-450f-986c-a567a7f139cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2d4494-8f4d-44f3-8eae-8eeff65ec6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f320d4-3694-4bda-b159-f09c71aba3bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b49bd3-e782-44d4-811e-eba6d6ecb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb9c15f-7106-47f6-a789-b35d9dc0ed8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c1a772-ef51-48dc-80c0-aa3626c942e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c18911b-a012-4042-84fe-95426859acb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a04346c-02e6-4dc1-8129-70d8d6172f8e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ac04d-a575-4072-91f9-ab0c2487419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456732d0-b997-4799-8f50-0e2e10de08cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e518dd8b-cb37-46bd-835f-8b680e0ab5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd1cf0f-8dfa-403a-b588-df9fa2d8ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4ee43f-b3d8-4f23-ac80-e7b053a16729",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6180288c-3bd2-410d-90a1-2b2756589857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089a4851-2338-41cd-a895-174bfe1d2586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9e6694-fb9c-47ca-9f29-1cac7d8ae067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c4e429-5d1d-4fb3-8f61-4229377dfa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10427043-3327-4535-acc2-48811236d247",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e556ebaf-915a-41f7-a43d-a3fb48e4325f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bbba00-32fc-4773-b0ac-8ca09c8aa0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf0cec5-8b06-4c84-9aa1-64867cdeede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e363f6-2cb8-4996-b34c-ae8de8dcefac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a689fab-88af-4aab-ae0e-e5573c99c7c5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4fe37d-6b4c-4856-b630-06028644a25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fda4388-27d7-4d8f-9b23-3e943609b6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f6d4c-1cec-4e8a-917e-7935bd597f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b96cbfe3-2b69-4191-abaf-76241cb26c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7cfc69-2612-4706-9539-18b03b11c6b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9085efe6-416a-44a5-8900-4df95b36b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf139379-305c-4526-9c85-46e615b56810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ca9ac3-557f-4f1b-beae-da9de0befc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6cbe4a-9841-470d-a467-bc70f028023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b8bee6-481d-4bed-b40a-3fada82cb4aa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caedfb02-3899-4bb1-acf5-7ae793fc9833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555598d1-723f-4b09-991b-795c42677a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b946c3a1-cb4d-4124-a48e-9f3bf2a69eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1a8218-dfe9-45fb-97a3-f14b4243cc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a48be39-14d4-4b47-a265-a4d8e5ccc039",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f21d44-93b0-4071-8bd0-30a67e34fa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea6fcc8-5a62-45d9-9fce-670716800740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c163892-c21b-49a7-b3bc-1607b61879c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce948b1b-1f0a-40f8-9705-c5127b8163c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9289aad-9005-4db6-a1b3-2b4cef667979",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a942428d-02d4-4100-a9a2-397006dcfe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ef75e6-e4f9-44f3-8f55-fa23417d8a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3980af1d-ce81-454a-a385-f74d6dd8c636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbef8cf7-2bcf-4428-a272-58232fec511e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e31b056-09bd-4847-a3d2-c13fae7459f4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b692bd-317f-4c0c-92ad-ca3c21447fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb569ea-bd06-4c64-bd85-b1153813d1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9a3875-dd95-4b47-a888-5100079453fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d709c9f-7bd7-4f02-bc96-6a93a19761fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b1d8b8-a512-436e-97f3-6fc798a92cec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d639812-be1e-4fd5-a24a-974426f1bf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6dd7e5-191c-44ef-a555-f4399c3f36d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb51c0-beb8-4012-bd2a-954b91487a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df9f9ae-43f1-46d4-aa0a-47c36ced1fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5f7434-bf60-4828-88bb-c64cae34f56e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a3330b-73ff-45a7-918f-96cdc865ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49811b61-fb3a-4435-bf21-be08ff698bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fd7063-0e52-4c07-8d89-c027c1d8e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "729d1bff-a486-4a22-b30b-ff28f7499320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd49011-ea34-4717-8c1b-377980a1a40d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470ac77d-3bc1-4428-9a9c-5cf79e3fa9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5724c23a-80fe-4b77-95b6-a6caf2ea7e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644644ec-d5ab-4ff2-9bd5-8531e0b98e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01435e66-3bf2-49b4-afbb-8229198123bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80430217-170d-40d5-a698-6ecb622a22a9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be745a-cdbe-4e00-9caf-0d97b4e99566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a8963-0057-4e4f-9f31-60b5e1f1ed7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f75ad29-75e4-44bd-8e5d-f07b8596e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "776f109e-f21a-49bf-8d07-2ef6e3cdbe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10abf324-156b-43ab-9b59-6291048884bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bb9ced-ce27-4373-8227-7b4234cd137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d225f6-e3fe-4941-ab22-f3c60aa26e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fb07d3-67ba-4840-9b91-4119e86840cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53e4e32-d642-4ef6-908c-314dc617b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d5764a-9db7-4a9d-81c4-71b9015f3d49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9739a1bc-732a-4bbd-aa09-1e449cfac3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bb61ee-a964-43b7-9de4-91217487732a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3368c0-0dd2-4441-bb12-5e313ee63b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "653edc47-5321-47d5-bed3-7157967892c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30212b9-b0b0-44d3-bf6c-d985e88199aa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd40ba0-791c-464c-a74b-1185918b3707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b766fc-b64f-4050-8131-dcb850f2d515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d787604-5c47-4dfa-90d3-3ced595db9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc9ec14-4899-420b-b2f2-0e678a92b158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4026497-a997-459a-ad5d-e155d0914447",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f22ddb-cb57-49ee-88e5-de50004dd012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78548862-0176-44de-bfde-d8a65815ec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6495ec6-cb48-4756-b6f8-45f9793ba5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98202fb0-6ad9-4e5f-b033-406f836751d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff184a-386d-48e2-850c-025242b22bba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1de4ac-c2a8-4de2-899b-9341b42896aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff47644-c06d-42d3-b693-873b8dc535e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9381cc9-751f-4600-9cc7-4f24ed086c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dddb95d7-2097-48ab-a692-41707ff15c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe3ca3f-38ea-4c77-89db-899d9947332a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33356d4-de6b-489b-bcc8-5b07ce5f50f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7248e152-4575-4b92-97d2-05654d590643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f5b25-97dd-4c3a-b3fc-99d156c0a7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4325e4f-7c37-498a-a7bf-5df0ce1da241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bbc380-6b4d-4932-b30f-45bc21d810e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84790856-8d83-47b6-a9fe-e79f1e5367ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa5a241-a6bf-4842-b159-2dac8c56fe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92473229-d0eb-463c-878d-e09734b36ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f49197b0-c948-4b8e-9d28-76b4bb6244e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e491d89-ad4e-456b-831d-69d16ec65582",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b152e6-22cf-482d-a0c7-4e0206f21ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e745e294-1686-4f25-ad5b-f41741fe7bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d776dd8-115e-4a09-8996-b92466cc90d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c70fc8dc-640a-42b2-8337-6abe7115b0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199ed4ff-8db2-44b2-8530-8af6e2d10907",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a856935d-004f-493d-af09-59abe7508434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a227df8-be2f-4a18-95bb-3bd1718bec80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a457a9-0eb8-490a-a9a1-0d9d13137454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a6b739-2ee0-41c3-949e-486da02a1505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e2a07b-4bcb-4b8d-8836-d1e9363b8b1f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43147492-90aa-486b-97f1-9b87af6d147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8de870-68a2-4710-9221-82e63893ef0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6239c0-7759-4dec-85e6-7c990ba07ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd3be11-4266-4e56-8f72-780e887eec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3adc22-2f33-4ad2-80f1-e6d1e6f7dcd9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ce94c-c1c6-417a-b90d-d442de1d832f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a377400-20fb-42a0-8218-cd8f61ce12e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92069c9a-d1ef-47a0-86c2-e229b27ddb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f61dd14-742e-43fe-ae39-d18ed3f9517a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38636efd-90cd-4b7f-b8fc-4e93968530d8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbd57a6-cc9d-4e53-b0d6-32fa7653245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9ea423-e054-45f8-a584-b41110f4c094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393cbe0-e986-40b1-85d6-b33152e6a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "77444760-c0f3-420d-a2c1-6542c5f8f74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30597c9f-a1e7-4f2a-b62f-50fb2954eebc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9c272a-0a55-452c-8bcf-783c8b26b28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dcc7c4-6d34-476d-a3d1-aed261c63773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d3154-47fb-4040-aea8-ff50aecfdd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afde1e6-e908-4b33-bf9b-8e429065ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9879c4a6-f1cb-46c8-a186-3cee3351b31d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11266bb8-7cef-4579-aa76-2af9c5235cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1000134-20bc-4daf-8738-39046fda1061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b42c4f2-6049-4157-a085-b9f46e9e8e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d87ce3-2897-465c-b3ad-fb4b27815a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1aa554-8e95-45f2-a854-8a4f6701099e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdef5e6-ff67-436f-9162-867b5a727dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fbb7ed-4331-4b02-9605-f28285d87860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e1d815-6880-4ade-986d-684e187295b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a1c5b7-b1b8-4547-a49d-76f36019eb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb8281d-3a08-43c2-9b24-fc360667f1c6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586d3de8-a369-4b2b-84e0-e649fd45e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7a9c63-7016-4acf-ba20-0fbe826d1591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b5384b-5f5f-4461-b08b-53a51a751170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "088c4db1-cde5-437c-9ad9-18cca11f8d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ce233-b8d7-4e37-887c-553cf8b90371",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e03d3b8-dbd2-432c-824c-ca4624db236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9e1e8b-2adc-4479-b4fd-f17503aeea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd24bc6d-35a1-4854-b1fd-d29a284cd334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "054842df-1163-4c36-8b16-c61782ddc4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf180b-b345-42d7-bb11-1718c4eaed38",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7000834-3342-4586-b1f2-7af30c317a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf22835-9f75-4301-a7b7-a871ac5de4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d3e1f5-74b2-4583-9435-d75cb7d87f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3caec0f-3aca-4d71-9f1c-5071618023a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dda372c-e509-40a7-b9bc-fe88ef35dcac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71e56af-06fa-4eaf-b700-bfabb359f6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6f6e67-9b83-4b38-ae96-69dfc0edc49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7df0c4-90db-4894-9354-528c4276d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc5d367-ae87-4aca-90f9-c610ea279fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581e234a-e6d3-4a3b-b871-f88a2eebface",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7465f9f1-f834-432a-8ab7-2cd485e3617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e4e20-1d2b-4390-8898-9e955da088e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd26ec-8c99-4bf4-9ff1-68d92126c32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87347070-541d-4095-907f-21e71ed58572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e59af43-b926-4c0f-b4b6-02866edd180f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4b05e1-89aa-4583-b560-26b12cdea037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54eb657f-04f0-4266-a78a-81b2d6ef7151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b5e285-dfec-45b5-8220-054a11859ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d70432-2fd4-4687-8d79-9e700d27d405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdb09df-4f5c-4503-a749-4592ce8548d4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfd3cb1-c814-44ec-a6e8-432d7ba81864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a20998-cf98-4769-a2e5-73b5933f5ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf26fb-a2c0-4896-89e1-e425292119d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f04a255-dca2-4b4c-b9a5-7291fc70e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774e99d1-2ea2-40c6-b26b-e32103745f6e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea0eab8-278c-43e0-bf8a-99655474a9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894398f2-43e6-43b0-bbe2-b6e5c9b338e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77f5608-3a3d-4ad7-8067-cf350e9aa131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b266aac-d27e-4aba-9637-71f219ba3b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a077249-4eab-42a3-af39-a618adcf51f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df1e450-0250-408c-a780-ee4aef2fc8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e1dbcf-3ec1-4e6c-8c1e-f05e902a55da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2677d1-c24f-4708-8b75-1127d17821da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "48b3c237-f7a6-41f3-b041-a7ba27fab51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bc6358-2a4f-4b6a-b30b-55c8618d7440",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6628b-2404-429e-a6dd-435e98a86441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aa18aa-5b6c-4605-88ec-27a7facdcb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e5ff6a-d13f-42f7-9eb8-1a7b0893c06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0145a4-6d2c-4aa8-a79d-9da6c4add3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b6368-9ef3-4c5a-9d51-695fed86070f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b016975-a314-4f10-9a50-115b2d17d9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c122b5-849b-404c-bd9b-54dbbd604d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a06e975-2763-437e-a096-5e32604ba806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7591d20-379f-4901-84da-be009b795ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c851f5a2-b424-49b9-9c86-e813638da9c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94336524-6e1d-4681-809e-3aac42215b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed0f489-eb11-413d-9bdc-fb8cd680daa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273f9fd2-b695-4170-9a98-332e9184e164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e789c312-73fc-480e-8e78-09573d5e711a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5cf26d-2768-46c2-8880-2979b3d8a575",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eedf833-7f0d-4372-9c48-4cdd6d25dd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d018c438-9448-46be-ab8d-f8f35f01a11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66d74f6-2c12-4bbb-bbe8-ba518ce3c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "310a2540-074e-42c1-9426-562c3774ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8704ce9d-6810-46c2-85db-1a42c872c388",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc70e0ff-0ef5-4792-9ae1-ed8d9554e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9f2c10-5c1e-4f9e-8c5a-b994c5bcd4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe7a3f-97ad-4fa1-99f4-2ce07e6af434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fbd6c1-3991-4dea-a862-34a81a31466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217efb69-3ba2-4f57-bef8-01af95da097f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578d0712-f7bd-41a1-9395-2d0e2c0652ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e8e403-1411-4ce0-8c4b-8bf4f4350d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e399332-1215-44e4-8bcb-4ce9b10a2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "13aaff62-b3a4-4c7b-b247-ec5464cca660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3f0136-3642-4b1f-8c66-54b7f85af5a2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7c9a69-ee82-40cd-a4b1-e2638e109f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab572058-c0eb-4140-9551-0605fc7382d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aa95bd-3137-456d-b5da-6562be7aff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5bfe97-4fde-40a8-ae4f-7336970cda21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3058f75-99b7-4e94-8682-34efe9a9c622",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1153913b-f045-40de-bd05-9218f2e9edaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6459e2ab-42ee-4bd7-b962-cedec7490f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b601404e-9791-4ee7-a21d-4aa9aef24c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40797690-0cb1-4041-ae2a-cc1bd4fbb737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73dd0ff-2d24-4007-9f5f-552572b9bdb0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15648217-640d-4ef5-9b6a-450a4f83ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481ca38a-51d0-499b-a662-3df0955d7e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333236e4-b0ed-49e2-952d-ac49a6cc89e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7996b9f0-e51b-4cb8-96e7-f0f69295d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835f7b1a-061c-4bbe-92f4-0ddeadef9142",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e3e1d2-5eaa-49f6-ae44-253931a63dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af267afd-c4bd-47bc-9683-c4491bea2e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cc5f51-9550-4a9c-9f3b-c89345841fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05888f7-84a2-44f7-87e3-20ecb9e6c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff81842-4827-4149-8967-4e2df115d7d4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875739ab-8c5c-46c5-a3e4-fff9af3030ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9bc44a-8a85-45b6-91c0-2d5dc0286746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc11e28-7296-42fd-9628-95f8ed9316aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8563026d-5d9b-4176-af6f-fa42bb4bafd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2dbde4-07a7-423b-a682-bc0c0b2ea344",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f68a42-a27f-4b08-8991-0574c4ba737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4ef5a9-d94f-4ca5-a48d-17797bb27184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d51242-2c07-4f8a-8cdb-1e08bb116aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c270be13-9d33-48b2-b8df-4fc262b61d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72889b5d-c964-4eb0-bff1-961f1000563c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9f2f6b-2b29-4a9e-b2c4-f7912eb12d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baf374f-d5bf-4de7-b320-ac0f80c8be3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567893d1-e0a3-4f98-b453-5dcada2ffc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16786513-864d-40eb-a9f6-3572ff148a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdea8aa5-b7a8-47fd-91de-0d4bdc65e409",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e335d0a7-14fd-43fa-a0c0-230d5bc0be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761d50c4-3c14-4b33-b340-fcb0376f0923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505831ce-1782-4738-a995-9189c766cdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd03904d-b8c1-4322-8687-8a872cba91f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9850db39-01b5-4874-b602-fadee0ce0d1b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fac8091-2b8c-4bfe-a9fa-45ad785b833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68e4910-0f96-4b22-91a2-2f423f113fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3067ba45-3b72-4e68-9b98-ef53c6ced65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83ef7c2-a5e2-4672-9d79-2484b4706de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313c2c48-6a66-476d-aa53-0846ef03fdf3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7ccb31-e1b9-40d5-b98b-95f05ba546d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d063a5-728d-4d19-87d0-f41f552712e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62aa183d-f531-4df9-8063-238976711611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0c6db3-0e47-4718-8bef-96ee2c15f9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23d23be-5fc7-49f4-b44e-f586f3aa78a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f10176-88b6-4b6d-b342-b6da5bfe1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a301a1c-0b35-40da-94a8-f5a62183b71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c18deb1-ae39-418d-9851-9eecc7af05f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff16051-8361-48ae-b5c4-37fdd9557f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40732c3-8aac-4822-83ab-41348a79a88f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d72325-3887-44a5-be82-dc5efb769609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb184be-d8ad-48cb-9ee5-43d1531d2865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80400e44-e344-438f-bd60-074f7bf95bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f4814-3fc8-407d-a88c-8973dc156ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af65dd0-9299-4ae3-bb06-96cb7e1443b9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e681926-b1ce-4eb3-ad38-2ae46aaff78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a7cb70-3c34-44fd-a49e-c8a99639a85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be3465e-32f9-4308-817c-6cab2e1434d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70297002-7a51-41e5-a171-39e5a33b497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e59d4a-deff-42ec-9815-c6ea55911091",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c9e52-8326-4cc0-8852-809e96bb9c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056382a6-134f-4c05-b7c0-c10e6ef9b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d04bb4-2dc4-4d79-81ef-46f89ba50254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4045ee0-1c34-40a8-8e52-e94f27975b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86549f3a-95f1-44f4-b72e-ad156fd36a35",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c0022e-fb94-49f8-8598-bf4ee5151786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb21492-8195-4734-b5b5-a15aa2d19b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a999e8f6-fb07-4846-8aa1-93b694164a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b0c217-e27b-47e1-86c8-59cc5bbec667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eaf65a-ecb2-4c97-b592-b99869962e07",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f9196-6040-4a71-b463-cf0281ac9de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80dab28-2db8-4cb0-b48d-253581c53adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e542d5fd-216d-4c6e-8e3d-1ac840df2ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c95657-3358-4ccd-a09e-02097600c5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e413638-0fc4-4000-b691-460dc2c9bc32",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6fec8d-0d0a-4004-9bd8-53159b8c895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1513867e-08ba-4087-b230-5229fc8df747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b76bdea-1da1-4258-b652-76b9d1f22e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76be6008-bf4f-42c8-8610-08fb5b6f3a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83a94ce-b455-47ab-8f67-644eacf2e904",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8351a76-fb2b-4f29-8928-76c791bcb7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e066862c-d682-45b1-9ecf-20f94ef60a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5ed60-345a-4940-9030-8819080dda96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d45a922-a6ff-419a-b5f0-9d2048a3cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d52b024-013c-4ee6-b79a-4c78015c8e14",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18515de5-e618-43fd-bce0-8642e9947b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c890cb-0b04-4fa2-a11e-47db3aef6fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8870f288-b9bb-4bbe-a17b-ac8e19aa1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "715b47a5-897a-4a7f-b995-ef0160b7127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5681c621-576b-46de-8ffa-5183c4614f5a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5db4a5-e430-4b6b-bfd7-a21e545da330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714f1086-b76d-48a6-87f1-71c340e4d36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422bd470-19ae-4195-942c-12065fc63fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f58b8c-b255-44fb-8fbf-523d4b18f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5cf3cb-eff4-4762-bd8b-62a74a3ea60a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace8426-5620-4c67-ae2d-53cf78020fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad57cf6-6e81-44b4-9b79-0971f309d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b603163-bc26-41cb-8c41-7d4e513f2ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb90a87-f1a3-43cd-b52a-e7360c7df7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38ee425-b5d7-4f08-8e8d-f229f81569f3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524261bc-78db-454d-bd20-3767ea2b84ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da0a286-feb2-4be6-bf27-1771f8249688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a8db60-4390-4a87-9f42-4db12b0cdd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df080320-c7a7-4467-8230-367c62edf771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a9b214-17c0-4d77-9f25-3a372ed2e7cb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe083ba1-ce7a-4f78-aa6e-366c32bed4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc47a8e-0868-4be4-94bd-9558e4a01b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beac46ea-3a76-4999-ac72-001de84fa49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6c6f28-f9b6-4231-91d1-f6dc7d08b2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a5d207-e770-48ae-9d09-e726a5657722",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d5c9d3-b854-4ee4-9145-c3efaa5b1a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a8a113-0e9b-44ed-99a5-85740915214d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f05b3b-5b96-4fc7-8461-41bde416b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "735dadec-1ff8-4bc5-bea3-452e050c02d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158db985-c982-4ae0-be3a-eebcaca3fdaf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee04c12-f1b3-4c67-baf2-ee3e6d3deac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f083ab-1052-4450-b428-96c95738176a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9700d63c-2dcd-474b-857e-afe2fc0f5152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f42af16-8b5e-422d-afe1-1e82de4c93e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d43e438-b9aa-4044-ad2a-274386fddf4d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ee3236-116d-4ac0-9820-41840719277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900bb98f-489e-419e-9eec-dd845054690b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51507cd-8a36-496b-b745-cb276ee116c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f98b0e88-ed2e-4f91-93f3-28c719ba109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1bfbd4-4c66-4ed4-9fbc-d469d040f5ab",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb7e61-4f88-4233-9e8f-d548e0e76e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526d2b2c-17a0-4d2b-abe8-a41da1c40e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1195787-11f8-4c5d-91b5-96c82bf4af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1633d6-c2ec-48b3-bef3-3c7c12b38394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b524c479-866e-4cf2-9601-a38fc94effda",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f298eb2-4c53-46f7-8b98-55b5fbba3d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461fe95f-e82c-4600-894f-b28f28184226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bebb1b9-d79d-4d6d-98e0-5be8691bc6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b3cdcf-df8d-4cda-b50c-e95248438b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cad798-6bf8-488d-8e40-f8f1a5877b7b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881f0e4-0cc1-489c-b839-f577ec8834ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53e9dff-bbb4-4142-baaf-034661a13ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615c3ed7-c1b8-4889-9a4a-9aed9f819e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1d2f96-fd3b-410b-a9c9-420adbdf398a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36feea91-a5ba-4f18-91a5-49777fbab86a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159ea6a4-97ee-41bd-9ff3-a7dc65456610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d644b94e-f48e-489e-90ef-1ac2c63a3c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94ac5de-529f-4751-9274-50030f5b133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1591c2-8676-46c6-9513-601475695ea4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffe9c788-abfd-47f0-b6ae-b5e0bdd48a37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a224ce3c-d9f5-4265-9f0d-15f3d85367de",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24422c98-277b-4865-b396-3835d479aa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e352e8e9-77ff-45f0-89b7-14b43e50fa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa8359a-2c36-4af1-b7cd-7b1c192c905a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ec7656-2059-4012-95ae-fe33e4f81ff9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b89b66fa-80d2-492e-b81b-eaee84c9b134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fd6d672-d1b0-4574-bddb-66a4ea153679"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea733711-74e1-4760-9b09-e5624e9175ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "218548b8-cedb-41a5-845b-7cd6afd07ec2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1dee119-cbd5-48dc-b7c2-7d5e7750b94d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a120d36-8db7-4870-8a0f-8dc8dc5544c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65ff8ab0-7686-4bde-bc4e-4597b8ecc82e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a57b0a7-f125-4cf5-909d-b2383db8e9b3"
                }
              }
            ]
          },
          {
            "id": "62cbfc60-14c7-4681-aba7-bc442ad7f0fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae64efed-ed5a-4cf7-9221-9bcfe8719732",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "38af8579-593f-456b-a341-f5579b5b389e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8946f7c-9115-4972-a5b4-256d9416933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae6c9f36-7327-4154-b91c-d633755277b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4130df-f00b-40de-82fc-fd0479d8aaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebe9c2f-acc7-4a11-ba03-4ccfc9664b96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dc20d1b-39f7-446f-9d47-148c6a9d3eb3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df0b5ebb-d342-4f60-afce-f6efec67863b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "916f486e-1203-4094-a016-97d92a22f11c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27b1f028-8dd2-4ed7-8455-69f3725047e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8894eb1e-635f-4a20-8ede-e507eb4f78cc"
                    }
                  }
                ]
              },
              {
                "id": "b2d6d612-6857-477b-bc36-4a1d0315859c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26cbca75-c6b1-4e22-840b-f1f93a9e151d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e197fb2d-024a-483e-a17e-b0d70194c108"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3607bec8-0e3c-42fc-8b3a-7ff708ce95c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1518d33a-d123-4ded-955e-7f0908730551"
                    }
                  }
                ]
              },
              {
                "id": "e19092de-6d9e-4c03-a0dd-f2c9a097d97f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb3d29e1-9e10-4162-a28e-a3065a6e01e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c93140e-33fc-4882-bc97-696e5df465c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421dbe55-5906-488e-b30e-d0a64bdec209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1991e5f-d20a-46bc-a319-d45fb5ad1ff5"
                    }
                  }
                ]
              },
              {
                "id": "e25d3790-a4d7-4396-82d3-f4f7e00514ed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4953cd50-509b-4885-8eda-ed490a338a08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6fc96d-c18f-407a-b0ba-6da1f5260622"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23fdfb5c-e1e6-46c3-9847-8a304c6489c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "86a351bb-c7f2-4470-8fc3-4ef10631b7d6"
                    }
                  }
                ]
              },
              {
                "id": "7baa1041-9353-4307-b755-dc3897d2ad29",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6511956b-b8ff-466d-b9ee-55d18b23953f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d09a12a1-1ba4-46c6-a98e-0bc45be3d3a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fefc1a6-3b81-4290-b058-451da1e2c085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8702fa21-59be-43c1-818f-0af646e6abd2"
                    }
                  }
                ]
              },
              {
                "id": "92852c4a-afbd-4641-81c1-902330edb91d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f0cc7c-34c2-4a87-b436-a6ed0256c858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02641fff-1a71-487f-812a-5b237747cf0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29399013-7fd1-43c7-938a-181874419b5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc457e67-60e0-4749-a681-d490d7e0ae12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "400f5cdd-eefc-4a1b-8ac3-7bda992c29a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "619270ed-7bf2-40a2-bc5c-692b88b95be6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dddf8069-3b96-4825-be3a-e7cb53a6ef16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87b3661a-c7c6-4f60-841e-ca03b6a99cda"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cea79ee-d549-4c4a-997f-8db1b554a221",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "43362c5e-c4ef-4303-8f89-e0f296cc9548"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d1bd4b4-7593-4bde-a366-db4406fb9d97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "add6f55a-1439-4db7-aceb-c522ffbffe32"
            }
          }
        ]
      },
      {
        "id": "28aa9efa-8928-4c60-a1dc-f0a85b3f1c70",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1a61f075-326d-4ac8-8966-377c4c6d746d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fd46d27-953d-49df-a0fc-aa1868267c6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c98a4bf-32f8-4cc4-b300-b6e16d058c75",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f59350-cd89-434d-8161-abf40daef1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893c5913-a6e4-464f-bd9e-00ac998772e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc8cdd6-0428-4aa6-9cb8-4aa8cfcb181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "725dc1a3-7770-45ec-a69b-df737360af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f920eb1-6ce1-4e65-8019-87e0386abe06",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e9f1a4-5753-485d-b98d-2db68b7b2ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9938123-c176-4f3e-9d66-fb56f6c2d8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae53996-7570-49ac-86d9-262662a50074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8c3f17-e9ac-4b93-96d6-1ca9fb9c503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e0b76-8af3-4591-b713-d4c8828c2a41",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc616b1-486f-4742-b02e-51c70a204ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d559269f-2c0a-499e-99dc-3aefc71abcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e259234b-f12c-43eb-be6e-58d8595df9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05abbfb6-49f6-421c-a389-b18632062be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ef797-53d3-4e51-b959-f40006cb2a96",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ea63d5-bf4b-4103-8aa5-97aae562e9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0166695-010f-47f1-aedd-b8800abca0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405299a8-2f25-45e1-96d1-9f998c31ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8b3c96-e066-408d-8a01-1a1c6041d7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973adec-3580-4a70-a262-53461572d1c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb66f72-c0f9-4338-94f6-8b0407994301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa4230b-b597-48dc-ae06-fc6d36d37c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de5c66f-941c-4f50-9eab-70cd3aa5fcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d18e6fd-7f36-4acc-af77-fba7297d6814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061c4c13-0e0d-4661-86bb-c7856ea2f77e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe2392c-931f-4e84-8859-6c949bb6503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29bb701-010b-47fc-a70d-62c34322f69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35794dc0-30ac-4d45-81e6-a03da6a194e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ee06cb-2489-4abd-9c08-f2e72fa8ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bf9326-cd4e-49b8-bc95-71216456c79b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a4da52-d4c8-4fa2-b553-128f9348c105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffec0707-d95e-4a24-b1ed-339f3f73db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd180d2e-dfcc-43be-bccb-2eccc1acb300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31982631-504e-4b1a-8544-f3ea76aa30a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60c48d4-f60b-451a-9617-457ca4f67974",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac304ea0-4c2b-4461-902c-4dff6d30da55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd95f08d-01e4-422c-84ec-20acef149f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd3d01b-87d9-4d22-adc5-d7c90910ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9376e404-3323-4bb6-aa19-03918988652c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d79f55-6b8d-4df2-af95-51eb6061f66b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1c83f3-a366-4fe2-a506-91c75ef8530e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c23b88-aaaa-40ff-aad6-aab21e9ca00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a3931a-6b80-413c-b1f1-f3584b17e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1a7b47-99bd-4fd2-87ee-b99e6728abc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366e915e-ae5f-433a-bbf6-4e5e4bb42499",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b5d0a2-0d8d-46fc-bd0b-b90fccbaafb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6815bca7-1e92-4a0e-9c7a-13fc420e2aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cb8448-7bc8-48ad-8c86-7e646c58be97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77108250-7db3-4952-a168-cb159ed027b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbda611-77f3-43f3-8b89-667b8fdc88ea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b30ed3-207d-401a-80be-6fe21b5f6bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ffc1c5-ff51-4f72-b129-90c4b86f2619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07721555-f62b-4f47-af8f-b8504d89750b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba409b8-cb72-48c6-b4f5-04fb155d9844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38654076-1874-4ea6-b4ca-1310fa18b809",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a0f152-3b6b-42ed-a0db-391b8a2cd25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c5e420-bfcd-4fa9-b1f0-5d42fa43bf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef98ec6-8a83-4550-b08f-8ef787df4f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99832951-4e40-4712-94a8-b1d83f74ee94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0985bf1e-279e-4f9d-bb21-54f1330f6084",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0b991c-17b6-4b2c-8c68-7937135bf97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa50e98b-be6c-45dc-a264-f5258d61d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5804c5-2690-4b24-84a9-44d445a4cc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "605aa814-f299-4c82-b0bd-89d7ab2d0ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e1799-d384-45e5-ba51-ef3b357ad8f5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d52c38-ee34-4c19-b3fe-bcc5b0edad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16828c08-7b78-485d-9676-7b32d6b2649b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b551349-071b-4140-82e1-8b852f0a7242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9678b908-1e90-4eda-9691-22fd58f9ebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79cb2b3-4fdb-496c-a813-25928dd84d98",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c66b2bf-4888-4a7b-9faf-fdc205117024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330e4df1-2876-41f0-9dfd-cf3625729d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5d2047-bb6f-4a42-8727-1f2f26ef867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93bfe4a-61e1-4a9c-95fc-1aaa9ae9b762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96b82a1-6781-4f7d-8b8e-6923681640d1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1de3c32-3915-432a-92fc-9f340fa59ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126518b4-70a4-403e-8fe5-549b075d6952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9c720a-2ece-4aa5-9239-b4877f21d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68920f5b-0fce-4f5d-80ca-e2d995ab5035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57f3e35-53b8-499b-9f6f-c29fdc4fbc22",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b6b0fe-0b7d-40b2-ba9d-907e27359747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12606cec-9e7f-4a3f-a515-ce6b9ef0c57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e16ed1-30ae-45fc-8903-c08ea80d2b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "204d8c31-ce91-404e-8b93-71a2ce5b0e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988eafcf-84dc-42f3-b75a-9a1846f85b8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857bfa75-2e5f-4836-898e-e55e2b3e94c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e815ac-b7f8-4703-9a67-65724cdab2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9163da-22a1-4aa5-b46f-83ea01f44484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82311c7-0a99-41ae-ba8d-5365b5700a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a37e2-c82a-40c5-99bf-f8f34d0b7e73",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50b9a3a-36fa-48ff-912c-c40970489259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad37c3cd-1e5a-4f2f-8b17-358e092b488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fab462-b377-404d-8852-8353c821eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0436666-8d28-441d-89d8-4cfb7391e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ff833e-f50e-4cbf-bb1e-b14c05dad13d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424e094-b694-4d9d-9c3c-e18be25f897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d21607-b703-4604-b06c-c116df8f761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e1c8fb-cd94-430c-a012-e4bd24550e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bae6c2-47ed-49a8-9790-0c081ade62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55df65c-6c89-4efd-a4cb-4e49cddadc23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb41580e-6f50-46f5-8c7f-c23a521eb4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f9a60a-fd9d-4245-84b4-6776d3205f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31379ae2-42d7-4a7d-ab7e-e9c6b45fff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce863fdc-2c1e-40bf-9cfb-63ae2d732bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbef40f-e7c4-436a-88c7-30e12e1378db",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7970214-cbf0-4b4e-b289-60addd7ab671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc772d26-b571-4dd1-bb6f-4b6d4549f709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b6f5ea-80ef-4678-99c6-710eaf26a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece3ad05-6e1a-4cb9-84b6-6ab61f89f19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a63ac-fb4c-4b7d-ab8b-2c068bffdbb2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073fae8f-7504-44c4-bd41-302936a93827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4999e451-2042-41ad-9f8a-e92a63a5a222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325568b8-8f7c-4dca-8a2f-fcbe98490722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38745b0-f586-47f8-a01d-02d9c47960de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227f25bb-eaae-478f-bce2-6314d27629df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4971e1-af9c-4c4e-81f0-5db9489fb289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a02f952-9c66-4cc6-8a98-732307842e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67238a52-ba11-4bb3-85e0-1a3db5004217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9be1396-2a27-42f2-a69d-5dc4b46f2d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d319861-f9c2-48ef-a985-76cd9eb0bff2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a40a18c-afd4-4511-aa2b-6b9c86e5f453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde90450-9fbc-4cb8-b766-81bd5ad370e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4911f7a9-7317-4d48-a382-8600a61b1f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e42938-86cc-47a1-b574-59871ca2016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11480338-bc01-4f28-aaab-c2737c1d18e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61b69f-a450-4eb6-b700-03632e97be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485e6d15-9d7d-4453-9cd0-1ce362c778bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397fe5aa-9744-42fb-ba1a-c3a463504b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87d2bcb-9c9f-4169-a193-c12498a40575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bb14f1-8953-435a-8485-9e3c2c0f31d2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bace3edc-f637-4516-8177-54c047d90cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76230bf-1172-4294-9a1b-c45b1c541eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b918768-353d-4627-922b-e3c20b56af2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4a48a6-3cb2-40c5-b45b-489815bf0077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba59449-aad6-4ea3-be2e-93c9d8c2abf3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136fd81c-3146-477e-9876-d46f914bf844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee20544-ca36-4cbf-82e6-375ba079f202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a6461e-e72b-404c-8aa8-b2ea71c5af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d7464a-f2c5-4ac9-9220-aa446d39edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf293cd-4426-4bc0-9f2e-5b2da08ad1de",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1392b8d9-27d4-440b-8367-c687009a8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49714032-6861-44d4-8030-64abda0c6f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c65dbb3-ed7f-4899-9afb-e40295efd85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c62402-ca2b-4e69-b1a8-51f09c998514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242c2fd7-14d0-4a9e-b0e6-2fc6c90dca00",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9817a55a-a8dd-4b49-b51b-0d70f9c4a61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d803cb-ff29-4329-9dbd-200f7fb0fb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687f71ad-6396-4241-962a-b75aed2aa33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1693319a-a565-470d-a168-0302d6d8be14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236077d9-109e-4f7b-9e88-47b19d1aa7a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09df636d-4b7a-473e-bc51-5fec79b18756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdee417-e348-44cc-bf73-15326615586e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f922c2-923f-42ec-9085-7dcb9d34dade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15004114-1e34-4aa1-85bf-f297fe040b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be16a8d7-c657-49e9-aafa-4b1dda5818f5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83fa69-26c3-4c74-8545-d305b05c94ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e890343-b270-4c40-8a84-000d1bfb7d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab27cfa-2b14-4f2f-a7d6-87221c0b723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f625ed-0d97-4d38-922c-2495129f63a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba916187-d996-4b22-ae13-1dfa2f71e65b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22f6fb04-5462-4f57-ab64-a9ce83b350cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f856e72-8f32-4916-b772-4e064927b824",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8019604a-49f4-45ce-9c8e-a31fdff2bd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ab4ee2-6ec0-44a0-92b1-4afb062e0723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2206301b-7286-45a2-981b-4ad94d3cc18a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fee5638-7443-4afc-9516-a1540eb2eff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce0cfc6d-eb1b-4326-9064-4aff6a977d79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "387ad337-44d6-4519-a30f-cdb3ee6ea97a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c6e1f46-451d-409f-9386-9d3e7e471d3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd0c1d38-00d8-4ce4-bd13-9e2f67aca8e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce558a6d-5b63-4ece-9835-16d82e23e122"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05880f1d-b78c-4417-ae29-d252c374ddca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1818f2e-f738-45bb-8890-deb3005c1e70"
            }
          }
        ]
      },
      {
        "id": "09d66f7f-ce0c-4dd2-abdf-651c4e303253",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2b926b4f-8b56-4263-b7b8-648fdbf6b6af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36aeafa4-c510-4df9-9f89-d5ab6b47ba96",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77b006a8-9b8f-4215-969f-ff1a8e554768",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2949273b-fba8-444b-aa98-d8d3bffec70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767e85cd-b6e5-4048-bdb1-0a8433da57d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aad6ea-7ef7-418c-8e20-0c6b866a900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9efe6146-39c9-4864-a66f-6210f2b701d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6c4761-de27-49c7-ba1e-bd6a642d5600",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f2bb0-1ac8-4d84-9667-d1698c44ed49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06ae093-97c6-45fe-a311-036f7aea3047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52da68f0-e359-475d-8071-bd2e6530e825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58be3a64-0371-479e-9561-38103eaf1173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed58d292-0158-45cc-bede-e69a956b1243",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f98cd6-d0a6-48f2-90cc-02b82ea0f4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fd425e-94ba-42e8-af3e-c406afef339a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aeae96-aaee-42e6-bcbf-538e75b4ac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "929bdebd-35dc-4fe5-a2f5-91c45c3b0062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ad82e-3d4d-4c1e-935b-d6a1a7e1d72d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9456e730-8b34-41aa-9b98-57f04c3948db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfbfdbb-7765-4414-9800-817a0a845bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbb853-3fe0-4464-b8b6-1e236e6fa620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf3ae98-ae72-42a2-a779-6b61e82c5f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7edb023-9c3d-4816-a5d9-32ad371d8b77",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a122a8ee-5a33-4a02-b8d1-482efd708026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a984ccb-78bc-49bb-a76b-56f0f975bab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82758c5e-cac5-40d7-9436-f890d9b54d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df1dbb7-6ad0-4e70-b17e-c42d67f71080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27a4655-adf8-45fb-9703-e4a78cb0d302",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede6b22e-3b29-4680-bd91-758eaaf3f4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5302465-ea62-4745-8839-ab09bcff8d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92581c54-52a3-42fa-873d-b943d6021b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4541da43-fac0-4ec7-9cc2-32c69f1aff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72967948-2639-4613-8df0-bc68a1ef702f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294b3af9-1cac-41ec-930d-161482465bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f923f146-0ee9-4cc2-aeb4-8ed045ec7949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce2bf13-e1ec-4288-a335-77a3589f96eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e8ebb6-7bc4-49b9-8b84-50b2907150dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b684b42-a56c-441f-86f8-1a9a3d151306",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d8cabb-35ec-4aa6-9bf4-aa526db5be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82394bd9-b37a-431a-b270-b350a65d578f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfc8e69-5192-4665-8180-bc17a7c660e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2186406-5c78-4d56-97be-06258374f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9321b1e6-ad55-44ab-9f7d-e227d3ba83bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0e17a3-a926-41e5-bd8b-94d40fb8df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483e4eac-505d-4b83-9d1b-98c68aa19cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90d20f8-b01a-44a4-9f7d-c4a36c57f12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e6d0c8-bb0e-4e81-83f7-fe5bb923ca22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085d712b-5938-4652-8e05-93728774dc64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c6b1ef-1b9d-4535-83a6-ffd6e9aa255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26bebc8-c999-469f-ba68-f14ba6d95b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa5fcde-290a-427b-ac21-eed707af7476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b49f08b-5f50-4fa6-bf4c-514b193eeeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195c2be-d703-495a-a01c-ac5350aea4dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db07b34e-f262-486c-a571-e34b6c5f4403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6d08ad-b6b5-4b89-8469-a344344d189b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619b43d7-ba35-40ec-8dac-280849a3aa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81f3dd72-3367-425c-968a-6f5d86b5eca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522f6383-5980-4dfd-a56b-f678923f2187",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0cb45d-a22c-4541-891e-1671b2fd77dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547a8acf-b3e4-4f62-9225-77fa2dcedf7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a54df-8055-4d5c-87e5-3b9f7aedbdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c14e5d87-c012-4280-ae4c-327ea4139479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9185c827-a818-45f5-bb6a-27b8e64c72e1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf0db52-01f7-4fc7-b4ff-a7442f56ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285adabd-436e-410a-96fa-4af6eebab92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f228991-2612-4960-9532-15d021ab1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60a92eb-e636-4305-a897-9f1e93114cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f7edb2-8315-48eb-8d2f-03d3edd82145",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e86e29-b39a-4e0a-9bd4-5676531a01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b7b350-2f02-43aa-a53b-5c5bfbbc190d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de47cfdd-1b01-46d7-8bf2-bb36507069e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b563f8db-5d11-4c9c-a288-c91a4ecb28a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb86e7a3-149c-4b76-aed0-f50b32bae80d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9992dcf-022e-4ad8-abaa-6f7410e2d6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46f4897-d8b6-476f-9172-5239824e00b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68746418-e56d-4e95-9641-38dd4c8056fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d3967c-0ff0-4d78-a180-09b9f4c3907c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc48c10-95ff-4f6a-b005-f423d70f0042",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d202d1d-cda6-4fb5-bd59-8be6e5b71b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4c6372-7e7c-4c6c-b32e-ad603222d91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594e5089-a316-4508-b963-f50796b38494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95468fcb-61ac-4f78-a7e8-49d323d3bdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e741769-3d40-49f8-8182-8780e6a60a54",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6222c-453f-4a7c-8a85-9745bd447399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f70359-71a4-4705-baab-e69d2245552a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae275bf9-3f11-4260-8f31-ce369a35a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04fb249-4e7d-4813-862e-8c95903bf8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a624825f-a92d-4cec-bf45-26d7095ee2bc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad117ba-aa43-485d-8488-9d0fbba173c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e430f5-7eb2-4b9e-838a-845d03f2a338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e87f654-7cc7-433c-8810-5426ff3cb1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "580c3f32-c4f3-42ed-9c57-3fcadc42f843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81691ed0-e7a8-445e-9b33-8f5569fa4af9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1bf387-9cd8-4a64-9484-577c986b9ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a404fbe-668d-42d0-bfb9-72b3f0ab0862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5b4095-5fdf-4cea-8613-5290cf8dd878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00df997b-b594-4777-b66f-d81170ccfe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf177755-39a8-47a7-be7b-5e004d31c41d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c95807-d2b4-4afb-bbbc-f83a8a86c5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133d3150-c0ec-40a6-a4b5-929cedb4aa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2fa599-3dca-4188-918d-3ec256b61cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8b1a09-d2aa-4e86-993d-d79b98ab20bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d34f22a-5c11-47ba-8f79-063255836192",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134b00a-b9c6-4ebc-9031-ed60d50de065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0539d53f-2d45-4936-8dc1-a7038cbef980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb5994e-92c9-415f-9c22-1e6518739451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be5de38-1b23-4fe5-81c3-e6c670bd8b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8270c980-971c-425f-bfff-5ba2a26acec7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67b7810-fa84-4454-8a0f-86255b78100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1499ec14-4fa4-4967-8ea9-d24f77d00a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11db4b87-e009-45ec-8deb-4cb5e5626e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a9137f-174f-4550-af90-f4693efa024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8b1a9a-98ae-4523-9d6a-f622053b472e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e506c811-47d4-4d3d-a2ac-071bc030ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3888c783-2121-4b9d-be6c-9bcd156e1f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ac74fc-402f-45bc-8f35-d940b9de7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f548f88-3622-45a6-b958-a853977d6696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a51ccc3-46bc-4f6d-bf68-b05e7ad94154",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf45c2c-1297-400c-9de6-35d66e9f8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eee821-8449-45a9-a287-49427b1ddc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c9aa04-ae8d-4e31-beaa-e5893982f49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d2e854-aac5-4631-bdb7-7993ea8c9c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd1b7ba-6225-44ce-aece-322511c9a0d2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6b52ae-c08b-4f8f-b4e8-d15459341f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9619e005-1330-4817-9c52-ee245eb9dd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08707502-8318-45b4-9184-687950bcfee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "448d316d-491f-4300-949c-b104a59cb43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cc5f39-4769-42a2-a57d-5b4c45f42fb8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae642359-f166-4c1f-a706-d891766ae48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9e3064-484b-4d65-9093-90eb34a72b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da80db16-9dc4-4bf9-b8db-ac897f10f6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc8af55-5a8d-4e52-b4ad-0dfcc38faa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753ede99-da5d-4640-899b-0135d4368ce1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c393d35-4dd0-43ed-a37f-f47b28c755b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb43c07-901b-4f52-a12d-65a51be3c5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defded8b-5db2-4492-9cbe-ed9e3f31a381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70736b0e-9c5d-416d-a320-e293086ddfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad75581b-47ed-4f49-87ca-47e05ffebd1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76c704d-e4aa-4538-aa62-67b0841cabe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e554e593-4ad1-41c0-919e-cf696a3b3c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df4b19-7a65-4604-a796-4c3cb8832b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4363d308-7d40-4709-b3e5-fb2fb80399b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47447b3d-2767-4d76-a101-4a6bf28e183b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115a7132-1b57-4873-8e09-c90051bf7313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6006b578-bcd1-4ea4-943d-f957083446d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cb1aa7-580c-4d7a-9d2c-49363361bf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583572ae-0467-417d-b373-0159ae05ff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8ef1bb-e464-4ace-b41a-4408e32e968e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93232ab-d7f8-486f-a341-a4f93b8b81ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b51082a-710f-44e4-86a2-60ad26e5c186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b5d96e-36e5-4845-9760-456f3370a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e4ebfb-13f7-46f2-bc49-ad4ec6135555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25782c21-c326-4d31-982e-d6ce751cfd0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce17514-b1a9-41d4-9851-fdc182b4e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd057efd-7f31-434f-8489-10ef727d48aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa8c46c-4b16-44ab-89fd-a0a8a8fae5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923e1f30-2b85-455f-901b-670703db0a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b769b6b-fdc6-419f-86d6-1cc76ef588e9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066bca8-dca9-4c59-baaa-63656b475a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52a65ac-6abb-483a-a842-8bf46cc4f3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75174b00-f71b-429a-b2e8-31ffd1de7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70379e52-11e4-4634-b77d-2d1030a85db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a85c4b7-24a1-4a9e-b9f2-51e43dff9a8a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa49e85-b02b-40e1-b5d3-9efe2169a7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f28f7fb-8194-41d7-a5f4-2604f6715a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31636ff1-7619-4144-96e0-1f5e736c4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "020719d4-d6e7-49df-9b95-0739bed8f2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2aa385-d445-4ac4-b9d9-a7965d524208",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ca289b-1d02-438c-b199-bc50d519a8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a18b2fd-7fe4-45b1-b865-587d6cb0bc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b86b31-dc30-4b36-aadd-c813dd024d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5624b1-449a-463c-a861-8f2250317f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadf24ec-77f4-4dfa-a56f-4073224ea169",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588db0db-0c4c-48a9-a6ac-e9a8f9082bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffff4d0-ca9d-4531-a7b1-bcf0d9aafd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca787578-ac00-405c-bc87-61f6b551e633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c14965-e5e2-482e-9569-49efb89def72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d55e399-3c7b-4af8-bee4-7aeda35c26da",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62ef4b0-1681-4794-9d22-95ac5ceb7447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee0f8da-5da4-4677-88f0-a61c705c8f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0429774-5c84-46ed-a28b-c9d7ed097b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b52f0dc-f493-4259-b527-34cbb73110b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e541df67-5d38-4e78-b88d-b605cbc3b859",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aba331-421e-4fd8-afa5-878b0c43bda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d63a3e-8a0b-4a44-ac71-0f6736c3608d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a49c24f-9f62-4550-9dcc-cddfdd17b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19abf269-de3f-4279-8c1f-874e48c10570"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2553afd9-0ede-48a7-9f99-f7ad5e705011",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41f6acec-7c97-43e1-a813-d9c15a308f8f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f461717d-099b-49e0-80b2-214b9b391f82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "acc0f597-3e4b-4231-9029-c4bbad2e5f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58295e6-7d63-4f4d-9a4d-2254b65ce674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98bdb7ca-4dd5-4fab-8e63-4e6c8f83def7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ef4bb98-8ef4-49e9-8419-d951e6073c6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64081cf-b42b-4041-b0d8-60821d78935f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3623b296-fa9b-4759-9fe7-dae69d31c405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f2beef3-694e-4d9a-b170-c44dca707dc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd1c7970-697f-4da2-b92c-b154eea7413c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c08aa00a-f1bf-4cef-bdab-09bcc2dedd25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e49825-ef4e-4fd2-99e4-6f2884f3c515",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8738f3ac-02b5-45f3-8505-aa75a2499738"
            }
          }
        ]
      },
      {
        "id": "c33807b3-c5ea-414e-ae61-99f19dcd2b42",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a26a13f9-29f9-4b21-a994-5fd1f53e647d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bf36f50-37bf-4016-ba28-a5ef69354b99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae48e260-a1c2-4fc6-9d0a-bcb421ec5267",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98930d47-5237-4647-94e9-a062b2a28dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f6883a-553b-4ccc-9bea-a9d7f1232835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33afa32-f72b-4786-a338-d2ed94671faa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000e9535-745b-428e-a478-f1133a6e49d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1527e935-0dfc-4960-aa7f-1ffa0524910b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db2079-5454-4e43-b3c7-0ff9a708319f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a25a5a-df97-452b-890e-7c28e2017cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9ad2ae-eddf-4da8-944f-e068ff978bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f54d3-821d-4d25-ad40-1b25dbc30e6f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473b0763-2cac-4488-8f72-57af26ff44ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78405802-8895-4f7a-bb41-137531c056cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c824b54a-2070-4387-bdc9-09b9afae3392",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702f4d0d-536b-4abb-9a0f-24ccb09e5f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c28a51-c310-44b5-9b1e-51c9c3a3d5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ecb73b-7e89-49ad-9195-883d2752274b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fa1d29-e192-40ef-8250-73abf206ee84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83876504-bc56-4d77-89c9-f9ee2bd47ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a691f-cecd-4ed7-804f-43423b729868",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb66a51-546c-45d9-b988-683e59a9a54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca96ecb-04c7-445f-9db6-2555dcefeafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c99ca0-c904-43ea-a43a-bd55d234079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1e986-83ff-44c9-aa26-c904dff2fb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a430aa3e-f723-4d3f-b05a-0fa667cc9759",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a85eb39-8773-4368-8a54-0daddbc751b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2efb1a-b0de-43bc-af82-365fe95f99fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b17a2c-a056-4d0e-aea7-5222c8eb50bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42694b5-56d6-4a3d-a544-88234972adc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b077ea9-d559-4567-a04d-a75265914534",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a93c4dc-e235-415c-aed2-5c15819fc7a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bb87d4-b834-4f8b-ba97-be8b67f497d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f315b9-b711-4a2b-b5c1-0e7e4dfef0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25c6e09-6390-4aa5-9a78-f7cfda106f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c80aa-57cd-4330-935a-f45bc59b0359",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded97550-b482-4405-a200-d58d4c4c1331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225b70ca-38df-4edb-8847-fedaff7d88b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8781cbb8-552e-44f6-8979-c17cba53bc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e52f28-0d6e-454b-b198-f919c089d7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6adf9d-b4f1-492a-8052-c5364dc229b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88effc3d-b392-4b00-bc2a-d6166e899cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350bbab2-28ff-4a0e-b5a7-1817ab02edfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0762f211-1016-4481-a024-11576fb19a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daab991-da80-40c3-a4a2-2339fe4ad6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37daf12-8f66-4e0f-9b09-c96ea7df5ba8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0911f0-8bc2-47a3-81b6-6d50fa392133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff3542a-8dbe-4c39-a80f-79639062bb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b2647b-2c82-461e-bff4-c85afbbfb562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62cfdf0-ac4f-472d-b0ba-5ed7e47a8bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99aa783-46aa-491d-9fa5-24a0e4f387d3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d1947-226f-4f67-a703-552e7f80dc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b351604f-b4a1-4467-bf3c-a1fb05d4f69d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfe46ff-afc5-4096-8a1d-deab99e3cab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa63f7d-64f7-4f00-84a4-765f0b7cf286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400f0c1c-3e95-4ebf-921d-f0f02425c6de",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a2cb8c-16c3-4a7b-b986-39dc13128751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4321d155-de5e-400c-b6de-b7b5e1f27a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f4a534-2fcb-4d71-9ca0-c97cfffdf832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f40a4c4-68db-4952-98ed-d9eafd12e86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322aa301-82f6-46a0-a238-72835a4e9d4c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1ae665-205d-493f-8c6d-4ba751006c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8563e8fa-3fd3-4017-8927-cec74cb24270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b781aaee-f078-4403-825b-807e2e167c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf5a55a-32a4-42bd-aa55-6825ad7fec4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48033240-4084-46f7-83b2-f6213e00aba9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39a5997-d5f3-4e4a-b391-0e27d7d18cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc040fc-ead0-4ee9-bd27-8298d0d26273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400aac84-292c-4d3d-b230-8b03a19dff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f829f497-c82e-400c-bba5-39ae39bb4b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99203d92-c14c-4b79-bb37-e21a15be1265",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ae6104-4f28-4f9b-bfc3-41fcac89d58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0013240a-971b-467a-848f-460a9273a3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eeb2beb-676b-49a5-ac23-9079bb64c246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0674e722-8749-4c1b-91f5-f45029ed05ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6c91c4-5524-4cd4-ad5e-2a28105821c9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf29d5f-2332-4d32-b97c-2340cfafb522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8227cc-18c9-445d-a265-f590f679d908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f98508-8760-47c3-8ced-06c72825a39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43517b31-dcca-4049-97b7-9278d837199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ae3e2c-cc96-436b-83c8-45d5ee936d6c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b514bf-951e-436f-b189-e7814d41b72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd973fc-4bd5-48ee-b58c-3d68212b7626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ca643a-744f-497c-86ad-31f994054103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312ef3a3-d6ad-4077-af76-2c92aeee6635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3aed3c4-2aab-410f-b179-ba10cc8da60b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2529bd-6dc3-49f4-89c1-38a5f40c3ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21047808-e102-42a6-b68a-d45796a2c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c7ad8b-13d5-4775-be34-32419a30fec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd914e29-cc7f-4217-ac2b-3f597674ad4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d336495a-c4a7-4f95-9fbe-8570294b6317",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3b1371-4151-496c-a91a-68968e03db2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca726dc0-5544-460f-a7f8-0195dfb22957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae06519-8e3e-4cea-a93e-76fee180a21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee750d9-9ebb-4afe-85ff-fb21dc08089a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd72a960-2b67-4785-b85c-50e0f2e5b0b9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d781cc2-22e8-442a-b8b3-dbd75338d789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3a4a27-9cbf-4594-b146-c60d133764cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db81b101-2230-4126-8307-ddb32428639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cace5063-73bc-460f-9e1f-9b6e5eee22e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f5050b-0d79-4c15-a99d-b70200d9330c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba37896f-b47e-4820-bf93-feebdaf57307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e448b8c-4761-49fa-ab3e-6911ac51a684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd2f296-2b9e-4008-9ef1-68d0aec11398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ae3287-a7b4-4893-938c-845651986cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6476fe-891a-4924-a7ee-263a0547c8ac",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af33e68-4225-4baf-bb45-5026b7eed879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb028ba-fb53-4453-aa78-9cc6976989e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30835933-99b9-4d42-89a1-099297913f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ca4605-0222-456a-9447-7bd1b7e56d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ac7141-aa8d-43e0-9a04-3d14340f40ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f73872f-3a4f-4472-9fc8-5d2e754d8d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf67977-0563-4f6c-80fb-396f2b76cc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb425ee7-f151-49d4-aedc-447d3a176c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cd3e46-334a-4f4f-b5c0-2dde56b630fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6ef1df-dcc5-4eae-a3f1-45af5da57362",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7654639b-09be-4d5c-b4bf-17ccd193d75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c189ee0e-6966-4dc0-9807-19b1c15528c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f39ad1f-f406-4b16-a8fa-0c69295f388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e272ff24-2506-4713-be37-374169223d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef60ee27-2764-406e-9202-278c368aba01",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d749a5bd-5c81-4da8-901d-a2b1f11ba322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dc644a-74cf-4821-8697-9c57f240c724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1f4984-5cea-4059-9847-77e0dec10e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbc45e9-6a50-4ed9-921f-f5b1a8e89d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b67dd35-e239-437b-83c9-919c4f71ec52",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf8cab-17b6-40fa-8915-d23f10a39f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb23ced8-514f-49a1-8ea6-e1ebc4e11c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a0720-e180-446d-b322-53416a6ae2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70526f5-95e0-4879-8f68-226cc35304b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b83031-dc33-44c0-b088-09fbefe510af",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36c5cce-c323-465e-821b-99f09ea1dc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e6d36f-a10f-427d-b08a-9a2f30a51dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d40b885-f9f4-4f26-a3f3-fe65e88df97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83354c5-b743-43ac-a491-d0e9ff43659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2367d04f-4319-4d9c-a76e-d22286e5bc7b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9294752-5d58-45f0-b5f3-350010aa4544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5617f85d-e9cf-4fa3-9b38-e1c5350273b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1aa375-4e15-402b-a7ba-3ad1287758c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5e4466-446f-479f-9c4c-02809a808e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8ac1b9-c1c0-43e9-bb27-06c68b0c1222",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f1073a-2a5a-46be-938d-632fa5b238b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c9d8df-8a3e-41f8-9d41-1946e560d116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49783a2b-4ed0-4a8b-9366-3b9defd5c9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacefadd-bb27-4678-a054-0e65cc79ddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e646eaad-04ba-4b12-b4fe-ac439d89e8ef",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ffcd94-4ac8-487c-b560-efa5d573bee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ce65e3-9b05-466e-b335-f7ff31e16ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313521e5-96d8-4e8c-b9e7-5357fc5e9002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3342d8-6843-42a5-a83d-f8ace9aeaee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd570a8-d922-4bfd-9758-e13f193ebfe9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19f9a3d-4956-4361-be23-9bbc57661b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d109d79-d22d-40d6-89f0-e04f2d25344d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7971730-6463-4f3d-9864-f14d41289417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde4b602-002c-42eb-93a9-131e58fa95b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6610a323-e6d8-4dc5-b0b5-28b373274538",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301915b9-e062-475b-8570-f0170e97c000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d5a3e4-34ce-4669-b763-c1476ed508b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2aaf06-38f0-45bb-9338-2e4ed101cfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc68727-5737-423c-87ca-ac1ec3fc4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fea607-4a10-42be-a000-15215a87149c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16916001-1235-4c6d-8e83-51fed1c7978a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6809ff-67d6-49e7-8c0a-ae1af388a96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01eda7f-fa12-485c-bad5-2b9b30e1ac3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d406c26e-737f-4231-ae1d-e5edda7e32ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed2d97-d320-4f9f-bfb6-55d1d76efc29",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e452fb-b585-41d1-b7ea-381a4b183e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aede7dae-cca1-44ef-b5bf-ecf87b05fd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20cdb28-f365-444c-be4e-1aaa65020eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4a739a-29c1-4981-93b8-c42555a9b47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9b531f-8c8f-4e29-bd04-71fb182b5eb4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a5a82e-f971-4029-add2-30be0720bc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3c456a-ffc6-4bd7-ac69-e2ba38b27a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9bcbe6-4ddc-4a93-9aea-d6a5463ea381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ec19b-b11f-48d9-a592-5335998cd907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52edcfa3-1873-474c-8de3-e5778f3c26db",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1824668-308f-4006-8196-cdc1cea2fe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fa7df4-a008-488d-9bd7-7c28afde4f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b608506-4e63-4ecf-978d-197b162a462e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee71e7c5-a547-42db-a299-4cb0ef447a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e23cff-07c5-429d-81e3-c20d4d83e560",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109de21f-bb82-45ba-adee-655621cb5bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd8078b-33d8-4ecd-8b1e-2660cc8278f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1351b6-0194-4a22-873f-95683020a059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dca011-97cf-4781-892a-4ae34ab3bea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170eddb-afe8-4b07-9833-404bf1806b78",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c729436-ac29-4854-b4ef-a56564829bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48553055-d054-449e-8477-7fcd504c1c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4fd7b0-ef05-4ba4-bff7-a9da799f9bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfc1b69-59d4-4e92-8e7b-d56cfad374eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea28695-717a-4f1b-a13b-e0774168923e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c1f881-c930-4ef3-8874-62f3f6051264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baacc0a-a86a-493d-9357-066c60b366d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116c093b-e45e-458d-87f4-72f427f404e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d323e5-0e7b-4540-8a79-68eeeb193fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2bdbd4-5220-4070-9044-4f6384df6b40",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ba6c46-3c7e-4b37-83cf-3cdfaf86ebdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867b7776-0aa5-4933-b9cb-b8b4057110ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e6c99-8464-4e2d-b853-1049d30f31e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e93227-08f1-42f7-aa7c-f1f79e355416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f603367-649e-46be-89fa-2f6c1c0ba5c6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de3a341-06a7-4379-b54b-91ebc7155788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30782bd5-8acb-4992-99d8-4318b5d7f92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b40541f-798f-4561-8746-a6f502357d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060cb758-8515-4cd3-8443-79ad323187de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4b1de2-4dcc-4102-9735-2b3b6dd5bb1e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6c3624-8078-4a79-b18d-811dc3416887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe840e18-3468-4cbd-a5eb-79f62cfe6b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeb4057-b683-4034-a013-a4919adb385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec90826-f205-47fb-ba74-2d59d0c48e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e3fac7-2d6a-42a6-8c70-6a4ce89af727",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446945ba-c7fc-489f-a3b5-2170f80c3301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6962975b-e891-4bd3-b4ab-a640fe7db74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0865c436-16f2-4a6d-8b64-1f502afd208e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0e810a-e29e-447b-91bf-a1a69c436665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cf540f-a683-47cd-a635-cf6bc420d5e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f569d3-df89-4443-b340-efe3786b8b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6c3369-20a3-44b8-9c47-6ec5ba8a753b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d2b47-aa7d-4462-8cdb-aa01d16aad92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ac3c96-e268-43c2-ac86-4169b651840f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83bce33-957c-47b4-affc-4e45743eae1a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece5986d-82fd-4e7d-8037-64edca842f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc75d09d-7606-4099-8cd4-9d97f8f56c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfa4dd1-442c-4ecd-8cc8-21a6e69c87e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc5a3bb-a1fb-498d-8852-bc9a6169bdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fd1662-dcce-42f7-be63-e84f0e6c907c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e146f9ac-d314-4e66-9dc0-8fd7a07d9871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7d3117-7981-4501-b390-a0c11726ac1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a6e4b-04f2-4e11-9722-d51854ddb926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7813ed-5c54-4535-b450-b8d8cf7bb9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9b4b96-7cb6-49b5-bd48-5a91ab455fe5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765cee64-8ef2-4d63-8252-6527ebc50615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020dd7e9-c5f8-4429-8edc-eff6b2bea463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ccf4b7-5fd3-404a-9fe6-f4f44446458b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f293a8-517c-435c-9835-97d5c36525eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f26a931-fd04-4fd5-bfb7-8e34c481d635",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59325d70-9ab9-4a0d-8a50-1fa1a2f41cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec996a3c-666c-4a9e-8dfa-a20afe8627ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5d81b6-6573-443b-ac74-85829f6f0de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d5c726-356e-4f9f-867f-ee0d13418848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da29c671-3f73-4fe0-8ebf-a4f9c06f9264",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc436a6-0312-4603-adda-fb53dd7acc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16910b84-4462-4ce5-bd06-e4ad4c311e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed1fd97-79c5-4443-a4a5-6971d4fd9af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e8c418-3087-4108-81c7-8e6be0ff05ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcdb9e1-810e-49e1-a5ad-7946dbb0758e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c24ccab-8cdd-47b6-999d-e497e87a6f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ef3f45-3c2e-4851-b67c-ac0608e66e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebaa753-abdb-4796-9950-0b33f94f4dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7809aaf-63c2-41e5-b251-65cacb08dc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5c9f0b-fe49-4cae-9890-40f0240e57aa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce91511d-d414-4e6b-b166-9102631f963f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de6a338-9089-4f83-80a1-d25e93812206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13091c27-b51b-4d23-91a6-933cefdce4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bac115a-6bea-4e0b-b4ba-f28a054afbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0eca8e-4220-44c6-9fd8-900647841036",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fd9de5-14dd-4b8f-ae47-e03570cfd182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96af7dd-9145-4729-b3ac-68c69cb8e120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48935eef-378f-4a30-8cbe-4acded810bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e9019a-d473-436a-ae42-8f01f7822ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbcc505-6dd6-42e0-aad4-92fae940da6f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ca6e5f-156f-4a05-8da4-f1fdee8e0d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40836e36-b533-49b1-8261-064903108fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3477283-ceb1-4536-8551-5477e9315840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89d6774-e5c2-4c03-90b6-3f4741cbd4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aedcd7b-1281-4ac5-8f5e-a574acb9e1c5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb8164d-1e99-4ff4-9ea4-019b9e6b8694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5443f2-a2ac-4d6d-b680-04540b9a9c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77124d6-3871-47c9-9acb-2075bf155b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3710a98e-7a85-4969-80d1-b25ed0dcbcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba037b7-702b-4067-a8ce-3e107a77401c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdc1067-79fa-48c2-a0ad-e3151fc3119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ff2758-6dd2-4dfd-a855-15c1ffd56550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6a99e1-2502-4bf2-a275-a7cd8e8aeb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b43adcc-feae-4cde-90d1-b4590a969eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edfd2a6-1ac2-40a0-8037-651b9740384f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c767522-0aa7-4887-baaf-9a1fcba22afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1265af25-a00b-42e6-9f4f-7b8c8af0995a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22055721-ffbc-436d-bf04-2e646295ee94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf80f98d-99a4-4364-b91d-3e9b83ccb08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3baad-3b1b-4338-b082-f6666cd43c23",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd90db-5e4f-4d10-ae01-5053b38e17eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd62e792-a2c2-490b-a96b-132632abbd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d28a3bf-b82f-40cf-ae98-71812f682b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537449d1-bfec-4eb7-be6e-e7e58b01f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882c2920-e57c-47f6-a43f-194f1af0dd81",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3177c8-1b87-42dc-be68-cdab67960739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55c761e-bc80-4390-a7ed-7222308c9dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7a995c-4e87-4a08-af75-8cf039e6e2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e74a61-c12d-47a1-9a69-8030e52737be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05380a65-6dd7-430b-8c09-376ee7960898",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f9ac8c-6349-4f85-bb26-826ebd278a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842c62ab-d10a-4dfe-abd1-0475a05d30f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e7dcf0-0e7e-4271-b63c-e810ed4fb164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d9f367-05bc-44b2-b788-59fdc908a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64d4080-8dc3-4285-bd3f-d0a699fdb86b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfb9993-220d-4989-b17e-ed7891a1165e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530df89a-0d17-48ec-943e-d79c61581593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fcd185-08fb-4bb0-9061-ac33e3f65a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc0e82d-13e4-450b-9b6e-5f43c871f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8144c0f9-766a-48a9-87b6-0c2b7eeb44dd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2432c-798b-40cf-a7b8-f8aa2fcecac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e27e7a-5100-442b-a643-f9fe87b5c92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557db3e8-330a-450c-9aab-3b87f9f671ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa07f9a1-456b-4c1d-9aa2-9e374709735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73823ef-89ca-46de-a0c0-c233117b7569",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b50589-d3b6-43fd-83b4-77e941f638cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837a552e-6631-4521-bc77-8d72873a7859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff1c9c4-ff68-40ba-bb85-79ce34bccbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aa8f4a-76eb-4846-902f-0f102660b5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9fa7ad-c910-4578-8813-dc88d1cfa226",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26434647-08df-4ac4-8586-ca27a8df79ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5132e82-6e00-47ed-a4d8-f8918cdc51a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81252f3-050e-43ef-99b3-487fa01f68a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093ca7b7-5e15-47e2-9cec-94712624c31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910dece-63aa-4714-a6c1-f3460fc2777f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dcf8d9-187b-49db-8a77-0fa2f8368e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea141e8c-b43a-4257-86a1-d3840cf76537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820f772c-e19e-4f86-ab20-249f45dc30f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e670bda4-b6db-4c60-b051-9dbd4c169d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef63a19-f2f6-4f5f-9275-344030f339bb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f69743-58b9-447d-9ed7-aa418bfe784a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46378c1a-e62a-4d2e-b0b0-02257eefa0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb118d70-2341-4b7f-a08b-19de95bd1f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5817ab-a1a6-42d1-a050-3ffd31442455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e5670-435d-4360-b0e8-d0bacdd85b82",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acc6910-6450-4763-89ee-62ba04fe6152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54640241-b0af-4338-9523-86dc82c37983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa95d61d-aeaf-45d1-8f34-a5aed232a6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88f1755-bebe-4c45-9fb8-c3e32769bb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b365dd3-be20-4905-9b97-cde578cf9de6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8362ad-5da6-4b09-8ab8-b3680dd699a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf7543b-d9ba-4020-bbf1-0f3e8c063f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5d5f35-0e53-4a4a-b4d3-a5511469ed24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50050cac-7c46-4a6e-bd01-1f701d8061ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43962ed-1762-4f07-b311-7c7479af4624",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8ff0d1-f0ee-46f7-a0ba-4469e6d57ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9da0d64-4dfa-49d8-b5b9-9f469d55f0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56d7fbd-1840-4b7d-8301-a3e3c48c1069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615efc5a-d166-4477-8ada-cf525b91b2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f38694-1bb9-4211-96b5-7c672c4b1a6a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01c6465-71a1-4f23-b5e7-160b6e350d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de778e7d-dbc9-410f-8751-4e219ae340a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b6ccb-e61e-4903-b829-b391a2a08b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1be2ae2-4cbe-4c53-8e3a-1d34b4cfe591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c35dcf-e1fd-4422-8433-36399ea46a41",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55372168-f697-4bd3-9b6d-9c8aa94a030d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6a0c96-9dc9-402d-9155-952a5a13b25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc6df04-71ba-4b50-ac48-be0771f8802e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93e890c-e643-45e9-b957-205bbe5f2681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ca9afb-b1fb-4f49-a248-73e991b31308",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f8076-afce-4ce6-a5ea-4ae3158b4674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf071436-ce58-4644-9e10-386bea9cbe6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad85b29a-6e21-45df-a4af-acc7c27297ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafa911c-1d3a-42a2-aaa1-3b8f8d0fcca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bfc33e-ca53-49ce-84e9-b758769481d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8abb1-b49d-4b51-a7c8-ee64e3f8336e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe5aed3-1d23-40c3-985b-30cb26843a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7221edf-56d2-409c-904c-086cad3930ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09034165-133e-462c-b77b-a2649ff08d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0698b279-aed9-489b-b54c-8411d7736273",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a3c9c7-7b27-4e96-a3c5-f1811b59809f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f1044b-7975-4e32-9040-b1d5ae19817a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590e85d2-0b84-49e3-bf82-67f2c7b53724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457e9a94-e195-4c84-b495-9aef20d33cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449b5621-60d2-46ca-bd39-672b4e4d749a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca40630c-41cc-4018-ac7b-4c495a1840df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bced71ef-a6ae-4539-8352-a9d6fd21fc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8ff99f-d24d-45ff-9d31-f0878f0b4ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f634e0-c318-4ed6-ac56-4032bba6a7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9352eb-1282-4750-87bc-e6e0a2dc89b6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18225070-48a4-437e-9d36-b32b9a9f01f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4439fc-d491-40c3-a5fc-da1aca6e009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b393f-8a58-4a49-8cd0-80fd6f078581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acd1782-0c67-4848-9ee3-41f49c495709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2922b621-560b-41ad-9f75-8154caf0ab21",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e9f3f9-e531-4b3e-8d18-3d690e9f6093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45dcca1a-7308-4476-95d4-d31043706130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6fa9c6-4bd5-4b85-bf6e-839523636837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed05e900-ab3d-4ec5-af74-f5fc762a0b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a83e4-4695-4720-b969-3ce9ae36965f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2db994d-da0c-42d0-af74-0f07ada46016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1b530e-05f0-444e-bb5d-7e5dd3095d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf47002-f698-4b22-be56-7e5f53cdd675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee73da54-f0e2-4d60-9005-9876e078e29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1461fbc-eb9c-4907-be20-e66441250cf2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3879a451-16fd-45b0-aae0-68efb6f9e97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4a9cf2-6587-46bc-bd29-c6f766b5067c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be59190-625e-4bc9-96bb-bd3fd7f144df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06532289-1f42-4d22-9e52-6dca52a11ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d730d20f-ab24-432f-9371-c1652f213516",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211ef41e-f935-4f16-a03a-efccb2bced11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7c3144-37d5-49e6-be34-f6104d0ba303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c615ad69-0c42-4742-a8e8-097733df3e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8c4ac0-9e8b-48ea-8df5-dbae1ae27020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d17f75-2173-491e-9c5d-06903b680bef",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56f60b3-d609-4041-a194-0271006a5933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128061fb-2e19-4a3b-ba57-7c69a44408d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c0922-12c4-4bbe-be95-186fc6a9daaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbef57e-9a2c-41e4-b55d-6f15122702e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524312ca-b0a0-4cbf-8f41-de89c43680e1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571488ee-a5dd-40a3-b83e-973fad7dd714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f61bc22-e92e-4317-aea6-986fa09bd3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205272d2-4c80-414e-83ef-d34240501864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0f3374-c2cd-4455-9840-55fd3557f2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0980dd-dda8-48c1-8906-757460c4d43d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce13f3-0e60-4624-8c18-06ebd4f1c6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983647ab-dade-4b70-90bf-33b1e0eef907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd23d5b-0d10-4fa7-b768-67e17a1bb4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6140a4f9-f21b-4779-bae9-437d31ed69e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c5c601-0250-4f2e-b777-66e8851f8cee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050ac2ce-af54-431a-9f6d-cf4a808fb468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a6a743-c30c-41bb-9061-8b9352ba36ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85782eb0-97f7-4cbd-9d3b-118d8960e075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb37c2ee-7bd9-4613-8d32-3ae6372d9cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96129d2a-d0e3-457f-bee2-81d57211308d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2db784-ba78-4d4a-9fd7-8d6d2d986a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdde96d-9f8b-4fe9-afcf-1d47af00e574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f78188d-7ea2-478f-b3a8-479db79d0352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4f8cb7-2f72-4165-b512-0e5eaaa8bcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da637ecc-52d2-4be4-9295-b90e5a130d98",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893025d1-1a85-4167-b5bb-97e91d16ae29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5311a635-1b7e-4348-9663-f27616b8f975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4db9fe-3b83-4376-8297-37784c4acde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e06787-f572-4285-8e03-d9b12c77dd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb4f69e-006e-45fc-bf49-ce7accac71dd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f07968-acca-45a6-ab9f-91518b902a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9aea5da-5752-4222-8ec2-a5cd3455a611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bc6e49-691e-47e0-8a0d-b9b93cca6a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c830ca-fca8-4dfc-8d39-3788f68eadc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0fcf08-a856-4e78-99f7-629321375033",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7388e8-66e2-48ef-bd4b-4c4586c9eaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f14d48-1700-4fd1-8757-075395c77375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f93647-3eab-4e1d-8409-b76881eff515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6233e6fd-78df-4138-8c8e-2d4a6089158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7cb6bb-00a0-4e58-9c31-ebd267d944e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac44235d-64ae-4118-9106-e8815fa046d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2378aae-6b24-4d47-9dbb-a65226307aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7b182b-815f-4569-91c4-517ca3b8f872",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae154359-d6bc-4f85-b924-55e40a5590e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed390a4-f494-4505-9256-9f59ea545bab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19248c58-5464-42cc-a68c-2e9b42521dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f72e3cb-a2cb-4612-8de1-84fb72985f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563241a5-012a-4675-ae1c-dfda9a2b0433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1eb2637-0c01-49b2-8c32-5a6dc9761e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0183ea4-5366-4c2a-9e6b-d8ee252816ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16251c3-69ce-4092-9f3a-3b08c51f0ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833d175d-c574-4746-952b-a52c64dfe823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42bfc66-9864-4c17-9d1a-33d13b7bcbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bfb373-988c-4a4f-967b-17ad132bb1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b28b52f-702a-48d0-9186-c561bb3dc63e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d2b4c-c081-4196-bf87-f2854cc811c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e7f643-9fb2-41d0-a49e-ac7b9be2cf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d8d319-d01c-4ccb-96df-20491fcb4d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e6a26e-a8e6-43d1-835c-7fc634fbda9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99c252a-6386-440f-b126-c7d52b8a02ca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a230c60-6df6-45d1-b774-2cc47d27287f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e936262-8f04-499e-a6bd-c63362616ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc5339-1752-4427-976d-04062bbd078a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e17e98-55cc-4eb9-8ef0-4d41916f3e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b10a4e-9b73-4d75-9e07-b1cc94002e46",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4590e06-6f7b-44b5-a060-b399bde57bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16db5901-62b9-4abb-a330-d75c5c4907a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1bc87e-3ec1-41c5-9a12-cabaf1cc4fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67e0b42-2206-4cf6-9ccb-19d1aa8e5971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38351205-763e-41fa-ab15-005c82b5cb59",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95770879-cdd3-4179-9cac-8af5abdd5591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d339cc-9d25-4133-9809-3e0406be0fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af0ca1-4b8a-4334-b5ad-b4780f7bc30b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb314c0d-0f16-42ff-b2a8-3ccfad0fdf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4302ba6-6e84-48af-a9b6-080d24020202",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7f8b2a-e812-4d35-9d8f-63a42f48b056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5871d2dd-91c3-42b0-be32-47eb50e29d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33240275-4a68-405f-8cd8-c1a87fdfb8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1e639c-26ce-490e-8345-a28d28574bd7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed4704f8-8cc4-42a7-b3a8-f0946d383508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34a0ca27-e467-4d56-ba75-615f95770cb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b68879-1c8c-4145-969b-46f7fcd66cb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2f28bb6-cf41-402e-bc16-77fe40f30deb"
                    }
                  }
                ]
              },
              {
                "id": "cbbf1b76-7a52-4a95-a125-6f511ba226b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f161a31a-6308-4ec7-b6a1-47331686830d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c686a-8248-41e6-8a92-f2a1d9596601",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "85605939-533b-4250-a921-3c66c2a4cb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3d8eba-79ea-4fdd-915e-2c854a841f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9643daee-3a33-4006-88de-41def96cc5b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9602f765-b37b-4242-8f68-42e857381f70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0177947d-398d-48e2-85c9-34b02ad53c22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "609a350c-bce6-4113-912e-462e211e3ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8bfbf6-7d3a-4d80-981c-1c658de5a2cf"
                    }
                  }
                ]
              },
              {
                "id": "b4b6b831-d7ef-498d-ad6a-90763d7a953c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "05c852d7-3b57-4144-ba4a-f78cf6095585",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abb9b7-554b-44fa-98d4-26cee31d495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "af0b40c9-4223-4334-ad27-ed1f8cbb560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80aa828-3c2e-40a2-af44-35bc8425aa2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b963211-c29c-4128-a3c4-d1517418c291"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca3353dc-173f-4c3a-89f4-5169491db260",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e035198-0e8d-4988-848b-f0c9ac18db77",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0049ed45-13df-4b28-b714-885147d89aab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f4e637c7-f8f2-497e-9c02-b261973e73de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7630840-3b28-4cc7-b377-ee7ae51cd44d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eabe1e12-eb07-4cce-9916-00d0dfb854a3"
                    }
                  }
                ]
              },
              {
                "id": "d628e7bc-a2eb-4243-8159-1c242a27bbf2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eea81f74-8b65-4a15-8cb5-5cce1b17fa63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6eaf1a83-9794-4904-aac4-7e973cfcda91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "211e742c-19e4-4ef3-9fdb-cbba0c8563e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d655ae6-1ac8-4fc6-b329-a773c0f1a590"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e24dc874-e2f1-4fd8-b26d-55e3f720e0f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8555a81c-f0b9-4b7d-b643-54a3ce5f07bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "391b77ba-177e-4c2b-9a4d-0b9c8f17b99b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de265984-914b-4021-87f4-53433cd67d6e"
            }
          }
        ]
      },
      {
        "id": "05514716-5b5d-412e-9894-2ca1647a1ba7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a048c655-7074-4f1e-ae0f-16e93b419665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5250166b-549c-4b28-be24-755588c2666b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4672aa20-43ea-450a-a49f-5fe5bf64448f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa8da66-60f1-446b-9b3f-fb72fb899c10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c0bb5bd-d24a-4871-bbb8-ff662cb0fc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf36e80-3345-4908-8d04-b15eaf4d2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ec62be0-234a-4ddb-bf81-8a16ff1cda84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8ff7e13-86a1-426c-a9ec-1ffc2eee1932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69ed34fc-a13e-4100-8661-bd1b6b0dde23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a44f159-08c6-4e84-956f-1d38e82d4e18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8307c99a-7d16-4b14-b6c8-a564cf9a85a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc92deec-b0d0-44c2-bdf6-54065860b657",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5aeaac41-62d2-4935-84d4-1516f3f356db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af243a0b-3c90-4525-b9a3-a32c1adcdb9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea8ff239-151a-4a47-8c6b-fa4590bcd239"
            }
          }
        ]
      },
      {
        "id": "4864ee34-837d-4176-b423-53a2746e6177",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a60144fd-017e-4da1-b3bc-eef93502f5c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6b5f4e4-c72f-4b1e-bb1b-1979c69f8dab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9220bbca-3570-4d7c-8fa0-51f56f2ee15a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c33f0f9-776d-4a85-859c-da04df0f1e81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b821a7-d661-4796-83d0-35b6093d7a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b2dd3-64c9-4629-bfe4-7c3bb0e686fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b463db10-d24d-471c-9df8-f4c872f3a1de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb1ba830-e9bf-438d-b7e6-6311abf8c628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1e219ea-b99e-42a6-a903-4837be7ba98d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb91a65-f208-48f7-bf9c-3efe58d78c65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b5b3c79-33ef-4f81-9837-3601857180e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc4ecff2-d0fd-4de5-8614-c0b5682dc049",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92f70d22-3275-4b32-863a-902b6b8c737c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2b42285-269c-4690-927a-3bd0de1306bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d033e60d-ba8c-43c4-9f29-d8a52739884c"
            }
          }
        ]
      },
      {
        "id": "a778e9ec-7f15-4ad4-9af9-5a5c000fbac2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b6cc3f9b-0fbb-488d-ab79-dd5b5c332218",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb70a077-6a3f-48bc-9197-77793f26305a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e69f50a-d61f-4512-9861-5820318dda54",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fcff82-9271-4a65-a40e-15e228b801e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b4af0fa-9cf4-4eb2-aaa3-a73029ed7215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fed387-b034-415d-a4ae-519a4c72529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bf159ca-9679-4bff-b7d4-d286cc8cd15a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7b583c-851f-4fa6-8d05-b2f25a395e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85654062-a9cd-4553-a062-0eec57ac588e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ad2f610-d99d-47cf-9792-64e71d9bde4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19f51fd6-86c1-4789-a49a-bb55eb9c0740"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61abec0a-0518-486d-b37b-9326350d89d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5863eab-cb55-4790-b6e8-acc8bfb4f223"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "684f3c97-b662-46ff-a98e-3a44c6f2e9ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d796b37-cfba-4b41-98ce-8baac132bf0b"
            }
          }
        ]
      },
      {
        "id": "cacee7e9-89d8-467b-8619-4bef71dea27d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f130179-0488-4b19-94a9-0cd83dacbf89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "690010fd-614b-4ada-a641-efdbaee89864",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6dfb82d7-b4f1-4bcc-93ec-b5323afd6033",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29694380-d915-4d17-a76f-0993d1d595f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cca66fe4-65f8-401f-aeef-0fc45785b603",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 176.12631578947372,
      "responseMin": 21,
      "responseMax": 6820,
      "responseSd": 648.3505588817023,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700440584515,
      "completed": 1700440644048
    },
    "executions": [
      {
        "id": "844a8bb6-ad68-49a5-bcb7-3939167d7113",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6ea29497-70d6-46e6-86c9-2856b112fcc5",
          "httpRequestId": "ebbef75e-5241-4dc4-8c87-dfd7fb67fe96"
        },
        "item": {
          "id": "844a8bb6-ad68-49a5-bcb7-3939167d7113",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "83f15ade-7d55-4e76-8575-555978ea00d2",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "d304e5ad-bdcd-4683-92dd-ecec1850d327",
        "cursor": {
          "ref": "a2d27342-7b5a-4a34-8c8a-977e5687f3df",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3bb93b2e-77ce-4228-914f-0a05fdd59770"
        },
        "item": {
          "id": "d304e5ad-bdcd-4683-92dd-ecec1850d327",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "55d1a748-f8a9-4dee-be4c-e54e6d1c00b3",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "72ec806e-ef49-4f9a-969a-ed52acadb4e8",
        "cursor": {
          "ref": "f1a5700e-5dc7-4710-8e61-c72a58a8bd54",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6a3ea796-ef54-4914-9afb-f493912b3f56"
        },
        "item": {
          "id": "72ec806e-ef49-4f9a-969a-ed52acadb4e8",
          "name": "did_json"
        },
        "response": {
          "id": "2c4be5cc-3e28-47ea-83b6-0671aca51c08",
          "status": "OK",
          "code": 200,
          "responseTime": 471,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919d1fb9-c7f8-420b-bf0d-9e52e8a64d5b",
        "cursor": {
          "ref": "6f249ff8-3dee-4955-9e4e-5dfd0ea3932b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fb72731-a90e-4f56-8d30-82715cd01935"
        },
        "item": {
          "id": "919d1fb9-c7f8-420b-bf0d-9e52e8a64d5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "e4fd5570-188e-4e97-96bb-874fce9a1dd2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 689,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919d1fb9-c7f8-420b-bf0d-9e52e8a64d5b",
        "cursor": {
          "ref": "6f249ff8-3dee-4955-9e4e-5dfd0ea3932b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fb72731-a90e-4f56-8d30-82715cd01935"
        },
        "item": {
          "id": "919d1fb9-c7f8-420b-bf0d-9e52e8a64d5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "e4fd5570-188e-4e97-96bb-874fce9a1dd2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 689,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c073c44f-b953-4430-b5a0-7aa0beaacb28",
        "cursor": {
          "ref": "eb4b2bba-2681-4840-9775-9e0d6188fcfb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aae2cd38-bbad-402e-839e-229120c410a5"
        },
        "item": {
          "id": "c073c44f-b953-4430-b5a0-7aa0beaacb28",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "922c0b7e-0f14-4313-a80e-2753c68f2ebc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda6ba02-7402-4439-8eb3-fd886c00aadc",
        "cursor": {
          "ref": "2778786e-0f13-46e5-8136-20c1dc9d3973",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0b4cc981-7904-4868-b844-623965f3d7e6"
        },
        "item": {
          "id": "cda6ba02-7402-4439-8eb3-fd886c00aadc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f5a5ccf-5c0b-461e-8b5d-1fa166c7f01c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827bbf8f-f1da-4094-adbe-cb3441cfa280",
        "cursor": {
          "ref": "0a5b6eeb-e765-4720-852f-449835aef30e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3f30e92c-ad85-4389-ad13-2096521a0526"
        },
        "item": {
          "id": "827bbf8f-f1da-4094-adbe-cb3441cfa280",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5d98b394-40b6-4cb3-b5c0-c5821e01d971",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d78bf-e589-4b73-bb62-1ea88106dd33",
        "cursor": {
          "ref": "8728273b-ddaf-4a0f-b795-716cf5d36c09",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d32a80c-3a6b-48b1-8285-1b78fe38f5b8"
        },
        "item": {
          "id": "b32d78bf-e589-4b73-bb62-1ea88106dd33",
          "name": "identifiers"
        },
        "response": {
          "id": "1b2b280f-baed-4467-83ea-439b30fb501c",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e6032-59df-460b-a342-63448f13c7d8",
        "cursor": {
          "ref": "fbbf82e0-68ff-4a60-8606-36079630ca46",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eed8257f-0a50-4c0f-b1eb-a042d8343adf"
        },
        "item": {
          "id": "d67e6032-59df-460b-a342-63448f13c7d8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94a215e7-dbca-4454-ad62-fbfa6f4be9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b25118a-1452-43aa-a03a-44c2155c21ba",
        "cursor": {
          "ref": "a2e041fc-13cd-456c-87d7-8e7bf8e9bd99",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "09e7596f-c9ec-4a52-8d9f-3dcc4cf862a1"
        },
        "item": {
          "id": "9b25118a-1452-43aa-a03a-44c2155c21ba",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c28ba295-e0c2-48f8-a4e8-95874dba936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7532ba03-64a1-4248-8f60-6170540463d3",
        "cursor": {
          "ref": "a178418f-9f0e-4dcc-95dc-8da69a22f395",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b9124a24-2c7a-4dd0-81f4-c5d1e53e0222"
        },
        "item": {
          "id": "7532ba03-64a1-4248-8f60-6170540463d3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bcab2def-e56c-45a4-ac84-4c0edd5b308a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd042927-f7d0-4d5e-b288-ca52f15d7bd0",
        "cursor": {
          "ref": "617159ed-9fbb-4003-807c-424a51d473e0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9842d13-40c5-42c6-9d04-d99df1ba1041"
        },
        "item": {
          "id": "cd042927-f7d0-4d5e-b288-ca52f15d7bd0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7ea70953-d91e-4864-b5d6-9736da749e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b5d71-f9dc-41a9-aa09-b2ad38c6ca29",
        "cursor": {
          "ref": "a9ef1003-4ccb-4325-84bf-11c5399bb8c2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6d2c2ca-c856-485b-b848-c9a7ac1002c4"
        },
        "item": {
          "id": "098b5d71-f9dc-41a9-aa09-b2ad38c6ca29",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "266db9a8-1542-43eb-ae04-6110b751e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703ad5db-3898-4892-97e1-04cb29427104",
        "cursor": {
          "ref": "e4f73969-2bc3-4226-9505-cf8edebd1fc9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "30e85954-b3ca-4b57-8509-050e884aa25c"
        },
        "item": {
          "id": "703ad5db-3898-4892-97e1-04cb29427104",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "554a1940-01d5-4ec3-b61f-f32270da2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6796e77a-eb60-4e3c-a87f-c587a3ce3789",
        "cursor": {
          "ref": "2aefc199-12b0-4aec-9dc2-3773766e64bd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6215280e-c4a8-489e-899e-4a52fd7ca5c3"
        },
        "item": {
          "id": "6796e77a-eb60-4e3c-a87f-c587a3ce3789",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8be5a9ac-6e72-4176-88aa-0ad36cb0c17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c547d98-4702-4567-965a-b424fd9af414",
        "cursor": {
          "ref": "6d990ccd-4e4b-4db7-8b9a-00a6c2984477",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0c793759-8ebf-426c-bb8c-97aedafa7814"
        },
        "item": {
          "id": "1c547d98-4702-4567-965a-b424fd9af414",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d25b94bf-2c06-44fe-9bf4-8872b2a70848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d8554a-4179-47ec-8f95-152af67eb0a0",
        "cursor": {
          "ref": "a69004ec-2c2c-40ca-88cb-ef33d307461a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "65317e0c-5e30-4e51-867f-5a9149a771b6"
        },
        "item": {
          "id": "86d8554a-4179-47ec-8f95-152af67eb0a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6cb2dd7d-b03d-4a9d-a238-f9573a50da8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f39e7c-65ad-455d-8a6d-8c60f1de2c00",
        "cursor": {
          "ref": "fc97f72e-a3fc-4ed9-94f5-2eec4df196c2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5606f085-d5fe-4480-9274-e7b922659755"
        },
        "item": {
          "id": "90f39e7c-65ad-455d-8a6d-8c60f1de2c00",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ae2c5673-a4cf-4230-97ab-cda7029038c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8e538d-f0b9-4731-8a7d-6828de4a93e6",
        "cursor": {
          "ref": "29a02d61-40e7-45d0-9631-1a133999191a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be76c2f2-43b9-40ac-9f17-c10da01802c9"
        },
        "item": {
          "id": "ad8e538d-f0b9-4731-8a7d-6828de4a93e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "66fde8df-e2cb-414c-a6b9-9375649ae680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de7aaa-33b8-457f-9491-82dfd374ad90",
        "cursor": {
          "ref": "a0e03ffa-f585-456b-b722-9febe3d19dd7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2225ac2d-d104-40a4-b5b2-345bf0eeadaf"
        },
        "item": {
          "id": "94de7aaa-33b8-457f-9491-82dfd374ad90",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5f787986-73cd-48c8-b21b-37299e74d41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae7dd06-348a-4ff0-959a-560199bf9e3b",
        "cursor": {
          "ref": "9fcf0667-236e-4804-b007-e6d12633d1e7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dc27faa2-d5a1-4144-83ed-e043fa875633"
        },
        "item": {
          "id": "7ae7dd06-348a-4ff0-959a-560199bf9e3b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fb7ef2cb-7211-497d-beb6-73e5c243b61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b1fd5d-148b-4e24-8fff-4c7fde612b7d",
        "cursor": {
          "ref": "01471633-6587-4df1-9e3d-226f9aa05b13",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5212b968-71d6-4057-87aa-7b939e472141"
        },
        "item": {
          "id": "d9b1fd5d-148b-4e24-8fff-4c7fde612b7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "19cb43e4-14e1-4b1a-8e7b-45410844b7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f835a89e-55bc-477f-b552-cbebbdf91dc7",
        "cursor": {
          "ref": "e356a8bf-f93f-44ab-a849-ab26258bc5a2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7d49f02c-84e2-4e3c-be16-1974cb3e0baf"
        },
        "item": {
          "id": "f835a89e-55bc-477f-b552-cbebbdf91dc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "16d8f226-cb25-462b-8c72-e163ea13aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c944ada3-7ac8-4df7-9e0a-b4bbb0f7d251",
        "cursor": {
          "ref": "f8b60c17-1a07-4760-92d9-5c5b5bd57960",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "60dfb4b4-7d89-426c-99ae-f213a138c7c2"
        },
        "item": {
          "id": "c944ada3-7ac8-4df7-9e0a-b4bbb0f7d251",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d25c3695-c277-4671-b1c3-db8cd5088369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f83c3b-61f8-4e80-9531-8a6bf2ad542d",
        "cursor": {
          "ref": "ba21518b-cd2b-4cb8-80a4-dcb30f7f853c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6cd2c591-8fa9-40e9-a89c-67bf86e97ea0"
        },
        "item": {
          "id": "53f83c3b-61f8-4e80-9531-8a6bf2ad542d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9cde35bf-011f-472c-b5d5-38fa8c91547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e1394a-d68c-495a-9cd7-b16ef46ddb2b",
        "cursor": {
          "ref": "a5c15ed7-a424-4e28-99ec-b785127006ea",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b8e485a3-7506-4b70-8f6a-e9ab8ac861ad"
        },
        "item": {
          "id": "52e1394a-d68c-495a-9cd7-b16ef46ddb2b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cbed0474-83e7-4c44-b6ca-a6b0d3d1076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f320d4-3694-4bda-b159-f09c71aba3bf",
        "cursor": {
          "ref": "6debca80-c906-4a98-a190-f37b68cbf52b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "338d9c72-9545-482c-820d-cd72d6be7f02"
        },
        "item": {
          "id": "53f320d4-3694-4bda-b159-f09c71aba3bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e99a142-a0bc-4146-8215-3ae8cdb956fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a04346c-02e6-4dc1-8129-70d8d6172f8e",
        "cursor": {
          "ref": "27d6779f-6966-4e44-9106-8c3c893373da",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "12891d6b-3a99-473c-8567-2142c7be51aa"
        },
        "item": {
          "id": "7a04346c-02e6-4dc1-8129-70d8d6172f8e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "da85dddc-bde3-46c8-b892-066ff230a126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4ee43f-b3d8-4f23-ac80-e7b053a16729",
        "cursor": {
          "ref": "1c296d27-b135-4a62-b1e1-c45f935d6cb2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bdd640e3-e411-4266-be05-1fca79b24b5f"
        },
        "item": {
          "id": "8c4ee43f-b3d8-4f23-ac80-e7b053a16729",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1fa9966a-3a42-4ae7-bf4b-f73c5a6a5356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10427043-3327-4535-acc2-48811236d247",
        "cursor": {
          "ref": "4b358d5e-a366-4130-8802-5c874bf0b0b3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f658603f-2fe8-457d-a5fc-78cd016d97a8"
        },
        "item": {
          "id": "10427043-3327-4535-acc2-48811236d247",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e92f1ad4-b225-4ae1-9127-94844e0b2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a689fab-88af-4aab-ae0e-e5573c99c7c5",
        "cursor": {
          "ref": "144e81c0-0e03-4935-9371-0a5e739f0334",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6c5ee040-3cce-47af-b4c4-5474b75e5dd1"
        },
        "item": {
          "id": "3a689fab-88af-4aab-ae0e-e5573c99c7c5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ee9cc77d-325a-4f62-a84e-e61eae2a1187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7cfc69-2612-4706-9539-18b03b11c6b1",
        "cursor": {
          "ref": "588bd365-45b0-4961-8fc6-1714b740464d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4f37164f-88e8-4e01-b3a4-f7105726d73b"
        },
        "item": {
          "id": "6c7cfc69-2612-4706-9539-18b03b11c6b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "999c4842-0966-4eeb-bd22-15fbadb3dde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b8bee6-481d-4bed-b40a-3fada82cb4aa",
        "cursor": {
          "ref": "9b065b3d-b16c-45d3-9124-8e3a20eb1b54",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b4456ff-4cf3-4d3a-addf-ca7456303760"
        },
        "item": {
          "id": "21b8bee6-481d-4bed-b40a-3fada82cb4aa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9513bcfa-a034-4f56-b219-cc5c2287bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a48be39-14d4-4b47-a265-a4d8e5ccc039",
        "cursor": {
          "ref": "d8032e56-0c9f-4682-ab8c-f7d181d33cf4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8d123af1-6bd8-4316-ac48-7b7f343e2efa"
        },
        "item": {
          "id": "8a48be39-14d4-4b47-a265-a4d8e5ccc039",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c1a47190-ddb9-4639-bc82-a560e76cfdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9289aad-9005-4db6-a1b3-2b4cef667979",
        "cursor": {
          "ref": "783af8ca-cfa6-44bd-bd9b-9d9cfefa8b39",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3928ce91-06e8-49aa-9ceb-90bffdd40e72"
        },
        "item": {
          "id": "e9289aad-9005-4db6-a1b3-2b4cef667979",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c9a0694-14b1-4d41-97c5-0acf362eb60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e31b056-09bd-4847-a3d2-c13fae7459f4",
        "cursor": {
          "ref": "7e96440b-5f1b-468a-af09-8728baf083f8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "328571eb-ba37-49a5-86a4-297a5c402d86"
        },
        "item": {
          "id": "1e31b056-09bd-4847-a3d2-c13fae7459f4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "85f459e5-80a2-44b9-bdbb-6d9b63b518c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b1d8b8-a512-436e-97f3-6fc798a92cec",
        "cursor": {
          "ref": "d2755feb-6a45-410a-aae2-c0cc41226836",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8d0c2189-a3ea-4857-9942-ed05f9937ee5"
        },
        "item": {
          "id": "b0b1d8b8-a512-436e-97f3-6fc798a92cec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9fc55f9b-7102-4f74-80da-a97f8945c4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5f7434-bf60-4828-88bb-c64cae34f56e",
        "cursor": {
          "ref": "d79970bd-ed7d-41da-afb6-77e52456edd3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "28ffe9d3-ce26-415e-8b95-54cd7f2ea1d5"
        },
        "item": {
          "id": "bc5f7434-bf60-4828-88bb-c64cae34f56e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a5311e21-7111-40c7-8659-f0be82bc9d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd49011-ea34-4717-8c1b-377980a1a40d",
        "cursor": {
          "ref": "fa03a1d7-d636-47f3-855b-dbe5f9eaf2c4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cbb892e-dd93-4e15-b7e2-61d9244b3698"
        },
        "item": {
          "id": "2fd49011-ea34-4717-8c1b-377980a1a40d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b727d201-19ea-4f5c-bdb2-ed0a922d211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80430217-170d-40d5-a698-6ecb622a22a9",
        "cursor": {
          "ref": "bed66453-f13d-47cb-be06-b6cfeafe5851",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c7e18d16-daf4-40b7-bebc-83df3b2fc72d"
        },
        "item": {
          "id": "80430217-170d-40d5-a698-6ecb622a22a9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a1358648-baef-490f-aa8c-ceb2c16f40c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10abf324-156b-43ab-9b59-6291048884bd",
        "cursor": {
          "ref": "1018d672-f2e2-4431-a739-a19db08571a1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d117e3e2-eb6a-41e4-ad7d-5bc7c4495f5d"
        },
        "item": {
          "id": "10abf324-156b-43ab-9b59-6291048884bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7305757a-2ad4-4129-b416-f76413847e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d5764a-9db7-4a9d-81c4-71b9015f3d49",
        "cursor": {
          "ref": "6ee2b218-82a3-4326-b166-b2b87bf5ce1c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0a6e1416-c580-4037-b424-b61b1ba9d5b8"
        },
        "item": {
          "id": "80d5764a-9db7-4a9d-81c4-71b9015f3d49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "af2e9b22-64c1-4be0-b210-ad346552c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30212b9-b0b0-44d3-bf6c-d985e88199aa",
        "cursor": {
          "ref": "263ee343-4eec-4f46-ae14-311b7469b210",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5b8ea13-241f-469e-af93-dd866018ada1"
        },
        "item": {
          "id": "d30212b9-b0b0-44d3-bf6c-d985e88199aa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "46c57155-9c7e-4843-9d80-d649e389e363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4026497-a997-459a-ad5d-e155d0914447",
        "cursor": {
          "ref": "36fec99e-4985-4833-a64e-ad9779063e3c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "56ab9671-48cc-4a50-857a-c20ca8e53d21"
        },
        "item": {
          "id": "c4026497-a997-459a-ad5d-e155d0914447",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "483c140d-008c-4a6e-926c-5f232eda6455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff184a-386d-48e2-850c-025242b22bba",
        "cursor": {
          "ref": "6830a410-79fd-40c0-b50e-72ace1473c90",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0ccf5626-97be-47f7-979c-c6df3ea62f5c"
        },
        "item": {
          "id": "d0ff184a-386d-48e2-850c-025242b22bba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e2e76323-f1f0-4013-81ef-5d0c2dabd0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe3ca3f-38ea-4c77-89db-899d9947332a",
        "cursor": {
          "ref": "f2353ea5-430f-401a-9083-601429ea8307",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c8f899cf-10de-4447-864d-623c91a3298d"
        },
        "item": {
          "id": "0fe3ca3f-38ea-4c77-89db-899d9947332a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "09bef0ec-9ec9-46d9-ba25-77f3bd9c5540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bbc380-6b4d-4932-b30f-45bc21d810e0",
        "cursor": {
          "ref": "869d4ea5-8f23-4895-b968-67e26a879cd0",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "481d549f-533b-4834-b4ec-2590928c76c5"
        },
        "item": {
          "id": "c9bbc380-6b4d-4932-b30f-45bc21d810e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1c56f5fc-4c1e-47d9-b6de-c5fa7ec952fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e491d89-ad4e-456b-831d-69d16ec65582",
        "cursor": {
          "ref": "f1727555-7f62-4434-8d28-ed5327ceb13b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5c6b6d9-bda2-4319-ac7b-6f496ce9bb64"
        },
        "item": {
          "id": "0e491d89-ad4e-456b-831d-69d16ec65582",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "79dddace-9f28-4f7e-b4ed-6a3795d45a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199ed4ff-8db2-44b2-8530-8af6e2d10907",
        "cursor": {
          "ref": "f29a75fe-6c22-428a-a0ff-3e9c76119acf",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "967fe66f-20d9-44c4-b7e4-ddbdf9310368"
        },
        "item": {
          "id": "199ed4ff-8db2-44b2-8530-8af6e2d10907",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8f9c3289-ee54-4f59-841e-efadc5654635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2a07b-4bcb-4b8d-8836-d1e9363b8b1f",
        "cursor": {
          "ref": "e7762cc9-4444-459f-a1d6-36496ac25c88",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b7fea54d-7b7b-432e-a4ce-6fce1bee63bf"
        },
        "item": {
          "id": "c9e2a07b-4bcb-4b8d-8836-d1e9363b8b1f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c62d1c6e-01d2-4baa-b108-118fe503febe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3adc22-2f33-4ad2-80f1-e6d1e6f7dcd9",
        "cursor": {
          "ref": "79dbb256-a805-4ac8-afc6-091531f32c93",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d144b0bd-25ce-45cb-b306-e0bcf2de2024"
        },
        "item": {
          "id": "2b3adc22-2f33-4ad2-80f1-e6d1e6f7dcd9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a4aacb95-77de-4159-b9d1-a57084365049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38636efd-90cd-4b7f-b8fc-4e93968530d8",
        "cursor": {
          "ref": "653c8806-d32d-4358-b005-a34ee5ec4397",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0b0dbba2-4389-4c49-a1e6-1c7a8dc23f2f"
        },
        "item": {
          "id": "38636efd-90cd-4b7f-b8fc-4e93968530d8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "821d6d87-52d1-4f0f-8b8e-2fbcfa72df1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30597c9f-a1e7-4f2a-b62f-50fb2954eebc",
        "cursor": {
          "ref": "5b2332e2-868f-4eca-99b3-4f9aba0223eb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8aeec1ad-ab52-4549-b2fa-b829a83f98ce"
        },
        "item": {
          "id": "30597c9f-a1e7-4f2a-b62f-50fb2954eebc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6df038da-c5d9-42cb-ad22-a462daa00d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9879c4a6-f1cb-46c8-a186-3cee3351b31d",
        "cursor": {
          "ref": "b05b3025-967e-4d03-8839-48a9957b6960",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a43ad3e3-3cc3-4387-af38-e552604a0c8c"
        },
        "item": {
          "id": "9879c4a6-f1cb-46c8-a186-3cee3351b31d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "558d0d9e-6644-45ed-bf65-4033ad7abae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1aa554-8e95-45f2-a854-8a4f6701099e",
        "cursor": {
          "ref": "b67f613c-a2d2-4f1a-bf17-81a17304c217",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c18cbd25-4342-441d-a7ca-a367acf5df00"
        },
        "item": {
          "id": "df1aa554-8e95-45f2-a854-8a4f6701099e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1e51ae93-fa29-474e-afeb-9ab107660d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb8281d-3a08-43c2-9b24-fc360667f1c6",
        "cursor": {
          "ref": "7fae179e-2c3b-4610-b3e1-61ea8dc62547",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "949402c9-12ac-4ffc-9ff5-b606f736b67a"
        },
        "item": {
          "id": "0eb8281d-3a08-43c2-9b24-fc360667f1c6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b6243cc-a8d0-484a-9a69-1fd530d0af08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ce233-b8d7-4e37-887c-553cf8b90371",
        "cursor": {
          "ref": "5a9314dd-b078-44b8-8621-43f6a7019c64",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "79210a23-f005-44d4-9617-8af96d5b4e7b"
        },
        "item": {
          "id": "1d9ce233-b8d7-4e37-887c-553cf8b90371",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69ab7d3d-baac-4a28-8159-f0cbebb54e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf180b-b345-42d7-bb11-1718c4eaed38",
        "cursor": {
          "ref": "fb1a15b1-1b15-4b5a-8735-f51b9979db0f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ac104389-0ede-4f0a-816f-ef85d9a73eaf"
        },
        "item": {
          "id": "cccf180b-b345-42d7-bb11-1718c4eaed38",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "35c521ec-c4f2-44b7-9b2d-c1800ccbe7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dda372c-e509-40a7-b9bc-fe88ef35dcac",
        "cursor": {
          "ref": "7acdfe9a-df11-4036-92b2-0318fffd3ab0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c7fba87-7858-4a13-b3e9-7103f0a8b1e5"
        },
        "item": {
          "id": "4dda372c-e509-40a7-b9bc-fe88ef35dcac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "73153b14-44be-4fd7-aaee-273754fc575a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581e234a-e6d3-4a3b-b871-f88a2eebface",
        "cursor": {
          "ref": "56de667b-4588-4acf-9548-b63007ea62ca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "76ca01d1-8943-4229-9027-8b4f24e86c55"
        },
        "item": {
          "id": "581e234a-e6d3-4a3b-b871-f88a2eebface",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "20a1d358-f095-4cd3-894f-797d431b3666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e59af43-b926-4c0f-b4b6-02866edd180f",
        "cursor": {
          "ref": "1172fb69-40aa-4876-999c-d2330b3ba337",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1118c276-8cc8-47a7-9627-b44268faf18f"
        },
        "item": {
          "id": "5e59af43-b926-4c0f-b4b6-02866edd180f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "429d72e7-1040-41ff-801a-d03283c83ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdb09df-4f5c-4503-a749-4592ce8548d4",
        "cursor": {
          "ref": "c0f2566c-e283-406b-b125-25ed4c0372b2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "07e574b5-0d7c-446b-9b5d-e85fbb471d82"
        },
        "item": {
          "id": "9cdb09df-4f5c-4503-a749-4592ce8548d4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f2d82d30-ddf9-490a-b4e8-678739f17a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774e99d1-2ea2-40c6-b26b-e32103745f6e",
        "cursor": {
          "ref": "6ad85ec7-b017-4d90-af3c-6554f196ec76",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6895ef86-50fc-4d17-9b2f-a3d9f2ab776f"
        },
        "item": {
          "id": "774e99d1-2ea2-40c6-b26b-e32103745f6e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fe45f9fe-15c0-4cca-84a1-26172cb63684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a077249-4eab-42a3-af39-a618adcf51f0",
        "cursor": {
          "ref": "224debff-e25a-4ccd-884f-ee76eaf52b30",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ddfffc30-01aa-42ce-a08e-b70293ac1518"
        },
        "item": {
          "id": "8a077249-4eab-42a3-af39-a618adcf51f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ee184e9c-be48-492b-957a-c6a7325ea4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bc6358-2a4f-4b6a-b30b-55c8618d7440",
        "cursor": {
          "ref": "76cd3a39-972e-4456-969c-a9df28748908",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "078746d1-b7c3-4957-aff2-e77f87256212"
        },
        "item": {
          "id": "90bc6358-2a4f-4b6a-b30b-55c8618d7440",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2471cb8f-f437-4d35-b7ec-1f324b7554ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b6368-9ef3-4c5a-9d51-695fed86070f",
        "cursor": {
          "ref": "0af5240f-4d7f-41a0-abab-113a5209db90",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "958c9c37-3122-4081-87f7-a3fe5376bf0c"
        },
        "item": {
          "id": "c62b6368-9ef3-4c5a-9d51-695fed86070f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1eff2f5-8a58-4c21-abb9-94c4622fe0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c851f5a2-b424-49b9-9c86-e813638da9c2",
        "cursor": {
          "ref": "727671cd-92ed-4c22-8b3e-4d0ea95f866a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "194fb143-64ce-49b8-a197-d23484bca7eb"
        },
        "item": {
          "id": "c851f5a2-b424-49b9-9c86-e813638da9c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "879a2a4e-369e-4dea-8c09-5fdf3e04b561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5cf26d-2768-46c2-8880-2979b3d8a575",
        "cursor": {
          "ref": "0ce60ae0-807e-4118-8573-807aaec9c570",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "807fd31c-8b08-4b70-b23e-8adb848fce39"
        },
        "item": {
          "id": "3a5cf26d-2768-46c2-8880-2979b3d8a575",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a64e2987-ed46-4635-a0c8-ed72aa303521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8704ce9d-6810-46c2-85db-1a42c872c388",
        "cursor": {
          "ref": "a323c6d3-05c6-4f96-b3d6-8c101c877959",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "71e4020f-c233-44a0-b4b0-701136232d55"
        },
        "item": {
          "id": "8704ce9d-6810-46c2-85db-1a42c872c388",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "58d64fed-4500-416c-b25b-a418465af87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217efb69-3ba2-4f57-bef8-01af95da097f",
        "cursor": {
          "ref": "74c04697-9cab-45ce-a77f-6dc8b74abd10",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "674db488-2b9d-4e40-b698-44969bfe225d"
        },
        "item": {
          "id": "217efb69-3ba2-4f57-bef8-01af95da097f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "942bf074-9c68-4931-a864-bdd37270b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3f0136-3642-4b1f-8c66-54b7f85af5a2",
        "cursor": {
          "ref": "4dc61fb7-0c8f-4ad6-b467-65ee682f75a1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4e7df6df-e65c-47c9-97c3-4b325f3f73c0"
        },
        "item": {
          "id": "8b3f0136-3642-4b1f-8c66-54b7f85af5a2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ec9e74dc-b9bd-4db7-88c7-f92c1795575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3058f75-99b7-4e94-8682-34efe9a9c622",
        "cursor": {
          "ref": "3f6b0c83-cec0-4344-ba08-31700fc032d9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "92a02b4a-f4d0-471c-938b-bcaabc0d54c7"
        },
        "item": {
          "id": "f3058f75-99b7-4e94-8682-34efe9a9c622",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9307830c-d6ec-4fb2-9fec-e00c559de572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73dd0ff-2d24-4007-9f5f-552572b9bdb0",
        "cursor": {
          "ref": "72ed6eff-be48-4814-aaba-a5dab82970d9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9e9cdd88-e986-40c8-9d62-7e91d68d0121"
        },
        "item": {
          "id": "d73dd0ff-2d24-4007-9f5f-552572b9bdb0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ff36fb12-a618-4139-9751-b01198e59458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835f7b1a-061c-4bbe-92f4-0ddeadef9142",
        "cursor": {
          "ref": "ac3fafb4-e311-4782-a22c-e071ef72f4e5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3bd2a2d6-0ee0-42f3-ab20-549f435b0ce6"
        },
        "item": {
          "id": "835f7b1a-061c-4bbe-92f4-0ddeadef9142",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a672cec7-b503-4bf4-8b75-0a8334bc8ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff81842-4827-4149-8967-4e2df115d7d4",
        "cursor": {
          "ref": "a25ec441-6b0b-44ef-b414-2b9bcd8b9b62",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e85f9d42-890a-4016-a857-12d824c36d31"
        },
        "item": {
          "id": "eff81842-4827-4149-8967-4e2df115d7d4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "81e98843-aaba-4a09-82a5-01c97b52bd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2dbde4-07a7-423b-a682-bc0c0b2ea344",
        "cursor": {
          "ref": "370ba70d-267d-4d53-89e8-fa2f1a1335e3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "034df07f-167d-4169-915c-d7ff99923034"
        },
        "item": {
          "id": "8c2dbde4-07a7-423b-a682-bc0c0b2ea344",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cdfd3682-8048-45aa-bd4f-765131d92bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72889b5d-c964-4eb0-bff1-961f1000563c",
        "cursor": {
          "ref": "e4381466-4508-49de-827b-b6b80804f1d0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "29fa40f5-de74-498c-bdb9-f40e77c5b579"
        },
        "item": {
          "id": "72889b5d-c964-4eb0-bff1-961f1000563c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cdfe0707-eb01-4df8-9611-0242feffc16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdea8aa5-b7a8-47fd-91de-0d4bdc65e409",
        "cursor": {
          "ref": "624db197-e9ef-4539-9437-5d4b62964475",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d991ee14-5322-468e-9f29-f15804db280f"
        },
        "item": {
          "id": "cdea8aa5-b7a8-47fd-91de-0d4bdc65e409",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f1ead81c-a629-428b-89c4-b60313eeead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9850db39-01b5-4874-b602-fadee0ce0d1b",
        "cursor": {
          "ref": "a065cc31-e4b2-478d-b198-6fd708aaa541",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a6f6687b-38b0-4bd5-b6bf-9b2a1f14679e"
        },
        "item": {
          "id": "9850db39-01b5-4874-b602-fadee0ce0d1b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a6a1f34-f684-4c44-8b2f-e01fef0620e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313c2c48-6a66-476d-aa53-0846ef03fdf3",
        "cursor": {
          "ref": "1fed4504-4b39-4535-baae-c0c0bac0487a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "29a93366-1fda-4289-a0da-a99e37859724"
        },
        "item": {
          "id": "313c2c48-6a66-476d-aa53-0846ef03fdf3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7e987a49-7e37-4c26-9cb2-e4a74124416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23d23be-5fc7-49f4-b44e-f586f3aa78a3",
        "cursor": {
          "ref": "faa8d9d1-1a3d-404d-bac2-4d90cb980e3b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71181025-b7d6-4ae5-aa70-cdf77012040e"
        },
        "item": {
          "id": "f23d23be-5fc7-49f4-b44e-f586f3aa78a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c8dccbb5-62ff-4856-8ddf-3690ceb8b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40732c3-8aac-4822-83ab-41348a79a88f",
        "cursor": {
          "ref": "c35b6155-f10b-4201-90ac-6831db5e595e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42464339-7b84-476e-a83a-4fec6cb5ed69"
        },
        "item": {
          "id": "f40732c3-8aac-4822-83ab-41348a79a88f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "48113e8b-22bc-4f8a-b66c-7b0e9f881c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af65dd0-9299-4ae3-bb06-96cb7e1443b9",
        "cursor": {
          "ref": "e8dd9d0d-1962-4585-81ca-54d24400c02f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "da509f40-871a-4968-bc48-5a7cc6a30563"
        },
        "item": {
          "id": "1af65dd0-9299-4ae3-bb06-96cb7e1443b9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "093c8709-3fd3-4c61-92bb-eafe65aab31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e59d4a-deff-42ec-9815-c6ea55911091",
        "cursor": {
          "ref": "d6a32526-40a4-4d90-8a4e-1aeee3f22967",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a22b3c10-7215-4d2f-8f49-4d3e13404451"
        },
        "item": {
          "id": "b2e59d4a-deff-42ec-9815-c6ea55911091",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fd99163-e576-4adc-ac96-d3c75a743683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86549f3a-95f1-44f4-b72e-ad156fd36a35",
        "cursor": {
          "ref": "e16e6feb-6aec-4b0c-aeb1-c6ef22e1096e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b5dcefd4-2939-485e-8333-897c76aa6fa5"
        },
        "item": {
          "id": "86549f3a-95f1-44f4-b72e-ad156fd36a35",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e51a612e-e6a3-436a-8429-317fbb0cac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eaf65a-ecb2-4c97-b592-b99869962e07",
        "cursor": {
          "ref": "4fda72a4-1a83-42ae-ae28-9a5f417fa8cd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c31d4e7-8eb2-41aa-97a9-b87990204ffd"
        },
        "item": {
          "id": "b4eaf65a-ecb2-4c97-b592-b99869962e07",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1c811aff-33b2-4833-ae08-dd77b2d59184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e413638-0fc4-4000-b691-460dc2c9bc32",
        "cursor": {
          "ref": "1863d6db-0dc5-437e-9c0c-b090548efbb2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9da27d97-5378-4d97-aab8-340a178bcbc6"
        },
        "item": {
          "id": "1e413638-0fc4-4000-b691-460dc2c9bc32",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2cef29bc-6ea9-4964-b2ee-0267e09e0eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83a94ce-b455-47ab-8f67-644eacf2e904",
        "cursor": {
          "ref": "aa7ce92e-e1a0-4ed4-9afc-288bccccda5c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c8897763-3a41-4cb4-b8d7-74a64d482a21"
        },
        "item": {
          "id": "a83a94ce-b455-47ab-8f67-644eacf2e904",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e4d50eec-b024-437c-a5b9-b581019f19c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d52b024-013c-4ee6-b79a-4c78015c8e14",
        "cursor": {
          "ref": "864c8fc9-bb10-443e-a5e9-96f1872a0d88",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "57bed5b1-b326-40f4-a54f-5cb4a4ac811c"
        },
        "item": {
          "id": "3d52b024-013c-4ee6-b79a-4c78015c8e14",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ca228f6b-3896-4866-9c52-52bb951d6370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5681c621-576b-46de-8ffa-5183c4614f5a",
        "cursor": {
          "ref": "28ababef-7ec4-4f4c-a232-f70d9562cc42",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0b78a3e0-b7e3-475c-a4a5-a03ea590e86c"
        },
        "item": {
          "id": "5681c621-576b-46de-8ffa-5183c4614f5a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9752fc80-3d5f-4d99-96dd-68cde17cacb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5cf3cb-eff4-4762-bd8b-62a74a3ea60a",
        "cursor": {
          "ref": "deba05eb-949b-492a-9455-7d1beda0c021",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0a89ac4a-64d4-4513-8eb3-76d8ca41f077"
        },
        "item": {
          "id": "7e5cf3cb-eff4-4762-bd8b-62a74a3ea60a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e5dbe988-15e9-47a7-b574-ecf49e314d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38ee425-b5d7-4f08-8e8d-f229f81569f3",
        "cursor": {
          "ref": "4348c1b7-3a1a-4c38-806b-69a65ce9ce9c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "90c4de9b-6cbf-4843-bb89-056f719f751e"
        },
        "item": {
          "id": "a38ee425-b5d7-4f08-8e8d-f229f81569f3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "17928f60-8dba-48c0-bc96-f80cef1870be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a9b214-17c0-4d77-9f25-3a372ed2e7cb",
        "cursor": {
          "ref": "90232210-04aa-4512-991b-341da3f148c2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d57554e-5170-44f9-8638-bca6e383c4bb"
        },
        "item": {
          "id": "04a9b214-17c0-4d77-9f25-3a372ed2e7cb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddbfb92f-7f17-4ef8-bd4f-a2aa0c65e7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a5d207-e770-48ae-9d09-e726a5657722",
        "cursor": {
          "ref": "332e3183-a679-4657-aa2a-6039964abe23",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8d5ede11-bcb3-4e52-9034-86315a57d49a"
        },
        "item": {
          "id": "e7a5d207-e770-48ae-9d09-e726a5657722",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0b13e7ad-bbb3-46fb-8515-1752a5639a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158db985-c982-4ae0-be3a-eebcaca3fdaf",
        "cursor": {
          "ref": "f124279d-2248-4c6a-bc48-e90f0cb4ef24",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f1ab7d6f-87a3-48d7-9229-195aa27a2c21"
        },
        "item": {
          "id": "158db985-c982-4ae0-be3a-eebcaca3fdaf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "53ec0b25-c2a9-4223-a048-7dcef666415b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d43e438-b9aa-4044-ad2a-274386fddf4d",
        "cursor": {
          "ref": "7b5965f2-a529-4d66-a9b3-bd5603fe6b35",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1481d483-ac36-453b-86b1-499bd3ab264d"
        },
        "item": {
          "id": "4d43e438-b9aa-4044-ad2a-274386fddf4d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "99072678-e2f0-4517-a2d5-d353ce7cb6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1bfbd4-4c66-4ed4-9fbc-d469d040f5ab",
        "cursor": {
          "ref": "c19ecaf9-31ae-4ff4-bcb6-47e74e78c11a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "515eed14-79ef-442a-9600-7bbc3bbdff70"
        },
        "item": {
          "id": "8d1bfbd4-4c66-4ed4-9fbc-d469d040f5ab",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ac442abc-7358-4566-b1c9-0e4790e481aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b524c479-866e-4cf2-9601-a38fc94effda",
        "cursor": {
          "ref": "06dda878-ec3b-44fd-937f-874303f0d08d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f2d5fbb-4c67-4e93-adbf-76859db9bcb3"
        },
        "item": {
          "id": "b524c479-866e-4cf2-9601-a38fc94effda",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "778948e1-959f-46b6-ab01-40f0ed8e444b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cad798-6bf8-488d-8e40-f8f1a5877b7b",
        "cursor": {
          "ref": "f2f4d12d-0676-4d43-a381-8ee3554b6926",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e18c48f-d3a1-4984-8ca3-777cecb92522"
        },
        "item": {
          "id": "83cad798-6bf8-488d-8e40-f8f1a5877b7b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "862d0baa-1446-4400-af70-732cf99405e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36feea91-a5ba-4f18-91a5-49777fbab86a",
        "cursor": {
          "ref": "64e40a50-5dc3-4f98-a27e-2a67e9113ef5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7de9863a-4667-4bdd-abfb-d9177a737263"
        },
        "item": {
          "id": "36feea91-a5ba-4f18-91a5-49777fbab86a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9423a92d-5063-41bb-b28e-8aab5f7c7a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a224ce3c-d9f5-4265-9f0d-15f3d85367de",
        "cursor": {
          "ref": "b55d08ba-8e48-48be-871d-73012ad037d1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f3481c43-7f2d-47e6-9c62-87e71b169e33"
        },
        "item": {
          "id": "a224ce3c-d9f5-4265-9f0d-15f3d85367de",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "09dacbc9-6555-407d-ba67-b72c780fb357",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af8579-593f-456b-a341-f5579b5b389e",
        "cursor": {
          "ref": "c1379d91-ffd2-430c-b290-08ebb633012c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "004a5dfe-0e0a-4ac6-a037-18efcbe37ac7"
        },
        "item": {
          "id": "38af8579-593f-456b-a341-f5579b5b389e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8c06805d-9de8-44ae-aacf-cd4d5bd7420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5dc20d1b-39f7-446f-9d47-148c6a9d3eb3",
        "cursor": {
          "ref": "f0b26447-2c91-4219-a7e0-e655402cee84",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44f2069e-b34a-414f-9343-910f67c234b0"
        },
        "item": {
          "id": "5dc20d1b-39f7-446f-9d47-148c6a9d3eb3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d07cf215-1ae1-4593-bb53-45c57deaca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b2d6d612-6857-477b-bc36-4a1d0315859c",
        "cursor": {
          "ref": "0ef13e1c-4715-4639-8581-e422c9ae26db",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9b5f0048-4dbb-4d09-989c-767772a6187a"
        },
        "item": {
          "id": "b2d6d612-6857-477b-bc36-4a1d0315859c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c65f26eb-f9c7-4027-8380-118add24c3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e19092de-6d9e-4c03-a0dd-f2c9a097d97f",
        "cursor": {
          "ref": "e0bf8a82-dd64-426b-85e1-712028f88780",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e52148e4-a8c5-4b75-910e-685502ef19f1"
        },
        "item": {
          "id": "e19092de-6d9e-4c03-a0dd-f2c9a097d97f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "36e981c7-60db-4e87-bd9a-9903c6764f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e25d3790-a4d7-4396-82d3-f4f7e00514ed",
        "cursor": {
          "ref": "71d71892-e003-4da9-b4fe-db2b92eec3bf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c36ed3e1-08b4-4988-8e80-de715a0f2a50"
        },
        "item": {
          "id": "e25d3790-a4d7-4396-82d3-f4f7e00514ed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ed88e36-7468-4980-ad85-8288926d5e12",
          "status": "Created",
          "code": 201,
          "responseTime": 6104,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa1041-9353-4307-b755-dc3897d2ad29",
        "cursor": {
          "ref": "76ae0794-a1f1-4131-a6cc-b5f21cc1adb1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aabad26a-c2ad-4a23-9453-d5f0cb31955f"
        },
        "item": {
          "id": "7baa1041-9353-4307-b755-dc3897d2ad29",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81c325e3-025c-44e7-a139-f4ee3c489cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "92852c4a-afbd-4641-81c1-902330edb91d",
        "cursor": {
          "ref": "1814f002-4334-4c95-9920-e8e3e72221a9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c83ee3b-7fc1-4bff-b8d3-599795b40b8e"
        },
        "item": {
          "id": "92852c4a-afbd-4641-81c1-902330edb91d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc97b55b-3fe3-4ae8-95c6-ab77dc1bcb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2c98a4bf-32f8-4cc4-b300-b6e16d058c75",
        "cursor": {
          "ref": "8f0991bc-6303-4c46-bdf4-4a5ea85c9b0a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dad6b0d5-9a06-4637-9ecd-c4836a14d9ed"
        },
        "item": {
          "id": "2c98a4bf-32f8-4cc4-b300-b6e16d058c75",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "642b3ba0-29bb-4a89-a9c1-1d856806e27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f920eb1-6ce1-4e65-8019-87e0386abe06",
        "cursor": {
          "ref": "66cea76e-ce3d-4eb7-b9c7-b691bfa99bd1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f0551bbc-cfb3-4357-8657-ebc97c681f24"
        },
        "item": {
          "id": "0f920eb1-6ce1-4e65-8019-87e0386abe06",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cccb1e13-b86c-485b-9d8f-4597cde5c4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e0b76-8af3-4591-b713-d4c8828c2a41",
        "cursor": {
          "ref": "c5ed173b-8fcd-4e73-b567-23645afd0325",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2a6de9ad-6144-4cad-a425-8e44ad9f0ab3"
        },
        "item": {
          "id": "f27e0b76-8af3-4591-b713-d4c8828c2a41",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "89cdf30b-d3cc-40b7-84bb-bd2b876ead5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ef797-53d3-4e51-b959-f40006cb2a96",
        "cursor": {
          "ref": "bc920486-8f78-448b-af92-64fb07b45133",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a412f015-cefd-4a22-b508-b2390058b853"
        },
        "item": {
          "id": "998ef797-53d3-4e51-b959-f40006cb2a96",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6daa706a-bf31-4cfc-8b39-bbee411dda21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973adec-3580-4a70-a262-53461572d1c7",
        "cursor": {
          "ref": "10b81d0b-8ae4-461f-ab2b-c148d36f8c8e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb63d540-f40b-4e73-8cc0-c379389c87e9"
        },
        "item": {
          "id": "5973adec-3580-4a70-a262-53461572d1c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "71ca4823-3515-4871-b277-7f8d2fafbfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061c4c13-0e0d-4661-86bb-c7856ea2f77e",
        "cursor": {
          "ref": "e5a337fc-ddf5-4376-9db4-44f388aee911",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "56eff74a-d93b-4ff7-998b-9f1be157549c"
        },
        "item": {
          "id": "061c4c13-0e0d-4661-86bb-c7856ea2f77e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6b3d2cfa-17b0-4b8e-bd96-856e37b7ba30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bf9326-cd4e-49b8-bc95-71216456c79b",
        "cursor": {
          "ref": "9cb7117e-8912-4b4b-9e54-fa9c905ba552",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0ff9fe74-1533-4dd9-92f1-d80c1d85f5fa"
        },
        "item": {
          "id": "e1bf9326-cd4e-49b8-bc95-71216456c79b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d1a6024-7568-46cb-81aa-b3814cf3c2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60c48d4-f60b-451a-9617-457ca4f67974",
        "cursor": {
          "ref": "c0199b44-f7be-44ad-a02a-fc19927859a0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6abe0220-3e1d-498c-89a1-e41df3ad1d7c"
        },
        "item": {
          "id": "c60c48d4-f60b-451a-9617-457ca4f67974",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f146fe5-0586-4c62-b6af-f14e0f4ae915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d79f55-6b8d-4df2-af95-51eb6061f66b",
        "cursor": {
          "ref": "29d5d6df-f96b-4c82-b476-f6a2f77caae2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe9725ec-5bcf-4263-9d56-70ada29b54ad"
        },
        "item": {
          "id": "29d79f55-6b8d-4df2-af95-51eb6061f66b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "10e9237e-5f12-4d60-9661-eeefd26decbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366e915e-ae5f-433a-bbf6-4e5e4bb42499",
        "cursor": {
          "ref": "b35b5b1f-a1a5-418a-aacd-54ed25efbb11",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a594341f-6f81-447b-b3b1-a3fad6a37bdf"
        },
        "item": {
          "id": "366e915e-ae5f-433a-bbf6-4e5e4bb42499",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "20c6b354-86fe-4751-983a-ec94ba4684e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbda611-77f3-43f3-8b89-667b8fdc88ea",
        "cursor": {
          "ref": "08464755-bb87-4b6f-bfcc-e5680ac749e8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e2ac7f63-ca3e-4b9d-8893-c00c45574663"
        },
        "item": {
          "id": "1fbda611-77f3-43f3-8b89-667b8fdc88ea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bcd71ade-8dcf-46b4-8079-1c4713436d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38654076-1874-4ea6-b4ca-1310fa18b809",
        "cursor": {
          "ref": "5daafbba-44df-4d45-bdcc-6f41d825b83f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ed76b2b6-fee8-493a-a5da-7f16a7b4d9ad"
        },
        "item": {
          "id": "38654076-1874-4ea6-b4ca-1310fa18b809",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1032dad4-1e57-43ae-a60e-f5fd58afcf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0985bf1e-279e-4f9d-bb21-54f1330f6084",
        "cursor": {
          "ref": "c6a7b851-16c5-4f8c-bf8e-143d93acbfc0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ab94fdcb-9004-4d2b-87fb-3667c16f98e5"
        },
        "item": {
          "id": "0985bf1e-279e-4f9d-bb21-54f1330f6084",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8685b18-5f5e-41f2-98c7-2efd4921ce18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e1799-d384-45e5-ba51-ef3b357ad8f5",
        "cursor": {
          "ref": "821f4035-1d89-4668-918f-44de57102a2d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f2164b14-b949-4115-a706-4d2671477b6c"
        },
        "item": {
          "id": "801e1799-d384-45e5-ba51-ef3b357ad8f5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6d60fc9b-be2e-41d3-9ece-171a558439c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79cb2b3-4fdb-496c-a813-25928dd84d98",
        "cursor": {
          "ref": "d417e0ea-ffc9-4701-b732-a70de7fd09d7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cdb762a9-bf57-4e4b-bcfb-7532484b61cf"
        },
        "item": {
          "id": "c79cb2b3-4fdb-496c-a813-25928dd84d98",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "041caccb-c580-4ca6-85d3-ce4c5d2f6da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96b82a1-6781-4f7d-8b8e-6923681640d1",
        "cursor": {
          "ref": "f9b65563-1fe6-4013-907a-68ae48319f33",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "23d5ac33-76a8-461f-98d4-13eea22a7f96"
        },
        "item": {
          "id": "f96b82a1-6781-4f7d-8b8e-6923681640d1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b3f8ad24-c474-4c03-b38f-f66e83c128c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57f3e35-53b8-499b-9f6f-c29fdc4fbc22",
        "cursor": {
          "ref": "7b1c2d65-cf0b-4177-8f33-992c77495503",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef8f5d34-9187-4293-8380-c55ea59f752b"
        },
        "item": {
          "id": "c57f3e35-53b8-499b-9f6f-c29fdc4fbc22",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c059ead-df85-4d58-a148-80f8e91c4e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988eafcf-84dc-42f3-b75a-9a1846f85b8b",
        "cursor": {
          "ref": "995f721b-5f69-4891-b63c-e8c845b82d17",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1553e3df-5272-46ce-996d-cd653ce28502"
        },
        "item": {
          "id": "988eafcf-84dc-42f3-b75a-9a1846f85b8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9097b56b-f3b6-442f-b0e0-0f5c11b13bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a37e2-c82a-40c5-99bf-f8f34d0b7e73",
        "cursor": {
          "ref": "4b66571b-6002-4dc9-8dc9-c1e8a5d40b7d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5134d924-f127-47d8-ae41-ff2ebab208b3"
        },
        "item": {
          "id": "775a37e2-c82a-40c5-99bf-f8f34d0b7e73",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "beb8690f-7130-4864-8ee3-98aada73edad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ff833e-f50e-4cbf-bb1e-b14c05dad13d",
        "cursor": {
          "ref": "2806ee58-9f3d-486c-9d46-1666f9ee0201",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "62cedaba-786e-4131-9a08-1bc2904e9b04"
        },
        "item": {
          "id": "10ff833e-f50e-4cbf-bb1e-b14c05dad13d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7ddbfa6e-529a-40db-91e7-e633912ba85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55df65c-6c89-4efd-a4cb-4e49cddadc23",
        "cursor": {
          "ref": "9e10c5c9-2846-4978-a2d6-70daf37d40e9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "faed3341-84e1-4122-ad18-5ac029f4310c"
        },
        "item": {
          "id": "c55df65c-6c89-4efd-a4cb-4e49cddadc23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "926d461d-fe36-4a0d-87c7-727d0f258cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbef40f-e7c4-436a-88c7-30e12e1378db",
        "cursor": {
          "ref": "d79a71ca-7796-4ef1-9c4f-b5c69595b05c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8236c23c-c4a4-401d-bfad-38ab73cafc30"
        },
        "item": {
          "id": "bbbef40f-e7c4-436a-88c7-30e12e1378db",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c67410f9-0d02-405c-9f85-827aff64a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a63ac-fb4c-4b7d-ab8b-2c068bffdbb2",
        "cursor": {
          "ref": "210c079d-c8b7-4215-b125-6c484b7e0676",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9e537676-75b0-4afc-a38b-07b58a15a6a5"
        },
        "item": {
          "id": "b34a63ac-fb4c-4b7d-ab8b-2c068bffdbb2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83ba5b4a-5d2a-438e-9ef5-7c22c16022b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227f25bb-eaae-478f-bce2-6314d27629df",
        "cursor": {
          "ref": "1c603288-4b3a-435d-8c53-cbb2831c84e2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7bcd2338-929d-46d6-ad05-84e50895b420"
        },
        "item": {
          "id": "227f25bb-eaae-478f-bce2-6314d27629df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c31ccdff-fda9-497b-bb70-0cc169ba23b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d319861-f9c2-48ef-a985-76cd9eb0bff2",
        "cursor": {
          "ref": "99df6827-d29c-4a5f-80a7-c6703714c006",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d6ef509-d3d4-4212-b50d-b5de5a2ffb83"
        },
        "item": {
          "id": "0d319861-f9c2-48ef-a985-76cd9eb0bff2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a7f7ee3-ebad-4371-8638-18b1cf647381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11480338-bc01-4f28-aaab-c2737c1d18e6",
        "cursor": {
          "ref": "7de88f11-3d01-49fe-92ab-3e88aeb1c31d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5f80cccf-1014-4676-a415-8e89c2fb73cc"
        },
        "item": {
          "id": "11480338-bc01-4f28-aaab-c2737c1d18e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7263dbe8-e93a-4c1f-bf5e-6d4e10a731ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bb14f1-8953-435a-8485-9e3c2c0f31d2",
        "cursor": {
          "ref": "e9649b9c-609e-4e3f-8bba-fc7b0cf88b99",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03ddf4ae-9e66-4786-95e2-1cd8aac90d66"
        },
        "item": {
          "id": "30bb14f1-8953-435a-8485-9e3c2c0f31d2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed839151-d16b-4a01-99c0-070af1455313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba59449-aad6-4ea3-be2e-93c9d8c2abf3",
        "cursor": {
          "ref": "88312efb-b8a4-4c1b-9de7-e46ef54e43e1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d308578f-1d4b-4c79-8ce1-0e40cbbcd990"
        },
        "item": {
          "id": "9ba59449-aad6-4ea3-be2e-93c9d8c2abf3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdc8de56-e583-4550-b969-4b293a83d612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf293cd-4426-4bc0-9f2e-5b2da08ad1de",
        "cursor": {
          "ref": "85148275-6d46-4771-a74b-566eafc8da0b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c1f28b3f-58f4-496f-8c5d-348156e97861"
        },
        "item": {
          "id": "8bf293cd-4426-4bc0-9f2e-5b2da08ad1de",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43f23558-1f57-4361-8af5-02fcbcb82e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242c2fd7-14d0-4a9e-b0e6-2fc6c90dca00",
        "cursor": {
          "ref": "5bd6affa-40db-435b-92a4-a8e50dd59df8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4abc3312-bf89-4b15-bdac-0b7bcfaac276"
        },
        "item": {
          "id": "242c2fd7-14d0-4a9e-b0e6-2fc6c90dca00",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7124e01d-3bd1-4052-ab4e-637e7c54d649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236077d9-109e-4f7b-9e88-47b19d1aa7a4",
        "cursor": {
          "ref": "9bad486e-5f9b-4a27-9ed6-95b4c5f53f39",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e28a80b-cf96-454b-9a68-fff62aff278f"
        },
        "item": {
          "id": "236077d9-109e-4f7b-9e88-47b19d1aa7a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ae5cbb1-3274-4e40-b54c-aeb3088dbb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be16a8d7-c657-49e9-aafa-4b1dda5818f5",
        "cursor": {
          "ref": "1ef7dec9-c5fe-447e-abb7-fe0147201e6f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "20866a3d-7910-40d8-b90d-3aa8b2b2db80"
        },
        "item": {
          "id": "be16a8d7-c657-49e9-aafa-4b1dda5818f5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "066ea189-e908-4522-a410-e681019fc42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f6fb04-5462-4f57-ab64-a9ce83b350cb",
        "cursor": {
          "ref": "381d5ac2-93ca-45ae-ba66-4f987f22e3b0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b58ea3c6-5b58-4599-9d78-643f34e96b0f"
        },
        "item": {
          "id": "22f6fb04-5462-4f57-ab64-a9ce83b350cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c239fb2-4658-4ae0-b755-1359328b8bd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b006a8-9b8f-4215-969f-ff1a8e554768",
        "cursor": {
          "ref": "e13ca079-b235-4528-975f-4ac64e4d950c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c61f4400-3e2e-4d67-bd15-239526802153"
        },
        "item": {
          "id": "77b006a8-9b8f-4215-969f-ff1a8e554768",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9883593a-1bd1-47d2-8adf-32c2c7ed77dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6c4761-de27-49c7-ba1e-bd6a642d5600",
        "cursor": {
          "ref": "bf477c06-6196-4507-ac89-4b48604f3bce",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0bb1f63c-6c7c-4548-b6da-397b4c2be96d"
        },
        "item": {
          "id": "6f6c4761-de27-49c7-ba1e-bd6a642d5600",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "380971db-09b2-4c62-bdba-63f10d5f33ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed58d292-0158-45cc-bede-e69a956b1243",
        "cursor": {
          "ref": "e769faf3-2863-424f-bdc5-53b00782b008",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9a33103-68dd-4461-a6ec-8ed64532b20d"
        },
        "item": {
          "id": "ed58d292-0158-45cc-bede-e69a956b1243",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f02fc41-c13a-4528-9f7e-7f45d6907eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ad82e-3d4d-4c1e-935b-d6a1a7e1d72d",
        "cursor": {
          "ref": "dd4f0f6b-e48c-4a6f-be6c-5daa8cabfa8c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0568638-7694-4b36-bfce-f4a8b4a48d93"
        },
        "item": {
          "id": "bc8ad82e-3d4d-4c1e-935b-d6a1a7e1d72d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "22b4f36b-20b8-4e4e-ab31-536644639245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7edb023-9c3d-4816-a5d9-32ad371d8b77",
        "cursor": {
          "ref": "4682f1c7-8951-4916-945b-6269fa874fee",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb2394b6-5f76-42bc-a578-4154b03f02bf"
        },
        "item": {
          "id": "b7edb023-9c3d-4816-a5d9-32ad371d8b77",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5eccd0d4-3c1d-4818-98e5-252c0ec56bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27a4655-adf8-45fb-9703-e4a78cb0d302",
        "cursor": {
          "ref": "70ad0700-961b-4f93-995d-6e29e88693ea",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "69cd18c7-0f5e-45cb-960d-63873eb99ba0"
        },
        "item": {
          "id": "f27a4655-adf8-45fb-9703-e4a78cb0d302",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2c7da9ab-e1df-4cda-b242-07abebaf8a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72967948-2639-4613-8df0-bc68a1ef702f",
        "cursor": {
          "ref": "4bf1d77d-5f52-4d66-994f-4eff3f3b669c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "71ac3c63-b39f-4c10-b987-b374a3c868f4"
        },
        "item": {
          "id": "72967948-2639-4613-8df0-bc68a1ef702f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b1bb562-1524-4b8d-9add-0a7e1cc88af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b684b42-a56c-441f-86f8-1a9a3d151306",
        "cursor": {
          "ref": "90419a44-bef5-4c0e-91f4-a0125b99b3a0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "629d0c21-4de5-4bab-92f6-ac71a902dc53"
        },
        "item": {
          "id": "0b684b42-a56c-441f-86f8-1a9a3d151306",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "645b74db-7a24-451c-81a9-fd20bd1357ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9321b1e6-ad55-44ab-9f7d-e227d3ba83bd",
        "cursor": {
          "ref": "aa6a08cc-a7cc-4ae4-83a8-08e2471b9a4a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a48984b1-c05d-41ec-ad53-30eed7aab8cd"
        },
        "item": {
          "id": "9321b1e6-ad55-44ab-9f7d-e227d3ba83bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "308a33f9-4b1a-48c3-abc9-f82b1df913a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085d712b-5938-4652-8e05-93728774dc64",
        "cursor": {
          "ref": "210c2648-d91c-416c-80d8-d66d8ca7d22a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d8966405-30f5-493f-8f3b-781434232580"
        },
        "item": {
          "id": "085d712b-5938-4652-8e05-93728774dc64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48c78d0c-4a8a-48e0-99ee-e58d67f8b4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195c2be-d703-495a-a01c-ac5350aea4dc",
        "cursor": {
          "ref": "98028851-919c-4117-9a26-333c44796ad1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b096b5e4-4733-47b8-bafa-3f630e21999b"
        },
        "item": {
          "id": "4195c2be-d703-495a-a01c-ac5350aea4dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3c39e60-fa94-42ad-9e9f-7bfb1a858bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f6383-5980-4dfd-a56b-f678923f2187",
        "cursor": {
          "ref": "b27c3bfa-ffa1-48cb-a84f-34b0dce0da2d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e740f715-542d-404c-8a3b-2bb441575606"
        },
        "item": {
          "id": "522f6383-5980-4dfd-a56b-f678923f2187",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "11eb9e66-2238-446a-bf4a-a8e2e9fc5b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9185c827-a818-45f5-bb6a-27b8e64c72e1",
        "cursor": {
          "ref": "c49669df-ea30-4923-bf1f-fa562b948641",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eff7b8eb-0d0a-425a-bb7c-e631c12c6eee"
        },
        "item": {
          "id": "9185c827-a818-45f5-bb6a-27b8e64c72e1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85f0dbe4-473f-4169-bc9b-4f7612104532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f7edb2-8315-48eb-8d2f-03d3edd82145",
        "cursor": {
          "ref": "b48dd192-547f-49c0-88ac-02deaa8956e7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9c4c13d-b779-45bd-8b18-1f5e1ebb2ebe"
        },
        "item": {
          "id": "d5f7edb2-8315-48eb-8d2f-03d3edd82145",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0cd0ff64-8c3e-4ff2-ac80-9be9488db118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb86e7a3-149c-4b76-aed0-f50b32bae80d",
        "cursor": {
          "ref": "e0b8a835-60cf-40ca-a318-75c095906313",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b54bec80-a027-43c4-9947-72d0e3d425b3"
        },
        "item": {
          "id": "cb86e7a3-149c-4b76-aed0-f50b32bae80d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "48709b3f-9581-47b4-bd84-4689dcbe4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc48c10-95ff-4f6a-b005-f423d70f0042",
        "cursor": {
          "ref": "db905312-1789-4c69-8e18-1203928e4a98",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c1608303-ea0e-449a-8c06-18cf3909562b"
        },
        "item": {
          "id": "9fc48c10-95ff-4f6a-b005-f423d70f0042",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8402a34b-0fd1-4794-86d7-2e7fde365104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e741769-3d40-49f8-8182-8780e6a60a54",
        "cursor": {
          "ref": "af9575aa-dbf5-43d8-b022-04ba33f7772d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f7136118-ca74-4b39-bc2b-963b744c330f"
        },
        "item": {
          "id": "5e741769-3d40-49f8-8182-8780e6a60a54",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae5d63dd-351c-4321-9cce-56151916598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a624825f-a92d-4cec-bf45-26d7095ee2bc",
        "cursor": {
          "ref": "6ab008bb-18d7-4f20-8f6e-c89f7905044a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f3fcc2ce-ddf3-45c2-8832-870812e96ef6"
        },
        "item": {
          "id": "a624825f-a92d-4cec-bf45-26d7095ee2bc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "134a6c35-52e0-4210-82bf-99beff61379c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81691ed0-e7a8-445e-9b33-8f5569fa4af9",
        "cursor": {
          "ref": "2537c5ab-56f0-4496-bc77-85c10f80b44b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "769338a0-e494-432b-90a6-a77ce7eade88"
        },
        "item": {
          "id": "81691ed0-e7a8-445e-9b33-8f5569fa4af9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b421d9a-f071-492f-adcd-b594c9264873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf177755-39a8-47a7-be7b-5e004d31c41d",
        "cursor": {
          "ref": "4342be2f-7b7e-4a3c-a96f-4e71b17ab3b9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "51c0dc56-d3b3-437d-acd3-ab53b322b917"
        },
        "item": {
          "id": "cf177755-39a8-47a7-be7b-5e004d31c41d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d40d424c-c427-44b1-a873-bb2f45fa9d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d34f22a-5c11-47ba-8f79-063255836192",
        "cursor": {
          "ref": "b0df301e-f514-43d7-9a26-b10f9179e922",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5764c33d-a948-4829-8748-7f45e71f34da"
        },
        "item": {
          "id": "5d34f22a-5c11-47ba-8f79-063255836192",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "87ccc2e9-ef15-4ae9-9eb8-dde5075072b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8270c980-971c-425f-bfff-5ba2a26acec7",
        "cursor": {
          "ref": "b2c12752-cc58-41a5-bcbf-c290e8d78179",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b8c03694-343d-46fb-aab9-24565e0562e5"
        },
        "item": {
          "id": "8270c980-971c-425f-bfff-5ba2a26acec7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eaba17cf-90a3-463c-93fd-e6661edbd7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8b1a9a-98ae-4523-9d6a-f622053b472e",
        "cursor": {
          "ref": "3339b0dd-e86c-4965-aa4d-75c49aa02d36",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "92ddb2d7-df26-4b28-8be5-88d998eabb02"
        },
        "item": {
          "id": "3d8b1a9a-98ae-4523-9d6a-f622053b472e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad514404-48af-4965-adc4-d460c136a674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a51ccc3-46bc-4f6d-bf68-b05e7ad94154",
        "cursor": {
          "ref": "b8ff7544-611d-44db-bee6-137ab1907e71",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de200364-48b9-48f9-8f1c-9147f3d2ac3f"
        },
        "item": {
          "id": "6a51ccc3-46bc-4f6d-bf68-b05e7ad94154",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3d090ddc-a51c-4b85-94dc-75b601899705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd1b7ba-6225-44ce-aece-322511c9a0d2",
        "cursor": {
          "ref": "daa65362-65fb-4179-b863-f95b2ec118f2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1b934187-7542-4cf6-bbf7-41825757d9d0"
        },
        "item": {
          "id": "6cd1b7ba-6225-44ce-aece-322511c9a0d2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "485cd0b4-b8f2-4aac-afdb-022ce10719d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc5f39-4769-42a2-a57d-5b4c45f42fb8",
        "cursor": {
          "ref": "ded04de6-c762-4e67-8e40-12785fc20a8c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75f9220b-1be1-43a1-b7d2-5ab076ba6399"
        },
        "item": {
          "id": "12cc5f39-4769-42a2-a57d-5b4c45f42fb8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "18c10a16-9e35-44f4-9e02-de24444e93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753ede99-da5d-4640-899b-0135d4368ce1",
        "cursor": {
          "ref": "6c193fe8-d3cf-4500-a6df-938e07481cfc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5bac254a-6d10-430d-9b9b-b73ec68191c2"
        },
        "item": {
          "id": "753ede99-da5d-4640-899b-0135d4368ce1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b046bac-ed7b-465f-9abd-fcf1cafb9be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad75581b-47ed-4f49-87ca-47e05ffebd1c",
        "cursor": {
          "ref": "5d5edc86-616e-4ad8-ba82-c5b99567db3c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "55be6fef-573f-4043-8497-cc0c2d132f13"
        },
        "item": {
          "id": "ad75581b-47ed-4f49-87ca-47e05ffebd1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2b6d33d-4701-455e-abd0-f5acbb7729a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47447b3d-2767-4d76-a101-4a6bf28e183b",
        "cursor": {
          "ref": "eab3499b-0199-4bd6-8082-4b81988262bd",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fc9ba445-b423-4fbd-bbb1-e74c8f8b4098"
        },
        "item": {
          "id": "47447b3d-2767-4d76-a101-4a6bf28e183b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57729185-0e3a-4a2b-bfa5-47ba93e55247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ef1bb-e464-4ace-b41a-4408e32e968e",
        "cursor": {
          "ref": "82db05d2-0ff1-4b50-aee7-0c7985ad2911",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ccc1b814-6054-470c-ab17-e8b76b0589d4"
        },
        "item": {
          "id": "8b8ef1bb-e464-4ace-b41a-4408e32e968e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "488ffab7-abe7-4220-b1cf-c7bb4e332aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25782c21-c326-4d31-982e-d6ce751cfd0d",
        "cursor": {
          "ref": "29f57d35-7c5c-4d71-afbd-d65505f12203",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2fe5d2b8-f1f4-499e-8b30-bfcb901ac6d5"
        },
        "item": {
          "id": "25782c21-c326-4d31-982e-d6ce751cfd0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "24dd9740-f06d-4c08-9198-86cec2ec5ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b769b6b-fdc6-419f-86d6-1cc76ef588e9",
        "cursor": {
          "ref": "bb7fc303-0114-4250-8ced-042398108a3c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "29c76d82-fb2c-42ce-959f-dc7bc15a899a"
        },
        "item": {
          "id": "2b769b6b-fdc6-419f-86d6-1cc76ef588e9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f799a822-a1a2-4876-a9f6-b95cc1ddce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a85c4b7-24a1-4a9e-b9f2-51e43dff9a8a",
        "cursor": {
          "ref": "09c4c504-6388-4e2f-bd61-c3b0aa5ac59b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "13d97dc6-57e2-4ea2-af77-20ea3ee9978f"
        },
        "item": {
          "id": "3a85c4b7-24a1-4a9e-b9f2-51e43dff9a8a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6c06e37b-44fc-439f-9300-27f31619239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2aa385-d445-4ac4-b9d9-a7965d524208",
        "cursor": {
          "ref": "d4cc3ae4-37a6-439a-b892-19756bed4168",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "856224f2-b219-47c6-b197-3bf204b521c6"
        },
        "item": {
          "id": "5c2aa385-d445-4ac4-b9d9-a7965d524208",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "581f7c7e-8d89-4768-b673-7ffc5ba226f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadf24ec-77f4-4dfa-a56f-4073224ea169",
        "cursor": {
          "ref": "a7d76f13-7bcc-4182-9775-96c25420873b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3ff11e24-2c11-4c56-9565-47a07ec363ae"
        },
        "item": {
          "id": "eadf24ec-77f4-4dfa-a56f-4073224ea169",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "20f12018-3165-44e0-af9c-cbeae7406dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d55e399-3c7b-4af8-bee4-7aeda35c26da",
        "cursor": {
          "ref": "6be41bc5-cc20-4212-bca8-7175fab09230",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6bd445e2-3f34-4238-81d5-6b1c9a6fea68"
        },
        "item": {
          "id": "9d55e399-3c7b-4af8-bee4-7aeda35c26da",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dd00ec2c-b5a8-498b-bcbc-3527501a26e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e541df67-5d38-4e78-b88d-b605cbc3b859",
        "cursor": {
          "ref": "1f2b8be9-5690-4734-93fe-4b5f6335871d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "afdcef0f-689b-4ad7-a776-27453ffea50e"
        },
        "item": {
          "id": "e541df67-5d38-4e78-b88d-b605cbc3b859",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1ea09f3a-66b5-4995-a202-1f39ff24f861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6acec-7c97-43e1-a813-d9c15a308f8f",
        "cursor": {
          "ref": "c2346147-3c73-4ffb-a311-bca3b4ac4c71",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "968386e5-28ce-4b89-8adc-757aec29e72a"
        },
        "item": {
          "id": "41f6acec-7c97-43e1-a813-d9c15a308f8f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09197e44-052b-4cc9-ab17-71fad62f1a3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae48e260-a1c2-4fc6-9d0a-bcb421ec5267",
        "cursor": {
          "ref": "95de166e-88bc-4056-8e8a-ed33796dc4e8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8620661c-9ba5-4414-97fe-15f38fcd9b56"
        },
        "item": {
          "id": "ae48e260-a1c2-4fc6-9d0a-bcb421ec5267",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9945089-a081-420a-931e-9bcbc65ec890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33afa32-f72b-4786-a338-d2ed94671faa",
        "cursor": {
          "ref": "fe8b17b3-9554-433f-be2f-ffc4f03448e8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d2ebce58-a3b8-4675-9592-b1cdcb396955"
        },
        "item": {
          "id": "b33afa32-f72b-4786-a338-d2ed94671faa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4033ea65-2114-4155-affd-5d9fda6e9c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db2079-5454-4e43-b3c7-0ff9a708319f",
        "cursor": {
          "ref": "506641d4-afc6-43c2-bd93-139c45984e29",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f97049ae-0a6d-47eb-9387-7262ad6c99fd"
        },
        "item": {
          "id": "c1db2079-5454-4e43-b3c7-0ff9a708319f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "582da211-4ef1-4135-853e-8536af278e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f54d3-821d-4d25-ad40-1b25dbc30e6f",
        "cursor": {
          "ref": "953eba14-3fd9-4c51-beab-55d0e0f1590f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ed50a338-28c9-4968-817e-916d3a42dd3b"
        },
        "item": {
          "id": "f29f54d3-821d-4d25-ad40-1b25dbc30e6f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f75071ee-5114-48cf-ad2d-f40131fa102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c824b54a-2070-4387-bdc9-09b9afae3392",
        "cursor": {
          "ref": "95ac45ef-a92e-49b2-a0cd-f1e39b9a0e7b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0f98f412-842f-4a3b-86ec-f96512590ee2"
        },
        "item": {
          "id": "c824b54a-2070-4387-bdc9-09b9afae3392",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "33edd8a7-68cb-491b-8fd5-8135eb38fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ecb73b-7e89-49ad-9195-883d2752274b",
        "cursor": {
          "ref": "dace33c2-0deb-49bf-8b84-7e8400c3e4cc",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7e072f2e-7f68-46a5-9459-4904a21466c1"
        },
        "item": {
          "id": "12ecb73b-7e89-49ad-9195-883d2752274b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "13599c9b-bacd-402f-9c3b-7fb7048fbf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a691f-cecd-4ed7-804f-43423b729868",
        "cursor": {
          "ref": "4b1f06fa-9975-499e-b81a-37eefbf2f23b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44cd56ff-0adc-485d-a041-eaa7f0386e90"
        },
        "item": {
          "id": "7c5a691f-cecd-4ed7-804f-43423b729868",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eacd3fd5-c759-4dc6-9cb5-8d2280165643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a430aa3e-f723-4d3f-b05a-0fa667cc9759",
        "cursor": {
          "ref": "16a80aba-2a9a-498d-a98e-78899c4cfee3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3055a3d-5fc8-482c-b87e-16c45b53f9ed"
        },
        "item": {
          "id": "a430aa3e-f723-4d3f-b05a-0fa667cc9759",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c6b03661-1236-45ea-ac1b-baae584abf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b077ea9-d559-4567-a04d-a75265914534",
        "cursor": {
          "ref": "07f53301-7673-4ba7-8d39-4dca5021309a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d46803e-5b5e-47ad-b8f1-c60c74b0b8df"
        },
        "item": {
          "id": "8b077ea9-d559-4567-a04d-a75265914534",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "46c58ac8-eda2-4588-acc7-9377538b02ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c80aa-57cd-4330-935a-f45bc59b0359",
        "cursor": {
          "ref": "511e66bc-d993-4d13-8c62-2a5fbaabf689",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bd7860aa-ed6b-4278-8d36-6f30129a26d6"
        },
        "item": {
          "id": "784c80aa-57cd-4330-935a-f45bc59b0359",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2e74fde0-f8dc-4f1c-9eb3-c07f622577f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6adf9d-b4f1-492a-8052-c5364dc229b6",
        "cursor": {
          "ref": "b41f098e-586b-47ad-ab2a-4b45dc59ae19",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d0f9d5a4-a6f0-457c-95e4-f744e5b5d652"
        },
        "item": {
          "id": "0d6adf9d-b4f1-492a-8052-c5364dc229b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a30f20cc-f2c0-43c2-9212-ce491094a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37daf12-8f66-4e0f-9b09-c96ea7df5ba8",
        "cursor": {
          "ref": "a79de2ad-b59b-4a79-808a-26d7c5fca06d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d62589ee-9e09-46b8-966a-6244731dc32b"
        },
        "item": {
          "id": "b37daf12-8f66-4e0f-9b09-c96ea7df5ba8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "27e233ac-e4ad-4d5d-9780-d59585ea6f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99aa783-46aa-491d-9fa5-24a0e4f387d3",
        "cursor": {
          "ref": "6d2ed76e-2577-4ac8-ab52-1f0192d186c3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "616725ca-bc6e-4e70-8577-d39a492af975"
        },
        "item": {
          "id": "a99aa783-46aa-491d-9fa5-24a0e4f387d3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2d712334-eca7-43b6-a75c-3488badebda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400f0c1c-3e95-4ebf-921d-f0f02425c6de",
        "cursor": {
          "ref": "c1eb831b-a7ad-4a18-88c8-667584033248",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32f56e9f-c9cc-439c-b1af-647db414c559"
        },
        "item": {
          "id": "400f0c1c-3e95-4ebf-921d-f0f02425c6de",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "38b918a1-930d-43e5-b7b3-424aba07727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322aa301-82f6-46a0-a238-72835a4e9d4c",
        "cursor": {
          "ref": "9c630f10-4ff9-40d7-82ec-836d46473852",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e56aebae-fbb9-484f-84ad-d49312313e51"
        },
        "item": {
          "id": "322aa301-82f6-46a0-a238-72835a4e9d4c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "92d1e4f0-39fe-4be3-b2f3-891ef12a22b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48033240-4084-46f7-83b2-f6213e00aba9",
        "cursor": {
          "ref": "2a77b941-cb7e-43f6-8606-f3861db7160b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8655f400-1a95-48ae-884c-32f00f60a078"
        },
        "item": {
          "id": "48033240-4084-46f7-83b2-f6213e00aba9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5328a13a-3e9d-486e-a6ab-e752e1329979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99203d92-c14c-4b79-bb37-e21a15be1265",
        "cursor": {
          "ref": "7e12ea9d-f7f3-4015-b16e-1760dbf7a160",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "da0ec538-5175-4c60-9d42-1303faf7e482"
        },
        "item": {
          "id": "99203d92-c14c-4b79-bb37-e21a15be1265",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f428efdf-c26b-4243-bd6f-4850175f8459",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3f6c91c4-5524-4cd4-ad5e-2a28105821c9",
        "cursor": {
          "ref": "5fd0430f-0464-468c-86f6-ee947964cd24",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5d986e59-b715-4d69-a4f5-7ffddf1c2b3f"
        },
        "item": {
          "id": "3f6c91c4-5524-4cd4-ad5e-2a28105821c9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "638820ad-2a4c-4ef8-aee1-379941b9b352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ae3e2c-cc96-436b-83c8-45d5ee936d6c",
        "cursor": {
          "ref": "4e28d704-119c-46e5-8a2e-e6b45b897c9b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "696f48b0-5dbf-4e17-a6de-2acd1ae3ccb3"
        },
        "item": {
          "id": "d2ae3e2c-cc96-436b-83c8-45d5ee936d6c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "13ee2575-84bd-4515-bc9b-6726012db36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3aed3c4-2aab-410f-b179-ba10cc8da60b",
        "cursor": {
          "ref": "655800d9-0fe0-45f7-ad95-081f6bc949f3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "95f262fb-8f96-46f2-a209-8149b5b2e882"
        },
        "item": {
          "id": "f3aed3c4-2aab-410f-b179-ba10cc8da60b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5434fea6-2006-4d07-8e93-d58a43fe2876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d336495a-c4a7-4f95-9fbe-8570294b6317",
        "cursor": {
          "ref": "b3909681-feba-4a69-9165-b0b09e6c98cd",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2ee42475-615d-4fc7-bff0-1d0deae9e453"
        },
        "item": {
          "id": "d336495a-c4a7-4f95-9fbe-8570294b6317",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "64be1c70-6d77-47d4-a5d4-2dd19f87fe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd72a960-2b67-4785-b85c-50e0f2e5b0b9",
        "cursor": {
          "ref": "2de30f45-9fb0-4e2a-b70a-5d35ee051adc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ee1976cf-2256-4ec9-8e6b-321bacc3138c"
        },
        "item": {
          "id": "bd72a960-2b67-4785-b85c-50e0f2e5b0b9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b9ccd931-f7d6-4353-8787-01da01347117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f5050b-0d79-4c15-a99d-b70200d9330c",
        "cursor": {
          "ref": "538002ba-5db3-4bd5-933c-801943eedb5b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "091531a3-07c3-43b9-b3ba-0ccc1d09c4f9"
        },
        "item": {
          "id": "f6f5050b-0d79-4c15-a99d-b70200d9330c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ed6d832-5a26-4221-92ff-b9229c65e0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6476fe-891a-4924-a7ee-263a0547c8ac",
        "cursor": {
          "ref": "585a562f-2ea0-4b12-a63e-60bfe6a31253",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e26c6a18-f414-4bb6-91b2-6a4e3484a5ca"
        },
        "item": {
          "id": "fb6476fe-891a-4924-a7ee-263a0547c8ac",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "98512a9a-24b0-4a82-85d1-19eabe479eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ac7141-aa8d-43e0-9a04-3d14340f40ca",
        "cursor": {
          "ref": "697197b2-9ddd-4b31-ba1b-52c78007c623",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "75f29748-f3df-4900-aa5b-d8e3690095d7"
        },
        "item": {
          "id": "24ac7141-aa8d-43e0-9a04-3d14340f40ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9ae6ed39-f8ad-44a7-8008-94768076fd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ef1df-dcc5-4eae-a3f1-45af5da57362",
        "cursor": {
          "ref": "9298120b-572e-41af-b9e9-0bb6e691136b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "936bde5c-7705-41c7-a9b3-71a9ff610bac"
        },
        "item": {
          "id": "8c6ef1df-dcc5-4eae-a3f1-45af5da57362",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cd475619-ebb6-436e-bb11-3bd70f39ff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef60ee27-2764-406e-9202-278c368aba01",
        "cursor": {
          "ref": "43a2ae41-e076-44d8-97c3-637ad0e72a9f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "655fcfed-010d-4130-8bf9-9fbca1b6792b"
        },
        "item": {
          "id": "ef60ee27-2764-406e-9202-278c368aba01",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9940c35-9e4a-4eed-ba2b-5bbfd2b76bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b67dd35-e239-437b-83c9-919c4f71ec52",
        "cursor": {
          "ref": "c164cdcb-7265-48ef-a299-87ffb1b565f9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eae976bb-4fa3-4bdc-9ec7-55724a1d1424"
        },
        "item": {
          "id": "3b67dd35-e239-437b-83c9-919c4f71ec52",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7d31446a-e68e-49e2-bb2f-ec1579d3e139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b83031-dc33-44c0-b088-09fbefe510af",
        "cursor": {
          "ref": "7c9aff54-17a1-4012-b296-58ba3c976fcd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e9a411c7-554a-43c6-b9c1-e8de41bbf895"
        },
        "item": {
          "id": "94b83031-dc33-44c0-b088-09fbefe510af",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30a6043e-e68e-4035-b831-f5c3af220dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2367d04f-4319-4d9c-a76e-d22286e5bc7b",
        "cursor": {
          "ref": "93278adb-249e-4d7c-93af-7a984384e1fa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1186460d-1b66-4fce-91de-e0910cf5e187"
        },
        "item": {
          "id": "2367d04f-4319-4d9c-a76e-d22286e5bc7b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a6b2a631-66f6-4bb2-8a6a-9605aa89b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8ac1b9-c1c0-43e9-bb27-06c68b0c1222",
        "cursor": {
          "ref": "9c143ad0-9d8a-407f-ba83-023adcf09074",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f6d792a2-9744-4369-9aee-07f84bab1172"
        },
        "item": {
          "id": "3c8ac1b9-c1c0-43e9-bb27-06c68b0c1222",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "996855d9-ae58-487c-bae4-8d24ca54759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e646eaad-04ba-4b12-b4fe-ac439d89e8ef",
        "cursor": {
          "ref": "0cafaba6-4fb2-48b4-8ad9-92f6a233e6e3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9aa1f76d-afbb-4e2e-ad2f-516df07e33df"
        },
        "item": {
          "id": "e646eaad-04ba-4b12-b4fe-ac439d89e8ef",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d70dccbd-fdcb-4a09-b9b1-6c064174120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd570a8-d922-4bfd-9758-e13f193ebfe9",
        "cursor": {
          "ref": "61df1c20-12d2-4e5b-8183-fe8e50d406e6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0a014728-414b-4832-879d-03bde0292b63"
        },
        "item": {
          "id": "9cd570a8-d922-4bfd-9758-e13f193ebfe9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fca54739-a017-42e5-9633-2ddc52aa122a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6610a323-e6d8-4dc5-b0b5-28b373274538",
        "cursor": {
          "ref": "8ca306c2-b1f5-4ec9-9b16-87a7189c1775",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "daf70aea-baf2-473d-a13d-06d2b2ff3cfb"
        },
        "item": {
          "id": "6610a323-e6d8-4dc5-b0b5-28b373274538",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e78270cf-c9ca-46d1-884d-eb5c4891d6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fea607-4a10-42be-a000-15215a87149c",
        "cursor": {
          "ref": "842a44e5-abf1-4130-a919-ca109b3e48c7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cae20726-547f-4255-bcdb-055b68d97f53"
        },
        "item": {
          "id": "48fea607-4a10-42be-a000-15215a87149c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b2827569-7727-447f-bfbb-2e8ec436c727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed2d97-d320-4f9f-bfb6-55d1d76efc29",
        "cursor": {
          "ref": "c4e15726-f2f5-4ab1-8ea0-855040f6238f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2b47222a-6ffe-401f-827d-ee9166992b7a"
        },
        "item": {
          "id": "fbed2d97-d320-4f9f-bfb6-55d1d76efc29",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "24d09de3-a748-4433-b832-2423c528833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9b531f-8c8f-4e29-bd04-71fb182b5eb4",
        "cursor": {
          "ref": "6390c013-cd46-4fda-9d68-2e262a0fcc99",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a2ba0d79-f738-418f-8709-f456aa9cbd70"
        },
        "item": {
          "id": "1d9b531f-8c8f-4e29-bd04-71fb182b5eb4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f1732e92-eeee-4308-9a9b-44ceb09aa30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52edcfa3-1873-474c-8de3-e5778f3c26db",
        "cursor": {
          "ref": "cbe234bd-be50-44b8-a86b-5f564e925aa4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9e3bbc5e-6da9-4aaa-aff5-b379a73b261a"
        },
        "item": {
          "id": "52edcfa3-1873-474c-8de3-e5778f3c26db",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b28bc817-724e-466f-8a36-a6181e87ea32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e23cff-07c5-429d-81e3-c20d4d83e560",
        "cursor": {
          "ref": "55946bcb-8d7a-4007-b8e7-4173f5696eac",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fce6d80d-1ea3-4980-bfdb-b41a1b6275d9"
        },
        "item": {
          "id": "36e23cff-07c5-429d-81e3-c20d4d83e560",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa6adf9e-8d9b-4891-bc72-f336b3f598c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170eddb-afe8-4b07-9833-404bf1806b78",
        "cursor": {
          "ref": "94d8b570-b7e4-45ed-9681-b0f0e48248e6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6059f85d-ded7-47f8-9808-2246015ec105"
        },
        "item": {
          "id": "b170eddb-afe8-4b07-9833-404bf1806b78",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7dc7fbb2-6593-44bd-a3ac-061978090074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea28695-717a-4f1b-a13b-e0774168923e",
        "cursor": {
          "ref": "2f4f1423-6e9b-42e1-9884-2034ac93bba3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c335052c-9a0d-4559-988b-055a53b26e91"
        },
        "item": {
          "id": "eea28695-717a-4f1b-a13b-e0774168923e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9d6e5f13-df7f-433e-9e33-5c7da49a035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2bdbd4-5220-4070-9044-4f6384df6b40",
        "cursor": {
          "ref": "7eb241e7-1686-4077-aeda-493be048cf40",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "af82a7bb-ebe1-4952-a72d-2a911b62aba1"
        },
        "item": {
          "id": "8b2bdbd4-5220-4070-9044-4f6384df6b40",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c20c41bb-7538-407c-98da-5b24311d9857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f603367-649e-46be-89fa-2f6c1c0ba5c6",
        "cursor": {
          "ref": "dce123bc-fdd1-4ddc-b546-98f506a95363",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b13bf5f3-4c5a-4775-aa0c-7b168bfeeeb1"
        },
        "item": {
          "id": "2f603367-649e-46be-89fa-2f6c1c0ba5c6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "068033e5-05af-4ada-99fa-508ee6cac7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4b1de2-4dcc-4102-9735-2b3b6dd5bb1e",
        "cursor": {
          "ref": "cd2ce717-3690-4148-a244-7376d2a9b9d5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "50108d96-853a-48c3-b2e6-ba8a0af55a0f"
        },
        "item": {
          "id": "1f4b1de2-4dcc-4102-9735-2b3b6dd5bb1e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c754563c-3e03-4c28-8cc6-4d8129b35c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e3fac7-2d6a-42a6-8c70-6a4ce89af727",
        "cursor": {
          "ref": "394e66dc-e5b0-48ec-92c8-d43ee5b75f7b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f09cc758-fb15-47d6-ac2a-94df8652a734"
        },
        "item": {
          "id": "90e3fac7-2d6a-42a6-8c70-6a4ce89af727",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d61cb78b-dedd-4229-8c6c-42ea3704ee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cf540f-a683-47cd-a635-cf6bc420d5e0",
        "cursor": {
          "ref": "10e566ed-a282-4759-b779-d49080a202b1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ccb19551-6677-48df-bfed-1af67af7cdb8"
        },
        "item": {
          "id": "f3cf540f-a683-47cd-a635-cf6bc420d5e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "14c47778-ba5d-4b7d-a426-b778857fa865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83bce33-957c-47b4-affc-4e45743eae1a",
        "cursor": {
          "ref": "89d48cae-62d2-41f4-bc0b-cc8bf4c6669f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bfd0e811-fdaa-4864-b2d4-24ccee32fc57"
        },
        "item": {
          "id": "d83bce33-957c-47b4-affc-4e45743eae1a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1d909d5d-61ca-4cde-874b-776215b87935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fd1662-dcce-42f7-be63-e84f0e6c907c",
        "cursor": {
          "ref": "9fa8dc6c-6f88-4368-be46-f6cf2d61a356",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b6e7db32-5038-48c6-89ab-a22c01ae943d"
        },
        "item": {
          "id": "14fd1662-dcce-42f7-be63-e84f0e6c907c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3a8162ff-83b7-4645-a333-d5dcf8bab73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9b4b96-7cb6-49b5-bd48-5a91ab455fe5",
        "cursor": {
          "ref": "6243d6d2-eadc-4106-8767-b77a4dca7a3a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3a84d5ca-03ab-45c3-8597-75453032bd3c"
        },
        "item": {
          "id": "af9b4b96-7cb6-49b5-bd48-5a91ab455fe5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c3b6fa44-40fe-432c-ad85-eab773f6ee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f26a931-fd04-4fd5-bfb7-8e34c481d635",
        "cursor": {
          "ref": "6a9d74e8-6f51-49f0-86da-89626379717a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ff945ca9-f906-4a36-a54e-92951f3b1a1c"
        },
        "item": {
          "id": "7f26a931-fd04-4fd5-bfb7-8e34c481d635",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "76df0b4d-72fa-4654-8eec-4de3a74b6df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da29c671-3f73-4fe0-8ebf-a4f9c06f9264",
        "cursor": {
          "ref": "7a5f0fb5-9eb5-4129-a382-c857728d0683",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "088aee06-43f6-4af2-a265-386ec0f29d31"
        },
        "item": {
          "id": "da29c671-3f73-4fe0-8ebf-a4f9c06f9264",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0fcbe739-f711-4531-b56c-76e4ae7ea802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcdb9e1-810e-49e1-a5ad-7946dbb0758e",
        "cursor": {
          "ref": "6dd8dea6-8830-42d7-bca8-1878765291cc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b8ecf3c-d795-4638-b25b-8b3977685267"
        },
        "item": {
          "id": "6bcdb9e1-810e-49e1-a5ad-7946dbb0758e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0dd19c7a-c6fa-44d0-8b4b-290dba5a1ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5c9f0b-fe49-4cae-9890-40f0240e57aa",
        "cursor": {
          "ref": "2370124e-a439-4f4f-9a50-8b39e7461e41",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "90164f16-7e99-4399-b444-15a4d85876c9"
        },
        "item": {
          "id": "9f5c9f0b-fe49-4cae-9890-40f0240e57aa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bec3c72f-d056-49fe-a315-1d89ba263052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0eca8e-4220-44c6-9fd8-900647841036",
        "cursor": {
          "ref": "af5e9fcf-47cf-43c3-9981-73093b6ff9ee",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cfdb7fea-894c-43f4-9d51-9bedb23a1a36"
        },
        "item": {
          "id": "ab0eca8e-4220-44c6-9fd8-900647841036",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a38dff30-0956-467a-a7f5-7eb502ac36fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbcc505-6dd6-42e0-aad4-92fae940da6f",
        "cursor": {
          "ref": "83ad205a-03c6-409f-96a4-fbad46618e2d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db9f4208-3eb6-44d1-a666-73138e5aa4e5"
        },
        "item": {
          "id": "ddbcc505-6dd6-42e0-aad4-92fae940da6f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "77df72eb-318f-43d0-a154-c20ae4b8b3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aedcd7b-1281-4ac5-8f5e-a574acb9e1c5",
        "cursor": {
          "ref": "8f2a27bc-fbb6-4fdc-a29d-14b83d8f1b06",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29e02ae6-f49b-4a18-85cf-3c8a3907e959"
        },
        "item": {
          "id": "7aedcd7b-1281-4ac5-8f5e-a574acb9e1c5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "441435dd-9be7-40d8-851d-02921374d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba037b7-702b-4067-a8ce-3e107a77401c",
        "cursor": {
          "ref": "5df6fcfd-77a5-47ea-8647-52098106e9ed",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb31512a-c92a-47f4-9acb-c3a900512a4a"
        },
        "item": {
          "id": "aba037b7-702b-4067-a8ce-3e107a77401c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3b86c2bf-4ffc-41cd-a5d9-63701b7db2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edfd2a6-1ac2-40a0-8037-651b9740384f",
        "cursor": {
          "ref": "62e9fa5d-9305-4cc7-bc4f-30de6b9539c6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6456231b-8733-460c-b723-840fec46a2a2"
        },
        "item": {
          "id": "0edfd2a6-1ac2-40a0-8037-651b9740384f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4d14e9b1-eee1-44e8-8474-9e55ae2fd9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3baad-3b1b-4338-b082-f6666cd43c23",
        "cursor": {
          "ref": "218ead46-bebc-4ffd-b1f7-911b66a01742",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e0ada8b7-c0e7-4518-a6ff-88d0c7f44511"
        },
        "item": {
          "id": "63d3baad-3b1b-4338-b082-f6666cd43c23",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "42909c2e-3ba6-4c88-a8d8-ec8623092900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882c2920-e57c-47f6-a43f-194f1af0dd81",
        "cursor": {
          "ref": "0fcc3ac3-46a9-470f-b807-649852030795",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "051de6e1-abf7-4db2-a9bd-e6ec766efddf"
        },
        "item": {
          "id": "882c2920-e57c-47f6-a43f-194f1af0dd81",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "469ea153-331f-47d9-9e5c-d8740c67aa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05380a65-6dd7-430b-8c09-376ee7960898",
        "cursor": {
          "ref": "991d4a45-5ac3-4fcc-a25f-35cb36e3a6e1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b0dcac2a-5a2c-4451-bb8f-ea7681cd210d"
        },
        "item": {
          "id": "05380a65-6dd7-430b-8c09-376ee7960898",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "684a4dd2-f06a-4092-a02b-b998a3f253e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64d4080-8dc3-4285-bd3f-d0a699fdb86b",
        "cursor": {
          "ref": "b5818d4f-b557-436e-83dc-567e13b5296e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "caf22c65-78b1-47c8-8c7f-c7ffaf9bde8d"
        },
        "item": {
          "id": "a64d4080-8dc3-4285-bd3f-d0a699fdb86b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3daee9d3-e4c1-4d8d-a992-724456b57dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8144c0f9-766a-48a9-87b6-0c2b7eeb44dd",
        "cursor": {
          "ref": "688f1c3f-fb0e-4c9b-90b9-66b875e2e4ab",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fa471278-6c98-4135-9318-868e29ba52aa"
        },
        "item": {
          "id": "8144c0f9-766a-48a9-87b6-0c2b7eeb44dd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4d8392aa-1884-4e46-9efb-bd59409b71d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73823ef-89ca-46de-a0c0-c233117b7569",
        "cursor": {
          "ref": "7366d080-e9f9-49a9-9a14-b8664f02729c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d793badc-0e58-4d2a-bc13-19a76924584c"
        },
        "item": {
          "id": "e73823ef-89ca-46de-a0c0-c233117b7569",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e76e6a79-53bf-49e0-876a-638b19d6385a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9fa7ad-c910-4578-8813-dc88d1cfa226",
        "cursor": {
          "ref": "565e9335-e988-4f1e-a003-1511d142e836",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "afb0893c-3cab-4392-8a15-8d4d9b84816f"
        },
        "item": {
          "id": "2a9fa7ad-c910-4578-8813-dc88d1cfa226",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bfad2a0f-ead1-46be-8489-5f0716dd6cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910dece-63aa-4714-a6c1-f3460fc2777f",
        "cursor": {
          "ref": "17df9fb7-efcd-4717-9666-421f4dfbc689",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b7e9a9e4-65dc-443a-8c9e-fe9ed4e42d2a"
        },
        "item": {
          "id": "5910dece-63aa-4714-a6c1-f3460fc2777f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a88e863d-aa7b-4291-8249-ec940f2f1f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef63a19-f2f6-4f5f-9275-344030f339bb",
        "cursor": {
          "ref": "86c3cddb-3960-4e85-b440-428abc9069e3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89017c80-f0b2-4b97-9559-04187be375d4"
        },
        "item": {
          "id": "9ef63a19-f2f6-4f5f-9275-344030f339bb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "27a8d47a-2d60-4dd6-824a-416786f9b12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e5670-435d-4360-b0e8-d0bacdd85b82",
        "cursor": {
          "ref": "4fe555ad-8b22-4997-abac-53b7647b47f9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3a4787e3-be5a-4d25-bce8-a4b99d46ff94"
        },
        "item": {
          "id": "e40e5670-435d-4360-b0e8-d0bacdd85b82",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "78c0fec4-85ef-4876-aabd-4e6a3f164fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b365dd3-be20-4905-9b97-cde578cf9de6",
        "cursor": {
          "ref": "e7a36716-04ae-49ee-9037-a2a5589b7ec4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a9eb2ff-aff7-4adc-8eb8-950c8ab1d35a"
        },
        "item": {
          "id": "2b365dd3-be20-4905-9b97-cde578cf9de6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c4f060b0-3116-4962-beb7-9135355f6658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43962ed-1762-4f07-b311-7c7479af4624",
        "cursor": {
          "ref": "82b28c6d-371e-4f17-8058-282bf901a587",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f7b64ecf-0f84-4d69-97fc-0dd29fc5e647"
        },
        "item": {
          "id": "c43962ed-1762-4f07-b311-7c7479af4624",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "19bb5309-f1f8-46d7-8fed-482e14a57025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f38694-1bb9-4211-96b5-7c672c4b1a6a",
        "cursor": {
          "ref": "c1ed7b3e-6555-48c0-b11a-4c42fd46866c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a5dea21f-fad7-449a-ae8c-bec1dc2ad6f3"
        },
        "item": {
          "id": "c1f38694-1bb9-4211-96b5-7c672c4b1a6a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e47541cd-f208-47c3-9ee5-cf25b7ba5243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c35dcf-e1fd-4422-8433-36399ea46a41",
        "cursor": {
          "ref": "83b3877c-0a12-4c7f-a46f-e3df51283b2b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3f244c13-6a14-4067-9084-96f88a40cc84"
        },
        "item": {
          "id": "b4c35dcf-e1fd-4422-8433-36399ea46a41",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f79fcbdb-9c9e-4052-9c7c-036102b841f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ca9afb-b1fb-4f49-a248-73e991b31308",
        "cursor": {
          "ref": "2f9d7742-b44a-440a-939c-18437609cd90",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b96a9672-282e-4325-97e8-a5fc6cc975ee"
        },
        "item": {
          "id": "c5ca9afb-b1fb-4f49-a248-73e991b31308",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e7fc3df2-712f-46e5-a220-33c5466a1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bfc33e-ca53-49ce-84e9-b758769481d9",
        "cursor": {
          "ref": "a9af1953-a96f-4292-b535-7d69c98f43cd",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7c55f807-a7ba-4a8f-9232-aed66f94a47b"
        },
        "item": {
          "id": "f3bfc33e-ca53-49ce-84e9-b758769481d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f4badff2-c4e1-4c84-a3ba-376a6cebd531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0698b279-aed9-489b-b54c-8411d7736273",
        "cursor": {
          "ref": "e667afde-d4fb-41f7-8f01-2dee9df2f8c3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a026ac09-489b-4019-bbc7-9bdb1488710d"
        },
        "item": {
          "id": "0698b279-aed9-489b-b54c-8411d7736273",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e39446b3-a3cf-49e5-8ee9-4f1e3f1fe778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449b5621-60d2-46ca-bd39-672b4e4d749a",
        "cursor": {
          "ref": "366deb95-d0a8-441d-af14-b2af4f75f362",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0b67b68f-b30e-473b-9085-520e8a485df9"
        },
        "item": {
          "id": "449b5621-60d2-46ca-bd39-672b4e4d749a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0529e4c5-a7d6-4f87-be13-d4d8d0662f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9352eb-1282-4750-87bc-e6e0a2dc89b6",
        "cursor": {
          "ref": "f6fe8432-13f6-4f77-b733-aef64eee06af",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a427ef52-6b14-4943-97d9-823a146c9f4b"
        },
        "item": {
          "id": "7c9352eb-1282-4750-87bc-e6e0a2dc89b6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "798424af-adcf-4efc-9d42-b04aab215f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2922b621-560b-41ad-9f75-8154caf0ab21",
        "cursor": {
          "ref": "b4692ced-11c4-469e-b201-9f4d3d30e423",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc21d6c6-edbd-44f7-b7eb-cfad3b757e59"
        },
        "item": {
          "id": "2922b621-560b-41ad-9f75-8154caf0ab21",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "71106775-0919-415f-a81c-041bc2e9ac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496a83e4-4695-4720-b969-3ce9ae36965f",
        "cursor": {
          "ref": "eaaa6a9e-47fd-4682-942e-4027dda8a8b9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5b784636-5e69-4d76-82d1-3ff044ecfcfd"
        },
        "item": {
          "id": "496a83e4-4695-4720-b969-3ce9ae36965f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cafab2f5-d947-49a0-802a-9c6340292bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1461fbc-eb9c-4907-be20-e66441250cf2",
        "cursor": {
          "ref": "033dff64-e5a6-4834-9380-dd2d32a7b24f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "34e5d9fa-b6e9-4348-991c-2567e7289398"
        },
        "item": {
          "id": "c1461fbc-eb9c-4907-be20-e66441250cf2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c7bb00ac-63aa-47c8-9ff0-f71926984e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d730d20f-ab24-432f-9371-c1652f213516",
        "cursor": {
          "ref": "68a9f48c-70ed-4aef-9ee2-f1e900737152",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "105b6de1-99f6-4115-b293-e547d210278c"
        },
        "item": {
          "id": "d730d20f-ab24-432f-9371-c1652f213516",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e37f1b04-f379-4ee9-9db8-148d451b4a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d17f75-2173-491e-9c5d-06903b680bef",
        "cursor": {
          "ref": "40923410-fe69-4bbc-816d-b1a0445674d3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b37cef8b-396c-4f41-96ce-a957bcd0d5f3"
        },
        "item": {
          "id": "71d17f75-2173-491e-9c5d-06903b680bef",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1c513c5-e1ad-4e92-adb5-4012816c4c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524312ca-b0a0-4cbf-8f41-de89c43680e1",
        "cursor": {
          "ref": "298c2787-b103-42ba-8b66-fe6fa946f9df",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6fb3a71e-6068-487c-ae2f-31a1b7b75029"
        },
        "item": {
          "id": "524312ca-b0a0-4cbf-8f41-de89c43680e1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3dd05240-2d61-42ef-9b63-6b7530004eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0980dd-dda8-48c1-8906-757460c4d43d",
        "cursor": {
          "ref": "62803b06-00a1-4ec6-ad27-0d1667a51444",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7c3312e2-13e6-4617-8320-10257eeab92e"
        },
        "item": {
          "id": "2b0980dd-dda8-48c1-8906-757460c4d43d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "af764b04-b085-4fa4-83fd-3a9505f2730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c5c601-0250-4f2e-b777-66e8851f8cee",
        "cursor": {
          "ref": "ac3bc635-8d48-45ef-ba1a-8b534985abb3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c44933fc-aa10-4532-88b7-5ead34a6c964"
        },
        "item": {
          "id": "09c5c601-0250-4f2e-b777-66e8851f8cee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c1e842a6-9e85-4c2c-b4d3-bcd347afb147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96129d2a-d0e3-457f-bee2-81d57211308d",
        "cursor": {
          "ref": "55f53167-3e8a-4d2c-8f64-63cb8f407729",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7bea63f0-da07-49c8-9924-54c9780c8954"
        },
        "item": {
          "id": "96129d2a-d0e3-457f-bee2-81d57211308d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8c9bcd15-385c-47ef-8867-c33369699852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da637ecc-52d2-4be4-9295-b90e5a130d98",
        "cursor": {
          "ref": "930cdb62-a177-40ea-a067-1225afcd1682",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d5720a14-fe81-4f04-ae1f-163e35feff7a"
        },
        "item": {
          "id": "da637ecc-52d2-4be4-9295-b90e5a130d98",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5f3d1ed6-8bd6-47c5-a1dd-5ed667d18844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb4f69e-006e-45fc-bf49-ce7accac71dd",
        "cursor": {
          "ref": "03068e6f-6345-4a6e-86a6-f2844965d995",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8ed88383-1482-4d7c-b1e7-2a8cfe21c978"
        },
        "item": {
          "id": "9bb4f69e-006e-45fc-bf49-ce7accac71dd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "627b8d30-29d0-4789-a833-51336a1a6184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0fcf08-a856-4e78-99f7-629321375033",
        "cursor": {
          "ref": "048a1ed8-bd68-45ff-9791-ef4976ae8518",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b566d027-ae5f-4cb1-8719-99b81fed50b3"
        },
        "item": {
          "id": "6a0fcf08-a856-4e78-99f7-629321375033",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c477a090-a8e7-436b-a523-86e2e8e8d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7cb6bb-00a0-4e58-9c31-ebd267d944e7",
        "cursor": {
          "ref": "4c3a59cb-50ad-4ca3-9443-a1561e3c8809",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "de451811-7915-4bf8-94c1-7e580c85c2d4"
        },
        "item": {
          "id": "ab7cb6bb-00a0-4e58-9c31-ebd267d944e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cbfc0d45-6210-443f-bf49-27d3e68d984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed390a4-f494-4505-9256-9f59ea545bab",
        "cursor": {
          "ref": "c99d17ff-c17d-44a6-9ac8-5abb11fb7f88",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d676cfc6-cb8f-48d0-a5cf-8ecf06e0b561"
        },
        "item": {
          "id": "9ed390a4-f494-4505-9256-9f59ea545bab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f614cb3-eddd-476c-aa07-a5276cbfe751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0183ea4-5366-4c2a-9e6b-d8ee252816ef",
        "cursor": {
          "ref": "c61fec28-0675-4a35-b728-1c72dfbd607b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3e34467c-007d-4954-826b-e7e232926220"
        },
        "item": {
          "id": "b0183ea4-5366-4c2a-9e6b-d8ee252816ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d015ddd9-6bc7-4199-b6a2-ae9611b015ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b28b52f-702a-48d0-9186-c561bb3dc63e",
        "cursor": {
          "ref": "770c0811-cf6d-4f3d-8397-46d19df1fe81",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5d496c98-04da-4667-a806-32f958fa7ce1"
        },
        "item": {
          "id": "6b28b52f-702a-48d0-9186-c561bb3dc63e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6d0eeb87-6c7e-4efe-a677-35a57a8781b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99c252a-6386-440f-b126-c7d52b8a02ca",
        "cursor": {
          "ref": "abf99650-7b40-4372-8085-983f5706a83b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cf9bc22e-430d-486e-b4df-0cae60e03d59"
        },
        "item": {
          "id": "e99c252a-6386-440f-b126-c7d52b8a02ca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9dedbd1e-2f76-486e-b94f-d8d7638ef55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b10a4e-9b73-4d75-9e07-b1cc94002e46",
        "cursor": {
          "ref": "3fce209f-302c-4d65-a842-a339088ca2a9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c19551d9-3e2f-477f-a7bc-0b42a3f0155f"
        },
        "item": {
          "id": "16b10a4e-9b73-4d75-9e07-b1cc94002e46",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6d268b70-e9e0-4f8a-ae2a-3232eb4a79e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38351205-763e-41fa-ab15-005c82b5cb59",
        "cursor": {
          "ref": "1d18c3ea-8c3b-4289-b78f-898b09d2b600",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "06630d3b-a141-4564-ad82-8029a8ee453f"
        },
        "item": {
          "id": "38351205-763e-41fa-ab15-005c82b5cb59",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1112c2b-46fe-4e57-944e-8d867cbf91d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4302ba6-6e84-48af-a9b6-080d24020202",
        "cursor": {
          "ref": "0f6cd548-4078-4191-b0a2-2ac8a8e3d98b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d622ef58-7350-438a-a101-58c6241d6e12"
        },
        "item": {
          "id": "a4302ba6-6e84-48af-a9b6-080d24020202",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5106a30-c23c-4fff-8c43-e8b0a6e4cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f161a31a-6308-4ec7-b6a1-47331686830d",
        "cursor": {
          "ref": "87b6ff60-fcf4-4546-8f9c-17e76f139914",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d9ee922c-2eaa-492d-9ec8-4e84090bbe38"
        },
        "item": {
          "id": "f161a31a-6308-4ec7-b6a1-47331686830d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2e76dff8-1afc-4c09-b8cf-3f9d24d38b77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c852d7-3b57-4144-ba4a-f78cf6095585",
        "cursor": {
          "ref": "9ce074d6-70b1-4b3b-9e48-c0ab6f78b09f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2055b245-a0ff-4bd5-971c-be28f961bcd7"
        },
        "item": {
          "id": "05c852d7-3b57-4144-ba4a-f78cf6095585",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "04c6d3ec-8844-46f6-add0-15627beb0cfa",
          "status": "OK",
          "code": 200,
          "responseTime": 178,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e035198-0e8d-4988-848b-f0c9ac18db77",
        "cursor": {
          "ref": "0f5ab442-0a13-400e-a1ce-a1d9d678ab6a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8236dda4-c223-42a7-8f95-6f1886c5f847"
        },
        "item": {
          "id": "3e035198-0e8d-4988-848b-f0c9ac18db77",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f8b3b18e-c1aa-48b5-907f-b703e74d5038",
          "status": "OK",
          "code": 200,
          "responseTime": 6050,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d628e7bc-a2eb-4243-8159-1c242a27bbf2",
        "cursor": {
          "ref": "a95fcdc8-8653-450a-92da-a607b80c1725",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75de52c5-1164-4a49-b093-30d95a9e870f"
        },
        "item": {
          "id": "d628e7bc-a2eb-4243-8159-1c242a27bbf2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7e0b0bde-44e3-4fd7-80ca-04e8f2f5be89",
          "status": "OK",
          "code": 200,
          "responseTime": 6820,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672aa20-43ea-450a-a49f-5fe5bf64448f",
        "cursor": {
          "ref": "5add311a-6ef8-4e11-a869-3318ae2629d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "99f45769-5702-47f8-ab85-92d8d955895b"
        },
        "item": {
          "id": "4672aa20-43ea-450a-a49f-5fe5bf64448f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc431a6a-8389-42a3-958f-b3da33415c09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 179,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672aa20-43ea-450a-a49f-5fe5bf64448f",
        "cursor": {
          "ref": "5add311a-6ef8-4e11-a869-3318ae2629d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "99f45769-5702-47f8-ab85-92d8d955895b"
        },
        "item": {
          "id": "4672aa20-43ea-450a-a49f-5fe5bf64448f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc431a6a-8389-42a3-958f-b3da33415c09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 179,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220bbca-3570-4d7c-8fa0-51f56f2ee15a",
        "cursor": {
          "ref": "7a490a48-5dcb-48d4-b7fa-56700f589d2b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bce56f70-0d18-4698-9bd8-7fb9fb32b4b6"
        },
        "item": {
          "id": "9220bbca-3570-4d7c-8fa0-51f56f2ee15a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7acfe79a-4443-4675-bcbe-a0caedb6facc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 601,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e69f50a-d61f-4512-9861-5820318dda54",
        "cursor": {
          "ref": "fea1eeef-1ef7-45cf-b52a-bbe0ccff127f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9d49c89f-c77b-42c3-92ea-d2f50cb7f5a0"
        },
        "item": {
          "id": "8e69f50a-d61f-4512-9861-5820318dda54",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "01817fbf-f842-4bff-97e4-53c06e34b53c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 352,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}