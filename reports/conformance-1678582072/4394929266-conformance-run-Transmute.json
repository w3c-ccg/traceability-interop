{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f784c38b-dcc4-4d3f-87bb-ff44a5743868",
        "name": "Clear Cache",
        "item": [
          {
            "id": "aa13fac1-08d8-46c8-88c1-4eb2b918ae74",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a24067e2-087d-471b-b1dc-888a0ef8dd91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26c40126-fbce-464b-944a-df8c832c1be8"
                }
              }
            ]
          },
          {
            "id": "a004d568-9d45-4615-894a-498a6e5c056e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72a9d5da-bd9f-42e9-a281-3c23c02e345a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8653bbb8-7c00-4f86-85c7-5b3286a5e325"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "022f95b3-39ac-441b-aff7-9a12efa89827",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5bb641f5-d8c7-48f4-a32f-b680a0071581",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7e99600-1661-4000-ac88-5ab6e76a6d31",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a57cfd0e-b7c0-44da-8682-5ec51083a8d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e8f801e-e93b-4d71-9ad6-ce96a7c92ff5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35420264-a3d3-4088-9c3b-60b1bfde8320",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e352c1ba-3d82-4843-a23a-0952e1064029"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f36e568-e37f-4ea0-b8ef-46c77511c3f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08a272a8-c395-4313-83ea-3b50a9fba636"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e67bb499-94f8-4639-8f85-e1a32d7b1ac0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bb5dc86e-ff1a-4f93-a35f-bea7c114cad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f803700-1e59-4e75-a386-62df0e793290",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbbc7e66-b8d5-4da2-8f6f-2bbd855823e3"
            }
          }
        ]
      },
      {
        "id": "68e543a5-e341-4b32-bacd-d5d565b17a8a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "87b20eb5-c167-4218-b573-6d605b7a6d16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "363e69c2-2b99-45cd-b02c-25253fcd2511",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "439782fb-bfb8-4acb-9b9b-cdef14ecb474",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a72cb48-21fd-45b0-8313-f75e02881d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cdd17f2-8972-4fd3-af42-3a4dbeddf8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e876448-12c4-4782-b7d9-c88599d00b58",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8de953-9154-4b95-99bd-74641d5278ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5e03fd3-a0ed-47f7-a239-19f5c7176c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d46be8-bca2-46f2-baa5-3904d1374b78",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1322b6fc-df1a-4718-8f58-bc0aee54e310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f743d6dd-c192-42b3-8561-0f4d4697332a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed9b75e8-32de-4fe5-bf69-fc7a775d204c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f7106a0-334b-4289-ad00-6f54944327e6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b8ec4-5e9c-4ed2-871d-ec2cb911c737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de5f10d0-011c-414e-bb8f-ec24a9c41ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042555b-b48d-4c31-bdf2-3797e979b4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7cef1e-cd61-4232-95ff-490ab604998c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1842af4-9f11-4764-b220-f464961c81a4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffbec3a-464f-4147-a318-58a236f09b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62391fc4-56ab-4146-8698-a38a233935b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8cfac-041c-4f75-9efc-29107ebf416e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c1e9e86a-44f2-4426-9656-073dbfec1fd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ec0ae5a-91d0-480f-94a5-2faddcbabf72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92c5dd63-3b39-4ea2-b51f-9bed6b2c9993",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4084a127-3367-4209-a5b1-9cf1dd418154",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "29988bc0-c87d-4a82-84fd-85e30cd73b14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bcf61ae-7f2b-4e88-806e-90a655983083",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6a53c3c5-4352-412e-a6e4-eb52d24136d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2f9af88-89bd-443a-8f1c-1df7a2605723",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe23a400-d455-48c2-b626-3a383efd0bdb"
            }
          }
        ]
      },
      {
        "id": "bc8d9826-bd49-4ce9-b44c-70cdb00bb4a0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cc477ccf-954f-49ec-a06d-564bf1771524",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c3c5cca-1246-467b-8513-7421c30aed67",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a8a8b659-f176-430f-ab14-5e2191870101",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0c53a4-df52-4508-9361-ca6e680d5766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff0f753-e67d-4081-8413-2518774ea5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbf9759-46f4-440c-bc09-9e2603a9c6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7d1e87e-97f1-4888-b5bf-53e0418b163d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afa0fc8-37c7-4eb3-ab8f-4a2f61dd6a02",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a77d3da-beb7-4854-85f8-9aff92d9c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c1301e-f4d7-4b3b-a827-80880ae11060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40af6ea-1808-44d5-9f2b-a0e0b4875ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aa0ee60-22d4-40aa-bb1f-a2e4b72bf98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046b2797-a37c-4830-a64f-e638bcd286d4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48630f4-3b52-4367-ac83-dc500b5fc488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb1e9c-0c05-4e56-a52b-0e25f040687c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a0636d-f370-4c91-8a54-a0456ae122e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10205f04-e8be-41e9-bb27-2f99b4a83186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b8ea20-6ab9-4f7a-8094-429e641dbe38",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d66c972-a4d1-4f87-a64d-ff7b76df3199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05398a24-77e5-4972-a52a-35ddec600a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe601d-ede0-4fbd-a386-cc75ea8d24ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c22380a-d188-43fd-8bee-076e630d2116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2057103-3420-43af-82d4-25995769ed13",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af77c06-837a-4f3e-bbc3-8617eba29df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bc6154-0c1e-4bc6-9760-7d7b4a27c2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1d2c58-eb98-44d7-8a75-36a6607aa66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72512900-a4ee-49bf-be46-2dcd781660f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20a5710-20b0-40ba-a893-a49038f1f879",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b346d438-9256-4b92-8c33-6ab3642e8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e434f1-932a-40d6-a194-9d67d47c7988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45dd4b7-1bee-4428-96cb-c39c00d12aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17313cbe-d7d0-410f-ab58-3a102fd034e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5694b02-109e-4d1b-ae86-0bf2285cc945",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc2c547-56b0-47bc-b8c8-4e138529b27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be76d80-7347-4268-b0f6-ce6861ce7c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148e56fb-b6c6-42b1-9b6e-b85982c917e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75f6372a-e0be-48ce-b348-4d60821ed71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4149c9e9-e1cb-47e8-aad2-3def0d819e97",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24094f0-412a-4307-822d-8f5f4998a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb37937-b039-4a75-a56b-df9b1a809784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c398791-69c2-4e02-9abf-5b1df8116260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "718355cb-757f-47a0-a625-59b163e1f4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727fc21a-b049-40a5-9b2f-1192eb99394e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed48b907-0fba-4680-a662-cb41e254f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f4f882-a9ca-42a4-883e-78ae70162481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa062db-9682-4e8a-a13d-5359abec23c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7233f73-e807-4b97-864b-b4e254fe2a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbded55-9886-4e45-82e7-c98813a3a78e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7093a84a-747a-4fa1-bb7c-04a2cf4bb98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeda18f-6951-401b-89a7-fe461e378b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9f2a4d-1801-4426-ad05-260b7c25d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc434d55-4118-4e2f-8b64-5507a4234394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1109ce95-f133-4e1b-a215-3fa47ef182c7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e0ad46-cb10-4d45-9d79-fbb3a81edfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aadd66-d3fe-4bff-92d4-8e5a34712e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52fab63-4cd1-4fd9-b5ec-c1dbf4b4e7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b1e11e6-4550-42a0-9f97-20121fef798a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926c7f2-1fb1-451d-824a-d221acbcdf07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8094aa4-73ef-4397-a4db-3022245e0b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e786e05b-9850-45ba-9b83-5428ab90b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cad9e9d-696c-4516-9311-d1dd4ae68579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff3364b-e20b-4db2-adf2-1b1568184240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4685106-9cd4-440c-9f1f-d17cccb02aec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257a7d4e-f191-4ae3-8478-e2d6fefac9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f38b1e-2952-4126-a8bd-3e7ac11459d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c939aa8-0cae-4d70-bb34-64506a84e618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3ee2d13-3376-4caa-9054-fb420bd1a12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e623c4be-0251-4b35-9796-0421a74abe48",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce5d91-7f37-4e7f-abc5-f13ff9b75686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee6bc1b-6347-4d5b-8553-1a985e238406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23137fcc-d7cd-42c0-9524-229ad620dc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b20a0a1-ce08-42f8-907e-e4cedbb7e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e6ac3-6313-4abb-9e3f-a0b31240cc28",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a65b2-62c8-44e0-997e-f6145459c63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7535a6-1271-4b4c-8678-04eb1e14782c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b70c5e-6f75-41b1-b723-1621e9718aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98d4d49d-c64b-4695-83e1-bcaa4bcdc4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7c31d-b134-4048-b736-0f27173b2f83",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea59bef-3ac7-419a-b170-a54c7ed662c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6652c01-47b9-4329-829f-13953e6bb511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a3d409-e106-4405-ac01-0d5c74ed5fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb372dce-674e-4eee-8104-96902bbb0b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2efdd4-7947-452d-8807-21ad85185af6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd63423-23db-4fa3-890b-18530b3204b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f122ebbc-c042-4016-b370-00b65d0a0b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4421ddf-e444-43a1-bd9e-8c1e3e5f266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c905300-e390-40e9-9b93-a57a54076708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0737eedc-cc28-4017-8e3b-d71f9059768d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4036a28e-be65-4589-a3cc-7a760404417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192d3cc5-e79b-430e-addd-401dde82e4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f4799b-acf6-4a96-a069-2913fe592506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c0618-da0c-452c-b1e8-c9c1e754d4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77262254-6174-4c04-a35a-8be811987679",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeed7e7-3f23-4e72-b620-b3d596235bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fec42c-a89d-44ce-80c2-33c0f0df122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6dee06-2441-4cf9-9153-2eb058033aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d21b62e-67b0-4d19-982c-7ae52f406351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c920e36-6665-4eba-a0f5-4e3c722ce841",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654028a-a4fc-4070-a453-3b876fdb5181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71682d4-1938-458e-ae0d-03d017ff11e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4821ef46-a828-453c-8f36-2b9ce13daa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc573701-b0e7-43bf-9c2e-3c95300602f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407cb24f-cdf0-44f2-ad31-e060afbf0881",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a5c2f-9b64-4408-989a-0718a5a115f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe06a1b4-169b-41cb-9497-19260b62bfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1701ff-ff9e-4781-b8da-be63755ece7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35774bfd-e13f-4c67-bd33-0d8f7ec64804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b6f12-ccc3-4aeb-849a-1541536ec5c1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b8385-b31a-4b92-bb62-e8da34590de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbd5e8b-f293-4b9d-b1cc-80ceeb01c7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cec40bf-3a80-4113-b86a-eefd878fbc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51359c1d-991b-42c2-a209-251ff59574f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d39f998-450e-40cc-be36-c617ed30a78c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1637b8-06a7-4cff-8a7a-f862a1fe9185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf115ff-665c-4d4f-9a3c-c2d47757914e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee3dea1-b76f-47af-9c14-9adccdd95291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c74f2579-61f0-4a38-9ab0-10f81a7e9514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1222a864-e751-47cf-8407-245a9fb737ec",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad40393-6263-407e-abb3-d505eb945ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311ef6ae-45e3-4c3c-ab60-dada0548ca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982e4b04-f2d2-4117-9fda-cdb30fb5bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec904a4d-2128-4198-b347-58df4e0abad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291cdb86-6b50-403d-929a-75b14f2afb9e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f92818c-8609-4005-9a63-0b78bc716e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca82d393-5c0b-49e4-881d-ca4b0f5baa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfbabe-aff1-4832-8232-b25e92f61fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f14f77-ec63-43a3-b5fc-0c807efc01cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589f6bac-6d77-4ef0-a994-d444e1499220",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956f93a3-7a53-4543-890d-0cea6e5ae0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd94b2e-9862-40fb-a898-cef236bfa1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bc96a8-8f3e-42d4-93c3-3d234aa3f8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0095af11-254a-4f00-ab99-56f7e481f16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d348e7-da6e-483e-9943-2a966e5a7596",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f7957-8c6e-4088-9e86-c61cbdcd817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb02f002-de2e-4674-8007-393739ebb637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263b607-b754-4da3-9750-ed615ce6dc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3acc51ef-fc13-46c8-b529-d5f2fa4c189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850fade4-a275-4308-b5b2-30f310227e17",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd3e981-218d-4ed8-8c64-03c17cd4c549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71f09ee-0ec7-4d69-84cc-bb906210e3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfe7a12-f33f-41e9-9208-92f049bc4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "786fa1f6-9be1-4e1b-9da9-8e253c25967b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0529bf2a-a546-4b28-be6e-50f707202bd0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0233350-6d5d-42a6-b54c-49d59da168e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c1d283-2972-43a8-b52d-6e60701d80a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9775484-3002-46c5-b582-7e4b385a5cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1ddda1-af13-4133-9be3-8d4c6e1a2b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751eee42-b492-4280-8192-3f966f789b66",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce9f220-7f97-4ac2-9d6f-ffbeea328443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8679d818-53e4-43c9-917e-0526329a04cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e00c2b-9077-4839-9e4a-9d8994dee648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da92556-132d-403b-be40-36f47f8cf4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8399da-ed61-4e38-91cc-594d789d27f3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba544735-bbdc-4af0-8c20-bf2503cd9de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8011d92-a65c-4992-91c5-52c3993f647b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae56e19-5cb8-4b2b-99ed-0a2c7eaa5002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b47d096-0fc9-48ff-974b-d44e49a8c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371afb27-150f-49c7-ae7d-c6898532f637",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc625810-28fd-449a-b32c-62752e0a0e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30162ed-6c78-44f5-93dc-c94fb0ab93f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89358d9e-4888-4633-a5f8-cd90cb1f2036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d02c1d-78e2-4c99-88f7-da090340321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe095f0-08c5-4174-aa80-41b6230ddedd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51af5fa-0d0b-43d5-973d-0663bcf0c30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bded7fd1-5f34-42fe-9094-8f1310683787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b88a856-1360-4625-82a5-f3fb180f3cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "488f560b-a612-40c6-8d6b-7f84895c0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f17e530-07ba-43da-8502-34ae6b0ccc4d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5869d662-61ea-4ce5-a7d7-eae21d38b298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f8192-898c-4c62-8b15-3b3934bcdfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d146b0dd-bb5a-4a65-86b3-f6b169d8f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3919e310-47a6-4486-a9f2-002f29e1706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4381d087-329b-40cb-b5a2-242155bf40c3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33805713-57d1-43e8-9410-d313a60ed9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0159212f-d01a-4024-a07e-19a380e91041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cfb104-8c14-4983-8dc5-89fcf65dbc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f254dd02-e31b-4331-89cc-d321d67ed1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3c12f7-9cb2-435d-945c-d09e6c2773a3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246801b1-4598-4a48-9f0e-22d322b4f78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a65f281-25c0-4757-bedd-e82567bd2ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f9f85-39bd-47e7-8f7f-ffc226fb796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab668950-70db-4e58-ac68-14cf029496a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca2aa7-bcbd-4087-8cdb-383247277342",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0dad48-7efe-4658-9914-3d5729bc8f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c763a443-88de-47bc-8a93-5c81ab137f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11779010-4510-4c99-aa50-dbc2e2f37b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f188eeda-c1ce-41a0-87b6-6b0c6a45b0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45cc56-0c16-4967-9c86-693b147d01c8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3704b461-40ec-41b1-a0eb-c782d22940ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1945566-250f-41fb-aab0-aab0eb444f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78d11d9-abb6-4a8f-babb-becad2b69944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96edd410-4b6a-48fa-b692-9411028e67df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239f242c-9113-4a41-8bf4-045cbe9ab26c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b1bdba-30a6-4b09-9182-70923a54dadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9999b7d9-6972-45f9-be81-d943b669bf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257dce71-24d5-468a-a7c1-727e823389fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0d368a-35c0-409d-b4f7-c665413e5ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc315119-83c7-4fba-a304-ddd0b136af33",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684fcae2-5b5c-435f-b100-5ce869319b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6520bca2-dca7-4ea7-bb68-4e47f24e1d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966583f5-f39f-41f5-bd1c-b1780ca800c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33678778-3028-4074-bc33-5e8b3da95feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540894c-1e63-45ac-ae91-b29979813ad7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634356b6-5247-42c2-a05c-f70e102ee47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb77d54-2283-404f-97b9-ce5db425045d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8800ac98-2972-45ae-b154-de5a0aa0950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7276d0a-1ae5-46ac-8558-f17607136543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32134d-546b-4c3b-9067-9c822f97959f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23307d11-1b3a-453c-90e2-b694829aa0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faffba9c-826b-4096-a27b-748e25ebcb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1106eb-87ef-43cf-be47-1fe9f9d905f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b8478758-a71c-4715-aca5-4de9a11bc5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0bfb1-0ff6-4e0f-9f5a-ca4287309d86",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5456c37-f9b4-4dd3-afa9-bebb64ef5b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5944c7-dfaf-4e75-bafc-1956348606ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e7443-a0d6-4b27-b904-d473f4c3d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ce7cf4-36f1-4f7a-ba69-a049e67b793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ba5b9-3ec3-43db-b74d-f343d0f0d319",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a4537e-b1f1-455d-9f77-270566436671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91189373-3e9a-4fd5-a10f-386884e5c534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5c51ba-7428-4459-90be-df3368e3949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "929dfc88-92b3-4e3c-a3f2-d1ad6930d9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e7a6b5-1245-403d-ac73-a879d95642f8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e028ae-d6c4-4970-bc41-54bfcbee9519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbf740c-d8c3-4b54-892d-c4a077065b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb5d9f-5457-4761-b3f3-5347084fcb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6d5e87-3fff-4c10-bfee-1886e36e1968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe9fc92-261f-442d-8a5f-f8dc58f0ace6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91999b45-f300-4658-9fac-5d8953206d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcf6cc8-852c-47f2-ab7f-2192f7902a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac897a4-e692-424d-97c4-f96a18d80cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab819fa-67c7-4532-8f0c-fa8330c010b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b780b03-61ef-4751-b010-517d1f7173d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b76830-8e69-4e31-8b3a-b40e9612c12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47622872-b0a8-4d69-8d91-5d3e2f2b0214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1acf8bd-7a3a-447b-b6f1-c9b1d6d1c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c022fc-55db-4e93-aa65-46c7f656c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b8cac0-703a-4c21-afd3-362544ed0906",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc174d00-1f04-48a1-8eb6-95cdb80a391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0dc809-9017-4af8-906b-ac9afc8b1a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b078a-0f1d-4bb0-81b5-2f3f8c29fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "340a179c-0b68-4a0c-bde6-d3a3cf65d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709d42a6-0cda-443d-b997-fc45b40d5bd2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9055804-817e-4960-9d46-28597815ed7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818c38c0-2eed-46e1-8a31-9c4f52f80ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b22a00-4b8c-4827-bc1c-b874291b5b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "834648ed-2d07-4b89-82c9-1f98747597c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06289ac8-e611-43b0-909b-587b289e8321",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea614d1-5900-4ebb-b8b8-8c2acb39c035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87e6eb-8aed-40c7-b47e-97bf9a2b4f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bffa46f-c07a-4b42-bc1c-f44d70c0765f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ababbce6-4d85-4621-ae7a-a9c2dbdc0fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9231fa-e295-490e-9a83-df329485e8d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a2116-115a-4df2-b291-90c4936ea051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c11b68-01c7-4ec0-b01f-ccd29d2bec9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c5b90-7cee-42ea-ae4e-73d378f36f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c547f76-117f-4b04-b92b-00be65547644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4df27c5-f50c-4bb4-bb72-7cdab5bb0877",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79500708-e49f-44ea-bd07-5fc837fdb396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e26674c-9316-4690-8b60-ffb42c3565fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df653082-aab1-4c0d-8f19-9a9bcaa3b636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6073e1-1760-40c9-ab9c-45d2f0dfd583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b86e63d-56b4-4c27-99df-d960cd929639",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd3166-aa07-42e7-a1b0-0a5d6e3a8c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31e236f-0a79-4588-b4fc-b6916bff1b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7eb95d-ffa8-407e-b174-28728fefe8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ac3f3b-fa86-46d6-9a0f-3220f70aeb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0143fa-6219-4855-9d19-edb5b2b6ed3f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a1cd0-97ee-41dc-be6a-a7047579a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339a0559-dacf-42fe-8eb3-20795b3a523a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e5b7c1-9ff4-4f6d-abdc-28bcd0d3af5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeba329c-dfa9-41c0-90ba-614fd037b1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8143cb74-43b9-4c74-a705-032a9f01ebbf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52425415-0b72-462e-a236-ad268f64e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748d8e2-2056-4829-8a27-793d7826e6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb4eb2b-337d-40ba-9e8a-8f5175dea282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb350b85-37c6-4ee3-9bd9-4f103c20df04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fddc87-931b-46fe-8715-ee466ced8b6e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7167dbba-92e9-4411-81ae-4aaecb618911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c08a563-5994-4ce2-84a1-ae74705fc340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4bbf81-1e66-40a4-8cc8-5ab90721bca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5e8fa3-3cd5-48b6-97d6-61dd3183dd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4badf299-1e44-49b4-8257-64904faf06d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a816cee-4bea-4528-8976-6c4fbf6c0203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cba20b7-8ded-4471-9c60-8939e3352548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf23612-e3df-4fc5-8a80-bf76d647cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6673ee2b-7032-4c7b-b7ee-c9e4e31a6e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4709d04-addb-4f2a-87f4-51ab600ca8a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23041467-e32c-410c-841f-945ba02f7fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dab79b-197d-40d9-a002-39513f10f9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7f400a-4d9f-40a1-94c8-e9cbf353f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2779ac8-86b3-49d7-81b1-94046e51c9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82ff453-e478-4d20-b6d3-2364d617d113",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681b213c-8932-4bd3-9f59-0d84291f047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4949a9c-ce67-4578-b481-e8559227d02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d288f7-f878-4c38-9718-b7d35e96fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2b308f-4a83-4e55-b876-b1d9d2dd9cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d22bb3-82b0-4135-98b9-900cfcbc8586",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5705f1-d5db-4ed3-b707-6fcda0c12797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab62649-1734-461e-bcdd-a733eb8f39e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc0ed5-1e12-4f78-86e5-11ae596dd902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cb8610-d5be-4e6c-bac3-536bff78d4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9697444-4d2f-4c55-b8d5-3b10070293ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb5908f-3014-4d23-84d1-78914d1de633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d40b9f-d076-4dc8-b659-d29d599337ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de951a5-6657-4efc-9836-c26b0e43e9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3266d9-2096-477a-a668-0873e0dd6e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef7f1e9-165e-4f49-b76e-fc7edfe78c04",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b44db62-3603-42ca-8ae1-3c7287c22703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02617d3b-2ba5-462c-bf9a-4a6e1064f710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ee3880-728b-4ed0-93f5-876f8418d380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3354ac-8899-40e8-b3e5-aa3e0f844cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b8f8db-d6c3-4630-bb90-442a30f88095",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a88cfa-c196-484e-b75e-ead9b351047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c207804f-b037-48aa-9516-fa9095d75ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78686bd-ac7b-42be-8645-3ebaf5bd5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66a2a28-de1e-4b82-b2e7-29e41809640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd906622-e8e8-49f3-ba6f-5df7d09197c0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0ee1b3-3e0b-4c1a-b8a7-7563ba39ee6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a20ef5-69b4-4a78-b3cb-729f7b69ae57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925376d2-133c-4132-9cf7-0a1f16e011cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d8eded-c7ef-4e48-ad18-a485c5242288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d2c4e-94c2-45c2-9a78-74db4cd557d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbba716f-621c-44a8-9fe3-62bba989e775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c2f357-ad02-4797-868c-1036e4a06775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75439fb9-7395-495e-9081-bf5a76b41f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e379d853-e187-4ac0-9fdd-157f0b66eb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d228c5-5957-4487-9745-5f2ad07746fb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2337f92-f8a7-4e9e-9a6a-d445ae919c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f911e5a-6eb6-4f6e-837d-5a11c492aa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc004cb-c371-4262-9600-f76fe1653e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78237a52-4813-4be7-9941-b3a709245aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd1345e-01f1-40df-8e3d-f7f779fd1e6a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb6bbb2-00a7-4864-93e3-8a865c64d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288e1714-b863-4e2f-b7b7-4309eafc5411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137060ef-2878-4002-8f3c-be57905c554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f72f159-d062-4dc3-a29a-0a90698ea185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83451bc0-6253-43e3-95bb-2e5d3405fa2d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abd1b05-3c6f-4e29-81cb-5df4ef3a189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8df8ba-ca77-4721-9e04-fee6f270422a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13138476-3b24-46f4-865a-0d19f3431220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1481951e-434b-4215-a65d-0ebee0d11955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd80a300-31a9-41fa-b57b-2daac114908a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bde50d-3015-487b-b5bc-3d455c8fd2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29272653-ae05-48cf-9023-df7f1b47523d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd77cfff-877c-4c02-ace5-fb4eb5b088c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a09fe5-4ed9-4490-b876-7be05713c568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cad9788-260d-4498-80d7-238633b3e63a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eef8ab-cd08-47b2-a8cf-011f7c3ec90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaa89a1-d6aa-472c-b693-6559768ba11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f2631c-b14f-4485-b791-e5e2be3ac5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "473025b1-f632-467b-ab2c-e90a91f60cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac2e7ad-f5f1-42a9-9e06-d6bd1e23a527",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f846b8c6-264c-4fb6-8f6d-715789eee8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e12788e-c030-4175-8343-ddd92e43749b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b6044-c1d2-433c-90cb-791622958e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e3ea82-153a-468d-a913-8e32c1e4fca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4831e943-3fe2-4993-bb73-6929f8c89f1d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f00d1-c034-4315-9c59-e7f980331c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f0e5a7-12bd-42b9-bd5a-63d65ff34028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a847b891-638f-4bc9-bb8b-d2d4f635e7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff82141-e1d7-40f7-8e28-eaaac2bd75ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a4aca6-169c-4102-93de-1fb4ea2ca3fd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df6f2e8-af37-4224-8cf0-c71f3294b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b3ccd5-fa9d-4ad3-bae6-689e33a4fca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d949a4ed-d073-4ed9-a5ce-b084c62a00e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e18045-dff5-4370-a0a1-c4084e0527ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50686a-715d-427c-bc15-dca71d95ded9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647e705c-97ee-4c25-a72d-e97633a7c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef6bfed-7c0b-498f-96ea-9794122ac4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c59d49-84f3-49fa-8232-144125e58d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "522ea178-9181-4bc8-b8b8-7915fe9131ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af28d85e-72bf-4bc8-9e8f-2f4d7aa11dfd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919a1c37-2bc2-45c1-bd44-f10fd74ed4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d5a239-dddd-4a74-bb12-225125092271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d876fe2-d337-486b-8148-f222bfdfe16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46c82af-f2d4-4a75-8add-61a42ab3c422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c30600-df29-4128-ac8f-cc3c9de292a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809c3e70-66b9-406f-b35c-ad33c84f65aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9c56a6-98b6-408f-a8c8-3267bdce662a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd4a09-0551-4321-aa24-644da8d72ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4775a8-8002-497c-b17f-3cd0d5692b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16521ff3-21ef-4ed1-a115-c267b7cb08ee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055b94a9-d2a5-43f1-8fa0-1fc688ba07f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea14ac0-fa4a-483b-bc0e-d186ab9d8c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1caed1-5734-44ef-9228-9c57f5e5b009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ae66f0-5338-4daf-969d-66a4f2205c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17ef5f5-5022-41ed-814b-efda36ba1248",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ea72e6-1534-416a-b2c7-8af9dfb38aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb38cbf0-c7b3-48ba-99e4-acb19245bbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521c717c-163d-42d9-9e9a-b907e272acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac586547-41c3-41ce-ba0a-2b3ef0ff007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77acd27-2422-4f09-8f1d-1e4d6dd2e0ea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369afd22-8b63-4e75-b6d2-632406fc16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230d45e5-2f9b-4851-bea0-9eea78fe8813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a066c5-1a83-4f48-95c2-d36d8db2d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "591b93c2-884b-4eaf-92a9-92bbabf85382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3d8141-1cb6-4302-aa64-33a32808f29f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa12fd6a-7c47-468b-99fc-0d9e7a5d15d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab98bf6a-b217-4163-90e3-6f8b95d1e9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2df6573-1ae5-4065-a1a6-a40fa90752b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03c69a46-8928-4d00-87b8-fca740721f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3658120-590f-4103-beb8-cb7f1eff351a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b9f48-5eae-45c4-9c2f-2036e539854e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f765bf-b4c7-460e-9904-372d2479b4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111922c1-df9e-44a2-8544-5d8f009b847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e9d912-754a-435c-bb8b-98ef9275df83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a05ccca-48a8-4d4e-85f3-dc5e3ca89187",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3d8186-a1b5-4dcb-9113-2092fc630349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9a5d12-b585-4bd4-baba-48d99d300c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0455171-d437-4d2b-ba05-f6f6ef275c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33088caa-36ac-4b93-b6e6-ed9d170dd0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6e4316-666c-4d6f-90f9-a54b75d8aa60",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0127da7-e909-4913-8304-cc047d63dee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc7fa08-5045-4ec9-b3da-8c7f9a0c75be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6a3ebc-98d9-4bf8-80bf-b29814f9e577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1d2dff-f1c4-46e9-8ccd-9787cf7c6669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee024953-9d7d-4280-b71c-bcc956114fe4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097164b0-c5b3-4ac0-a266-c6ebad820994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7e9cde-84f3-457c-9995-c231cb23aa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a750fe5a-bfb9-4123-8fd0-8c228b1d5778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35db6d5e-77b4-475c-83c5-fd2a095bd16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffa4870-28d6-4360-842c-3d6180424343",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a3ebff-6aae-4fa0-9b0d-2d998efbd054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c725acf1-3288-47e8-92b0-f9eb9a1f001b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda61085-2fb1-4978-9a4a-a066bc476c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4249d757-c400-4cc6-812a-b0f59f82c86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4bb051-3da8-447c-a8c1-673110507063",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93c4025-c88a-42c3-af4c-1b683c0a4dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b0b6f0-e62d-4bf2-991c-e12e83f704eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa36c3-f387-48a0-b8eb-a98c67bf3f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "826c42fd-1217-444d-92a8-a31b870f8eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f89e46-40e2-465b-9935-fa8ae93c1aec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca185bc8-53cf-4e63-9602-f116c2199eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ca55c2-6f71-4813-a2a0-6def02846f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa034b78-df1f-4bd4-aaef-bfd5fd815055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52659c2e-e28f-4109-a24b-c44b9b692d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a3dce0-a64a-43ee-9942-5d80e83f121e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ec637-afad-43e3-a6a4-6f243addfa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f739208-4414-4c28-8777-3ea4ca31ffac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac3bbd9-330d-482e-aa1a-4b7585d1aa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b82e4e-294f-43a1-af47-3c1e371ed306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c69cac-9453-46fc-9a56-bb09a56e9af5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587621e3-9864-46fb-aca5-7fab7c7f222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be94397-85a6-4502-a087-ad278c134ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be18ac67-be55-4915-899a-745d19bc47da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1baaf8c3-4c7c-46e2-84cd-885b88280599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ed14a7-e133-4b89-bb92-e1b25aa8df34",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffb5f94-3943-44e9-8c79-c20511d93a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77cc653-7ac8-4ced-a6d7-1328a53adebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f69121-4847-4c9c-a843-a77d0ebde4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83f5300-1a2b-4c00-890e-757a44e346af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dbb804-4344-451c-9eae-1f3b29e61411",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1b04c0-bdbe-4669-a396-7ff319667f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f53698-3594-4aca-b8ca-22a50e09d6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baeeaa9-5fdf-4f8f-86de-baaddc087559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb86d93-eb66-4a8c-9827-d1ffbf995407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2335a80a-86e1-49ef-b58a-dfba67d03dbc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd401e-2646-4824-9366-d21f591dbe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ddaa703c-4105-4338-a750-819430f8d279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777ae118-d896-4314-acc4-25c41a288f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5895d64b-6f7f-4602-bdc1-6fc71a463e48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "929adc58-26d4-44bf-931c-ab9e570a9ada",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f9b4894-cbad-4150-9219-ecc0626ad654",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cee7b-2f6c-4ae2-970e-dd1ac2c5b94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cf206f8-5c4a-4248-92d4-a911fd1f26c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c78fe8-d557-404c-aebd-e269dfa34ffa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edc0f657-f869-44a8-8ca0-2dacadd90d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2783bf-cbfd-49c9-bc6d-99c95b57afad",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77306091-3704-439d-99f2-afd23524f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b04b3054-0b63-491f-9e50-4aff3b7d6cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04de0953-cbc5-4479-b118-836952218ead",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "260dd8b3-6c1c-4560-bec2-b1dc4f988734"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2046e1b-e6af-4e29-bc09-fd01d5991c26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7d60455-997b-4d86-b028-fd6f5229043f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e212df-85da-4cad-b78f-a1f8624fb9ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17cd51f0-8dcb-4759-8e18-fd38c860ed7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31c96f5e-8a12-4a5b-aee1-4b136d701ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "366248d5-a677-4c81-83fe-d9b7eeab23a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6b998b6-0c60-44c9-a58f-a2f17db2a9bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4b16f8c-8e1e-461a-a453-a0a21c9cb471"
                }
              }
            ]
          },
          {
            "id": "55592893-691b-497e-ac51-9e66cd399812",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f107a56-5d78-434a-b278-fb7d75e84fd4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb437406-8492-4af2-bc54-3c2a80d24049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d09a23c3-ced3-49c6-b501-ef4841fb0796"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13c99ea6-573c-420a-913d-1058490ce297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3804bbf-416b-46b3-a0a0-c3839cce163d"
                    }
                  }
                ]
              },
              {
                "id": "d70db3c7-7f1c-4e21-92bd-d545711fe245",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd47c5ec-6ba0-4b98-bcda-2879551d5f1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb3839ec-51b2-4b4e-a0e9-269b5fe0f9c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d89b2ce-9b36-49f7-88d8-34d0d345719f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff1b3c95-3e13-4aa8-acc1-7643bfea7bb8"
                    }
                  }
                ]
              },
              {
                "id": "6a993c6a-6d55-4db7-aa9c-edb2e040ab21",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2cf8730-5081-44b0-9483-da6764f5e636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf67f23a-c355-4cc5-b0eb-c945c9f422ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61bc4b3c-1cde-4f9a-8b38-18173dadb02c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e829793-0222-406f-b7e9-b05d4d6ccaf6"
                    }
                  }
                ]
              },
              {
                "id": "906e9520-1741-48ed-8af8-64636791131b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af4a136-0ee9-4b42-8d3c-bae27dc5cdfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ea7d82d-49ac-455b-a941-a3d8506cabec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d3f8d7f-4d90-451e-ae56-5449f4ec3acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc7188a5-50f3-4fb5-8738-741179fccb09"
                    }
                  }
                ]
              },
              {
                "id": "6032d560-fccd-4a76-ac97-e22c2bf8fca4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe876c43-2268-4493-8818-25d689e3f657",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e82917f7-2da6-4f75-844f-5c6ff93119e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12605282-4b07-4bb0-8060-fd683698d7d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e22c8083-21a4-4297-8da6-208242f2f1ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcae39e6-b0b0-4ae3-ab6a-492f536ec8bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "252619b2-f8dd-4c41-aed6-de7c9bd01688"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dcd8255d-bb2a-4ce6-8c1f-e8877d25e1d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2f7a9f9-82c9-4cff-b433-8386bb751663"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8266cd2-0a52-4586-ab14-aef938636abe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1ab68313-ecac-4eea-af60-d8097fbb0778"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5377eee1-b1f2-4556-9fd9-4cfbf67e57b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6952f0e4-0d3a-49cd-b644-754fbb0f1065"
            }
          }
        ]
      },
      {
        "id": "3306fcd6-bbf3-4993-bb09-3cb65e596913",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5b14b116-bec3-4ec1-b78e-f94d2e07c74a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a9ced8f-9d05-4d38-b3f0-9c59e5b3cbfa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff7310d7-737f-4cbb-aadf-141546aafdd0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e9e41-9c56-46bb-947f-41ee552705bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019c536d-0ea5-4c1e-b852-bda174ad7613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8104e-35bb-40b6-9549-0d5176062c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a5bebd-4f9e-41ed-8f39-0187eb69c564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18725429-1b8c-41db-b08c-5f265761bafa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d559184-9011-4787-ba06-6eeeae940f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc4c053-e3de-4620-bf7b-2613b6702855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e535700-d100-4356-8014-5c9f0f5225b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0609b34-87b2-459a-99b7-6973b225417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b64b2a-ed59-4820-981f-3ee5900c0e6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1690012b-ee73-474b-89b8-7fcaabab37a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ec7efb-11e3-49a4-9fd4-0ec44412a1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be68099-a230-4d69-aaca-6db69a3666c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05596ae0-c2d2-452d-b61d-266f1fb997fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7ee2a0-7229-4483-b1ee-3fa01bcafcf4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613eb9ef-efdb-42ac-962d-aff4d841203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69aa97cd-61fd-47f0-89ce-1c52c9077ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd7d26b-794f-4bf4-9afd-280718411161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b2dd85-9acc-46f4-8d70-6f4973013189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde0bca9-e9b2-4d1e-a79d-7403f39cbf40",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e717d88-7973-4a9f-ad11-14ab57aaea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987df456-04f9-4ce6-bc50-13eff6eb4e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b3aec5-3303-4025-9ada-554efa42e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1af93c7-3e26-4d91-adb0-1ce4ceb60cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66cd299-27f2-4e7d-986f-d1e775145df6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4631e975-6baf-4659-830d-24c89854d59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cf961c-ec3c-4785-84e0-d9b65d4f6815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8b8b8c-efdc-4add-9838-24054ffa98f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02eb26f0-ad97-4711-bc68-22e920141bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f9cd79-b13a-4ac6-a64f-b62742d33b2f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019bcbbb-5c91-4099-a57d-91e59a85d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4253e00-8c9c-44e8-b302-7dad5504b835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec7fd45-7fa6-4520-a37f-c238765fc810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3450b70d-c4dd-47cd-a22a-1e9fcb6a3e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49feee65-5c7c-4f8c-9975-d3b395825c35",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c56fec2-d1f6-4d92-baba-0133c3e3e322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b051e9-35c8-4c3b-9ebd-7743ff7b9158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8416801-e6c0-4613-a8b8-5a62bb8fbbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81719fc-1a6d-46cb-b8dc-69750e4eeffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211dfe6a-efe9-46cf-9c69-056d0a1e133e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a62738a-4401-4ca7-938b-3344c4cc0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3282a956-eb5e-45df-bed8-46548565c426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c10d10-6d64-4989-b05b-2e2e203c7914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52b74ca-1ebf-4d73-a86f-c13179a49bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7155fd5-ac29-46c5-b866-0c38c56d19b9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc3e9b8-0fbe-4d9c-854e-ac73462de688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033040bb-ab6b-4d48-9c1f-ee29e2d46863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e01d4f-d9df-412b-9a82-91063d0797cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cf4619-eeed-4e77-8fa7-758ceb504d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb86a2fa-dbd2-4f73-807d-388235cb1bca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4882c32b-2f70-49ae-8565-eb075dc46fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6774a9d8-c309-4292-8c05-2248d454a27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a973b7cb-848e-46e8-a598-c5d2f25e6cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e23ef3fb-9c68-4f1a-b114-2b9b65189f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a469e17b-61ce-4e37-8b3f-d443f2cafc0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a094de8a-f64e-4364-8a1a-ceb827d2f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dcba45-1861-48eb-a7b2-d84a5a932575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b60c438-de62-43b9-87e2-797c4e82202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04370c91-01df-4dfc-8069-66d5984f0321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960ba2aa-fb1d-420d-a8b4-1b441aaa1873",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b035f0e-029d-45c1-add5-7c48e88d7d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55277485-9726-48f6-aad5-8fa4a9a77be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b85fc04-5598-460e-8c78-74caf7f49fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0c2225-2147-44df-8564-4224c51c30dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e3f6f-9ab2-4ba3-9dfd-274036d1ce5f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9c3763-045a-4f7b-b499-e0ef38a295eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810c2d46-ed88-45d8-b5cb-cd6d787a8645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db21b11c-d244-44ea-849d-cb8039de001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb9e245-bdee-460b-9f3b-c83d0073c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62e6b28-1867-4f80-b6d2-97dee2917ce7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd476f3-8458-4ec8-801a-0e6f06789e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396516c7-b3fa-4911-8510-7f53ba637ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a650e61-920d-43de-bded-9d0ee2f7b67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1199ca35-4447-4a60-a576-ec54c6ef1036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b11e21-c354-4fb4-9989-7ea0749719a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8672fb50-3239-4cea-82c1-d4452577488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b113a7-8456-4e43-b901-1fa8c2329bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247906a-ef7e-4ed9-9ad7-0d62eea1249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "632894cb-ef28-45b6-b60c-7017f9a7c361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c332b85-15a7-4514-9f97-639e6af9928d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5066d883-fcea-47c0-bc4a-e3857a0befe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c989dcb8-1954-4038-ae28-cf3867df5da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bcaeb9-bec4-4758-b08f-24def6cd4ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f437abdb-a2ba-418a-b808-008ad0f96443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d1c52e-6caa-4a2c-b762-cb883966e09e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be4de4-6447-4ec8-8ac8-9604d6f8cca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2319696f-a353-4297-995a-356bc677ecea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d280a45-0954-44e4-8209-96961f58e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94c9181-1e8d-4025-a438-94ec7bd0d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4900dfe6-5440-4f41-80d8-7c54a5655cf2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a81327-f977-4d64-803e-bb28bb29370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddfd506-7ea1-4fe2-bfe4-4a52fc5159f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511723f0-a2bb-4140-8ae6-e3c54f945992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d894fd-0e3e-4cf3-9ee1-16bbac118d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa8978f-33a8-4714-8a4c-61506b5c595c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501d93f5-e4e1-4d5a-bca8-4a827e1b35b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e22c097-8943-4719-870c-6949bf77b403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb79b724-1465-4b7b-9ae1-4889a9db2233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a177990-0cca-4ca2-bb8e-af002a7cbf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025e438a-e161-4d56-93eb-31dcf0808ad0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b217947-5088-42a8-8535-dadcca03a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b58499-2b98-4155-91da-ef019b8a8303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62487695-bef6-49b9-b198-7f624628b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b56a62d-5d92-48fb-9ea1-18289fd96fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa32ce4-f0cd-4485-96f2-ba3d62fce506",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a0a334-2fe5-4807-b574-683a2a147f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddfd0b4-f727-478b-894c-4d7239005972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f097af-66a6-425d-8b3c-793c1e27b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebde472-7bca-4152-b2eb-5eb9c6fee886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457b7d12-9139-4828-adae-4f7d9856449c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2607242-6c42-45ab-969a-04b19218511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6ac731-f3fe-4e13-8722-4f05098728e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0a8a9-ba9d-4295-9cc3-0a947ad18c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e41007-02b5-4a4c-8e4f-848817ef3383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457383cc-8eeb-4b94-8e68-623c42a6b2db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa60e07-bc75-4af8-a2bd-8fee7a0f8f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444d9504-fd8f-4d84-81f6-026ed89d81fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ca8261-32b4-42d0-b409-28b529690756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f01f964-c1c0-423f-aff5-06d92671443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f672ea6-ab28-4a99-b921-612b1750c187",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c373f40-613f-4928-8471-3e83c80b8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f51d21-20a4-4f40-a3b4-5f8cbc8263a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfed2fa-8f69-436d-a414-2ea252a0c350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93a61d4-6e11-4525-b55d-9518a6d1aec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7b1085-8af3-4ca0-9731-68c3aadac792",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e180e19-0bbb-4072-8a5d-9e27af11dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7737d0e2-8670-42ea-afa7-d22f60fab78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e82312-576a-4854-9beb-66ac8f502f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7165e8-7aad-4132-bb71-b272bd5ea262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b752357e-f71d-4274-9f21-2091a1054568",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13866c85-931c-4b01-ae87-b9fa4c277af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90aac89d-ff2d-48cc-a2f4-7b7992cb7378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422f7cdb-e79c-455b-8b26-fa015c3b974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d79bbc-4eaf-45b4-8f1b-ed4847798002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019f8a32-f7e6-4321-808b-731413e62d52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c7daa-d6ad-43c1-b3c5-0ba4f9f41d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acecbe78-770d-4cb4-b27e-871aec8ab94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac20e5c-91cc-4a55-93a4-8858a7be440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87daaca8-2bc4-4fd7-afab-1c533d6cba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f93044b-72bd-4bb2-89c3-130eada35c4c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c10c62f-a2f3-440e-ae6a-85c1fc45bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5efd16-99a7-4636-9e6f-18d37b2d4ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7cb23-6e46-4727-af3b-4f15f50e9a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6c3c1c-b6b5-49fd-aecc-52eae2dfa65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af1ed7-a061-4370-8ee6-5a8c8343dbec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60c1cb8-5aa6-4e04-87e1-5e8c43e6b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2379ec8-8806-4618-9b06-107bf65238ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4837bda-8ecf-4790-9de1-2aa32bfdc102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "998d9823-8115-492d-b6bd-acbb7f9fb246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956afecf-1d72-4f62-bd51-b9d8d6dbc683",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a30a3a-950b-4a1c-a0c6-43037bc5337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d5a387-94d8-43db-9a0b-96927780cf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0557954-d99a-45b9-8bb9-1f1b1b90b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39e8c42-1251-4279-aaf5-ae33f2509f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb3ddcc-94db-42f1-b459-1f729fcbcd4c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fac7e8f-6d27-49e0-a36e-f7889af46ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638ed702-db7a-44e0-85f3-69145a026d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4afc333-70bf-4083-98d4-88e56b22aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a86eb0-f6a0-44d7-bec9-24086c38fad6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1ea418c-fe7e-4dd9-8567-b2262167172e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "192f3661-76d7-48f8-bd12-709864730039",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d9463f-0adc-40c0-88c7-a16c3dc7b29f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54516b53-ed66-40c9-8f89-d4e919250e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74625749-626e-4f93-a179-6e7cefdb9a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aec7e76d-910e-4859-b4f3-6421de24e197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b13d08-2bad-4220-ab3e-77b54768c432",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52e5e2c-4d26-4730-94f9-d366d3a4044c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "42a0ed13-c078-454c-a952-62237d4062b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f95f8c6-737c-4162-8a87-358ee673d59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb7315ff-43cd-47d5-8f91-1895692bc6c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12a53449-1c4a-415c-807e-ca7a5f0a24ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc7ddc65-ab9f-40c2-8755-41df442024a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b604214-3967-4d7d-974f-9e6dddcde103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7668b31-30dc-40ce-a309-04812a2920bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90a9c172-c04d-4b64-a832-264801d4f874",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f03b2d1f-98ec-4cb9-8476-d88440c5fe1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "133524ef-1f6b-4459-ac50-61edc1b89152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "829705ed-e44e-47e9-b679-d41cdf68135c"
            }
          }
        ]
      },
      {
        "id": "40397d4e-92bd-413d-99a7-7ee2e518df88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "45fcec09-5230-4c31-9e80-3e4a22769c82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67ad6aac-ba1d-49f1-bcc7-9a71d6ca90eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1491b529-721d-4355-8c1c-3d3a2645f7eb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f17b97-4ccc-4b45-94b8-08c5a516151d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1802a0bc-4661-4901-beb3-93a78095d20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2df0267-9d26-464f-a779-9c9a50ce7123",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c7ccc6-7503-4df8-93bc-914f4c470a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b488da-16d4-4e43-a34a-f1fc58e18c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f39f5dc-611e-4fe5-99df-4fd1930c4ae8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999c1622-40b2-47d2-a924-5213bdf87995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6552a0bd-d602-4b32-9067-c786a4886e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac080df9-499f-4a30-a25d-2e46502f601a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea91d511-0bf5-4d04-bcc8-e92a629a570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b7f562-f05c-4bff-97ec-d3b847da4cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e764ffa-f596-4046-a80d-ee42a2927c87",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0adfc7-123c-4c36-8b9e-0018e654b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa6a0c6-b5b8-4494-9e37-6647b3590d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8ed737-2ae6-485c-8a63-e1be35c3f003",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1e199c-1442-43e3-af89-bd0ec227f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc07160-6454-4b4f-8409-bdde8aababcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f32070a-dc3f-4718-9f4b-8659d149e452",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de92cf-36f0-4986-93f6-693d28398c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc506750-7b46-45b1-ad27-8ac07c669d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140fb7b6-c310-4ada-b164-f49be1c09bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f6c8fb-8133-4e9c-9a76-9c9fd7c2da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc1b888-cb68-4b87-b633-81301b0f89aa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5764ff99-00d3-41b9-9c37-2c99dea76717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a69ca00-e00b-4d23-9d46-6026c9998e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f11730f-a5ec-4ded-8bc6-cafc0b7bf190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badfd75a-0286-44b5-aac0-7814ed8694e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19464442-045b-4821-b450-63a36860836f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c068acf3-2ce3-4c46-b9ea-6a039b1a48d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5484e485-e0ab-442a-b73d-b3c208cfd11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21dc698-3840-44e0-95d5-e11369d91ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8149e14c-da79-4cbf-b99e-d4066dece505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d1c7d5-4073-4de8-aab5-85bd039cc4b9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1625e547-b6c7-4f9b-9746-47da275502c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812a5c3d-7eea-451a-b330-a8ec56f024f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6f044a-d310-4b96-84fa-d24c02cd2496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effb9d34-81d4-4477-8371-99b132007860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4414940-2337-4467-b0ff-be23898fcff3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c7722a-8d38-4bcc-a4d6-03a41f18dbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2744f5d0-466f-40e3-8995-b60cc4d8341a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70643a73-af4c-47eb-8f1d-fb72a961841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2b9346-354a-491f-b8d0-0433a4258659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936b83ab-2836-440d-921d-edf23368f777",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2563391-1779-40de-9301-396ec7c36279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962ea0da-0fec-4f26-8ed8-ec9be841fe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e11d897-daf4-44ac-90d6-222861f9969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad777652-154b-46ee-8f97-0d484d8ad15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2438be83-9591-4ef3-a2d5-751da3afc7cc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e810d0-ce6d-4b28-9a3f-da246bb40174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f91a4f-72df-4d08-9d6d-763f48e86c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3a46ba-180e-4cea-ae7e-b91d15c247f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d35202-c482-4548-a220-af8c549e6132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0ad733-d65e-437b-8ec0-5ab8f81a1388",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307c3e52-8a2c-4cbf-b40b-665189bf18fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f14223-8873-4600-9304-40be44904c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6ed3d1-0f88-46da-af16-42e682b6a9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38ae84d-2d52-4089-8a96-8efe67bdfeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b141bfe-0aa6-4005-9ca5-446538701ae3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e137906-2503-4192-b894-b455bab0e6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f632214-07e8-44ac-85f3-4adccafbe5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9a9850-ebaa-4942-b338-349e5550ca11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d5fa7d-03c5-4a67-ae8b-0de510ccc7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea41d7e-57ce-4e67-a2e6-0b85483cb526",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05840944-34f1-4f14-b954-05b12f14f2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8433a30-ab09-4b10-b5e5-66a287eebd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f40194-a6b6-4d66-84f4-da1537fa2f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45da3f3-c473-4dce-822d-4aa77ed94694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617af475-0b09-46e4-a430-66766b2db6db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced9bd4-db2b-41d3-beaf-30b602a6a469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929fe2f8-e01a-4b9e-bb9b-82c22cc5b100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5057d0c3-e03a-49fb-936d-2bf51cc4e920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e80a09-4109-4888-8a67-dfe851ae06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbedba0e-fa2c-45c0-8b51-6c2eb2b11527",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb5d586-fcee-44fe-bf3f-4078457d5254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a990a85f-ad5d-46a9-9b12-9d94eaff1b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea62cd8-494e-4031-bbfb-1bf2c4262917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be383bf4-81a2-421e-aa15-e7e55348059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcf271e-9aef-4fd2-9ef8-d4ceae76d26b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f159495b-bac4-42c8-a676-03b419fc52d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819a7356-89cf-4736-9eba-166175151967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4881a6c-d571-4eac-a281-aa095bb709ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e944d77b-d16a-41ab-8ec6-304d166bf99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24df72bf-5d3e-499c-a98e-e3c6b7a0b7f4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1344941-922f-47b3-85ff-6d4f79482170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20486e3c-567f-4ccd-9f1a-bb7d9ce800bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db10059-f4d4-4a0f-9099-3334b65779e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42838b1a-eb44-46b3-85ef-8be55e7081e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60de318-fc71-4f41-8380-21aa0ce7a011",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efbf8d2-6842-4077-ac54-367373b0a240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a315a40-92de-4230-a83a-244f6e1faf8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ef34f-a22d-4038-9998-f562944ee3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e41035f-6e0f-4b26-a0b8-a62ff388c7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9c1f00-2aa1-414a-bb5b-2dfb04baa9d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93eefb-8a0e-4b52-8614-7e99788000b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f577ce-947e-4e4f-b643-0fdeda788845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24797cf-49cc-4b87-a3bd-95d96fe502f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6c6dfe-ca65-49d8-8cde-533f0ffb9c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4307a1f5-b985-455b-8ff6-165a44d94c0a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff98b9-4966-4e33-9b65-65f693b1da0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a2a119-ae89-42d9-a1b0-7a8f44a1129c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3e54f5-70e5-4366-882e-d0c9971b4b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59509289-55f4-4559-abf6-d55421e9c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c0cbb4-fd78-4724-aaa4-b6e534090a85",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc364c5-de81-4fb0-abaf-711cd58d8f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03870ea2-565a-42b6-a86f-c6c6fe8b0cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0e2e3a-5c30-44f0-bd39-8e76621ac6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cbb868-824f-490f-8462-174a2efcb6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c4e60-9924-4fb0-8736-7ddac612c847",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6621aba-b34d-4093-a48c-707cdf568f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2f2161-7e58-498a-9559-7095f53e9bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2786ea5-c40d-4a21-b6cb-deb4371e6874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e02c1c-7f1a-42a3-bb5b-a01840515603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444acdb-d4bc-4dfe-9e5d-c80febe5e30a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc66ab0-2fbf-4fe5-8f5f-25d9c2f41f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a38aee-00fd-49b7-a3cb-a82ab1b162ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9400382-30c5-436f-aaf8-2d922b692038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18641efe-62df-4c64-943e-9a5b6cba9cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2371de36-f398-48e7-96c5-bd778490fb38",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c820d7-e0a6-4408-a5c9-65bd62a96ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4782e829-c020-4716-9e89-f0d328957ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ca873f-360c-4a8c-8156-6da9b77c5934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448f74fd-b350-4647-83f4-5455a4b7443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc202047-69af-45c2-95f6-f1526a2dcd2d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4152f606-9090-48e7-bb42-6babbc861d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee1ea76-5be8-42b9-a635-a55a6b5c9902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abea830-53b6-4f36-ae96-6db9321a3bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234390e9-9d4d-43bf-84c3-68e87f413de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613766d1-5eb1-4d71-9eea-408661098167",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1e315a-7d66-47c1-bda7-df58b275aed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f799f1-e94d-4b7a-920c-43d881999176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfad484-5a18-48d0-8a3f-62f0d2eb812a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66615d07-cc82-4340-aa22-d1ae57b8b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955d22a8-6cd7-490c-9c30-174075ed465c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb062800-56d5-49ca-a274-ba0c9b68d367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c7f76f-6f4e-45ca-8823-41ae424eafa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4720d9-18e7-4670-a942-4b3f817fe12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64981d00-2957-4289-b52c-42860a91532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f7848-a8d6-4e9a-b68e-67f07571661b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e080b5-9828-4453-85ad-e5b794d8f881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb3c224-0017-44cc-91d7-de2aac85e7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf8346-feff-484d-9910-150ee140b031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d348a8bd-b27d-4d09-85bf-0c1da3e89379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9f114-0fa0-4ad1-9dd1-6132c5f8309d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82359576-13cd-4ceb-be49-dcbb2987faf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e96e3d-fed7-4b59-8a0b-f774ccf3ea25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b19350e-eedc-4bb0-b2de-cc1590956465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459737c0-93da-44a1-9761-4f26c5516731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6118d470-d001-41db-9742-3d0da264c202",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2949c0e-c3dd-418e-a3ba-46b11a13d567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d69e9ee-0a88-4a13-b47f-c9de340e2cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738a296-ae76-471d-ba87-98be7d48f205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777c5381-1392-4624-a8dc-b19a7fe02748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887142d2-8ac8-4c9f-a5a0-6349ae255276",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f283d4-2518-47c8-b308-b3def0e93071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737bae1e-930b-43af-a455-a35853543362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5820abf5-cbcb-4a99-bf4c-cd6098387889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d1186e-2f59-431b-acc9-9ad40273f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8edda1-4870-4e79-8a98-c7b9b65886b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63ba128-2993-4a6f-b57a-555e2317fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7531a3e-8b18-4ad8-8f6f-2039b1113e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9753c0f3-08c4-4e9c-9b9b-3e7d5f5690fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb533ca-81db-457b-ba76-851e5fe331a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e261d93a-204a-486c-bcc3-30ca4cadf6b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e2d25b-9a72-486c-9657-848c7b216b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5bd4fd-0007-4bad-99ad-1fdfd9af2953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f308b4d9-7165-4ba1-83d2-c92d9a1b7cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a254d9e-f657-4869-ad46-cea388e05edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e99663-4b61-4099-916a-0b450cb2ebe7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6793166-1a7c-4c9d-a859-ab87e272cf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad40beb3-c4a9-4f17-ac5a-c7bf08fa9ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb61c2a-9640-4c9c-8e07-b94c349bb3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82bae84-50d9-4f9f-9250-c2a1e4451f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df846942-1e04-47ba-9c1a-26894b194ba9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ca27d6-cedd-4b53-a2de-55d2665b8d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5cfc5d-b85d-41ec-8c86-ac4877ded9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b948b699-0237-45a5-85b0-1d045967fad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d413d06-3376-4e2d-af10-4b0faa8e4da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e882a9-978b-41e8-929a-449fd90c7e34",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37efc5-6a4c-4961-8220-5ed8d7ba82f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834b1acc-ae7a-4d7d-af91-75b5bb1c5a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a855127-3ffc-4ae0-86bb-9aae38402f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810d8208-79bb-48bf-90c2-749279deb453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9adeb3d-91c9-464d-8579-7c5aea610e0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c79e54-f97c-4e53-bdeb-0b821ca82488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498736d0-d9f3-49d9-932e-5a418222d9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6348ff-d06f-4454-9541-dc18629d756a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53e23f6-e243-4a77-8db7-b82f8c4146b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38b9d46-d3f3-4f79-ba8e-a035f2fb94c8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae588a-6586-49b5-af21-a66de6ae95a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cee899f-318e-4689-8ad4-26e440a25790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecafe22f-974d-4577-b269-d1608eca9fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beca7545-b73c-4a11-bc69-199ee1012e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e36a0-f4e9-43e5-ad9d-7546d1c53135",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fd64d5-1baf-41bf-909b-f68b69e759aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfd22c0-fb3c-40e5-8ad9-8fec6e02e3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da6ebc0-4200-4e05-8e6b-66e90950f4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fba03-c717-4902-8a1e-ac8f788ca1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fe832e-ed0b-49cd-83d9-4b6baf17d8e8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3226c4-f52f-4da6-8924-90601350e784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd8721a-aec7-4397-a27f-ebacbc16404d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f30538-0504-4701-95fe-e932d84ec184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c4e169-31c6-4b70-8f41-fff712609fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea3f16f-0a6e-4bc1-a538-e4adcb72cfb9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3c5e46-5f0d-4cd0-a390-e3503aaf98cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d404cca8-a90b-4183-b81d-77777d3e5b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e18aab-6413-4da2-8927-775cabfef9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9206a8-47b4-41c4-9f7b-d1bedefd5c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e62020c-72c8-4ab9-955d-809829ba6bde",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432e787e-7baa-494d-9a3d-cd063f57ef9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a21fa7-5ead-4919-9f66-44176e65a42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f376c88e-51e4-496a-bd49-3d6beedd6adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8db3afd-0036-4fe5-b91d-f608ffdb8e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b552ec-52c1-4e68-b60f-17c5d2d8c791",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eadee3-0df3-4537-85e5-93e91c4c5cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344fb837-21fe-4cee-a705-fff5f05549a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0bec51-ba52-410b-b4cf-72165f8f0125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dd23bf-9cd1-4cc6-b335-39808189d969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03f8ad4-330e-46b1-917a-ffcb26e68368",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4af93ac-5f1d-4c0c-948c-957865dcd4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d09ec3-4470-488d-bb8a-97d2fba64d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e809ee4b-a49b-42d9-9464-d15e4e98dd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8d936f-3e49-4808-9dbf-ac2d426c5634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd16c5a8-947a-4e32-ae2f-4cecad2de30e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c61e5f-899e-4e92-8914-30565ca19bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f0cc5e-91f0-472e-a601-e181beff2ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32c1f5-14f9-4fec-aee5-8355155a15a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7484a557-f56f-410f-95df-87841fd8d9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cff9468-2b9f-4567-913f-79c30b7748fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f2c69-9b81-4d12-86d3-a7a4e5f8e89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0fc769-c183-440a-98ea-52b85ea42fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ba56db-dec0-46f9-80a7-69010f07c4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12062aa6-2745-4006-8975-09f5a9e686e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a905c85b-29d2-4600-8f6f-10fb5015302d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a865447-e11b-4f36-82fd-35218107b44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc17fc3-ea0d-4825-8559-c1d9552be273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaf4bcd-a76b-4dc4-bd95-7be76d0590f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26e2c14-2b9b-48a8-bcfe-c923c48b76d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cfce88-6b28-409a-9a27-f46405f1de27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b1d696-2dfd-43da-b29b-8bf718abfb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8ece7e-2a30-407b-b231-c63bd15f5934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94c0774-a701-470f-b7a0-874f39e6b112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda33e88-fb66-4bae-a8c4-e52dbfdd1c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04920abc-0f8f-4cf4-b9c4-b1ff1f4e67d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61b5aa2-b379-401a-9da6-15b424a2c353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0940901d-977b-44dd-aeb4-06f5ff46c7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4af31-dfde-4a90-93b3-12818dc902f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcac9be-303e-4515-ac5c-bb848686abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ea3ba5-1ea5-48ad-98ec-741a3167f2e6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24557d33-f3d6-422b-8ee3-029ba15e9953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6f2cb5-0483-4ab3-9da2-ad8a4c3b317b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d44472-a96d-4cfa-bec9-d5262785498a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbec67e2-a7ee-4824-a26c-db68b4e37f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fe1b1b-c397-4bfe-ac57-85cdbc5d3d39",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de28535-915d-4221-bda2-c1516ee85f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c65e5c4-7bbb-4bcc-907e-6960b69d53da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934adcf-1486-436f-aada-be400decd6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52677588-f145-4aca-90a7-dba82c670f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb003b-4312-44ee-9f56-c4ce9067dfb9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757864b2-9e3b-4008-bad4-02830b1ec704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d028c7e-0678-4b23-b8d3-8f8fec6fc1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c520cc87-f15a-45fa-b730-be839b123e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db59b55-1ea8-4f67-bcbc-00c5551ee664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94e221d-5a9a-4797-904c-3c22f8b3fd27",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa3affa-fd55-4be5-8076-5c3678e14313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2b5371-1986-4fa0-8072-524452dab8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3eaf90-64f4-46e0-9001-16f77ca6b15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c40673-2341-41bf-a068-1ae35ac19e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e809ac88-4590-4e9e-aa5d-9a1c4eb1e8ea",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ce2655-3760-40d0-ac3e-a28824751fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6805f894-ada9-46ef-8aba-99377a1bc07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4e7e19-2071-46b3-8e12-6e68589e126e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2089cb1-b303-407e-b3c2-4a170cd91b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9e0ad-0319-4c80-aa84-b81e9d7e505b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb08c1d5-f3a7-418b-9f2b-99e3b4f8532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af74d5d-048d-4846-b02b-6d561a31510b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfeedaa-7252-4fc7-a523-43582fa433e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eca6796-b204-4aba-8c48-5c647b963e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be7e0a-4897-43e7-9994-768feed74af2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140e8597-85a2-4a1c-bb5a-f514e458f804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0616bbc-d010-49b5-8ff9-06f9fcfe3d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2149d30-53df-44bf-97fe-876f897d1472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dff91c-9c75-4d44-89a2-94909e0a0f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d08364-d127-4131-96fb-bbb364849ca5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a3d3fd-aa29-489b-9fdc-f411a563081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab0a1ff-2096-4b42-bd31-5aa38424e813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629d47a3-78de-409d-b984-7902b7e5dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d3153a-e6c9-4438-9ef6-3e9396e68fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abad3c8f-a686-4e2d-9ef5-deeda8a2ab16",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0b3a4-8f73-4306-ad63-ec326e6b4466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f220c18c-3a95-44a6-8f9c-54515954cc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cd551b-f32d-4f16-9698-e4a741786929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9b8e82-50bf-424a-a259-99924526dc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d87891-0515-44d5-b3b8-5ad24bff1333",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c41e284-4bbe-4cf9-8813-131d4dfeef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a77247-e71c-4481-b34b-ae9650be5456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf69bc1-46c2-4834-8b2a-c6d3b39161b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46802728-fa25-412f-9252-262c9a21bf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62835558-97cc-4a7c-8bef-7306d7704666",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf71acc9-9168-44c1-b201-2a392fadf9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d567fca5-d068-4f4c-bf3b-5d061cd4241a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fea60-b465-4727-920c-64d1fef7bfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a47ddc-33b3-4da0-bae1-8b8658a17c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa38d2a-54e7-43eb-93ce-c7df7a5fab40",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c996c1-a819-41f5-8665-5eff9225f791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992bcd3e-d22a-4521-9b4e-d768286eeb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6201df-6b6d-40e6-ab21-a4d3d6e321e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b578d162-ab97-4fd8-9fb1-1749ab9041d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7626f264-d066-4c82-a4b2-e1e7302eb379",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5f9b3-e011-4a3e-a784-f62f0428c766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe1ae4b-d265-4dda-b453-dc8c28172907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1baa7ba-ff54-4804-a0b4-b18439561704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18228200-25bd-497a-a897-fa9540786d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b01e393-e1c3-4b23-8aa9-299dc33f0cb1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d3a85-67e5-4c3a-a6ff-ef53db75b72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b5ec82-056a-4524-85ca-ae988e0b20df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44a96ba-f062-4fe4-9ee4-714e9f8d40e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0bb835-8bec-4f56-86e7-994b6e19c861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a244b4a9-e668-4a20-9dc3-ff0e555404ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73c2873-8e5e-435f-a885-4943e634e0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e477a0-9e1f-4103-8b52-0393cbe076d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f520f0de-c2d2-4d92-b9c1-d97cc18e0cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51345449-a5e8-430f-8441-efca5329ddfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c827c-4538-4080-a0d3-a2a04a5adf8c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfab735-4664-4914-955a-33d502a509e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af567ed0-6aea-43fb-b7eb-5e8eea979e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5a0f63-eaef-4811-8c77-99bc9a2abaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22348018-243e-4053-b141-5e3d1e2d5232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74317bc-5cc1-4420-97c9-e61c0a033ebf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a790e056-599e-43af-8bc3-290751460e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb813fa-03d1-41a4-92aa-44f2dbd02372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d156fb-c576-4045-bbea-bac889e75d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92cbaaf-33d2-4a2a-a621-5217fc8831f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1957d-1108-4266-bec8-844ec66ef38d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063bd73f-868f-4372-973f-ab42b956e46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0047ad4-aafd-4574-9e07-931dbb995b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b63dff7-bc54-45ad-a20c-19f3ca5d2a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a9506a-0d93-4999-9329-1f39788fa9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ee362c-9b12-4703-9798-a57266c25a2f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3676e89f-aba0-4798-ae6d-2c063a0263c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143aeadb-e51f-4994-b057-940669056461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ecb7bb-3896-4610-8ab5-d831bef70d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872c54e0-77c5-4804-93c0-872ce367d6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af750aa9-765f-4ce1-90ba-05a4efd81437",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7228587e-1ff6-497d-81fa-0d66cf4928ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9c50e4-575f-4cae-a82f-328400bcee4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f94862-f4f9-4e55-af1d-39e6bd46b431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416bc92c-45f2-4609-abb4-40cdf34afb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f608452-4049-463e-a2f2-d74a3d38b0b2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f40e40-3ea2-4151-8c4a-72eb87dcbb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec63291c-dc2e-43ec-936e-6b2ab07eb37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffcdb84-c98e-40db-aa40-eff930b2981e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec33bcd6-a3fa-4da6-8892-9dd9b8b5d9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414061e-b33e-4cd2-94a8-dbf93d8c54ef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075618b1-6a16-48c7-817d-23bafa188c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175ed020-59d3-48f6-b99d-4919ee60d68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a284b849-e2e8-4c01-81cb-7e9448078388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c16044-c1e5-432c-bb1c-8ecb30ea8ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdade879-5bd7-4f42-ba39-ad00b231edde",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d651e286-5a61-4d85-8bea-c4c29b3a97ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef37355-4fe3-4af6-9fad-105b2936029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f735e2f-7f26-4a74-bfda-25fe85d7f121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54773c4-9fa4-49e0-84dd-c7b13d07fde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b6f93c-a93a-46d8-b53b-37eb3f54d0e6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda2b0c-9751-44ff-9a3d-4bf5a039b507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1753c090-cc34-42cd-9863-23b6e012442c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58bf8cc-2af2-4987-a95e-5e683beda8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86510e24-5214-4020-bc78-35a6cf16de7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c032a2-75f4-433f-9c8c-9635863b8691",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5166990-6adc-461a-a815-f6c9b04dd5f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c966b78-a2f6-4cbe-9f42-8e7c3ec60adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ebcc63-3d94-4591-ad62-c87495a215fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760a3796-4d76-4fc4-a325-af0e31570dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627795d4-4f35-43be-b6a5-24ddddac896d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c92aba-f382-4a48-97a9-151267b3039c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c6ceb7-c6cb-433c-a796-3a0205cd991c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1065e7cf-73cf-43c6-bb29-13ddc6cd6786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a28003-81c8-4b03-a872-412b112ddde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27121b20-37fd-4ac5-bdef-4765a64ef534",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c8f896-d150-474c-ad55-0a62e1ee0096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cfc986-ee17-41a2-9184-5625a69de36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ecf87-12f9-499d-8620-31aca02cd251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c130f2-b256-4a37-b5a8-2d7a0f43d8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41e848a-c502-4936-8fdf-6964bdbc5cf5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90eabf45-7974-488a-b2ed-b6150db00734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc93bee9-4daa-4130-aa72-ba1b168f4204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa87ccf-89cb-46ad-a646-5c641f69c8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2412ae-0ddf-4579-a6b8-16c72fef8705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0076c9fc-9136-4a47-a9cb-e68c6e7dba26",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e908dc-8824-45a5-a313-30e7d7d34bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a5348d-d944-4302-a562-05e0db6f83ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56c772e-1343-4c88-bfc2-f955930043aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f0ddc2-b0ad-4e9c-a6d4-4df5862a3bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f826fbe9-85d3-4252-bdf9-eb2c0aa73ebe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ecb8e-52e5-436d-b710-952a713967c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e198ea63-af66-4715-b488-ae2b27390f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cce5de-e250-4755-aa96-a36aa1ca4308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c67c0dc-3711-4ac3-a7d8-c73f6520ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939c562c-ad5c-46dd-9da4-338805628fe3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a20dc59-e8ea-49d2-8196-5cc51bea2b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70489ed-c379-425f-93c2-e78ee49e837e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e5daac-98cd-470f-ad7b-8d8c21aa3b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cee72ea-dc09-46d1-9128-25e7ddcc9ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33fde7a-fcef-499c-bb9b-bd5c8a6b9eef",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0597bb00-f537-4118-b04f-f94cf0b329a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b086dc-7bed-487d-a93f-d0d5934ecf78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a0baa7-8a29-4194-bf75-a2e39d679274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce927cc7-4a86-4929-89a6-4b54f8cb3a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75580b03-420b-48bb-a121-a9e3bdd2184c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf3c82c-4063-4634-b80b-7d6225938753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34deffa-8f2c-44dd-a80b-b4c86cf5477c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7cbf32-f9f6-4418-a635-3c4375b9a764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1d52e9-0835-42b4-81f6-4b365900574d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bc06f6-0d6f-4458-ae39-bdcafefbdba0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d1fb0d-e905-4f06-9f4f-70668775b069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7499ce-172a-44aa-a2b6-e78a8c4a520f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0c66ac-a3a7-4976-93fb-d4b37f44498f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02864878-7be8-4f37-b838-a977417ebb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aacc50-df1a-4e5a-b1bc-f63d1da0c8e3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a4e175-7ca8-499b-866a-8505875dd696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72282f51-0dac-4181-a855-f23ed1a071b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5ac3b6-cb0d-47a0-9dcf-9246c1d3dc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8122d8b-5beb-47f6-a4a5-ef74c0df1626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e5538b-8de3-4a85-af35-73972e82560a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e9e62a-3b1b-4d62-b35e-a2da97a0ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17350c79-07b9-4f6a-b598-b033184e7c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcda56f-78b8-4c27-be89-4c9d5f02c710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f4a15a-bd71-46b6-9e77-ec2bca5b2902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ecdab8-630e-45be-989f-1cf61b4be223",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5569da-42f3-496e-9aa7-4bd21d5495e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1254eae0-5e18-4b2a-816a-381d4fb87e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0ec4b7-9e0a-474e-84f9-6e5b377322a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab886cc6-eb4e-46f8-b586-56c56757b9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdd8ac9-4c83-410a-ad55-65e89fc7f8fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947344b8-7efb-4722-8e54-31bf4b5aa820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93098eb-b99a-4525-af9d-60fb0dca9c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8624c032-48a2-48b5-8e6e-7cb6b29ff498",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7a7815-013b-4a60-a2d4-6f89fd56b39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81194c5-0ffc-4090-9fb9-afc1c525caa6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa36a0f-8bee-40be-b1ba-671051665ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814cb96c-8e0a-483e-bc70-171bff64890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e55704e-ad37-46c5-b0e8-b6ca3e3c4819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4f8ceb-c481-4f2e-8351-d2ecf2689c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc7dcf6-2748-4457-bce0-beb6987e0d04",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502acced-503c-4ac7-968a-713316b54be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23c7664-1bcf-41b7-8fc8-9c904ddfef6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ddf1e-7b02-4782-b4cd-bcb26eba7d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd0898b-b607-4725-8f9c-3eb7cddc32ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44649cfd-4a6a-47f0-bbc1-42ec23635792",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7398f45c-7677-4d65-b1ea-88c20b711cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a15329a-94f6-4946-b9a1-e56090976cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0f2f5c-afeb-43b7-a8a3-e67fde7312dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e034f990-dc2b-4c5c-8935-957b5fdb02fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a2bd51-ffb3-4a5d-b4c6-e42794a8c6d5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933f50d6-ed07-48e8-9e37-d1481b025469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a431ec-3a70-4388-b8a1-e00e0da56776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b1214e-d356-48f5-bd65-9191c8b679e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db440be-9f2b-4cd8-9181-69f9ba2212de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5e6667-1dfe-4ba2-9cbc-b67c59183deb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32377c5a-81d3-43cf-b76b-0fb5722029ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702844f2-fca3-4fb2-bcac-1065e5e690f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c6adc-8d37-4768-86e3-c6a15b08bd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0a46a4-03f9-4672-8c33-81dca17d340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375a8332-9b53-4220-95fb-a95503b030b1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15df9b7a-02c8-4cb2-ba19-0fbdd05ceca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10ffb4a-b75a-4a32-95cc-d9be37b19ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d73cde-1c95-4a63-9395-6103cd4f52fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe7c739-0782-487a-9b4f-608d484dcd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3575b74-50a5-45d5-9bb3-5a0934308a05",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb53a14-4181-47b7-848f-0bb8a973534a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2c7039-0d88-4458-853c-ae46fc60a1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef1402e-2e72-4dfd-b51c-65491d3d7bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23fdbb2-5310-4003-ae40-ca8d380900de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e284219-4b15-4b73-9973-adbeed544714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51929a0d-6cc0-4bab-b160-af882e9d7e6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87698934-5a92-4984-b0f9-60d8949c271b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d2c99e4-52ad-45c3-b411-5cf4a369b80c"
                    }
                  }
                ]
              },
              {
                "id": "ca0bc8d1-1e3d-4c6a-b59c-078884b3a004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a376757f-e859-4f43-899a-1cc42f895b1e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c5e797-2adf-476d-8dc0-1b8203b43269",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ab290640-dae2-4398-8c08-175bd7f85bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84251a5e-c177-4054-bb6b-4e5049c864fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60e52a60-ad9f-4b80-b417-db35c5541c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63ca506-cfac-4098-aae0-91ef0e285c31",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbcafff-8aab-464e-b499-ac97917d076c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb42a58c-d783-47f0-b39a-f672ee9663d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457fa45a-c318-465e-8412-e8bb2632c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7a1bd47-3d0a-459e-997c-155aba40b72b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53517e65-6854-4a32-9eb1-daca1decd881",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e90f01e-aee5-43ad-9a25-6e9f869640cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac861f54-e1a9-466d-a9bf-89a811084206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f560fdf2-aef6-444e-b1f3-983aa3ea6137"
                    }
                  }
                ]
              },
              {
                "id": "dd8eeda8-360f-4d7f-9b88-f175dcdfb7a1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f17c96a4-dd6f-4405-9750-8a9dfc315957",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fdb9f4-3c3c-4be4-afc6-9540eb039617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eb1f0445-4944-4b61-973e-67bcba6cde72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485179ad-5d85-442e-afa9-758e8c25ef1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae1d7c5-d31e-4065-bc0e-9e5ac7f12b8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35a59ba3-34b3-4cb4-af96-5250824e4cc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67f02779-3f54-4324-96b2-1697c4b2587d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a48a47-ef51-4754-aa76-545b7530d78f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2381484e-b2dd-4ae4-b553-6c5a168e2aca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22f951be-8fa1-4b42-b13c-bb6e6911d709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e53c5c-4a2e-4ad3-9c47-40313adb073c"
                    }
                  }
                ]
              },
              {
                "id": "d121796a-268e-40be-b4ea-54ed35168b9a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "153daa0f-9aa1-4a45-a3e3-515291de466f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d3b008a7-267f-45e4-b5a5-4e829052e3cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da7f0c47-a99a-43e7-b580-1bad1d747de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8088e82d-7ec3-46b1-8fa0-a7e926241070"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f3339b6-3b62-41c7-839e-72feb5ee719d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12b28a5e-67c4-4c11-9ff8-82afc32bd4b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9afec1d5-6050-4094-bee7-6ebbad224709",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e432efab-1ff3-4ae7-9020-ea0fa422b383"
            }
          }
        ]
      },
      {
        "id": "71f85d91-e9bf-481b-acd7-66d9042690a1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f054b10f-839c-4db7-a98c-79dbb19f8607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3fff206-185a-430d-ad24-5930cb5c4f11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2df26be2-594a-41d8-8986-4926497a611e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590d66f5-0b24-4923-99c5-2b68aa289ebf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccd714ff-105c-4462-9091-6e38ae034c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddcd177-c0fe-4e17-ac59-ba0b3b844d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2d4665c-c063-4320-81a2-855e765bea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0308ae-9bd1-429d-aedf-29f91c195925",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1925d2-1af3-4e2c-86ff-16546f57f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28d2fd11-42aa-48cb-b8ff-237a4e16db4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10569799-862e-4245-9342-8dfc89479954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2262d21-db35-4f99-ad54-bc73d7ccdc0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "473f3bd3-0e1d-452c-8573-ea1e05dbcb19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3849f574-f58a-4c32-823b-5faa94979f4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40f00437-67af-4a23-87c9-222d656c3504",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb32e90a-a6ae-4145-b0c6-0b87dbdbec5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcf37790-bef6-457e-9577-562d9162f87d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "234abf3b-238a-4721-8c8e-5df56e42daff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "903dfca8-0efd-4183-b64e-8edc910a925a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f060c281-7866-4997-bd16-d631f1a54dc7"
            }
          }
        ]
      },
      {
        "id": "a9494baa-1e7f-4737-b2e7-58f00f6c4a3b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c61ceedb-784e-4b3f-be60-762bc160c9cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f79e2fa0-f6e0-472f-9c4f-3aa254f6bbec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31e56f67-5364-400c-bff5-400f4a841470",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d097caf-18bb-40a4-99e5-eb9d5f5372ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1fb2248-093f-48be-a2ef-a21e67d4d1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a6dcb7-3a15-4a98-8a54-5d7f4ba45d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3af1fdaf-595b-4e37-b67a-8d204dd28bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be80f7cd-e07f-4f9b-8000-53ca9c5b4410",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3bfec7-5dd1-4d70-a8ae-3f36a796accc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0abb53-235f-4b50-b2f3-afdc964757b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902691fc-5bba-4a22-837c-1c49872bb06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b25b33e7-8aee-4699-b72e-d68c732a5e6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac7a2c4-70d4-439f-b742-651e913a18a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f11ed908-e5fc-4692-9a32-b37fefa897b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b3caeb6-d89d-4dce-9b65-32fde4447f33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ff27fc1-7bed-44d8-821b-5db1319ec8d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed54e1dc-cdf1-4afc-874f-13d39da27b89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39d55135-7c7f-4ebd-ae61-2952577b4db4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf818c3-bd81-4aff-8d4a-511843423ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e877788d-8e15-4a07-9299-20f3b35e7f37"
            }
          }
        ]
      },
      {
        "id": "5315d1bf-6270-40cf-9f77-8f10d2d75d93",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d1c01cf7-144d-4d62-9081-e59a442fe898",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bea447c9-0840-41e0-aeea-0af11545a4ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aadc00f-70ed-44d1-ad23-2e09be0cd311",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58de2357-d0e2-40f2-84f1-3adbbd7c0355",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f00de29-406c-43dc-9997-dc37139bcf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb030dcb-39de-4a94-9d62-06479249fb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b62667-1ff3-4c6f-919c-34b340f2ef33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f6fc22-e8e0-4f94-880a-a76addf15606",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8bdbec-9cba-4f66-b76d-a93a50c79b86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba61d40-2d2f-4966-a4d4-d02304843583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408fea94-96f0-4344-aabf-7d0733d37449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7a3bc7f-91ad-40f9-8183-e49eb73a6d5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15154366-da90-46a2-affb-ce222646b9bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ac14797-4bfe-4d26-a791-594c262a3b55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a32a9169-c90f-4bba-8f29-ecfb0f561d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "362f1e84-a432-476c-a0ca-89f6b2a2e66b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2285a163-a588-4d1a-b3ee-a5eeca6ae54c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09c50d0a-8136-4f95-8d34-667f78165ed9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75bf423d-2589-4bbc-99f0-9bdaa64b4273",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d47b5a9-6fde-4e65-89ae-93271e2f5ab6"
            }
          }
        ]
      },
      {
        "id": "add30498-e010-4158-b924-5de6f016cdc2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e16cc264-3e41-4e8a-8233-29ca09cef3e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74e598a6-8707-468a-85c6-d5264f21514f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e0bfab5-26b3-4718-90b3-c99e0893c268",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78ba2d45-9359-468d-8817-7cd6ea9aa863",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b13a46fa-415b-44eb-a3f5-f6241deedc67",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 592.606177606178,
      "responseMin": 6,
      "responseMax": 5329,
      "responseSd": 661.6219972898006,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678581712709,
      "completed": 1678581876834
    },
    "executions": [
      {
        "id": "aa13fac1-08d8-46c8-88c1-4eb2b918ae74",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b632258c-3981-4abc-a517-8478d104fda2",
          "httpRequestId": "bf9fa398-8c11-4005-944c-05529b19be1d"
        },
        "item": {
          "id": "aa13fac1-08d8-46c8-88c1-4eb2b918ae74",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3a486edd-c0bd-4fd9-a9fb-2ae07910d7de",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "a004d568-9d45-4615-894a-498a6e5c056e",
        "cursor": {
          "ref": "3401993a-270c-4f3e-a9d7-824cc01d0627",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f9ba3536-af00-4606-b59a-8a3b2de7eca3"
        },
        "item": {
          "id": "a004d568-9d45-4615-894a-498a6e5c056e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4fe3dda9-130c-4e2e-b440-47646c68464e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f7e99600-1661-4000-ac88-5ab6e76a6d31",
        "cursor": {
          "ref": "d891ee7d-c478-4bb8-9238-f67f3b11a9b9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d11b903e-8d45-4f9d-8888-111dd524ffc1"
        },
        "item": {
          "id": "f7e99600-1661-4000-ac88-5ab6e76a6d31",
          "name": "did_json"
        },
        "response": {
          "id": "76c6d80e-9dc9-40fe-8c63-9838203e6c95",
          "status": "OK",
          "code": 200,
          "responseTime": 930,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439782fb-bfb8-4acb-9b9b-cdef14ecb474",
        "cursor": {
          "ref": "25ff4b06-150b-4007-9159-a752cb735f4f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1b21d237-04d5-4337-ad20-6b09bc8cc31d"
        },
        "item": {
          "id": "439782fb-bfb8-4acb-9b9b-cdef14ecb474",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc15938d-08f6-42ca-bc20-86a190caba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439782fb-bfb8-4acb-9b9b-cdef14ecb474",
        "cursor": {
          "ref": "25ff4b06-150b-4007-9159-a752cb735f4f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1b21d237-04d5-4337-ad20-6b09bc8cc31d"
        },
        "item": {
          "id": "439782fb-bfb8-4acb-9b9b-cdef14ecb474",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc15938d-08f6-42ca-bc20-86a190caba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e876448-12c4-4782-b7d9-c88599d00b58",
        "cursor": {
          "ref": "088a97b8-9945-43e5-9963-12a1cbc6a856",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "579c9195-5fb4-492d-9366-cb370cbef2e2"
        },
        "item": {
          "id": "7e876448-12c4-4782-b7d9-c88599d00b58",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "14b350fe-0ba9-4c74-9a06-5e46982fe5a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1329,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d46be8-bca2-46f2-baa5-3904d1374b78",
        "cursor": {
          "ref": "6bc834bb-2fad-488c-ae9c-a1ba731b1178",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2e25464a-ffe1-4ec2-983b-6589a122f0d8"
        },
        "item": {
          "id": "19d46be8-bca2-46f2-baa5-3904d1374b78",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dc35f6d9-41ee-426e-97f6-12fbad5e907d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 530,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7106a0-334b-4289-ad00-6f54944327e6",
        "cursor": {
          "ref": "eed8c09a-0be4-4115-b035-f0fca14d8469",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "daee271a-6b1f-463e-9585-5f89ddd1c3fb"
        },
        "item": {
          "id": "7f7106a0-334b-4289-ad00-6f54944327e6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0572cb1f-1117-4b43-b6a6-1cb23b131e3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1842af4-9f11-4764-b220-f464961c81a4",
        "cursor": {
          "ref": "59cf2ab4-4b67-4137-a9dc-34b75ce1c052",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abf872f1-af92-4c66-a649-a9b934a7cb96"
        },
        "item": {
          "id": "f1842af4-9f11-4764-b220-f464961c81a4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "451951a0-9efd-4df3-95e0-c51cedb36cc0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1842af4-9f11-4764-b220-f464961c81a4",
        "cursor": {
          "ref": "59cf2ab4-4b67-4137-a9dc-34b75ce1c052",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abf872f1-af92-4c66-a649-a9b934a7cb96"
        },
        "item": {
          "id": "f1842af4-9f11-4764-b220-f464961c81a4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "451951a0-9efd-4df3-95e0-c51cedb36cc0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c5dd63-3b39-4ea2-b51f-9bed6b2c9993",
        "cursor": {
          "ref": "6fff3833-ac13-4bfa-926f-2871e4777468",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "539211aa-5436-4ef5-b38a-2bcc034c41ac"
        },
        "item": {
          "id": "92c5dd63-3b39-4ea2-b51f-9bed6b2c9993",
          "name": "identifiers"
        },
        "response": {
          "id": "e19c8981-8b1c-4b82-9c74-cd27226f1aaa",
          "status": "OK",
          "code": 200,
          "responseTime": 1049,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a8b659-f176-430f-ab14-5e2191870101",
        "cursor": {
          "ref": "c844b38f-554c-46f6-90ab-5c47ef7e66bc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "572fb613-344a-4379-84c1-bc5f3e8fd718"
        },
        "item": {
          "id": "a8a8b659-f176-430f-ab14-5e2191870101",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45a048bd-3df0-49c1-80d1-501395641cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a8b659-f176-430f-ab14-5e2191870101",
        "cursor": {
          "ref": "c844b38f-554c-46f6-90ab-5c47ef7e66bc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "572fb613-344a-4379-84c1-bc5f3e8fd718"
        },
        "item": {
          "id": "a8a8b659-f176-430f-ab14-5e2191870101",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45a048bd-3df0-49c1-80d1-501395641cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afa0fc8-37c7-4eb3-ab8f-4a2f61dd6a02",
        "cursor": {
          "ref": "db261bd0-125f-453d-b6da-203117cd4993",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d5003c92-2a05-479a-8886-cba9f2c66247"
        },
        "item": {
          "id": "1afa0fc8-37c7-4eb3-ab8f-4a2f61dd6a02",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7bfaf72a-b56d-4cf4-adf3-55ddf0449018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046b2797-a37c-4830-a64f-e638bcd286d4",
        "cursor": {
          "ref": "ec115859-4b69-464e-8a41-1eb8c6612479",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8734acf6-f965-480c-9fe1-66463223e529"
        },
        "item": {
          "id": "046b2797-a37c-4830-a64f-e638bcd286d4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "50974fdd-bfb6-4610-9c51-8f7b7e29b581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b8ea20-6ab9-4f7a-8094-429e641dbe38",
        "cursor": {
          "ref": "e85e340e-d28b-4e0b-9805-34cbf154ec02",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4121cffd-e828-4875-8ab4-33e680b57081"
        },
        "item": {
          "id": "74b8ea20-6ab9-4f7a-8094-429e641dbe38",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b2d87d12-6009-449b-9ca3-55d4bd366c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2057103-3420-43af-82d4-25995769ed13",
        "cursor": {
          "ref": "df50b823-ea80-4d6f-8cfe-e5335aa451c4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a87514f-68d0-4327-a161-9c828a0b3ecd"
        },
        "item": {
          "id": "b2057103-3420-43af-82d4-25995769ed13",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "df811cf5-e9fe-4399-8cc2-b6c3f07d0d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20a5710-20b0-40ba-a893-a49038f1f879",
        "cursor": {
          "ref": "55db60ed-84a2-48b9-9a6d-c09a78b37b39",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "06053cd4-d1bb-4d8f-8f28-5a6938d38151"
        },
        "item": {
          "id": "a20a5710-20b0-40ba-a893-a49038f1f879",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b3f77a3a-b2b9-491b-a898-52a56ca11738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5694b02-109e-4d1b-ae86-0bf2285cc945",
        "cursor": {
          "ref": "f11b580d-505b-4d67-8155-5d1215f452cf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d359fc85-2b41-4918-9f50-776c4f6d7637"
        },
        "item": {
          "id": "b5694b02-109e-4d1b-ae86-0bf2285cc945",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f329a86c-8080-44c6-bda2-23de56490d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4149c9e9-e1cb-47e8-aad2-3def0d819e97",
        "cursor": {
          "ref": "6457af59-e4fc-41b4-863e-6f1d85d8916b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "88394a5d-83eb-4b78-94c0-f2b329012641"
        },
        "item": {
          "id": "4149c9e9-e1cb-47e8-aad2-3def0d819e97",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8660be8e-a559-4a02-a689-d3f6cfb4bdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727fc21a-b049-40a5-9b2f-1192eb99394e",
        "cursor": {
          "ref": "27ce7d78-78af-4999-867b-2d14d466fefb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "63cd3132-6248-477b-8c8f-84ba0aa53139"
        },
        "item": {
          "id": "727fc21a-b049-40a5-9b2f-1192eb99394e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7c76b27f-e020-43a4-98fc-00fa2abb88fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbded55-9886-4e45-82e7-c98813a3a78e",
        "cursor": {
          "ref": "49daad6e-3d8c-4516-a089-16b8dbe333c0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0def3e9-2fa3-46b7-8440-ab92d30d682e"
        },
        "item": {
          "id": "8dbded55-9886-4e45-82e7-c98813a3a78e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "016b3ffd-e62f-44e0-beb2-89996b3052cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1109ce95-f133-4e1b-a215-3fa47ef182c7",
        "cursor": {
          "ref": "2552cabf-0ab5-4ab6-ad87-e15819c114d5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e64f8e07-aba8-4b3b-b084-f4e17e0eee5a"
        },
        "item": {
          "id": "1109ce95-f133-4e1b-a215-3fa47ef182c7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "449175b2-f597-451a-8838-c67e8d5c2380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926c7f2-1fb1-451d-824a-d221acbcdf07",
        "cursor": {
          "ref": "708cd857-1acf-494b-b67a-023763f883d6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "74220d06-dbc5-4584-b0e0-7828537d0377"
        },
        "item": {
          "id": "a926c7f2-1fb1-451d-824a-d221acbcdf07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "36924242-a21c-479f-8646-6d72ea0fa1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4685106-9cd4-440c-9f1f-d17cccb02aec",
        "cursor": {
          "ref": "aed9ad92-16a6-4cd9-8f03-b30edb345bff",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "065ea720-17fe-4359-b09f-edd281489420"
        },
        "item": {
          "id": "b4685106-9cd4-440c-9f1f-d17cccb02aec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "be108ea2-807f-459b-b8ba-79f179fc2701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e623c4be-0251-4b35-9796-0421a74abe48",
        "cursor": {
          "ref": "390c832c-c18d-4fcd-aa2f-3c4f830d700c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85c3f35b-a6af-49bc-813a-1a42e76b1c70"
        },
        "item": {
          "id": "e623c4be-0251-4b35-9796-0421a74abe48",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "95b4a461-db40-402d-bb17-de13189877c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e6ac3-6313-4abb-9e3f-a0b31240cc28",
        "cursor": {
          "ref": "4409bab6-e9f3-4cf8-86fa-f02a384a4996",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d1727336-44ef-4966-a9f8-64bbfcfb1c16"
        },
        "item": {
          "id": "659e6ac3-6313-4abb-9e3f-a0b31240cc28",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e67bae33-2f91-4f4e-b8d0-9d0f0b3b60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7c31d-b134-4048-b736-0f27173b2f83",
        "cursor": {
          "ref": "2cedbc8d-9b4f-4065-b25d-0a191cab368d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "764d8247-ee43-470e-85c9-88226b9e712e"
        },
        "item": {
          "id": "3ca7c31d-b134-4048-b736-0f27173b2f83",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "67bd4ed8-cc74-4f21-b94a-c13cfa8b05d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2efdd4-7947-452d-8807-21ad85185af6",
        "cursor": {
          "ref": "ce75c1ce-5f78-450e-9098-9d344f02f1bc",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "04e2be3a-ecee-41be-ac15-5909c1722053"
        },
        "item": {
          "id": "3f2efdd4-7947-452d-8807-21ad85185af6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1a3d813d-4854-4f5a-8845-4ded7d9ab84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0737eedc-cc28-4017-8e3b-d71f9059768d",
        "cursor": {
          "ref": "05602ecc-d7de-4c68-9c95-2d8da03a5f0e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c4fd2580-2437-4a96-bb21-9fddc2c01bce"
        },
        "item": {
          "id": "0737eedc-cc28-4017-8e3b-d71f9059768d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cb2f3bb9-a146-4091-9522-d230a26d40b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77262254-6174-4c04-a35a-8be811987679",
        "cursor": {
          "ref": "ae5abb3d-cb79-4702-b2a6-5efe8ad52886",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f0c31e0c-7302-4f4a-9576-f814c6a4d8d0"
        },
        "item": {
          "id": "77262254-6174-4c04-a35a-8be811987679",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "23635cc9-d508-4b36-8733-11d8c9f5a211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c920e36-6665-4eba-a0f5-4e3c722ce841",
        "cursor": {
          "ref": "a9f21e9e-1639-4e4e-afd2-94a2053a2cf4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3c158554-746c-4624-88e2-b00ebe43b60b"
        },
        "item": {
          "id": "0c920e36-6665-4eba-a0f5-4e3c722ce841",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a3d2daa9-66a5-4ea5-a15a-4c06dc1e87f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407cb24f-cdf0-44f2-ad31-e060afbf0881",
        "cursor": {
          "ref": "b9205611-8686-436f-82d9-a322e7a99023",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a4a8a88-424e-4c0a-86b4-bb6658a9942e"
        },
        "item": {
          "id": "407cb24f-cdf0-44f2-ad31-e060afbf0881",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "84f9d0d7-9912-4d16-92b1-79e293c20772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b6f12-ccc3-4aeb-849a-1541536ec5c1",
        "cursor": {
          "ref": "6e2f8f6f-ee3c-4efb-aafd-d95a2926c21d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "51e72c96-87ea-4d1a-b93c-425f498fd4cd"
        },
        "item": {
          "id": "c66b6f12-ccc3-4aeb-849a-1541536ec5c1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c61bec5c-d68c-4812-ad87-334568b466be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d39f998-450e-40cc-be36-c617ed30a78c",
        "cursor": {
          "ref": "2011d6e2-48ec-4180-a397-0aac3cfaffae",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "50cf84f6-9b5a-4ec3-93ce-f47480f7f193"
        },
        "item": {
          "id": "9d39f998-450e-40cc-be36-c617ed30a78c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "10fdf096-0308-40f3-bd45-78d270b68493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222a864-e751-47cf-8407-245a9fb737ec",
        "cursor": {
          "ref": "f14e4d8b-9b5a-40c0-94d2-17f903e05b29",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "376eb5b3-029f-4481-90f4-7c3ecda1f18b"
        },
        "item": {
          "id": "1222a864-e751-47cf-8407-245a9fb737ec",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "64d54f55-d71d-49fb-9223-0dfb0ce92748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291cdb86-6b50-403d-929a-75b14f2afb9e",
        "cursor": {
          "ref": "ceda4a64-463a-4c9e-95bf-ff2f9c7488d6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d9c844a6-528a-4cf2-97cc-d3becb55c3f4"
        },
        "item": {
          "id": "291cdb86-6b50-403d-929a-75b14f2afb9e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c874d47-efc5-44e3-b673-2ca9acd2aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589f6bac-6d77-4ef0-a994-d444e1499220",
        "cursor": {
          "ref": "8047e28e-9f11-422f-9725-76e323ff8a3c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "048ff78c-f8c9-4b90-a911-284e577af2bf"
        },
        "item": {
          "id": "589f6bac-6d77-4ef0-a994-d444e1499220",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "436fa7e5-1b1e-449d-b41f-dcd67db8df1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d348e7-da6e-483e-9943-2a966e5a7596",
        "cursor": {
          "ref": "d41ddb7e-ac4c-40a1-95b5-43a436e7eda5",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "431b781f-9857-4b42-b619-f2f67c96afb1"
        },
        "item": {
          "id": "03d348e7-da6e-483e-9943-2a966e5a7596",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cbdcbd95-5352-4b0c-9439-7cd01c6cf789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850fade4-a275-4308-b5b2-30f310227e17",
        "cursor": {
          "ref": "3972b976-8bd5-4444-a6ca-fa62473f442f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c4fcbd8f-5472-421c-ae94-68e36aaeff8b"
        },
        "item": {
          "id": "850fade4-a275-4308-b5b2-30f310227e17",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8b162b0-ac65-4112-850b-9f43de8110f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0529bf2a-a546-4b28-be6e-50f707202bd0",
        "cursor": {
          "ref": "292791f5-09ca-4ba9-b93c-0f74efba74b3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "afe3e452-cd52-4365-b3fb-252ebf17f535"
        },
        "item": {
          "id": "0529bf2a-a546-4b28-be6e-50f707202bd0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4c69f5dc-bdd8-4baa-970a-01c6a9311ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751eee42-b492-4280-8192-3f966f789b66",
        "cursor": {
          "ref": "ebe3c83b-840e-48b1-9fe0-f68747ba4218",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "abe3b9e6-9a60-4421-99d9-20983ed8e3e5"
        },
        "item": {
          "id": "751eee42-b492-4280-8192-3f966f789b66",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0ba1cc5e-abc7-4594-80cb-c4f0cea4ff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8399da-ed61-4e38-91cc-594d789d27f3",
        "cursor": {
          "ref": "5fe15fac-8a43-490c-a200-ec1b94d04529",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f66d7225-b746-41a5-bc4d-8fc598e5331f"
        },
        "item": {
          "id": "fd8399da-ed61-4e38-91cc-594d789d27f3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3f926d94-949a-4496-affc-cb727e90e396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371afb27-150f-49c7-ae7d-c6898532f637",
        "cursor": {
          "ref": "cba3a26e-a03b-4c9d-b684-328951d8613a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ca9eabd8-5da6-473e-b719-431a3c76a25e"
        },
        "item": {
          "id": "371afb27-150f-49c7-ae7d-c6898532f637",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6af38c25-3536-461e-bf4f-c8c1e57a74a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe095f0-08c5-4174-aa80-41b6230ddedd",
        "cursor": {
          "ref": "42b2e5bf-bcfa-42a2-8d6d-3455be8cfc2e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7d7691b5-5130-4d24-bae9-5afb69247bf6"
        },
        "item": {
          "id": "8fe095f0-08c5-4174-aa80-41b6230ddedd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "44cbcfdc-5678-4db1-9bc1-84978f50805b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17e530-07ba-43da-8502-34ae6b0ccc4d",
        "cursor": {
          "ref": "d47dd496-b96a-4bc1-8f8b-b905ad15c036",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b04663f5-7c26-44eb-8e2a-17544e57856a"
        },
        "item": {
          "id": "7f17e530-07ba-43da-8502-34ae6b0ccc4d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6fa4958-9b9d-4bdc-afab-2e76ebf1adb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4381d087-329b-40cb-b5a2-242155bf40c3",
        "cursor": {
          "ref": "3fdaf1bd-e54b-4f72-a11b-bf299d49ac59",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0fcd8a1d-c691-4831-87e0-1555a2fa6fa7"
        },
        "item": {
          "id": "4381d087-329b-40cb-b5a2-242155bf40c3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e2bda1d-a63a-4879-9ee7-97359e7ab1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3c12f7-9cb2-435d-945c-d09e6c2773a3",
        "cursor": {
          "ref": "f54c1e8a-a0c5-4d93-877c-b9df6ea48cbb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53e81555-b63f-4427-8c0a-f128b9d2696e"
        },
        "item": {
          "id": "be3c12f7-9cb2-435d-945c-d09e6c2773a3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fe66cfd2-7a78-413a-8aa5-42ac2e71e173",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 630,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca2aa7-bcbd-4087-8cdb-383247277342",
        "cursor": {
          "ref": "9dae5616-90a9-45c0-b192-138efe501b4d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9cd64376-c795-4a52-82a9-f55b9a4d4033"
        },
        "item": {
          "id": "cfca2aa7-bcbd-4087-8cdb-383247277342",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d53e0183-b1ed-4b95-bd11-9b28505c50e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45cc56-0c16-4967-9c86-693b147d01c8",
        "cursor": {
          "ref": "f30060f5-ef2c-4e30-bf8f-66f286a5f35b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fddf8a67-1a89-42e3-ad0b-2bd676e394a0"
        },
        "item": {
          "id": "7f45cc56-0c16-4967-9c86-693b147d01c8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8826c8ed-7991-4c48-b459-3242cd501b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239f242c-9113-4a41-8bf4-045cbe9ab26c",
        "cursor": {
          "ref": "829c892a-1413-4403-bb0c-80b850aa8bd2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a08ccb53-7093-4d7e-9b5c-966ef62c57fc"
        },
        "item": {
          "id": "239f242c-9113-4a41-8bf4-045cbe9ab26c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e92dda49-9bd5-4cff-96bf-73880b585447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc315119-83c7-4fba-a304-ddd0b136af33",
        "cursor": {
          "ref": "de2edce2-fea7-4188-b93b-7009229c2fac",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a1a7959f-a888-4ba9-aad0-4abc6f393339"
        },
        "item": {
          "id": "fc315119-83c7-4fba-a304-ddd0b136af33",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "874ad6c0-0dfe-4e6f-abf8-210d1f2c0e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540894c-1e63-45ac-ae91-b29979813ad7",
        "cursor": {
          "ref": "ea476adb-f5a7-4995-82fc-f0ca1c8d3a71",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b1df3ae2-cc50-4a98-9f62-6bcadd275833"
        },
        "item": {
          "id": "0540894c-1e63-45ac-ae91-b29979813ad7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef10153a-c477-4524-a681-fa6a17b975e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32134d-546b-4c3b-9067-9c822f97959f",
        "cursor": {
          "ref": "f44ef1cb-2180-44cb-8803-e0f3a46dedb2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5731102-b314-4ab8-bb2c-477f31fec876"
        },
        "item": {
          "id": "1e32134d-546b-4c3b-9067-9c822f97959f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1217bf1a-354e-4815-8c16-c78f17be0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0bfb1-0ff6-4e0f-9f5a-ca4287309d86",
        "cursor": {
          "ref": "e9f2eaf4-7e06-4818-978a-ebbc28c6da14",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3259d36a-5892-451a-a5e3-392059bdff60"
        },
        "item": {
          "id": "add0bfb1-0ff6-4e0f-9f5a-ca4287309d86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ac797da7-e363-4ad0-8f73-fac18d06e1c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 598,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ba5b9-3ec3-43db-b74d-f343d0f0d319",
        "cursor": {
          "ref": "574bdf07-f465-4d9d-8e0b-776c98ecda3e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4baac5e9-7fad-4878-80f3-3d54ff77215e"
        },
        "item": {
          "id": "1a6ba5b9-3ec3-43db-b74d-f343d0f0d319",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b74c4ce-8a08-496b-a8c2-0828d1d3e908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e7a6b5-1245-403d-ac73-a879d95642f8",
        "cursor": {
          "ref": "904c6ccd-3a46-416b-81d1-ffd913990215",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "96e077b3-7730-4de3-a578-be942032f048"
        },
        "item": {
          "id": "a7e7a6b5-1245-403d-ac73-a879d95642f8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8527e233-d78c-41bf-a568-f3899c09fa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe9fc92-261f-442d-8a5f-f8dc58f0ace6",
        "cursor": {
          "ref": "0d6929a6-5d8f-4063-bb66-166e0569d6c3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a019a2b-9c00-422b-86a8-b7f430eff70f"
        },
        "item": {
          "id": "fbe9fc92-261f-442d-8a5f-f8dc58f0ace6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d6efd31f-9692-4263-811a-d2e258afadd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b780b03-61ef-4751-b010-517d1f7173d5",
        "cursor": {
          "ref": "f9197ee3-89a0-4414-abd4-16bf78396db9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0986aed4-c990-465e-977d-eafb447afea3"
        },
        "item": {
          "id": "4b780b03-61ef-4751-b010-517d1f7173d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b6b25f35-b10c-4f35-ad4f-e0977a9d2a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b8cac0-703a-4c21-afd3-362544ed0906",
        "cursor": {
          "ref": "111b8633-2727-421a-b8bf-e0eaf8f065af",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f79130d3-d509-4a4c-95db-6dbb15e7c8c0"
        },
        "item": {
          "id": "87b8cac0-703a-4c21-afd3-362544ed0906",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f90a8719-59cd-4da4-80b4-7c6d30ab527e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709d42a6-0cda-443d-b997-fc45b40d5bd2",
        "cursor": {
          "ref": "045ce4ea-57ca-423b-9f45-4bc18db130ec",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ebfb5e29-0d33-4e25-a635-082bf3c13474"
        },
        "item": {
          "id": "709d42a6-0cda-443d-b997-fc45b40d5bd2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2f8231c2-76b7-450d-9b5e-035a81fb08a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06289ac8-e611-43b0-909b-587b289e8321",
        "cursor": {
          "ref": "96193f14-6d09-4ed3-a885-a0c70ec36375",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9ebf4a6b-5e78-4fea-9034-ab4c2f4d289b"
        },
        "item": {
          "id": "06289ac8-e611-43b0-909b-587b289e8321",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "028dd433-da1c-4aff-8cc6-e8339ab0125c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9231fa-e295-490e-9a83-df329485e8d5",
        "cursor": {
          "ref": "9acf8db2-dad5-4a12-9837-d531a0f52fee",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a5555828-5ca3-481b-bf62-b1073b343d89"
        },
        "item": {
          "id": "af9231fa-e295-490e-9a83-df329485e8d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e02f2864-8185-441e-8d2e-3577264e9f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4df27c5-f50c-4bb4-bb72-7cdab5bb0877",
        "cursor": {
          "ref": "bab670ba-5155-41a3-b661-aaaeacf09f6e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7d99b0d3-2641-48e7-acc6-cf9a5bb6cd23"
        },
        "item": {
          "id": "a4df27c5-f50c-4bb4-bb72-7cdab5bb0877",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3811e3a8-e0fa-4809-a399-8ef12a8e62a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b86e63d-56b4-4c27-99df-d960cd929639",
        "cursor": {
          "ref": "9b6a2f3c-59bd-467f-ab5f-e3f9a9c33b72",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f6e55337-8728-439e-b39c-65e73b2856ed"
        },
        "item": {
          "id": "4b86e63d-56b4-4c27-99df-d960cd929639",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d8081d1-b4a2-4d6b-837a-07405b61c1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0143fa-6219-4855-9d19-edb5b2b6ed3f",
        "cursor": {
          "ref": "3081ab20-d4e3-4d74-93d2-47f23fd69e56",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "56bc0792-907c-47a1-a5e9-28f21d457e7a"
        },
        "item": {
          "id": "3d0143fa-6219-4855-9d19-edb5b2b6ed3f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "26f8eba4-091d-4d31-8a6b-46d29ee79194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8143cb74-43b9-4c74-a705-032a9f01ebbf",
        "cursor": {
          "ref": "4d68e632-ba3d-4626-9c1e-456703df1243",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c64ac182-b61d-479f-9d13-273cc04d4bdf"
        },
        "item": {
          "id": "8143cb74-43b9-4c74-a705-032a9f01ebbf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "08a96daa-ac4a-4178-b9ed-62e734fe7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fddc87-931b-46fe-8715-ee466ced8b6e",
        "cursor": {
          "ref": "097e2560-09bf-455a-bd22-f49ecce6276c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6e03eb1d-f6e3-48a6-8997-05b34d28747e"
        },
        "item": {
          "id": "32fddc87-931b-46fe-8715-ee466ced8b6e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "beeb06aa-299c-4c17-9ac4-3f4d5c35d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4badf299-1e44-49b4-8257-64904faf06d5",
        "cursor": {
          "ref": "d6793c69-59f4-4f47-b28d-db8cf50a3cb9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d5df7739-3c76-486d-8f5b-0c943c13ce0e"
        },
        "item": {
          "id": "4badf299-1e44-49b4-8257-64904faf06d5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9861a777-c3cb-4d6d-8b92-fb71256f6c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4709d04-addb-4f2a-87f4-51ab600ca8a4",
        "cursor": {
          "ref": "0843c3a4-eb14-4e76-b365-b89292be44e6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "74ba6b21-8767-4053-9b28-9a93c2540058"
        },
        "item": {
          "id": "b4709d04-addb-4f2a-87f4-51ab600ca8a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "93a1545b-d0e9-4011-9dce-465bc4d4b130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82ff453-e478-4d20-b6d3-2364d617d113",
        "cursor": {
          "ref": "4e853d04-f76a-405e-bd02-e4b54df25915",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6efa9914-b180-486a-b526-135ec35bd784"
        },
        "item": {
          "id": "f82ff453-e478-4d20-b6d3-2364d617d113",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76fcef9d-a627-4b20-9d89-b39bae3a21b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d22bb3-82b0-4135-98b9-900cfcbc8586",
        "cursor": {
          "ref": "d0ad4f50-5f07-40de-ac3e-9a155c020fd6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f4490b26-1c14-47d2-b728-91b26f6492d4"
        },
        "item": {
          "id": "03d22bb3-82b0-4135-98b9-900cfcbc8586",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c4fe078f-0f8f-42c0-979b-339d02a7cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9697444-4d2f-4c55-b8d5-3b10070293ac",
        "cursor": {
          "ref": "6442f596-605d-495d-91b2-fecbb1bb81f3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a3b8fc83-825b-4b08-b725-34e018ed87dc"
        },
        "item": {
          "id": "c9697444-4d2f-4c55-b8d5-3b10070293ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "96026d71-13be-4c14-be60-5029387d6934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef7f1e9-165e-4f49-b76e-fc7edfe78c04",
        "cursor": {
          "ref": "06d358d7-5f01-4742-85f6-6da6d346b0b1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df2b6f59-1dea-40ea-885e-56328e822bc9"
        },
        "item": {
          "id": "9ef7f1e9-165e-4f49-b76e-fc7edfe78c04",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fb3c3feb-3bc8-4141-bcfc-4973b33d23c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1685,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b8f8db-d6c3-4630-bb90-442a30f88095",
        "cursor": {
          "ref": "c47beff3-1f57-42eb-83c9-927d097a7ea9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "865e8269-865d-48ca-a24b-d3d89461720e"
        },
        "item": {
          "id": "86b8f8db-d6c3-4630-bb90-442a30f88095",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "59fd72d7-0c97-4128-86aa-967f31e592c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1285,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd906622-e8e8-49f3-ba6f-5df7d09197c0",
        "cursor": {
          "ref": "975efb9f-ebbf-457f-a499-b739bf54a710",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ef913480-5158-4576-a2b3-4518bb2fc894"
        },
        "item": {
          "id": "cd906622-e8e8-49f3-ba6f-5df7d09197c0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "59ea01a1-ec4f-461c-9a84-4016703e89d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1379,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d2c4e-94c2-45c2-9a78-74db4cd557d8",
        "cursor": {
          "ref": "3c6af451-d8de-49ab-9075-bdd81f8a9405",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c7578272-20f1-45a5-af51-997201139736"
        },
        "item": {
          "id": "c55d2c4e-94c2-45c2-9a78-74db4cd557d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "75278370-78e7-438b-938a-b277c8612bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1280,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d228c5-5957-4487-9745-5f2ad07746fb",
        "cursor": {
          "ref": "2e79bca7-74c1-4396-b946-b969da54db9a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "511be931-b0be-4d84-968e-c0c111eb2764"
        },
        "item": {
          "id": "66d228c5-5957-4487-9745-5f2ad07746fb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "13795c6b-e9e9-40a1-ac71-b74dd3568456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd1345e-01f1-40df-8e3d-f7f779fd1e6a",
        "cursor": {
          "ref": "c84a3492-8374-4a08-ac4f-bc11b3e09796",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "62228931-0db5-4578-a924-55760ebb535c"
        },
        "item": {
          "id": "6dd1345e-01f1-40df-8e3d-f7f779fd1e6a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2aa17578-9c35-4096-bbfd-6de576fb4970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83451bc0-6253-43e3-95bb-2e5d3405fa2d",
        "cursor": {
          "ref": "dd88e6b7-43e4-4ef3-9104-d4e04919f6ae",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e1f4b04b-5b10-417b-ba1a-64e114316f05"
        },
        "item": {
          "id": "83451bc0-6253-43e3-95bb-2e5d3405fa2d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b5ead85-ff1d-41db-bb77-9cb181deed78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd80a300-31a9-41fa-b57b-2daac114908a",
        "cursor": {
          "ref": "8d311808-1089-419a-bf9b-8f1c59b51f57",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "46033984-47a4-410b-a0d9-2216ce2bc7c7"
        },
        "item": {
          "id": "cd80a300-31a9-41fa-b57b-2daac114908a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "711d340a-7189-4b64-b4b2-9c771a268673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cad9788-260d-4498-80d7-238633b3e63a",
        "cursor": {
          "ref": "96a999c8-a616-4654-9f16-e87ccc9240dc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7d6e633f-ee0c-4655-a9ee-773174ac0ccd"
        },
        "item": {
          "id": "8cad9788-260d-4498-80d7-238633b3e63a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dd3b26b3-a161-4447-ba7a-372ff0a68acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac2e7ad-f5f1-42a9-9e06-d6bd1e23a527",
        "cursor": {
          "ref": "67729d2a-dfd1-4baf-adf1-a4a1889ee1b4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f546399d-f5a0-438e-b32f-2d9ed6981050"
        },
        "item": {
          "id": "5ac2e7ad-f5f1-42a9-9e06-d6bd1e23a527",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "875a0394-4817-4cec-8a2b-e743eea30566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4831e943-3fe2-4993-bb73-6929f8c89f1d",
        "cursor": {
          "ref": "621a5a16-4d15-4b17-826d-a7eff4f3a86d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4985a007-4116-44f8-ab65-41e49e5a2969"
        },
        "item": {
          "id": "4831e943-3fe2-4993-bb73-6929f8c89f1d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4fa82a1e-a6c6-4e55-9a0b-a687dd706c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a4aca6-169c-4102-93de-1fb4ea2ca3fd",
        "cursor": {
          "ref": "ca6ae98f-d6a9-403c-9953-c6bb179cfbc5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "95145343-e63f-4120-9b92-8f5ffd7c008e"
        },
        "item": {
          "id": "b7a4aca6-169c-4102-93de-1fb4ea2ca3fd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1933c6bc-a08f-4c40-afef-ba5b9f522488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50686a-715d-427c-bc15-dca71d95ded9",
        "cursor": {
          "ref": "89c74aeb-6bc5-4d76-bb39-e7277f08f508",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f56b5651-fcca-430f-aeee-1cf26801105b"
        },
        "item": {
          "id": "6f50686a-715d-427c-bc15-dca71d95ded9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dc70c1ef-4e21-4666-b665-bb5d1205ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af28d85e-72bf-4bc8-9e8f-2f4d7aa11dfd",
        "cursor": {
          "ref": "e2e52be7-f3b8-48bf-8ad0-b4ad57678e75",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9d7464b1-11d6-4473-b933-1cb1b4b742d7"
        },
        "item": {
          "id": "af28d85e-72bf-4bc8-9e8f-2f4d7aa11dfd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a4fa1a32-3b47-4cd0-bf50-fb727d2a7886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c30600-df29-4128-ac8f-cc3c9de292a8",
        "cursor": {
          "ref": "49947f0a-b68f-40c2-beb1-1e26b40e857d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35c0cb99-3430-4665-b140-4bb3d121efb7"
        },
        "item": {
          "id": "98c30600-df29-4128-ac8f-cc3c9de292a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7c3b6cd-1513-4835-b963-d9e9e09720ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16521ff3-21ef-4ed1-a115-c267b7cb08ee",
        "cursor": {
          "ref": "abe8e560-0119-4d57-9a89-bec7b87ae95e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2fbe1fff-f444-4589-8d24-d7a18c74d3de"
        },
        "item": {
          "id": "16521ff3-21ef-4ed1-a115-c267b7cb08ee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4418a076-6950-42c4-a05f-3657af82a329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17ef5f5-5022-41ed-814b-efda36ba1248",
        "cursor": {
          "ref": "db500868-a679-484c-ba5c-535edc9f1718",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a5b1707c-3159-4fe9-805e-5776ab8504ce"
        },
        "item": {
          "id": "b17ef5f5-5022-41ed-814b-efda36ba1248",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ac584a08-6291-4549-81a8-5cb0a211db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77acd27-2422-4f09-8f1d-1e4d6dd2e0ea",
        "cursor": {
          "ref": "09bfa209-5ccc-4ecd-8f49-a1cef23d0f41",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "246cc950-b14f-492f-a331-de294e7f180f"
        },
        "item": {
          "id": "c77acd27-2422-4f09-8f1d-1e4d6dd2e0ea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fedb8812-f77a-491e-82ee-70b357132979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d8141-1cb6-4302-aa64-33a32808f29f",
        "cursor": {
          "ref": "75cf9ffa-7412-4489-abd5-dee79ee256d4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "382fb99c-0321-4de4-a5ef-deff9a90d137"
        },
        "item": {
          "id": "ca3d8141-1cb6-4302-aa64-33a32808f29f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b7ce4c13-b27b-4227-a077-270c9c91b4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3658120-590f-4103-beb8-cb7f1eff351a",
        "cursor": {
          "ref": "72f35798-f524-45be-970f-66105a286477",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a2a60a09-5e7d-4608-9c39-e8a5f2d8fc7a"
        },
        "item": {
          "id": "d3658120-590f-4103-beb8-cb7f1eff351a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7dcf8315-454c-44b2-9997-d71b0ba4505a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a05ccca-48a8-4d4e-85f3-dc5e3ca89187",
        "cursor": {
          "ref": "bc912f7d-dd2f-4b25-8b41-9dace8ce1ab5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e53c4bfd-d377-4a3b-b14b-35b7187006ee"
        },
        "item": {
          "id": "9a05ccca-48a8-4d4e-85f3-dc5e3ca89187",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a7024a7a-ceca-41e2-bbac-a56a580eb191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6e4316-666c-4d6f-90f9-a54b75d8aa60",
        "cursor": {
          "ref": "682d10f0-4fac-48f1-a8e9-3399a64fa13b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "10c88be7-b552-4a57-aac6-6963ea0717ff"
        },
        "item": {
          "id": "ce6e4316-666c-4d6f-90f9-a54b75d8aa60",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c9640c8c-6355-4319-99d4-1b74feaed73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee024953-9d7d-4280-b71c-bcc956114fe4",
        "cursor": {
          "ref": "a4b86480-55fa-49ce-bbc7-c14ebb3c4820",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "691b1077-6ece-4e33-89e7-eec89550bf57"
        },
        "item": {
          "id": "ee024953-9d7d-4280-b71c-bcc956114fe4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "82807de1-0096-4ccd-b78b-4101b41b2053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffa4870-28d6-4360-842c-3d6180424343",
        "cursor": {
          "ref": "095bb246-6e4f-4c19-9671-f055101b3a57",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c14339e-5a01-4abb-add0-de8e4e454f60"
        },
        "item": {
          "id": "1ffa4870-28d6-4360-842c-3d6180424343",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "db04337c-fa3a-450a-824e-d7e8e0d94abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4bb051-3da8-447c-a8c1-673110507063",
        "cursor": {
          "ref": "0fd8de06-0625-4ed9-b5a2-4e91675c9476",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "53a31112-a79e-4e2b-ad76-6f88b63e3cc9"
        },
        "item": {
          "id": "5f4bb051-3da8-447c-a8c1-673110507063",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3184fda-7d32-4c2b-ace0-c5520c18ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f89e46-40e2-465b-9935-fa8ae93c1aec",
        "cursor": {
          "ref": "c12ebc95-43cd-4e63-afad-db3e88614485",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a28ddfbd-336c-4d82-9e14-409321bd6fc8"
        },
        "item": {
          "id": "15f89e46-40e2-465b-9935-fa8ae93c1aec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "15456476-9635-41f1-a49a-0f278d1b1c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a3dce0-a64a-43ee-9942-5d80e83f121e",
        "cursor": {
          "ref": "ede7516e-1342-492e-9d38-9ea2a0d23ada",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cbba27ac-e44e-45b4-b2fb-3aaf6f8d45db"
        },
        "item": {
          "id": "15a3dce0-a64a-43ee-9942-5d80e83f121e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fe02193d-6d47-498d-825b-3d7efbe287bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c69cac-9453-46fc-9a56-bb09a56e9af5",
        "cursor": {
          "ref": "3fa19882-f165-444d-a1b5-95ab1bec39f4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d059b0fb-82b8-4a9b-9c56-09483bb0355e"
        },
        "item": {
          "id": "d3c69cac-9453-46fc-9a56-bb09a56e9af5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "382be7d0-3f8d-4d12-bddf-e7cf43171360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed14a7-e133-4b89-bb92-e1b25aa8df34",
        "cursor": {
          "ref": "23ab1126-d009-444a-81c2-702091196beb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ade5f0a-1586-4289-a117-dbf8c13043ec"
        },
        "item": {
          "id": "31ed14a7-e133-4b89-bb92-e1b25aa8df34",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26c1b9f4-cfb4-4146-9915-4fc5c2c4dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dbb804-4344-451c-9eae-1f3b29e61411",
        "cursor": {
          "ref": "5147a3bd-2de3-448f-a3f3-854c65bee161",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bc9a059c-0993-483d-b4f3-fb690bdd4886"
        },
        "item": {
          "id": "96dbb804-4344-451c-9eae-1f3b29e61411",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d63480de-1216-4085-b679-b02870d6c21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335a80a-86e1-49ef-b58a-dfba67d03dbc",
        "cursor": {
          "ref": "9fbc44bb-0e9d-45f4-9458-0a0f57ebaf43",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7b26ae1d-2578-49a9-9e39-7ae37eb35b4e"
        },
        "item": {
          "id": "2335a80a-86e1-49ef-b58a-dfba67d03dbc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "be026078-2992-4882-84e5-817e6bb3d770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b4894-cbad-4150-9219-ecc0626ad654",
        "cursor": {
          "ref": "7eac5e8b-d742-4553-b0d4-e50dcd331393",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c9a3efd8-d32b-4f96-80d3-cce5b43d606c"
        },
        "item": {
          "id": "0f9b4894-cbad-4150-9219-ecc0626ad654",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3cc72e8f-86bd-4b7b-9bee-bf0fe95ba5fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2783bf-cbfd-49c9-bc6d-99c95b57afad",
        "cursor": {
          "ref": "d212c664-7020-4638-a482-d479c4f0f1d5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e20ea1ec-bed6-439a-b012-d16414ee2aa0"
        },
        "item": {
          "id": "ee2783bf-cbfd-49c9-bc6d-99c95b57afad",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "96be4f09-1ac2-49b2-8b6e-65d4c9d79917",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f107a56-5d78-434a-b278-fb7d75e84fd4",
        "cursor": {
          "ref": "7d418953-ce58-499f-b66b-931527ab593b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6eac508d-5363-42a5-9314-f16ac1ba928c"
        },
        "item": {
          "id": "8f107a56-5d78-434a-b278-fb7d75e84fd4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "950bc6d8-e1e6-4429-b4d7-c1175c419497",
          "status": "Created",
          "code": 201,
          "responseTime": 4954,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70db3c7-7f1c-4e21-92bd-d545711fe245",
        "cursor": {
          "ref": "c3d4bd05-b5b9-431b-aefd-3a28c50ea050",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "463aa591-c38a-49a5-a474-b6d0b4c0a679"
        },
        "item": {
          "id": "d70db3c7-7f1c-4e21-92bd-d545711fe245",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "66f26e33-d2dc-4382-81ac-5e18bda9bbb6",
          "status": "Created",
          "code": 201,
          "responseTime": 5325,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a993c6a-6d55-4db7-aa9c-edb2e040ab21",
        "cursor": {
          "ref": "372373cf-9d98-44e0-b8df-f867cd9e0166",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "31f9b1d5-17eb-421d-b1da-ba154148e44a"
        },
        "item": {
          "id": "6a993c6a-6d55-4db7-aa9c-edb2e040ab21",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b290f0ec-0799-4bcf-8000-7ad7d9bed4a2",
          "status": "Created",
          "code": 201,
          "responseTime": 4865,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "906e9520-1741-48ed-8af8-64636791131b",
        "cursor": {
          "ref": "bff9d1ce-e616-4526-bc4a-6ceee27a82b2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4343ea05-1bae-49d7-a765-cd9fc91626ef"
        },
        "item": {
          "id": "906e9520-1741-48ed-8af8-64636791131b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fbc0059a-4c9e-462b-ace6-8c8fccf1a101",
          "status": "Created",
          "code": 201,
          "responseTime": 4076,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6032d560-fccd-4a76-ac97-e22c2bf8fca4",
        "cursor": {
          "ref": "a7a5e3a6-0865-4783-827d-37c1e054a6ac",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4e71ed2f-35c4-4c42-8501-5bced976a436"
        },
        "item": {
          "id": "6032d560-fccd-4a76-ac97-e22c2bf8fca4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "74f89452-619a-4dbc-8448-1e7a176a1852",
          "status": "Created",
          "code": 201,
          "responseTime": 5329,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7310d7-737f-4cbb-aadf-141546aafdd0",
        "cursor": {
          "ref": "e6483057-7973-48b4-a3c0-642b102eb1e6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "381f80d9-fb68-4785-ad98-616bf90237b1"
        },
        "item": {
          "id": "ff7310d7-737f-4cbb-aadf-141546aafdd0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "83c5ade5-c744-4e91-91ae-6daebf8b26cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7310d7-737f-4cbb-aadf-141546aafdd0",
        "cursor": {
          "ref": "e6483057-7973-48b4-a3c0-642b102eb1e6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "381f80d9-fb68-4785-ad98-616bf90237b1"
        },
        "item": {
          "id": "ff7310d7-737f-4cbb-aadf-141546aafdd0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "83c5ade5-c744-4e91-91ae-6daebf8b26cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18725429-1b8c-41db-b08c-5f265761bafa",
        "cursor": {
          "ref": "4e005c7d-015d-4dce-a92b-24bc6e6d9720",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "131b9dfa-a5c9-4491-9d74-e4ab9dacd5b7"
        },
        "item": {
          "id": "18725429-1b8c-41db-b08c-5f265761bafa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9d203f11-77a1-4fdb-b146-7d7289151f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b64b2a-ed59-4820-981f-3ee5900c0e6d",
        "cursor": {
          "ref": "253849cb-58c3-44ee-80e8-daf41316c535",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1742cf2c-b4dc-4194-af16-2ef5dbda405e"
        },
        "item": {
          "id": "69b64b2a-ed59-4820-981f-3ee5900c0e6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "92c21194-2f54-41a9-a4ba-172afec913d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7ee2a0-7229-4483-b1ee-3fa01bcafcf4",
        "cursor": {
          "ref": "2207db4d-4968-4326-8a01-668e4c5bfb6e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "368443d2-a2a8-45fe-8890-5624750a220f"
        },
        "item": {
          "id": "7b7ee2a0-7229-4483-b1ee-3fa01bcafcf4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ea4aa587-9372-484c-8794-f82ef0c9c37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde0bca9-e9b2-4d1e-a79d-7403f39cbf40",
        "cursor": {
          "ref": "5ed3d50e-1cfc-40b3-983a-3299076c55a0",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "912dd4ae-6755-4fe6-866f-bccd58945496"
        },
        "item": {
          "id": "bde0bca9-e9b2-4d1e-a79d-7403f39cbf40",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "560c9dcb-4f40-4011-ae5b-f16c2432a7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66cd299-27f2-4e7d-986f-d1e775145df6",
        "cursor": {
          "ref": "aa1ef0c5-d6bc-44f8-a9ea-d750d42e1004",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87869679-bcf0-444a-bf6a-c9ff05749d8d"
        },
        "item": {
          "id": "c66cd299-27f2-4e7d-986f-d1e775145df6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dfbb5f1b-595b-4f12-9517-b628b9d881d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f9cd79-b13a-4ac6-a64f-b62742d33b2f",
        "cursor": {
          "ref": "f3df6efe-87d9-4078-a149-81335c462a51",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "606c84a3-623e-4981-aea4-482c7af47100"
        },
        "item": {
          "id": "25f9cd79-b13a-4ac6-a64f-b62742d33b2f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43371e8a-2f34-4883-bc72-589b46d95cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49feee65-5c7c-4f8c-9975-d3b395825c35",
        "cursor": {
          "ref": "d9287911-8ff1-47e7-a24c-d8547f35722f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c74faea8-c2b1-4e2b-970c-266a8fbd4c43"
        },
        "item": {
          "id": "49feee65-5c7c-4f8c-9975-d3b395825c35",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eb82350b-b8d1-41d0-8f75-e2ff9ffe6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211dfe6a-efe9-46cf-9c69-056d0a1e133e",
        "cursor": {
          "ref": "0ffa538c-dd0d-40e8-ab0e-548c5cf91b50",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "71191ddd-05c9-4d5d-9c6b-e0f62b611748"
        },
        "item": {
          "id": "211dfe6a-efe9-46cf-9c69-056d0a1e133e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "814e0c2d-44c8-484d-9cdc-a22190189935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7155fd5-ac29-46c5-b866-0c38c56d19b9",
        "cursor": {
          "ref": "3c6e7056-4813-45ef-85e7-4ecb19a05ac3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "41ead418-7943-4904-a6a1-b20b458d6499"
        },
        "item": {
          "id": "a7155fd5-ac29-46c5-b866-0c38c56d19b9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9199eae-29b7-4eb5-8bed-47d11b308cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb86a2fa-dbd2-4f73-807d-388235cb1bca",
        "cursor": {
          "ref": "22431756-1bd1-42a7-bdcb-0c74bde4d55a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "977c4b83-e4d1-4362-933e-206ca71e0730"
        },
        "item": {
          "id": "cb86a2fa-dbd2-4f73-807d-388235cb1bca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4ef98b40-b0f9-4510-9bbc-09495de9cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a469e17b-61ce-4e37-8b3f-d443f2cafc0a",
        "cursor": {
          "ref": "0c3da7bb-8717-483b-8ad3-066bcc437f57",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2c4b90dc-9bc6-48c4-b444-c32faf3b16aa"
        },
        "item": {
          "id": "a469e17b-61ce-4e37-8b3f-d443f2cafc0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c97689b5-8fe0-4ed3-99e8-678bbebb7c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960ba2aa-fb1d-420d-a8b4-1b441aaa1873",
        "cursor": {
          "ref": "10ff711f-5f47-44c4-8619-8ad169a19bdb",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e637f36-b001-4e52-8f3d-ebda5ea81d2b"
        },
        "item": {
          "id": "960ba2aa-fb1d-420d-a8b4-1b441aaa1873",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11e3ba1f-ce7d-43a3-a0e9-8c0d0b66a4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e3f6f-9ab2-4ba3-9dfd-274036d1ce5f",
        "cursor": {
          "ref": "59e3404a-ce4a-444b-aa39-88fb582d6b93",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50fb5b24-4cb7-42f3-8ebe-a7e0177dec50"
        },
        "item": {
          "id": "aa9e3f6f-9ab2-4ba3-9dfd-274036d1ce5f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d657aac-42e9-4365-9f6d-81c0b15b0af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62e6b28-1867-4f80-b6d2-97dee2917ce7",
        "cursor": {
          "ref": "f3b17d0b-2096-4574-ad18-e3267f86192c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c3b9b56d-2b92-45f5-a3e2-a9a200441014"
        },
        "item": {
          "id": "a62e6b28-1867-4f80-b6d2-97dee2917ce7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "687d76a8-4148-4a7c-a172-43b3b2613070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b11e21-c354-4fb4-9989-7ea0749719a1",
        "cursor": {
          "ref": "d823a8e8-81a8-4f5e-8c76-f46b6602e97f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "20f0d9d9-5d71-41d8-9cca-ebe3b83091ca"
        },
        "item": {
          "id": "12b11e21-c354-4fb4-9989-7ea0749719a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b1e32736-5a5a-425f-b8bf-c43c0a942e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c332b85-15a7-4514-9f97-639e6af9928d",
        "cursor": {
          "ref": "331da596-57d0-4abb-a1b0-33854786dce7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5fd61dc-b6b6-4d67-9953-f923358ae9f0"
        },
        "item": {
          "id": "9c332b85-15a7-4514-9f97-639e6af9928d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83a1a376-cd23-47c3-9f82-b949509ef96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d1c52e-6caa-4a2c-b762-cb883966e09e",
        "cursor": {
          "ref": "fb826c87-5fdb-444e-8ee1-e58629d2e55a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f8d393db-fc75-4f1a-b51d-1d0775d258fe"
        },
        "item": {
          "id": "a7d1c52e-6caa-4a2c-b762-cb883966e09e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "45375f15-c7f2-4946-8f36-1f857c2fb293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4900dfe6-5440-4f41-80d8-7c54a5655cf2",
        "cursor": {
          "ref": "13b82325-ccd4-4f0d-8b22-f5784921782e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c0a9e034-5269-4f26-8650-a9dce9b333f9"
        },
        "item": {
          "id": "4900dfe6-5440-4f41-80d8-7c54a5655cf2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca3eb302-4521-4745-8de5-41c163f04210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa8978f-33a8-4714-8a4c-61506b5c595c",
        "cursor": {
          "ref": "384d9c40-3953-4ce9-893e-fe894bc80325",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "95978c8d-91fa-4212-9e0e-157d1fd75cee"
        },
        "item": {
          "id": "daa8978f-33a8-4714-8a4c-61506b5c595c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bfd3816a-6168-4d10-887d-67184888b7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025e438a-e161-4d56-93eb-31dcf0808ad0",
        "cursor": {
          "ref": "2dad0982-3843-4616-99a6-0779e39949e9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "469aff56-6f88-44d0-b699-8d4fda1a1d40"
        },
        "item": {
          "id": "025e438a-e161-4d56-93eb-31dcf0808ad0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f8a57841-cccb-4ab8-9dd9-a40b070ea210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa32ce4-f0cd-4485-96f2-ba3d62fce506",
        "cursor": {
          "ref": "ea9fccdf-e4c4-46b8-9199-de68514afc67",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4a3b7ebd-7600-4b4c-8847-fa62acda2b76"
        },
        "item": {
          "id": "5aa32ce4-f0cd-4485-96f2-ba3d62fce506",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f4a8ebef-6674-4fbf-bb2e-656a2aaacbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457b7d12-9139-4828-adae-4f7d9856449c",
        "cursor": {
          "ref": "ba1a30bb-171e-4d6e-bafe-91d835eb1593",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5e6d31b9-d5c1-4be6-8122-2ef83579e082"
        },
        "item": {
          "id": "457b7d12-9139-4828-adae-4f7d9856449c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88499852-5803-4bd9-bbfb-55f6d87340f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457383cc-8eeb-4b94-8e68-623c42a6b2db",
        "cursor": {
          "ref": "57efe8a9-31b0-453e-88c7-bea4720937df",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "108dfbd6-797b-4387-8ff4-40fff4d89939"
        },
        "item": {
          "id": "457383cc-8eeb-4b94-8e68-623c42a6b2db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1cb5b587-e0c8-46e8-b75d-94ccbc856d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f672ea6-ab28-4a99-b921-612b1750c187",
        "cursor": {
          "ref": "98ff9463-cad1-4dac-b68e-120855304667",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "059a1f59-a954-4bf2-a05f-f0c78ae289f7"
        },
        "item": {
          "id": "6f672ea6-ab28-4a99-b921-612b1750c187",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cfdd71eb-24ba-4b14-a048-f6acd0c6c9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7b1085-8af3-4ca0-9731-68c3aadac792",
        "cursor": {
          "ref": "7b1d57e7-b210-4b47-a670-b020f23bab0d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c87bf4fe-dd5f-4b91-9004-49e753fd65fa"
        },
        "item": {
          "id": "9d7b1085-8af3-4ca0-9731-68c3aadac792",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "400a15a1-72d8-4990-881a-d62d48debd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b752357e-f71d-4274-9f21-2091a1054568",
        "cursor": {
          "ref": "c3c51c36-d658-4fab-9fac-f4eed020cfca",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "74bb9493-b219-4f92-b9c7-fd91110bb537"
        },
        "item": {
          "id": "b752357e-f71d-4274-9f21-2091a1054568",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "937be885-7bfd-4f1f-b1b7-f3b397417f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019f8a32-f7e6-4321-808b-731413e62d52",
        "cursor": {
          "ref": "fe2d596f-7235-4d34-b3e3-6310a8181609",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3d3a5c82-6986-4223-9457-f843562557e1"
        },
        "item": {
          "id": "019f8a32-f7e6-4321-808b-731413e62d52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "252ad8ff-4063-4fe3-adad-6d5436db8951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f93044b-72bd-4bb2-89c3-130eada35c4c",
        "cursor": {
          "ref": "c1d88c3f-7bd9-43d4-b579-734065cbfc32",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a8f9c37-76a4-4d45-a1ad-1bfb0ac462d2"
        },
        "item": {
          "id": "4f93044b-72bd-4bb2-89c3-130eada35c4c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e7b5664-88d5-4c00-af30-5c748ca59500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af1ed7-a061-4370-8ee6-5a8c8343dbec",
        "cursor": {
          "ref": "0e0b36c4-a068-4da2-b8c3-c5e200800111",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "456f263e-63c0-4194-a577-8e2eb161c942"
        },
        "item": {
          "id": "35af1ed7-a061-4370-8ee6-5a8c8343dbec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "110efaa0-9ff6-4803-b633-00bed36dd955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956afecf-1d72-4f62-bd51-b9d8d6dbc683",
        "cursor": {
          "ref": "16892e2e-8d77-4635-9ce8-62fb88dc575d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "72c7e1a5-ecf0-4a4a-ad95-d29c2f9365da"
        },
        "item": {
          "id": "956afecf-1d72-4f62-bd51-b9d8d6dbc683",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d580e40-6de3-4994-9969-840d9f421699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3ddcc-94db-42f1-b459-1f729fcbcd4c",
        "cursor": {
          "ref": "01abea79-d6af-4bc3-97bf-c18d6a17c939",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5a0a0a4b-360a-4853-8c30-ef87756439a0"
        },
        "item": {
          "id": "0bb3ddcc-94db-42f1-b459-1f729fcbcd4c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ac256890-a19f-4d07-88be-d123582baaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192f3661-76d7-48f8-bd12-709864730039",
        "cursor": {
          "ref": "e2a7e5da-ad5a-4b44-a59c-d96aef6d0065",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4191204a-2d64-43cd-84d7-5744927eb647"
        },
        "item": {
          "id": "192f3661-76d7-48f8-bd12-709864730039",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9cd72905-046a-4d92-8369-aa3b87096a76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b13d08-2bad-4220-ab3e-77b54768c432",
        "cursor": {
          "ref": "a7d24133-75df-41f2-ac94-241354845e8a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "45f6f6fc-32fe-4b7f-bb4c-c7260690aca2"
        },
        "item": {
          "id": "73b13d08-2bad-4220-ab3e-77b54768c432",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "be9b3708-18a8-4472-b7cb-dc42684e28cf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 489,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1491b529-721d-4355-8c1c-3d3a2645f7eb",
        "cursor": {
          "ref": "159ceff5-2715-44ac-b728-4fa4bf0c1e8b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b83efd79-7cc5-4e70-ad56-5e49e2acfd89"
        },
        "item": {
          "id": "1491b529-721d-4355-8c1c-3d3a2645f7eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9277dc5a-deef-43d6-a3dd-68b31396809a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1491b529-721d-4355-8c1c-3d3a2645f7eb",
        "cursor": {
          "ref": "159ceff5-2715-44ac-b728-4fa4bf0c1e8b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b83efd79-7cc5-4e70-ad56-5e49e2acfd89"
        },
        "item": {
          "id": "1491b529-721d-4355-8c1c-3d3a2645f7eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9277dc5a-deef-43d6-a3dd-68b31396809a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2df0267-9d26-464f-a779-9c9a50ce7123",
        "cursor": {
          "ref": "bfcdf086-d970-440c-9d1e-7bc14b331c3a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "137e5eb5-5b49-4afe-b628-b6a2532b93b2"
        },
        "item": {
          "id": "a2df0267-9d26-464f-a779-9c9a50ce7123",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3043e672-7e2b-4515-b321-f70f85f8e123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f39f5dc-611e-4fe5-99df-4fd1930c4ae8",
        "cursor": {
          "ref": "873ef21c-20a2-49ac-a765-2a6c235dcaa4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "57e7fc86-23d6-4272-953c-2553275ab44b"
        },
        "item": {
          "id": "9f39f5dc-611e-4fe5-99df-4fd1930c4ae8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bb72b417-d246-411c-8dbd-83f6b1761a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac080df9-499f-4a30-a25d-2e46502f601a",
        "cursor": {
          "ref": "fdcee3ef-96d2-45b8-838c-bfa02ff1b3b1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b22ae70-eb1d-4b7c-ae4c-f9a6d739412b"
        },
        "item": {
          "id": "ac080df9-499f-4a30-a25d-2e46502f601a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7d04f51-229a-4583-a8a4-2ad178f603b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e764ffa-f596-4046-a80d-ee42a2927c87",
        "cursor": {
          "ref": "8fea1258-37d6-4942-9c68-745bfa55a7d2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fff1fe11-d2ec-4651-9550-5022cced7af2"
        },
        "item": {
          "id": "5e764ffa-f596-4046-a80d-ee42a2927c87",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "69d602af-82e1-41f8-9649-c3962257c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8ed737-2ae6-485c-8a63-e1be35c3f003",
        "cursor": {
          "ref": "39ea9964-b5e9-4635-8468-91b7d8edd827",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7809da53-df3f-4516-96cf-8147ac823816"
        },
        "item": {
          "id": "9a8ed737-2ae6-485c-8a63-e1be35c3f003",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d8d77ccf-5f65-40eb-a93c-f2d60897795a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f32070a-dc3f-4718-9f4b-8659d149e452",
        "cursor": {
          "ref": "e4c18ece-2464-40b2-9e74-6aea1e4eebbc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "28ca5658-7436-40a0-a746-c5688d252ea2"
        },
        "item": {
          "id": "7f32070a-dc3f-4718-9f4b-8659d149e452",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b46d585b-ccbf-429b-b936-dd4064812d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc1b888-cb68-4b87-b633-81301b0f89aa",
        "cursor": {
          "ref": "191cba9d-335c-4d2b-a2bb-75d78339e131",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a8fc8871-e5f8-417e-8e19-c65988ead7b3"
        },
        "item": {
          "id": "dfc1b888-cb68-4b87-b633-81301b0f89aa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ec12f1c2-4905-4b82-ad0e-872628fa17fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19464442-045b-4821-b450-63a36860836f",
        "cursor": {
          "ref": "b7744822-212e-4a6c-a14e-716a70066698",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1034c9ac-18f7-4377-8f43-17de251fb9dd"
        },
        "item": {
          "id": "19464442-045b-4821-b450-63a36860836f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a65721f0-914e-4843-92dc-acc19ec133b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d1c7d5-4073-4de8-aab5-85bd039cc4b9",
        "cursor": {
          "ref": "39b42a55-2531-4e1d-83ec-7bdcc9366b7e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5f1395be-7393-4b36-81b7-948342330c4a"
        },
        "item": {
          "id": "80d1c7d5-4073-4de8-aab5-85bd039cc4b9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1953472-2e87-42a6-a536-c18682ca8bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4414940-2337-4467-b0ff-be23898fcff3",
        "cursor": {
          "ref": "34f3d5a8-1434-4f61-8d20-a8bc6db3966e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "065bf034-8d80-4a07-9a6d-a8253c14a4df"
        },
        "item": {
          "id": "e4414940-2337-4467-b0ff-be23898fcff3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ffdd2452-9be6-4a76-a875-432debee86ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936b83ab-2836-440d-921d-edf23368f777",
        "cursor": {
          "ref": "0e35008b-4e26-422a-b690-6d40760c6064",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b0bbff45-1e3c-4876-b993-79b8dd31204f"
        },
        "item": {
          "id": "936b83ab-2836-440d-921d-edf23368f777",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3186a51-6380-40d3-8ed3-b0ab0e286520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2438be83-9591-4ef3-a2d5-751da3afc7cc",
        "cursor": {
          "ref": "aa6fb258-ed35-40ce-9036-f40ca2a70168",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb1086ca-7f03-48e7-8e15-a3f29d8310ef"
        },
        "item": {
          "id": "2438be83-9591-4ef3-a2d5-751da3afc7cc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3db4fbc-6132-4a4c-afe4-a39c0a1c30ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0ad733-d65e-437b-8ec0-5ab8f81a1388",
        "cursor": {
          "ref": "a183c11d-1991-4336-b095-94cc9a03431a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a98dd4bb-0209-47fe-a52a-3556e232d095"
        },
        "item": {
          "id": "9b0ad733-d65e-437b-8ec0-5ab8f81a1388",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "da81a88f-be02-4feb-9b2b-fe6958fcff2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b141bfe-0aa6-4005-9ca5-446538701ae3",
        "cursor": {
          "ref": "f23f3d5b-3676-4860-b7f5-2efda1a6c717",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b4bc1190-87bd-44a9-96e2-bc4f72f7498b"
        },
        "item": {
          "id": "6b141bfe-0aa6-4005-9ca5-446538701ae3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30766f29-88b1-42a0-a629-b646aeed39de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea41d7e-57ce-4e67-a2e6-0b85483cb526",
        "cursor": {
          "ref": "ccccd42f-e1e2-470b-87ad-839751e046d5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1f116286-370c-45f7-af1d-dfd39f338014"
        },
        "item": {
          "id": "8ea41d7e-57ce-4e67-a2e6-0b85483cb526",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1edc21e2-7e47-495f-96f5-9dd8b5f93344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617af475-0b09-46e4-a430-66766b2db6db",
        "cursor": {
          "ref": "20f1b8f0-d305-48ac-ba9c-94f98de8010c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fa63a515-bc9c-4ca3-b7ed-dbf335941d97"
        },
        "item": {
          "id": "617af475-0b09-46e4-a430-66766b2db6db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4957a3ce-99f4-4dcb-8c1d-307c3a659f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbedba0e-fa2c-45c0-8b51-6c2eb2b11527",
        "cursor": {
          "ref": "306c86c4-4da4-4d24-9b35-3170231e699b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b3760f36-54d3-4184-a831-15c615968e66"
        },
        "item": {
          "id": "bbedba0e-fa2c-45c0-8b51-6c2eb2b11527",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f1c4a864-3c16-4449-bf7b-4babe9efa6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcf271e-9aef-4fd2-9ef8-d4ceae76d26b",
        "cursor": {
          "ref": "a97a26ab-7b84-4e89-a408-e136c1008d0d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0e516499-9a30-4abb-8001-3db3bfb67554"
        },
        "item": {
          "id": "cbcf271e-9aef-4fd2-9ef8-d4ceae76d26b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8bbe0f8d-5160-42ba-acf5-77196abeb9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24df72bf-5d3e-499c-a98e-e3c6b7a0b7f4",
        "cursor": {
          "ref": "28d30cc8-cac3-4068-9438-c2d309147cb6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1001bd19-7dca-4995-92ee-9e6e094751ef"
        },
        "item": {
          "id": "24df72bf-5d3e-499c-a98e-e3c6b7a0b7f4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0fe1ce73-a1a3-41d9-a85a-118812a2d7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60de318-fc71-4f41-8380-21aa0ce7a011",
        "cursor": {
          "ref": "ae7b272f-cbc7-44bf-93a3-2124966b7c69",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dad9ee45-7131-4b1e-9ad1-5033520fad57"
        },
        "item": {
          "id": "e60de318-fc71-4f41-8380-21aa0ce7a011",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f61a909e-04a2-474f-89d0-e336b396bffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9c1f00-2aa1-414a-bb5b-2dfb04baa9d6",
        "cursor": {
          "ref": "c78b0faf-5f06-442f-b2b5-a41ce3f85e98",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "45babe66-aaca-4d6a-ad12-f83033f3acd3"
        },
        "item": {
          "id": "7f9c1f00-2aa1-414a-bb5b-2dfb04baa9d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d96d7677-716e-4afb-84a4-c0fadb6badd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4307a1f5-b985-455b-8ff6-165a44d94c0a",
        "cursor": {
          "ref": "dfb9851a-ee2e-4509-b34b-dbc56e0758f7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f814a973-61a8-49c9-b06b-198130f18268"
        },
        "item": {
          "id": "4307a1f5-b985-455b-8ff6-165a44d94c0a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b95365d3-6c6f-4ea0-bb19-7aba9919d3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c0cbb4-fd78-4724-aaa4-b6e534090a85",
        "cursor": {
          "ref": "faf3b3b0-4efd-4d55-bdd6-f046e98be93a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3a1eeab-9ce1-49a2-b381-696e43cbabeb"
        },
        "item": {
          "id": "53c0cbb4-fd78-4724-aaa4-b6e534090a85",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1bcf952e-3971-482d-b5f6-2c879e5ce55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c4e60-9924-4fb0-8736-7ddac612c847",
        "cursor": {
          "ref": "811a73e1-6bf7-4306-b736-d4bc667bfae2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23dba0d5-3a8d-4cbc-947b-f463b028dfdd"
        },
        "item": {
          "id": "e28c4e60-9924-4fb0-8736-7ddac612c847",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d792d209-4f08-423d-9622-022cc4a6aaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444acdb-d4bc-4dfe-9e5d-c80febe5e30a",
        "cursor": {
          "ref": "9ea1a949-76af-4ea7-960e-117809055e5e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4b6260a6-71b1-4c4b-90ac-223fc750a2ed"
        },
        "item": {
          "id": "b444acdb-d4bc-4dfe-9e5d-c80febe5e30a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8bb9d436-4586-4ed3-a5af-063ec3ba9eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2371de36-f398-48e7-96c5-bd778490fb38",
        "cursor": {
          "ref": "261cae61-904c-45a4-9d69-51fe4909d9f2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "370efdfc-4d6b-4e57-a58c-de8188af922f"
        },
        "item": {
          "id": "2371de36-f398-48e7-96c5-bd778490fb38",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7e4c043f-0132-48aa-8c9c-98893d56876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1106,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc202047-69af-45c2-95f6-f1526a2dcd2d",
        "cursor": {
          "ref": "2642daed-c6a8-47c6-a3af-524af07397f9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "09af3df4-5929-419a-b5e6-325b77b1a6ea"
        },
        "item": {
          "id": "bc202047-69af-45c2-95f6-f1526a2dcd2d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b7f68ff5-6474-435d-9ec1-78f5c4dc7a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613766d1-5eb1-4d71-9eea-408661098167",
        "cursor": {
          "ref": "9ad93c92-ec56-49ac-8d35-ac5f212321e1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8e63f22a-9970-43e3-880c-07cdefa2af53"
        },
        "item": {
          "id": "613766d1-5eb1-4d71-9eea-408661098167",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "46738dee-9e56-49d5-9561-484d6ee18c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955d22a8-6cd7-490c-9c30-174075ed465c",
        "cursor": {
          "ref": "8c0a605b-52be-4878-9dbc-5f489010715e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bc76ace9-f55e-414c-a97d-374b601ee2c0"
        },
        "item": {
          "id": "955d22a8-6cd7-490c-9c30-174075ed465c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2f5cb1b6-3da1-41a5-8934-b8127542d398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f7848-a8d6-4e9a-b68e-67f07571661b",
        "cursor": {
          "ref": "66f9b98a-98fe-4e99-9d74-fc4885de5b99",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "04278f65-a7d3-4f80-8f97-7d3210078d4c"
        },
        "item": {
          "id": "809f7848-a8d6-4e9a-b68e-67f07571661b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f57f4b0c-881b-4e72-b0ad-195b415004ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9f114-0fa0-4ad1-9dd1-6132c5f8309d",
        "cursor": {
          "ref": "3ff40128-f24d-4f8d-b2dc-fa165e0cf80e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "db6ed744-4014-47b6-a92e-d20214992aca"
        },
        "item": {
          "id": "34b9f114-0fa0-4ad1-9dd1-6132c5f8309d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f9fff5db-5018-4910-8c8b-171585b2230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6118d470-d001-41db-9742-3d0da264c202",
        "cursor": {
          "ref": "743d6da6-0538-47cb-b7af-b4a19cc61459",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3ede559b-f289-4672-9f0e-337a4e98bace"
        },
        "item": {
          "id": "6118d470-d001-41db-9742-3d0da264c202",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6bbd7a46-0bf8-4585-9701-5d859a91885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887142d2-8ac8-4c9f-a5a0-6349ae255276",
        "cursor": {
          "ref": "ae145dde-ae93-42b1-8e54-bcd71a5e4b4a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f47c07a3-5842-4707-a1cc-49a43698f3db"
        },
        "item": {
          "id": "887142d2-8ac8-4c9f-a5a0-6349ae255276",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dff7231c-a570-4e98-9693-7bbf7d150aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8edda1-4870-4e79-8a98-c7b9b65886b6",
        "cursor": {
          "ref": "a85427fc-ef3b-4c74-8c42-20a363ee6f04",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "61aa2e27-6a8b-4779-9f41-de584efdbca5"
        },
        "item": {
          "id": "8f8edda1-4870-4e79-8a98-c7b9b65886b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f42a5f31-2d07-4588-a124-ee7175a46c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e261d93a-204a-486c-bcc3-30ca4cadf6b7",
        "cursor": {
          "ref": "3b7cdb13-e37c-40ca-9908-06d9f5d8f5a8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0e726ed9-336b-4529-84fa-24a14b2245aa"
        },
        "item": {
          "id": "e261d93a-204a-486c-bcc3-30ca4cadf6b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e60d895e-43ca-48c5-81d9-5f3ba6668926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e99663-4b61-4099-916a-0b450cb2ebe7",
        "cursor": {
          "ref": "eb0c17eb-ade0-4b4e-bf3a-d289168216dc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "75eb882f-7e9f-4ee7-a58f-b8cb4038a02f"
        },
        "item": {
          "id": "74e99663-4b61-4099-916a-0b450cb2ebe7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "135edbdc-fa75-46ba-a78b-14d446c78554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df846942-1e04-47ba-9c1a-26894b194ba9",
        "cursor": {
          "ref": "fb518ed6-3f34-4a41-ad3b-40e3594bbb97",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1b87974-a0e3-435f-a6b9-382bc1dff86d"
        },
        "item": {
          "id": "df846942-1e04-47ba-9c1a-26894b194ba9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51d965d3-875b-41c3-a58e-831768d175f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e882a9-978b-41e8-929a-449fd90c7e34",
        "cursor": {
          "ref": "5cb7a58d-510f-4dbf-8727-9a533735c697",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2883b9b2-822a-4a6b-a347-8e5e95f2a17e"
        },
        "item": {
          "id": "e2e882a9-978b-41e8-929a-449fd90c7e34",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "751b6997-95b3-4132-884b-eb6d16609be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9adeb3d-91c9-464d-8579-7c5aea610e0c",
        "cursor": {
          "ref": "03b6c1d7-e116-49c4-b65a-6a45eafa48c8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "29a1c9af-3554-4f75-89ad-a946323ef536"
        },
        "item": {
          "id": "d9adeb3d-91c9-464d-8579-7c5aea610e0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "62506fa8-798a-4baa-9299-0b0fcdb0faf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38b9d46-d3f3-4f79-ba8e-a035f2fb94c8",
        "cursor": {
          "ref": "3ee95413-2438-43c4-b1d5-7095afb7cf4d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0f55cc60-31cb-4593-b860-e7d738ec1be7"
        },
        "item": {
          "id": "e38b9d46-d3f3-4f79-ba8e-a035f2fb94c8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e436ea6f-b073-468c-a095-1089fff39db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e36a0-f4e9-43e5-ad9d-7546d1c53135",
        "cursor": {
          "ref": "b88b92b9-21dd-40aa-b196-b7c11822a892",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e03fea32-59d8-4541-8639-eb8635592aa5"
        },
        "item": {
          "id": "219e36a0-f4e9-43e5-ad9d-7546d1c53135",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ae9dfe87-1533-48eb-abe8-0f6686128bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fe832e-ed0b-49cd-83d9-4b6baf17d8e8",
        "cursor": {
          "ref": "049d8508-3539-4490-a3c2-2f5592f39ea8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "16b2d98d-b583-409d-aae1-1896d5dfd828"
        },
        "item": {
          "id": "79fe832e-ed0b-49cd-83d9-4b6baf17d8e8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "244ff7c9-b86f-492d-a820-b133d2638efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea3f16f-0a6e-4bc1-a538-e4adcb72cfb9",
        "cursor": {
          "ref": "1c63eba4-36df-48a4-99b6-ca6808d2bf42",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26345916-ae70-4325-8aa6-7844d82b9d26"
        },
        "item": {
          "id": "fea3f16f-0a6e-4bc1-a538-e4adcb72cfb9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "54a6a267-954a-4c36-a64f-ce18707b765d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e62020c-72c8-4ab9-955d-809829ba6bde",
        "cursor": {
          "ref": "1ef16f6c-822a-4440-b084-cefcc053280e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b9992a6d-0a09-4aa9-8cb7-13d109c4c64a"
        },
        "item": {
          "id": "9e62020c-72c8-4ab9-955d-809829ba6bde",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4529fffd-b512-42b4-ba8c-ea6c50a1cb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b552ec-52c1-4e68-b60f-17c5d2d8c791",
        "cursor": {
          "ref": "0bcde0a5-898f-4411-9dfe-091208d72319",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c222e806-490e-4f81-8399-6a8b8ff8ed29"
        },
        "item": {
          "id": "e8b552ec-52c1-4e68-b60f-17c5d2d8c791",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "45c4b3a0-77b3-487e-a903-d8f9447aa177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f8ad4-330e-46b1-917a-ffcb26e68368",
        "cursor": {
          "ref": "0cd473a5-aadf-4cf0-bc2e-5349a9acd66a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2dbaac97-1893-47c0-98ff-c4a8d343d481"
        },
        "item": {
          "id": "e03f8ad4-330e-46b1-917a-ffcb26e68368",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a8e445ea-18fa-4d1b-a4b1-0c889b361add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd16c5a8-947a-4e32-ae2f-4cecad2de30e",
        "cursor": {
          "ref": "3b29c947-ceb7-450d-adb5-8045f09a4927",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "29548d2a-4e77-4c2e-848c-0cb1899c35f3"
        },
        "item": {
          "id": "cd16c5a8-947a-4e32-ae2f-4cecad2de30e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1827ed3f-96f3-40d1-95ed-e2de0b58dc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cff9468-2b9f-4567-913f-79c30b7748fd",
        "cursor": {
          "ref": "00e3967b-1f04-4e4a-9368-0dd88b2e1077",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "642fd540-4451-4632-91c7-c1e7915690e8"
        },
        "item": {
          "id": "4cff9468-2b9f-4567-913f-79c30b7748fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "de059b27-ba87-4968-a365-769f0cbda64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905c85b-29d2-4600-8f6f-10fb5015302d",
        "cursor": {
          "ref": "d7d2271d-34b6-45db-a75c-e599b1187892",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fc54afd-9caa-4046-9d67-71fa80d584c7"
        },
        "item": {
          "id": "a905c85b-29d2-4600-8f6f-10fb5015302d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "97bf2772-748a-4f91-9f82-7ce54a423487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cfce88-6b28-409a-9a27-f46405f1de27",
        "cursor": {
          "ref": "9ca23b91-161e-414d-94df-fe72dcb80a17",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9e681ac9-2fe0-42fc-b09a-ffa29229dd3a"
        },
        "item": {
          "id": "00cfce88-6b28-409a-9a27-f46405f1de27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3661074-e04f-45b2-94f1-df6a0f817c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04920abc-0f8f-4cf4-b9c4-b1ff1f4e67d3",
        "cursor": {
          "ref": "a3d3e23b-34c7-49f7-b739-bd5e9f5059dc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a456316b-fa95-4e36-b5b8-6d5ba502fe6d"
        },
        "item": {
          "id": "04920abc-0f8f-4cf4-b9c4-b1ff1f4e67d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "957e485c-d7bb-44ba-9a8d-4bdf33bf601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ea3ba5-1ea5-48ad-98ec-741a3167f2e6",
        "cursor": {
          "ref": "b9772f32-ffc3-422b-bcea-1223ad97b1a5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3cdb3440-d4cd-4e55-83ca-f7430a377c67"
        },
        "item": {
          "id": "77ea3ba5-1ea5-48ad-98ec-741a3167f2e6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d3366442-cc3c-45b5-a97f-2ab339120d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fe1b1b-c397-4bfe-ac57-85cdbc5d3d39",
        "cursor": {
          "ref": "8d89f88a-92b0-4535-b43b-f1f9bcf8503c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c75d9d2b-1515-4d71-b0fe-37addf5b3f72"
        },
        "item": {
          "id": "f5fe1b1b-c397-4bfe-ac57-85cdbc5d3d39",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "88908f36-525e-488b-bde1-3d9638a3923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb003b-4312-44ee-9f56-c4ce9067dfb9",
        "cursor": {
          "ref": "5b38e0ce-d32c-40de-b43f-ff4f17342823",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "811ed40f-b8a3-45b4-a3f9-5d999bff3eb2"
        },
        "item": {
          "id": "5ceb003b-4312-44ee-9f56-c4ce9067dfb9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "229f7910-81cc-4227-bea4-1174c8638028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94e221d-5a9a-4797-904c-3c22f8b3fd27",
        "cursor": {
          "ref": "20455b0d-ec9b-4985-8947-dd8bd620f02d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6d26bd72-5abb-411d-9607-2e60e0f74811"
        },
        "item": {
          "id": "c94e221d-5a9a-4797-904c-3c22f8b3fd27",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3fa66ec4-be3b-4711-a3fc-f27b0fc1fe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e809ac88-4590-4e9e-aa5d-9a1c4eb1e8ea",
        "cursor": {
          "ref": "a18caeeb-b4f9-46e2-bac7-447099dd29f3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a80370cc-cc0f-418f-8c16-1aa112b80bad"
        },
        "item": {
          "id": "e809ac88-4590-4e9e-aa5d-9a1c4eb1e8ea",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "daece4c4-c83c-4ff8-8c69-3f0c45803855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9e0ad-0319-4c80-aa84-b81e9d7e505b",
        "cursor": {
          "ref": "be1c31ae-0b9c-4520-87a7-4772bdca312d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4ebf286e-4882-4e45-aed5-fbb0d0d61143"
        },
        "item": {
          "id": "6db9e0ad-0319-4c80-aa84-b81e9d7e505b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "62541669-da4d-469d-b0fb-2194e67a22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be7e0a-4897-43e7-9994-768feed74af2",
        "cursor": {
          "ref": "13e00fde-0ee1-439c-89ed-c9fe098cc8d7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51f9503e-87a2-4d07-b332-a4aafda9ee54"
        },
        "item": {
          "id": "81be7e0a-4897-43e7-9994-768feed74af2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "09759ad9-059d-4cc3-bbbc-e8d37e5b881b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d08364-d127-4131-96fb-bbb364849ca5",
        "cursor": {
          "ref": "33a1a927-d426-4037-a794-21b3334d3112",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7fd45385-870d-4061-b2f6-8a7d9b4859f5"
        },
        "item": {
          "id": "d2d08364-d127-4131-96fb-bbb364849ca5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c517a4c-e8ca-47ec-997b-d5ccb89a0cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abad3c8f-a686-4e2d-9ef5-deeda8a2ab16",
        "cursor": {
          "ref": "84590ba0-8c35-4a14-a073-fcb341c7e404",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "57a92915-8c0a-4767-9cfd-85552637d2ee"
        },
        "item": {
          "id": "abad3c8f-a686-4e2d-9ef5-deeda8a2ab16",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0a77ff29-74ae-4d06-90db-18e2f2d8ac89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d87891-0515-44d5-b3b8-5ad24bff1333",
        "cursor": {
          "ref": "ef3c0c12-7af2-408c-b9f8-5cf09129a8f5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9d42ab7d-3063-4169-9f48-a9da9b6e5007"
        },
        "item": {
          "id": "c0d87891-0515-44d5-b3b8-5ad24bff1333",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b449db50-96ae-4f2c-9159-4da9592c2297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62835558-97cc-4a7c-8bef-7306d7704666",
        "cursor": {
          "ref": "b8574432-1f38-4dd1-b426-65c30ec3e4a7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e02d63f-0a5a-4913-b654-8608291c20e9"
        },
        "item": {
          "id": "62835558-97cc-4a7c-8bef-7306d7704666",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "02033f41-628f-48f6-bc3c-a21ca843cab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa38d2a-54e7-43eb-93ce-c7df7a5fab40",
        "cursor": {
          "ref": "12836b6c-40a5-4385-8666-99b78f39a409",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7842de3-cd91-43c8-98cf-a4fb421b56ab"
        },
        "item": {
          "id": "ffa38d2a-54e7-43eb-93ce-c7df7a5fab40",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bb191598-bb30-4f2c-bac4-8fc8c2eed178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7626f264-d066-4c82-a4b2-e1e7302eb379",
        "cursor": {
          "ref": "1e4a4a5c-3170-4d87-ab2b-f8ff32beabc1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2aeb3760-c8f6-4824-bb67-d6df675362ac"
        },
        "item": {
          "id": "7626f264-d066-4c82-a4b2-e1e7302eb379",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f48247bb-3834-4f1e-bb8e-cc290a7ea871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b01e393-e1c3-4b23-8aa9-299dc33f0cb1",
        "cursor": {
          "ref": "741aceda-901c-4bf8-b516-7c98077b05d3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8db36b20-2490-41b1-8f11-422a91dead93"
        },
        "item": {
          "id": "7b01e393-e1c3-4b23-8aa9-299dc33f0cb1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "880b02ca-2bea-4261-96fd-c9b6ba1d85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a244b4a9-e668-4a20-9dc3-ff0e555404ca",
        "cursor": {
          "ref": "0445bc95-c545-4f66-9110-7d1ec9282c8e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ce0da81-c7c0-4ed2-bfbb-bb7d3e758aa2"
        },
        "item": {
          "id": "a244b4a9-e668-4a20-9dc3-ff0e555404ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc6bfcba-707d-4a85-806b-ed4fdf7fe594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c827c-4538-4080-a0d3-a2a04a5adf8c",
        "cursor": {
          "ref": "c2fb74ef-3c00-4cea-967e-e5b53c65d169",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "76fd0943-051d-4ab6-b263-a8986d5b96d3"
        },
        "item": {
          "id": "559c827c-4538-4080-a0d3-a2a04a5adf8c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f200bb39-063b-4c98-9235-a7e327d9488e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74317bc-5cc1-4420-97c9-e61c0a033ebf",
        "cursor": {
          "ref": "5bfef5c2-f46d-4cca-8f0d-26065c102f04",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e58311aa-6c6e-45ac-afbc-0f95da395f9f"
        },
        "item": {
          "id": "f74317bc-5cc1-4420-97c9-e61c0a033ebf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9145e00e-2aa3-4c41-9547-0f571fec2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1957d-1108-4266-bec8-844ec66ef38d",
        "cursor": {
          "ref": "46049b67-bedc-4c1f-bbbf-af13019bf33b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca831c97-26d2-4453-bcd5-bbb937dbfa2c"
        },
        "item": {
          "id": "20a1957d-1108-4266-bec8-844ec66ef38d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "672d7d77-daba-43f9-ba6a-50f2fb6507d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ee362c-9b12-4703-9798-a57266c25a2f",
        "cursor": {
          "ref": "c9b3e1e7-a6a7-4139-8ba0-351d9b0b2964",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a5a90c40-c3fa-4d50-b302-ee57d8b2f8a1"
        },
        "item": {
          "id": "b5ee362c-9b12-4703-9798-a57266c25a2f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f2ad84bf-2a9b-414a-ab4c-fbedea1f0e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af750aa9-765f-4ce1-90ba-05a4efd81437",
        "cursor": {
          "ref": "76ed884e-a652-4da3-8764-bf3443c9c1af",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d30922db-a011-4d7b-ba11-128971fee39a"
        },
        "item": {
          "id": "af750aa9-765f-4ce1-90ba-05a4efd81437",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c9f98853-fb53-4cf6-9d24-78452763a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f608452-4049-463e-a2f2-d74a3d38b0b2",
        "cursor": {
          "ref": "6a44dcc9-1189-42a9-9905-8e708483d7d1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "83956ed0-e27d-4e38-9cc3-c784d9e70b60"
        },
        "item": {
          "id": "2f608452-4049-463e-a2f2-d74a3d38b0b2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "96b6b20c-f374-4501-9e42-c846676dc3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414061e-b33e-4cd2-94a8-dbf93d8c54ef",
        "cursor": {
          "ref": "06828468-f68b-4329-b11c-3831d563bba5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0a147f96-e80f-49c9-abd2-2602dbcfed73"
        },
        "item": {
          "id": "d414061e-b33e-4cd2-94a8-dbf93d8c54ef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "85406f26-aa23-4cec-a5c3-11cdbef1caae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdade879-5bd7-4f42-ba39-ad00b231edde",
        "cursor": {
          "ref": "3d8a5896-b3b0-4212-bfe2-a7b14afae00c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9cc41b8-210f-4365-8786-ffa2083d8640"
        },
        "item": {
          "id": "bdade879-5bd7-4f42-ba39-ad00b231edde",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1efe58a7-6bba-4404-98c3-54cac4d257a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b6f93c-a93a-46d8-b53b-37eb3f54d0e6",
        "cursor": {
          "ref": "9f2f57a3-f5f5-4e1e-aa93-5852ec582a6d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2e319842-2aad-463a-bfbb-2e693c2daf7a"
        },
        "item": {
          "id": "c3b6f93c-a93a-46d8-b53b-37eb3f54d0e6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dde331b2-a86d-4e94-a8f1-2b40824a81ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c032a2-75f4-433f-9c8c-9635863b8691",
        "cursor": {
          "ref": "14873ab8-83e8-426d-9c3f-c8aee3e972a7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "191711b5-3aa0-4f99-b04a-ce65b83c1502"
        },
        "item": {
          "id": "11c032a2-75f4-433f-9c8c-9635863b8691",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5e7bd2c6-987d-4036-86af-c8e45bd12072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627795d4-4f35-43be-b6a5-24ddddac896d",
        "cursor": {
          "ref": "ef8a4588-7064-4996-9f60-ea7d01f6a62f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b89fa948-20cf-437b-8c27-c00c2968c1d7"
        },
        "item": {
          "id": "627795d4-4f35-43be-b6a5-24ddddac896d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "331d8890-3966-4b0f-8bc4-342197b5904e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27121b20-37fd-4ac5-bdef-4765a64ef534",
        "cursor": {
          "ref": "ea20d5d1-1b36-40ae-b163-63d4dcfa12d4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "529647a5-b3a0-4ce5-b9ab-67c3bc4bbb27"
        },
        "item": {
          "id": "27121b20-37fd-4ac5-bdef-4765a64ef534",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16b50bd1-ccc6-4a75-a524-ffe6be616115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41e848a-c502-4936-8fdf-6964bdbc5cf5",
        "cursor": {
          "ref": "cf960cb5-230f-45f7-a39c-6e4bce68500a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d4811133-af7e-463b-891b-86d35ab4be84"
        },
        "item": {
          "id": "b41e848a-c502-4936-8fdf-6964bdbc5cf5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "468cc68d-4fdc-4cca-b707-f483901c5872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0076c9fc-9136-4a47-a9cb-e68c6e7dba26",
        "cursor": {
          "ref": "c8322f3b-ec9b-4273-89fc-4c07fc5a5a27",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eb060751-09f1-446a-a84e-403584325b15"
        },
        "item": {
          "id": "0076c9fc-9136-4a47-a9cb-e68c6e7dba26",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f16e10db-5fa2-4d4e-b4f0-17eb840de193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f826fbe9-85d3-4252-bdf9-eb2c0aa73ebe",
        "cursor": {
          "ref": "257f51b3-bf20-4a6a-bdd8-f880e3d42a87",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d5baf6dd-abb0-4624-b2c2-b479bdadf637"
        },
        "item": {
          "id": "f826fbe9-85d3-4252-bdf9-eb2c0aa73ebe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "85057e1c-824c-4cd5-951e-890f5d3f953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939c562c-ad5c-46dd-9da4-338805628fe3",
        "cursor": {
          "ref": "f8d02b9a-3f26-4b8c-b6eb-718eefc40174",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "82de6e22-6fa2-4c64-840c-e3b27aca23b9"
        },
        "item": {
          "id": "939c562c-ad5c-46dd-9da4-338805628fe3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0c2fda51-5665-432a-8df8-7f8567f18525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33fde7a-fcef-499c-bb9b-bd5c8a6b9eef",
        "cursor": {
          "ref": "8870b946-2db9-4411-b60d-afe9185e44f8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbecbee0-4ace-45f5-8308-d3dfdda6ca1e"
        },
        "item": {
          "id": "a33fde7a-fcef-499c-bb9b-bd5c8a6b9eef",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ca96fa76-8259-4f03-ab43-d172962a124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75580b03-420b-48bb-a121-a9e3bdd2184c",
        "cursor": {
          "ref": "d1654aeb-a960-493b-aa65-bd96c5b9758d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8aaa05c4-d34e-4381-b794-6e8dc73fd9d6"
        },
        "item": {
          "id": "75580b03-420b-48bb-a121-a9e3bdd2184c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ee9c9c69-d21b-4dec-8fc8-2df90289cd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bc06f6-0d6f-4458-ae39-bdcafefbdba0",
        "cursor": {
          "ref": "d0eb07e4-e805-4091-9fa6-f3beee872dae",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4caf7528-d2e4-4453-ba8d-f91b75ecb262"
        },
        "item": {
          "id": "83bc06f6-0d6f-4458-ae39-bdcafefbdba0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5e2eea4d-4e11-423b-ac67-7b5be7c053d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aacc50-df1a-4e5a-b1bc-f63d1da0c8e3",
        "cursor": {
          "ref": "900810d4-52ec-4cb4-9671-5aeef069a528",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "46c659bb-c531-4553-a641-7636218e7a11"
        },
        "item": {
          "id": "98aacc50-df1a-4e5a-b1bc-f63d1da0c8e3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbde7a48-de25-4384-a78f-7c0d4068fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e5538b-8de3-4a85-af35-73972e82560a",
        "cursor": {
          "ref": "a67e6794-aab2-4d65-9bb4-513fb4056486",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "91dd0cf9-e4f7-4fcf-8e47-90a1ad347ff2"
        },
        "item": {
          "id": "70e5538b-8de3-4a85-af35-73972e82560a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fbc7a50e-7008-4e8c-b9d4-24aa09e9ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ecdab8-630e-45be-989f-1cf61b4be223",
        "cursor": {
          "ref": "41ca7cb9-8915-4446-a6c2-087244e9f43f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5a37981e-a977-4841-bde4-88fb734bfecb"
        },
        "item": {
          "id": "67ecdab8-630e-45be-989f-1cf61b4be223",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bd58e398-1e09-41a9-a5c4-4f0ad551f7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdd8ac9-4c83-410a-ad55-65e89fc7f8fa",
        "cursor": {
          "ref": "8da6475f-9186-4953-82e3-943a95d48af4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "910e5e45-d9d0-4293-a6e2-c39df1ca7225"
        },
        "item": {
          "id": "dfdd8ac9-4c83-410a-ad55-65e89fc7f8fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "987a44e6-484c-4995-9074-14901a3886a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81194c5-0ffc-4090-9fb9-afc1c525caa6",
        "cursor": {
          "ref": "4ff82701-6648-4349-b51a-9d4b4cb7a5fd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f65dd5f-0ca0-478a-92b2-b3cd08b3b716"
        },
        "item": {
          "id": "e81194c5-0ffc-4090-9fb9-afc1c525caa6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24dba905-d68b-4818-9c04-12c4a47178cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc7dcf6-2748-4457-bce0-beb6987e0d04",
        "cursor": {
          "ref": "7ccb5a07-e802-4bc3-b347-f329354c6f8d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e2f6fffa-a702-47a9-825b-32590f4399bd"
        },
        "item": {
          "id": "1cc7dcf6-2748-4457-bce0-beb6987e0d04",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba93eea3-c4c5-4531-b018-935d34f1ad28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44649cfd-4a6a-47f0-bbc1-42ec23635792",
        "cursor": {
          "ref": "7ffa4f08-86fa-4029-88fe-2938750e54a3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a314ccd9-a4bb-48ff-9878-593a9366f1d3"
        },
        "item": {
          "id": "44649cfd-4a6a-47f0-bbc1-42ec23635792",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40466ddf-07d6-4685-b4df-390b8f274f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a2bd51-ffb3-4a5d-b4c6-e42794a8c6d5",
        "cursor": {
          "ref": "10ed5b70-07b5-45f6-8794-ea5330960b53",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a8f5cb9-2724-425a-9d9d-1e3278932010"
        },
        "item": {
          "id": "a5a2bd51-ffb3-4a5d-b4c6-e42794a8c6d5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f919b99f-658e-4dca-ba37-94d79749430e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5e6667-1dfe-4ba2-9cbc-b67c59183deb",
        "cursor": {
          "ref": "155653fd-e898-4c70-96a7-9fc236ec86e3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "15c3ef95-d5d0-4c39-90a1-f70e4870c981"
        },
        "item": {
          "id": "af5e6667-1dfe-4ba2-9cbc-b67c59183deb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5751edec-e492-429b-ae60-28b57add9016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375a8332-9b53-4220-95fb-a95503b030b1",
        "cursor": {
          "ref": "36789475-93f3-4f59-b5f8-358981ae1381",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e7fc284a-bde9-42c6-ba69-c2d114f6e08f"
        },
        "item": {
          "id": "375a8332-9b53-4220-95fb-a95503b030b1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a5f33ef0-b731-48e1-97be-d21ab968dced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3575b74-50a5-45d5-9bb3-5a0934308a05",
        "cursor": {
          "ref": "e3e3d0cb-8446-4de4-a0af-056c3916ce2c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "07a3e6e4-02fd-46a2-a534-5752250249a0"
        },
        "item": {
          "id": "c3575b74-50a5-45d5-9bb3-5a0934308a05",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5ac2f59-e255-4b77-a22c-3b4d6d456c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a376757f-e859-4f43-899a-1cc42f895b1e",
        "cursor": {
          "ref": "1facb262-7d21-4264-b300-633fc323e597",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "49c29005-fc1a-4553-9773-96d8bad99189"
        },
        "item": {
          "id": "a376757f-e859-4f43-899a-1cc42f895b1e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "402c8d78-fd3d-4e35-9d9d-f2694fd93c8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63ca506-cfac-4098-aae0-91ef0e285c31",
        "cursor": {
          "ref": "762c90d4-d883-4ace-81d3-8d62b70bfe3e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32b0985e-8cc7-4f55-ae1e-3013e6fe3d2f"
        },
        "item": {
          "id": "d63ca506-cfac-4098-aae0-91ef0e285c31",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "86f503c9-5b25-4865-b4a0-cbcf92c8dcc9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 304,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c96a4-dd6f-4405-9750-8a9dfc315957",
        "cursor": {
          "ref": "b34b8ea3-4200-4b96-8a2d-1a344dc6e7b6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "af3af259-d45c-45e3-900f-ca67dbda9be1"
        },
        "item": {
          "id": "f17c96a4-dd6f-4405-9750-8a9dfc315957",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "642f576b-b75d-4bc7-9ee5-1af75b24e775",
          "status": "OK",
          "code": 200,
          "responseTime": 396,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f02779-3f54-4324-96b2-1697c4b2587d",
        "cursor": {
          "ref": "ee4498a6-501f-45d0-b66f-b676426b3cd1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae126c10-bafa-43ae-aade-ea73c0e64767"
        },
        "item": {
          "id": "67f02779-3f54-4324-96b2-1697c4b2587d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d04792a9-1a39-4d71-90ea-04b9b86ee7f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1904,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d121796a-268e-40be-b4ea-54ed35168b9a",
        "cursor": {
          "ref": "9426c41e-ff4b-42a2-8ef4-1cd202b1e7a0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cf1b670d-836c-40ea-af52-23709531058c"
        },
        "item": {
          "id": "d121796a-268e-40be-b4ea-54ed35168b9a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "321d98b0-c9c3-452e-a394-929dcf0c8c96",
          "status": "OK",
          "code": 200,
          "responseTime": 1928,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df26be2-594a-41d8-8986-4926497a611e",
        "cursor": {
          "ref": "e5e2d866-2076-411e-8ad4-07e81cc05605",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "431435bd-f4d6-4bd6-8248-ed2c76511fa5"
        },
        "item": {
          "id": "2df26be2-594a-41d8-8986-4926497a611e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5a63a6a9-6e1f-4f9b-ac19-3f3ce7289b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df26be2-594a-41d8-8986-4926497a611e",
        "cursor": {
          "ref": "e5e2d866-2076-411e-8ad4-07e81cc05605",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "431435bd-f4d6-4bd6-8248-ed2c76511fa5"
        },
        "item": {
          "id": "2df26be2-594a-41d8-8986-4926497a611e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5a63a6a9-6e1f-4f9b-ac19-3f3ce7289b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df26be2-594a-41d8-8986-4926497a611e",
        "cursor": {
          "ref": "e5e2d866-2076-411e-8ad4-07e81cc05605",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "431435bd-f4d6-4bd6-8248-ed2c76511fa5"
        },
        "item": {
          "id": "2df26be2-594a-41d8-8986-4926497a611e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5a63a6a9-6e1f-4f9b-ac19-3f3ce7289b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0308ae-9bd1-429d-aedf-29f91c195925",
        "cursor": {
          "ref": "cf0786ca-8d99-47e0-b569-c216f1adb287",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19ca27b4-cd05-466f-8be0-56acc2db4b01"
        },
        "item": {
          "id": "ab0308ae-9bd1-429d-aedf-29f91c195925",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "171d16f8-c747-410a-883a-4accc739e2e6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 302,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e56f67-5364-400c-bff5-400f4a841470",
        "cursor": {
          "ref": "ae241310-c997-4985-abbc-b38842c0a7f3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eed17540-580e-452d-856e-e49714ed9341"
        },
        "item": {
          "id": "31e56f67-5364-400c-bff5-400f4a841470",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d94336fc-ce91-4c05-ab8c-122044afc623",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e56f67-5364-400c-bff5-400f4a841470",
        "cursor": {
          "ref": "ae241310-c997-4985-abbc-b38842c0a7f3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eed17540-580e-452d-856e-e49714ed9341"
        },
        "item": {
          "id": "31e56f67-5364-400c-bff5-400f4a841470",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d94336fc-ce91-4c05-ab8c-122044afc623",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be80f7cd-e07f-4f9b-8000-53ca9c5b4410",
        "cursor": {
          "ref": "7dc4ddf6-e984-4368-a1be-1f19b318f2ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e12a0ef7-2d4e-4cde-9fc4-0298aa2c5dca"
        },
        "item": {
          "id": "be80f7cd-e07f-4f9b-8000-53ca9c5b4410",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b8de00c6-cb1c-434f-9bdb-fbc3c6ca7e49",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aadc00f-70ed-44d1-ad23-2e09be0cd311",
        "cursor": {
          "ref": "cbf4ebb2-3de7-47b9-800d-ba69abc56d24",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26a83dd4-eeb5-4534-b3fd-7ceea20e2cef"
        },
        "item": {
          "id": "5aadc00f-70ed-44d1-ad23-2e09be0cd311",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2b5d115-1bbe-4d9c-92b1-abcc3bc3e956",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aadc00f-70ed-44d1-ad23-2e09be0cd311",
        "cursor": {
          "ref": "cbf4ebb2-3de7-47b9-800d-ba69abc56d24",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26a83dd4-eeb5-4534-b3fd-7ceea20e2cef"
        },
        "item": {
          "id": "5aadc00f-70ed-44d1-ad23-2e09be0cd311",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2b5d115-1bbe-4d9c-92b1-abcc3bc3e956",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f6fc22-e8e0-4f94-880a-a76addf15606",
        "cursor": {
          "ref": "ef50b3bf-1698-4dd2-ac2b-7f742d8ccb22",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6a2182de-f7a3-4507-b01e-c9468aac94c6"
        },
        "item": {
          "id": "a0f6fc22-e8e0-4f94-880a-a76addf15606",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ee070874-87aa-4b29-938d-9d1d19d05b6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}