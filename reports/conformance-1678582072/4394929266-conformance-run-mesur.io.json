{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d6ec4f2-fc23-4069-80e4-161f4d1ff2e1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb4d78d3-dd34-44b4-80bb-8906c03a3101",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "454a7dbd-27ad-46f6-b457-df35790c2577",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c010d861-19b1-429d-be3d-91474be63534"
                }
              }
            ]
          },
          {
            "id": "18e44f10-3c4e-4e1d-beaf-a771c07723b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97a37bff-d50d-4ee6-9589-95be308fbea9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6ffef93-7afc-4137-9591-6acf2d1a09fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2dfffc07-6a7f-4dbc-bf72-14b6adba415e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "519949dc-0333-420b-8532-2283297db258",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14893265-4d43-4c30-8fe3-d5d1353bae5b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a01dbe-f484-4d66-82d8-3c7037cf01ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ebb5c8d-87de-4a18-b768-9a403ceed75a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "750d7ac1-c32e-43b0-9387-ab5a713968ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e45a20be-1682-429e-abcc-60b93c0b4bf6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "662158b2-c0a1-4e57-a84e-1d2b68e591a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b324df10-66b4-4737-90ad-6633b49e936f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d13e27b-8684-4617-af7b-51810e5b8e96",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "48a2227b-f081-4b62-aaf5-373596100d0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13ff46fa-202a-41c6-9a91-1acedf1d3526",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d29015f-e449-4f47-9f65-871d784d6b41"
            }
          }
        ]
      },
      {
        "id": "887cd886-380b-42a1-9055-3dcffc6980a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "92340d0b-c747-439d-9020-31f66083450e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7cbe66e-34f3-415b-98c6-1de71e3fca33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c49b6ca9-05b9-4d0d-ab14-6731be0be169",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e6b7cb-9057-4d7d-b0e7-a2ff916c5ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14dba5c4-20ec-4a31-8376-f6327caea238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4cac16-1b49-4d39-8bcc-3a2cc58068ab",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba5c58b-06ce-4b0c-88bc-2ca3916091a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60ce4e33-8bd2-4fbf-9475-79bfe51ac907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4e85a3-e062-4340-8b51-9b3524c3bfc1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1523802e-0c58-427a-8d99-7e703ca0269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f261015c-44cf-4764-a181-b57b16671d45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "768239ab-0e17-40f9-8dce-33ad3f81ed11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "081f5198-e8d9-46a6-8189-f07b02144b9f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3386b0-ef50-41e1-b189-5d49f314bba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dc5f489-3df9-48dd-a06f-52458d196b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e768a7b-f584-4477-9f56-01f9ce93de8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a732bf57-31ee-4c76-9e1c-cd5d809f0ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8e84a5-36f6-4f1c-968e-0499437aabce",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5119a921-84d9-4069-ba25-405bf6c539db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85d3d912-a597-4be8-96ce-dd3f0f59ddfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cbd190-73cb-4608-8568-e1028d986f58",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ee342510-c80d-4fcc-b986-8a57b43bdae2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9170487-df31-407f-a115-18619746cec5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c76fd85-8d8f-4970-964e-e99fff0bec80",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "050bfdc2-0c57-431d-a525-d63ab0c4b5c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "517acd98-8413-4dbd-9d84-1e5f0fd4bd44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb8bf51f-4ca5-4354-b7b5-feeec00f9e9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7760dad0-5e47-4c3a-b852-fdfb45befee3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "121f12ff-d3bb-4052-b3c1-4184bac7c293",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28a0cff3-ba28-4f0f-86b5-cfe098f3f639"
            }
          }
        ]
      },
      {
        "id": "e91918a1-0068-4131-a49f-fd16d31859f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7bc38708-d153-4378-a708-e44b2e28d67f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99b4b42a-b6c0-405b-b4f5-91f3c86a36cf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a54be665-541e-449a-a286-34ed5e61912f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa5950-7c1e-45d9-b238-9fb9ec0be1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8985d71b-344b-487c-a4cf-a6afd919546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6204499c-dbeb-46df-83d4-8a1b08afc17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d51e276-6a0e-48d6-8aaa-0a5506dc3295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f55b95-9622-4745-adf5-4870f81b084f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe7e523-4588-4e6b-a58e-d9390879506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df07fb42-31d0-4532-ab6a-644ce0f641dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd045dbd-ca1e-4e36-89f1-b703a85ff0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6e366ba-8ab6-4592-9539-a67c13c90ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01df3121-0ac2-4c58-989c-58848707e7da",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64694e2e-7f87-412b-891d-34306f5ee85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab29379-47df-499a-8e50-286d1eef007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ab7f5-8526-4729-83b2-0928b9fad921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2ae73c-40a0-4db8-bb39-0823a73655b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd290c55-0eeb-4b50-a8cb-8b3db7bb5a4d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f485d14d-3f3f-4670-b438-57eabebff956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b865aa-ea71-4257-b2fd-490602a118e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81759975-edee-4068-b5e8-1f2bf7e83d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21a7f15e-e316-4d1a-bc5f-bdcea493afcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348b3196-b1d6-4d50-bd5f-88b20ff29ea4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c0053-3840-4b2e-b82d-e92b9cd20087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3bf82e-e8b4-46b6-a926-cf212e0bbe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba02cbe-9e04-4474-b1f0-a3e773241a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62529f33-5e25-4a17-9333-07dad4b21bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77956135-f88f-43f5-9945-79ed588adfc4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524f9c5c-76ff-4b2b-bc0b-7a8897d95fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39ee37c-fec7-4bd4-92a8-59d4f911dc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c12eb51-2601-4633-b0d0-751f01eab93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ab1b271-d0ae-4a62-814b-13b24f664f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455a2e36-501a-46d8-af73-17f4d8980531",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e903eb84-ca75-4740-89b9-21fc838a87e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7895a719-8d5e-410b-a46b-0bc5374f7cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c573356-3e00-4147-a305-28f75d07bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49eac2b0-921c-4a03-a335-f43dbeb1e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2110835e-79cd-4583-97fd-c7070acdbee0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b874df6-91bd-40c6-9591-2f0a8d56bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44547309-85f9-4284-9e88-8f22053fd60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887bc0c-6553-4951-8863-495237663f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd271973-dce7-499d-a20a-4939e62ab84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e09242-2e1d-4ad3-8d24-690d88e3828c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f92e7b-562b-443b-abc1-0fc73bb29b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0f0de4-5263-415e-bdf3-9ce64193760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e0380-4231-4a4c-b26f-9815786f1322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9908c8b9-2fb6-46e4-9699-b5d1570d5eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f245c93-16c0-42f5-b2b0-bcfa7f33acc7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b52a8-0e85-4c07-9acc-a5be0a5872ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1b2b7e-8957-46b8-8d75-78e63e18c837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd43f88-24f6-4309-8a5b-d1add727cac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd67da3a-a53f-4e78-a8f8-2ab578ef6bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f9d09f-bc72-48ee-8ed2-6958cac9ea54",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d14fa9-6bc0-4814-ab26-22b7b40c4e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a530a43-bbdd-41f2-acd0-c01e8b6c27f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda0d597-dd13-49bc-b00c-ed9a373fa7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01d1e676-e6e4-4e8b-a208-a856fff6c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059fdad1-b3a9-4fa4-b978-f35270970a0c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a712cef0-7449-4baf-87a5-b2dd4a958875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f7aac1-42fd-4ff3-b1f4-ef1389941477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcaa8e9-4877-4bc0-b504-96dda41e3859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e89df82-5716-4da8-959f-7165cf9bc64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0796b65-c8bc-49da-8ffe-0b53328e0eba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda4ac8-638b-410f-95fc-d45404e66023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2168b4-1e34-4599-b4dc-7788e3587681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d0183-bd55-4687-b1dd-35f3a7a26d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317f15f3-cf59-40d6-91f7-3707c692e665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12fd7c-ed86-43ad-9b5b-09c8ae7bc885",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5786e383-2f42-4365-810e-3e298ae884d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97582f34-db66-44d9-ba56-274837650c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3ba4b3-806b-409f-80a3-3c844572c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fb673e-81bf-416b-9641-1842ff99976f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a960ec6-9a58-4e35-82a1-884ff71012c6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0201fe-fb15-4b25-b178-3acbd916201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e16055-4ada-42e0-bf10-d1754fb1598d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f897301-63db-45af-836a-0a35ef4e4762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76bbb3da-2a13-4bcb-97ff-d773b0d280df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62995c21-7c3b-4cb4-a9e0-e94649abb8fa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be6f43c-6488-47cc-9f71-a7743468f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc99a534-7ba3-4291-a2ab-bc3e8d7c4688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066f5f86-cf0b-4e38-b432-cf921b5cbbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6374529e-68cd-4171-857b-bba4c3e443b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f14f04-240f-4c9f-ad1b-f94c79a75400",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e8c62-148d-449b-a6c2-87158f2b6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fac27ec-1da2-420f-aa58-e610d97115fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bd953a-2005-496b-ab5f-b62a6131a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a7bd2e-2323-4a7d-93c8-c6fea34034b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb8ddb-5e6f-473c-bf5f-882f666df914",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df883d0f-f004-42c4-805a-a8bb49db7790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd00ab01-ce59-4de1-adf6-5bb9d5f54aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b29446-928a-40b6-b8f7-341fd084b6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aea4c31-5a85-4998-b4aa-d19c0822853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1fb2bc-23cc-4a7b-84cf-b110701cad75",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6110743-fae7-4f1e-a634-b2aea504f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1471fe4-a376-4461-ac0d-55866992968a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b0d24d-d0e5-4303-b32d-a1822fffb05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3e946f-4c5a-4b82-886b-a168d3d8f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0f538d-509a-490c-9dc0-273633eb6b0b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1271c23-b657-4ada-9c8a-e51cbca875bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f692143d-322b-4916-8d32-be5663f48687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febf3d86-83c0-435d-b5aa-b0892bacfa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "513eaac2-bd6b-464a-986b-7e1c58a6cffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54b04dc-1f42-4194-b007-c4447b10f848",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864fefa8-b6de-48a3-a47f-817c8527e4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb0aed5-2e24-4245-8fa4-b42021e863d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a67f6a-7182-4879-b1ab-d6ad5f8599f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d5b60b-9dd4-4eba-b879-b9bac60b13da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a2e6da-bf2a-469e-9752-7540880c09fb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1355e341-c2f5-4161-b803-ed7132475608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d78f5f7-00a0-4668-a05a-224a93589379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0be1f8-3344-444a-ba7a-682b61493ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3811626-730d-4461-8e2a-2bcf0266d63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a23b4-af5f-4558-9653-d4e8ea18d3d6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feaae10-8042-4801-9ed3-b21249a41f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13933224-1500-459e-8db9-36b9284e585a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0b2e0b-cdd6-4a64-949e-cea69a77e6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe11fbb2-82e8-4458-ab38-c3affd1b55d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dc90fb-303e-4a29-818a-694bdac14689",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a288d05-3b84-49a6-acc1-2d382acec47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6820bfea-9893-4774-ab02-3f2fdb59eae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae29e3d-79d7-46e9-b14d-cd6e7587527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f5c97b-e344-4a7e-bee9-0d703a7f952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8c7653-7e72-4c3b-ac33-5e75b65e3b67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5372df87-2c13-485c-bff5-3ccfc6d230ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3d518c-18f8-402e-8bfd-d171ce45297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e26d350-9c59-4873-ac41-08281a32c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de897a60-624a-41f2-84a7-25b6e76af4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613c65b6-8692-46b5-8023-4eae88d5eb75",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511591b-e5c0-4d34-a221-8863e1913d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272a0f2a-145c-4784-a913-b8d7720022fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1478f080-9e2b-424b-96a6-61ff50a24127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9ae142-19d5-4ed0-ab7f-1a592d9bba38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2abd13-420a-4cee-94a7-48a4f3a96000",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb95a09-36f1-4a33-aadb-ee04a4d691da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393f7f1d-0100-4170-a84d-114dbe777618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a21361c-aaf4-44fa-aeb7-162ce5e26685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "773e11d5-3150-42e9-a72c-34663e35d6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ee4ca6-c147-4fae-a360-8233b6ce0abe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f563acf7-9554-4a2d-90c8-df8414e49b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413f9839-e725-4ff4-95d2-5427900d7641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab2fd60-01a2-484f-85aa-2c7f9ae1c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef949dc5-ff47-4bd6-8379-636b1415d6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9268dc09-d0be-465c-8ffb-6ed7d5dab77f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f41bf9-931c-420f-ac89-faa967adb100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5693c1f-60bc-4559-a758-3a27a8bdcfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e565547-23d6-497f-91f2-09e21d07f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6cfdc3-a4d5-46b4-b77d-4ff1d41acf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c169e8dc-4fc1-4f2f-84a0-244452c235f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605a132a-d8c6-4eef-bcb2-c33b7879dce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49527f8-eb39-49db-8bd2-1b31766fb17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5c3c8b-d0b3-4bdc-a1da-55dd7a5a3078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea8f62c-58b6-49b5-b057-2a59ad2dea7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c304761a-32e8-45b2-8d8b-af5a7f270d91",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e2c1c2-44f7-4617-b1b4-7e5c81dc72a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e00c9d5-a426-4d6b-bd95-73727369d665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e922b0-4139-4f75-94ed-5850ff4ac5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b770b094-5881-481f-836c-5b3e51de2f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b614aef-28bb-46fa-845b-491d3f29c50e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219f4661-6983-4806-af9e-a05ca61a3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1785a46d-187e-4b50-87bd-c7ed8dfae009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22fae10-e79b-4913-be05-150605c740af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f0415b-6e84-413e-908d-069fa32e8f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652bd389-4d8e-4df6-8fca-e2f25553216f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b45d0-45b5-4be4-965f-1b062fbf6377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce8d179-3b99-4984-a20b-4f797d5184c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee1d963-6b4e-4329-a59b-62a1006005d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f4160f-747c-4072-8620-c9f01d50246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c457fc-b8fb-4149-ad29-64402e9cdc9a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec32bd-9ef9-4567-9c06-e9a874cf65ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df8a7eb-e7ec-4282-a387-b263a488273c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0da5c-0714-4991-a962-693607a3f642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dac003c-d478-4ced-8ba9-cb6b4631d4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee7e9f7-0598-44ac-bf92-a144db565ed3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8087aa76-038e-4d24-9d9c-f0601e694190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed09d67-d8f9-43cb-9fd5-d25a7f20c848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced8d5e7-a3cc-41b6-b339-9b849cd51ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a592971b-04f4-4955-92a0-874e25b9a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1578e9cf-70e9-48d3-9b72-2d9a2d54b4a6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36383d7-a14a-4cf6-84ea-29fe25ab6e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be67dda7-3c06-40e2-9260-23fc7b3931a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e338916-ba6c-47c7-9580-62d3ada65d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88531e22-7dc5-4ef1-9ccd-59d732a0b3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b161341-1047-40a6-a8e3-4374962a8b4c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a7c08-1491-48a1-80f3-479ce48b676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc44bb2-6524-4977-ba85-c80e2b2074ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3464a8-a08c-4170-8243-190596a5e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f10fc1b-bf9f-43f8-804d-ee2ba6afde96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12838bfd-0bf1-4725-951b-149ce4eca4e8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a005d-5603-46da-b7b2-6febca4583ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b6359c-27b1-4bd8-bcc4-b1b821104988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11cea1e-8832-4123-87e2-ac965c9f7ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d76b99-7362-45ae-83fc-6f88fbed1ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721b229a-ac24-42b3-9b5e-46c23374f89f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f60a8b5-8795-4701-a949-045b7bf3a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9995a172-59b1-43f9-a0a8-12b0fe024389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9968202-ebd5-46f8-9f5f-38e9becc7022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a695dbf6-6833-4528-a484-fe362685b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309f28ef-44ad-4cca-b9c9-c8a13012129c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17b8333-6358-4e07-b46d-81909b8f218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dc3585-1c4f-4bd2-8ea1-d32321d3463f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8049c9b4-d3f1-4569-b788-1caa3cfde9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "329662b1-a854-459d-b8f8-27c6a9a5add8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20013862-8738-42eb-9074-f33ebd19225f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258bc4b-f7ba-4906-bccb-08aecd9ec851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5c4e44-a308-4ea5-bb11-7cd5fcbc943a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fbcd07-4df2-4bf7-9df5-92438c9a48c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f004595b-24c8-4342-aee5-30375ee1d283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12cc716-e01c-41fe-998d-35ff3dc2b52c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f78522-9ddc-4306-9db1-e5d4d8dd1e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6650c2-bfbd-4a4d-a62f-4f520340e7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beeb16f-7b8b-49a4-910c-512a4b25c44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "67656183-b8a5-4fc6-ac49-ec61d419d4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534bf25f-a2f9-4805-a19a-fb3050c13209",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a62ab3-ec37-4d4b-adc9-651d15c45c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a7a1a-521c-4bea-9f2f-d4a12a7336ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b185e0c-80f6-4fa6-867e-5f40c658abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f08da24-fcdc-46c1-b019-b5d14d31ae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40775b2-3eca-4c3d-af3e-8a71cb34cc28",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e26547-9e88-4854-952c-79d8c63f2891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ac5604-d7c6-4a6a-8300-53031b524c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871b1477-6f9d-4542-9aef-f6f3f2b6a135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e160cd9d-c825-488f-a923-a818ef0cdbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aea48fe-8611-4ef0-a501-e4d866836099",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607fee4d-04c6-4055-969f-497f9a7d1461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f16b8f9-b728-4c3d-b746-44425309f6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d15afd-a9bf-4bea-959a-c49254b0a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed423038-3f87-4aa0-967a-503dc21e5c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340b436b-481a-49da-b1f6-95a569e59c46",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea5cd2-ea29-4ba5-82d2-da462d827863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddb94f2-5d2b-4a33-8f3d-68a8bbc7ea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92df7aaa-037b-4bb3-aeff-2dd1a60c57da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cf13d3-3b2d-4936-834e-0c2fc32e3fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aecadc-9121-462d-bb3c-5866a03df3c7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c96243-1301-419d-a88e-c17b3d0c7825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651124a3-1804-4255-8c8b-27eee88d1245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75177845-aadc-4022-92ff-032d7c82fd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d2424f-3096-49b3-8bcf-f52f76ef5800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9e3e7-690a-4d6c-b05c-4bcaee2e4e63",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90f471b-c5d2-400c-b9a4-b427d71bbd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d13b54-039e-4b9e-bfa2-6a80ddf8b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0234c4c-5c1f-4045-8fbf-95667827f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6637e2b6-030c-4384-9ac2-1af818d0fe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded5181-c6bc-413f-bcc2-105588c771cb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb1988a-5be9-44ae-8679-2eafb0fcac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d39b28f-d9b2-48ad-9d97-acb733a51750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c780a88-cb32-4673-80d3-8d91d27bad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "304c0dbb-af5e-43aa-b459-9bba04b1235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f402f899-180c-4710-b334-0264f81c6b7a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a3d153-938f-4f73-b46c-2e758da1d06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bd0891-6cec-466b-83dd-05a92e585c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b77692-bd10-4750-9314-e98b0bf32ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4993fda-0f8d-415e-b38d-009a9d352431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21789fc0-9752-4aab-8a6e-d7a96a768700",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0787bab8-95e1-4ab0-9232-cdb6612bcacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0793ffde-c5d0-44a4-99e1-7b913cdd0ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d82648-3e23-446c-9079-8399620038c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a892e6e-c56c-45a8-ab25-e6d5e522b228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524909fc-7006-496d-a070-7035e0e4917c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c37fd92-c8ff-4ffd-b15e-71c58224c0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab46f6d-6534-4fe9-9b0f-c6c107ef216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1ba390-e420-4436-973f-087a68614ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed87cf31-624f-487f-bf42-74a3702b0ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b22c78-483c-4593-a3ae-244fd859a09c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c565cc2-d0bb-40a1-999a-ab7119436d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6730a85-319c-48db-a036-36ded88d902e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3235591-762f-45cb-8946-f03be5ca3c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ecacbf-8a96-468a-a2cd-6131260e3247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaefdba-f2f6-47e2-a4cf-bd779d064e3f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39e041f-f1f2-4fcf-9582-7415a2284a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b3262f-0bbf-4fae-ae9d-286e82d95743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04886349-2516-4173-940f-22fc7fbe9578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7182d9b7-a198-46f1-a768-2d436002ca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e052f7-ac24-4429-a8f5-cf30547861b7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7512f53c-fef0-4e4a-a9c8-024d2d281e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d64a05-0234-4b2b-98f2-b5ba079d9511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba85ae3c-6083-4fb6-8736-0119cc16ada0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d953b2e8-e9f3-4282-a225-70572c500dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d868e16-f341-4d05-985d-3905ceaeb0b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df316eaa-e069-41e0-9e7a-a2366089d4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c35d751-c1fe-43ac-938c-5bdd2103146e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc72fff-db3f-405d-8f9d-9f0c5b1e76f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b80d6cce-0b8b-4c64-8318-be01b8192410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f073f4-a4ee-42af-90b9-119548808699",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ed2a6-5754-4902-8e96-4c78b57c91bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec121a16-92a2-49c6-a6bf-b5a20f8d0112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a97aead-5c17-428c-8651-63bcb8f4ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b23311-2a62-4f61-8e70-6e1e603a5c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3231955-85bd-4840-a037-3424264cbcff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c50b21-8882-4b31-a2ce-6bd62387c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d73e21-6d56-4a5d-b775-9d19e058b5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed71722b-dee9-4c5d-9ba8-5ac32b8233c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "41fd90a9-cda7-4029-9322-a9b38f35ff41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638319e6-6f02-44bd-8ad6-3d181b8af8ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3822683d-6868-426f-bcfc-a31e9da2013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5098bbf-3f27-4215-ae30-2de6149a7d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad0c5a-f447-4fa8-9c91-61143f3f7cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "873f7fae-7e12-47e6-9f47-045f4280da0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2639582-9efa-47e6-98a4-906d6779e58e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff71ad5-5f84-4d6f-bb8c-96d1c4785cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047d32d3-3b18-4a44-a546-5b34a6dfd78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f732e2-550d-4dc3-8eb0-fa1137845147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b15b9148-e1eb-4e81-ac77-0e5a02013aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d8e15b-406a-482f-b22a-fa5f59f419b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa40bfc-2024-4e49-9860-cddb63e1277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72d22da-776b-4946-b25d-92664cd8ee54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedc3349-b5da-4b23-b7dd-3bd30acf76b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40a87904-f652-455f-a7f5-a706514dfb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b71ca51-48e0-4fff-a230-29ef09904c3a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80393a8-0436-4765-9178-33403d31987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0edb1b-d2f1-430e-9830-8f3f7f99a8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ba3047-9ade-4e9f-bc33-7e720ec206f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd2b62c-4142-4c24-90be-e3354c5d7ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fa92c8-f573-410e-b777-e9b199e34224",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9101f091-ab90-4624-bc3d-0b4ae002c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd41a268-2225-4701-b54b-12375e6010de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c958a2b-4b35-473b-a3d7-e5787454bad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e682d213-2fa8-4f77-8a96-316e67663f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79680b81-224d-4e87-9c4a-0f7c5b3711ec",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf53128d-7272-417c-8876-c078fbb17f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28047a09-f0bd-4636-93ee-541ce7d4366f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b96093-70b5-4f31-9d5c-843cf2043bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f762cc-5db3-436f-9910-dbed5fb5af4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb077d3-a7e3-42fd-9769-2c6036fef65a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68784cea-e07c-4f33-8d95-af222732d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4f440a-bb2d-47c4-84de-82e1c154c278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867ab0e8-8a0c-4e75-a213-ae4b0ecf189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c73a0c-345a-4c58-81a0-c5122bcea26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af72b6ea-17fb-4fac-ab44-4b71dfc9de32",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d039ff2-5931-486b-8fa1-39ff6b18878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ac3049-192c-4b41-b708-a91aff5971eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3ebaf4-c09e-439b-a0c4-c7893e66420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47567a4-8038-4069-a855-d4b0fe7ba7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71985508-a29a-4180-a12b-9fa804ae3922",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25e6239-3ea4-48e3-92f3-f7df2a30be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d312f9-e0b6-4d33-980c-e139fc151b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168ce9df-fa10-4c04-814f-6c8c2cb6585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776d1045-200e-4d33-8b4a-687892401e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb654df-34ad-454e-a687-c03318b9d33f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cc3939-20b3-47f3-9b5a-4613922eb4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857c6b8a-4c67-4f05-9f25-e755a97db9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b3b2a0-101a-4798-96d7-e5476e84d9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "96abd06b-8ce4-44db-9483-663fe8430e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64cc286-68b6-43ac-b566-b97620a85d66",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b010a22-5dfd-4380-9742-a3a61d7fc630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc65cbb-f896-4b1d-a515-f35b7cc742d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51759d0c-b9ff-4e66-bf89-6858062047d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "776d16a4-4d38-4f11-8047-e332635c2d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538e2ca3-fa75-4013-8d07-1f8242fbeb0f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30517de3-cc90-4806-8ebe-dca070fec750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7c3b4b-f972-47a5-9f00-9a60f1f90c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43082358-43eb-487d-a426-370eafdb7156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0943c19d-2f55-4445-96c3-5031c99d738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7f7ad6-eb5f-48ea-911a-eaa79d79e0bd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f2ce16-8b80-4be9-98a8-66f60f629f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160b2930-7bc5-4b2c-9e6c-1f03fa074345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0965ae-40a2-4609-9121-c42eb4667f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "980bf986-09ea-4c6e-ab18-9d0a6a8a2ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45252351-bf0d-4378-85b1-605de822bb2d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024779a6-2a08-439e-92bc-d92933acb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3f310f-0aa5-4e8e-ac16-be7469b41afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e49e1a-8e5d-48f0-a4b7-e4fcd2373d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e016330f-f17b-46f9-85e0-7bca37e7d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c21172-1d27-44f7-a4a2-c7075406a41c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff85c8-068f-4aff-aa59-5233962f5073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee55a845-7d48-4803-9e0a-fb314a31781d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b61c47-3c33-466b-91f0-4d3a5be938ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "227ce4a5-9b6b-436c-8a30-ea577333c229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b6d3aa-591f-4026-a6ba-131a2284a7fd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7291d9-681c-4f07-a3b5-2e8f2e5bfb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d47eec-758d-4246-9580-1112be619b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b557a-6cbc-46c5-939b-ae88c3dc1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57d6cdec-992a-47b0-97ec-9ec2e1e1311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a01806d-6723-4a9e-8763-21097687d35a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1140c3b5-db1f-408c-b6db-5ca23360902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf55bb0-5b3d-42d6-9d2f-f58d729162e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cde2f62-fc3e-47f1-9001-3bd451a10583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da7e501b-cb5b-41c0-96a3-f7467c846ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d9d5b0-b138-4b29-8426-2cd80ad2d145",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2990d15b-dd29-43fb-8624-600f0f3e27ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0b5ac1-a5b7-44f4-8eef-a0462f03aedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b28ed46-3c19-41b8-889e-1cc36f8994b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fde35b6-5620-44c6-9ff7-01dcf35a9b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac34fb6-efa4-473a-b07e-dd3011ae5420",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549da598-4dd3-4a8b-a2af-bd57a2cc403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4376524b-1ddc-40f8-b74d-64a29b1c05cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb732333-6c6e-48ee-86b8-5ba794af0344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a58797-1dd3-4c42-8c85-d09c9000baa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f95fa6-a078-42db-94bf-d65896f71ca3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc52983-dbb8-4b27-90a6-078ce203c5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8429c00a-965f-467d-a9f0-8facf9ca77ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecd9bd7-0bce-4e31-9268-d1dfd293d1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "477176ae-7d79-4e46-8606-845743ac8b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3f3eb2-8927-4dee-af69-df65ce3f5b24",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6905c2-181b-4f12-a6dd-5b74d719e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f18e76-3c30-4ec3-ada8-899894034ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538caf22-b3d4-4cc2-a433-7a2e1b44de0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff8fc80-9b52-4555-ba74-a30883daf1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8b9b36-0bb2-4015-8562-d1aca097ab77",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338732ab-a09c-4fce-96f4-cf50e32c0e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af27cf5f-78bd-45ee-949e-db2392c3867b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070d7ade-c00e-49fe-b16c-fbcec519fad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8df16cc-74b2-4103-b884-0ab059902094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe1244-68b2-4457-a98e-c6dc8c69b7d4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7aee48-1a6a-4fb2-96d2-ee01de49851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6d3524-0770-4e12-a0e4-3a00a4e2c99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e5effd-793e-428b-8e2a-f781f57f3fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "085bac73-751a-46ad-aa7f-e45f99ee71c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2484a1-26e1-49d3-ba72-c9bbf4147a85",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c3e934-e1b1-4fce-9031-722adcce3565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb502e0-8d39-41b0-a051-f3270b8eb4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d768d8-ec90-4085-b721-2826928ad671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3ac4b4-9960-4ca4-b88a-cf202d7aec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec68e8-aae4-4517-ae64-ee40058663aa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a169c1a7-bbc3-4a9b-9527-7415181f728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f37952a-d91a-4bf6-bc8c-d26cf0a9bb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49be6f-e804-4186-8a6e-3adf727c12be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28dd5c7-d690-420d-8770-7fea01914d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614735e3-68d9-4049-901f-d601f5c7a04c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc20af-787b-43df-bc1c-482da1b1a7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8a4639-0365-4bf9-a7fb-020d97eeb3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568c893f-b8b5-444b-bbe4-bf9cc2d6e647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45796da6-f30c-4fe1-9263-ed09d3b2390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5907513-b2b1-4ae1-93c5-a9ff979e709d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b300762-5999-450b-a286-5ddcfb994875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0eba3b-cd20-4243-a537-d237b0aa3bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7b6c49-f99b-4020-8d5d-5fbc8c185888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65dbfb29-e8b0-4cd8-8239-c46c5aae52f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4313abc-2fb0-4ec6-8f90-0d94240fbbaa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498de2d3-5115-4f5f-b40b-1482850f6778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6728923-8ba6-4f01-9849-7f231b2e4fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c012221a-6ee5-4866-84eb-f00b3636e794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bad6fb-4126-42b1-8725-7c8ede06654c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634670b4-0e97-45f0-9054-5f80c41f46df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c9845b-5902-4be8-84f0-0566bd2bd9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafb0f84-ca36-4f79-adfa-eeda56047ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78da6d58-c4dd-4da7-8a71-426ee86ee277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d6a242-9f84-4268-a765-c7dd530792b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d877760c-ed12-4ec9-8295-58441aa2ba51",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a60cb7-5c6f-4f42-9fdc-e31daeb01982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba9fae-8940-41b9-9130-275287ca6c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d430e-b29a-47be-989c-8b3792679f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c84631de-70a7-42f8-ab40-c75f3b3e67e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b1e725-8dfb-42b7-bf3b-41f5493a9b37",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c6308-2902-4256-baea-c9a14b859fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa4c210-3793-4e23-8454-955fb51c7b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec51a035-f094-4a35-961d-7accf8a031e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3239dd38-3674-425f-bc4a-e20507441d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c5ec6d-1bb2-425c-a62b-ffd5a2e54117",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23c34ef-ea7c-41df-b198-e2850120d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d264ec-9ab7-4032-a963-fd870b5fef7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d30af6-1eed-4689-bb7a-8ead0256b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d800bc3e-bb83-4f8a-a0a2-86ed0f0fc0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fd4311-1466-4ad1-9943-a8d85ac4286b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137b8c3d-7d13-4dfa-8d53-9fe79e643287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d85321-b044-4d49-8be3-10e17ae05ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064743ef-4b3c-4b36-9f3f-8a2c209349c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9deb2e09-44ff-4b67-bddc-8a57bbab11da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db03f9b-9766-4438-a761-93758a1e53bf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba483523-2023-4a57-8c6b-09d2b2938896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a16bea6-ba0e-4ed5-a5ec-c724ced9d213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eed561a-4d82-44b0-b32a-d1e33d20ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d2a1fb-7239-4ff6-852f-ff1fae6fe792"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a80a7ff3-0541-4f34-8aec-2e54cdb54b68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1479e57b-e0ec-4c59-8031-1c96207db995",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab67f9d-e7da-4735-b174-ffbd9d71ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35441739-4259-4e48-a432-06133507d217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f330bf2e-5181-4caf-b8f4-0154468f2b09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5882c88-f86f-4c3b-b3dc-4fc59d1cf615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d73b83-0fd5-4cb9-ba4f-2c0199e7ed73",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e0dcc4-ab72-46fc-a16b-f1f6b0c26439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db4b5038-0452-4982-9d4d-1225c192548a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8931eee1-6b51-43e9-871d-38313bc49a3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf680146-6ad5-46d5-9fa6-692180b77cb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad0230c-4633-4c06-96b3-e71458132f0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24745dd7-08d9-478f-b9eb-bbda8f497169"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbf781d-e8be-4f22-b83e-32400766e7c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51b04427-bae6-41ad-a54f-a7c67f6feb0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abe3e740-a5db-4cb5-9830-865b3e74eeb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67632cfe-3c8a-4424-bc85-93b7c600f246"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bee259fd-30c3-436f-80cb-cf8d39378e3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0736669c-f889-43fe-a09e-9cccc59e7584"
                }
              }
            ]
          },
          {
            "id": "1934e790-e1c9-4b9d-ae52-2e424b0493f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8b58c47-2002-4dd5-ac32-2449241f0506",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "271253c9-72a6-4dc6-841e-960bad377dd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "430a8c98-b432-454b-bd25-7f41e3a4647d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4b484af-3a95-4dad-8bb7-eec4f0755010",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08df1c64-ec64-4890-947b-fd3ed843ed3b"
                    }
                  }
                ]
              },
              {
                "id": "e24777e8-567d-43f9-825d-fa41f597d4e0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ef7c4a3-c090-44e3-b30a-c75c9cb95bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef505570-dfc9-4743-bc92-56ecc1d5f52e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60512b0f-d4ab-4039-a50a-111c4a26816a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cdbae372-fd7c-4177-ba38-672174b00063"
                    }
                  }
                ]
              },
              {
                "id": "161fe924-d8fe-40e7-8d6f-a8ed94b07b90",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca5ead0b-ea74-4c19-b48a-3f3f1d672100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "364e60c4-6f50-4d14-ab4f-0d635ef138a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0645f6f0-eb7f-410e-8678-794fe3eb0db8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "df5eb9e3-37c6-41e8-88bd-54e7c12f3928"
                    }
                  }
                ]
              },
              {
                "id": "6f2205ec-8737-4046-93ee-770888be47c7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eff354e-9afb-41cc-96e4-79b49bda89f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77dfedf8-3316-42a9-a7ed-3cba4450452c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7715a84-d7a7-4d75-ba75-552c65a7ab54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "77f2ba9f-422b-4282-9cac-a6d875490f94"
                    }
                  }
                ]
              },
              {
                "id": "a77f0654-d294-4d10-a8d0-e1c7da73dfc5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d21a9c20-3586-4924-9d25-86493ce17356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dbe00fe-e876-47ac-a99e-21a518dc1fc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "806648ec-4904-4fcf-9433-72c3b9b22880",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e142117c-153c-4daf-b240-657b5b028569"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55ff455c-23be-4b66-9963-b34fdc8e0db3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12dda635-b1c4-4bf5-a3e0-6a81bee46234"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "148b8a1b-9afa-4ac9-84e9-825d39aefb7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64efdf5d-e34c-46a5-9fb6-8dfcce327bea"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef5082e-ca8a-4f6f-a7db-d8a1bacc5877",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a21326b1-923c-4205-a9a4-a13e7de31ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "858aa080-afa5-4a36-9447-ca3b732cfa88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa14697f-9ad1-41e4-8fc4-9c21e2d1a6b4"
            }
          }
        ]
      },
      {
        "id": "40acdcc8-1690-4615-a69e-d37c140d1d57",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a780a9f-5770-41a3-939c-3cbc974a31e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be5bcdc3-6192-4721-b5a4-d39bdbfd4300",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc6b30c5-6aa5-46a9-b866-e2bc784f5055",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a1f206-95eb-47f5-a5f3-cc86612fa97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12221fa4-5dc1-4b7a-902c-d137175f78ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a5375e-cac4-48bb-a784-8f3f26ec3e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3b12c2-ace8-41e8-840d-7574fa635188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f7129c-1642-4e25-8cde-5ced26e5839f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9a58e2-df85-4dca-97c6-bcbd2c11bff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9269ee49-ac9f-46ff-bcfc-9d9b38aa2a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa333a5-9408-413a-971c-4234689aac27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9478bae5-7ecb-4f5a-9da9-61acd59911a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad8dceb-213a-465f-bc64-736585426f33",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16960b1-b53a-4290-9ee3-80c6b0fc6c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3228361c-452c-4130-97ef-078f52e383d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f088ed69-14d6-4f3a-9615-31328a99d041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77973fa9-4b52-4583-b70c-a2e988704f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab4d916-7719-4710-a01e-c8c777ead588",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f1d68b-0779-446d-af6c-1a7c478617ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b08d819-b68d-43a0-bfdb-693dde9f15f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f0d3a0-dc49-4d79-b1d0-b0c374f83212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7455022-b716-482c-989a-7b16e051d294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c69a4ed-3bdd-410c-8c09-ed315acbc153",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185d150e-969f-4e1f-af6b-9156cf0f6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3c8940-8485-4f39-8585-6ab0f489fdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034473b-9572-4e76-96dc-b40415164271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f708e2f6-7b95-4b23-8f54-e4efc22db04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791ac00f-c220-4d75-bcab-d84f455e1204",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a95f466-6f7a-41dc-b9ae-9a359716b72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a228f0-f260-42b4-924a-10d619508529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165b242-f470-4b53-9dc6-f5a18f806e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af429e1f-1689-4ac0-9b96-ee427a06755e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baea04e-d49a-4744-a0d9-e90fa10ba2f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebe8340-fe3d-4996-8496-4f6c77d12ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80e4930-df88-4571-b7a9-bba7870eba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fbb000-383f-4995-a08e-cf8aeb1651e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e7cc85-6f0c-4b4a-b603-d24c97dcb52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403e07f5-55d7-4543-8e0b-6215c92d6e25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bfdb12-e12f-4fa0-a884-038bb50879fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c3e575-d562-46d8-8025-54bfb4611b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4818c5-32ab-47fe-9c69-eb5785c50c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a535f061-969c-4789-94a4-a3db08b3d981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729a3038-b33d-4e0b-b98b-dd2dd83cc131",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e49031-57b0-46d9-a5cb-c04f756dd353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577ac6bd-5f2e-49e9-8008-15ea6bce29be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34400e02-2ae2-45d1-85b5-b9f32384f934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "091940a5-8cec-4ab7-864f-fe703231f6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ae3c6-7abb-44a1-bafa-eeaced613fbd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae7db10-21a0-416c-8c95-3f663bc87ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5c4a13-2e4f-43f2-a545-95a7170b0002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addf8494-8ccc-4b03-ad7d-df1a12e12c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47838345-c0c9-46a8-9a6b-eca257834b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1194a80-f2a3-4b37-86eb-ff3d867cc4b4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd0a8c-506e-4e83-98ac-028a09b8b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14740861-5b58-4625-a9ea-499638ad0418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41c8923-c98f-45df-8251-3af8eed554d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "940c2151-27c8-4ced-8b40-e3fbb70987f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c2776-7229-4850-ae47-ced4cf5a0d9c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6b00ff-badf-43ca-a641-9c4c14e0db8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f8c49c-3d19-4f7a-bfce-e40adceff28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747cc07f-2d31-4183-bb21-09cde64d0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a95d062c-676f-4a50-b171-bad3d683082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2620ebf8-f2ed-4574-8e87-53f5dad31327",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873fcdb7-408e-44d4-9908-77a4dc75e83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96010652-ad47-4943-83bc-e5fbbc652225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319f43af-0fdd-4df7-9bab-5b06829684d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2236e7-5662-4837-8519-fc42473a8e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918240ec-1e4c-47ed-8fe2-7ab89b2801fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a2f549-f09f-424b-89ab-f83aad936e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60244fd0-79d4-440d-91e9-f33ee7f220c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e43c09a-1fdc-425e-ac31-dfbb1eaa6c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e672e8-4b99-48d4-806a-00fa9cfbefb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f8d84d-a119-4794-a135-8b4b809346d4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36017f3-5067-4b92-ad07-2c80e1f64367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ab9d31-50f8-4714-ba0f-f0663919a788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0530bf9c-d1b5-466c-8c4b-52b8ffaa873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d330dd9-45c5-4d6a-82af-4266511867c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181433f1-cb64-46e8-816b-776ac5032943",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233bc5be-cafa-4bd1-8fb5-208f570af3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f070c6-6105-4eb7-be71-8d500f29d07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8dcbd0-a4d5-4e29-9ff6-dcc4cef7630d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e86999-7a41-4306-908d-d1022717084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf6658c-e59e-484c-b87b-c00f36bc775a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc0d513-4be1-47cb-b7fa-feb83e13f8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d33d07-9e98-4961-9ef9-98c935626e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9a1afa-75d0-44ff-a7ed-1e19d90d6e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba91960-0250-4c41-a18b-696d03622171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f936e01-232c-4d92-94e0-85bc78fb3e45",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fbe9e2-0a12-4dfb-ba77-2ca2926b7acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca214e8-cacd-4ddb-a323-49a6a656e954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed54d4d-54cf-4b17-bb26-9b3fadd94ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f51c3a-c97b-40eb-ab68-229385253e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d292c6-4a5a-4877-abe8-90cbeb9677cb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464638b6-e1be-4334-bd0a-fbbf3e425e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e145133-af89-4c7a-b804-22701fdbe189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fbb4c4-d036-4caf-892d-35ce9e971413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ab525b-dad1-4c0f-8c13-001c92a08578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2d297c-bdfd-408d-b0ec-ec4ce7889d98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63d88e-717c-4289-9600-8f8508fbe152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1283047e-6d2f-4ec9-baa0-a0ca59cbe632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b948c2-5600-42f8-99b8-36de9e2075fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c221625-9fac-401f-a76a-a85f94df61ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950b3200-705f-45c4-baee-06b684d71ebf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752964b-6b9d-4d0b-8508-120aaebe94f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81572b8a-38de-4cd4-a7cb-745b34c2a396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd73bc4-9dad-4bca-97ea-539380c18e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6c1233-bcbf-4dfc-906d-34c372ae67a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475504f6-6fa8-42ce-82ba-5a04bfb9b2e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7475f-9c31-43be-99e5-8a4e7219197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dad700c-70b6-47ef-a9e7-27801646f4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac91c6-0f41-4e93-85b8-774fea9cd835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a541a8-2615-4332-8129-eaf6d0a3bfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e79a26e-3c14-4913-8220-c2c8f696c129",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a765a-013f-4dc8-bb91-a7c1d5a274f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5978a5-7f0d-49c0-bbfd-bc1542ded81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479d306b-2868-4285-8cfa-519abd8a8a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49567e18-27b6-4b1b-8849-ebb31935b9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88b7b93-271a-45e4-91bf-5e73170dc433",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4894d112-d6f7-4f52-ab7d-3b5e870930dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d365c297-e0c9-4ef4-8a85-d44f75232c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae1577f-6945-42f8-a960-e38be34c6594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6e062e-1631-4458-bf4b-00fcdf5edafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c8046d-414c-4c20-b1a5-1dba4dad1b73",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9208387d-74c1-487c-9749-cded852715c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960d4a69-3976-454e-91a6-126a98177066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d384d-73cf-4c69-a1e8-40e5e7f68dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e01cb2-d985-4b19-a26f-61fabb7cd54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b93ec0-2e94-439d-a769-a9662cfd2397",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf58cf-0803-43dd-81c9-3422d6db1ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420b0d2a-bd41-4461-ab94-62f0e4ea483e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162465e3-9a0d-4d51-b147-3f69d647d127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c87630-2cc4-4010-8e7f-cb3f92ea62b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7056b93-1931-4036-b72b-9d70f14f7f34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c88f86-e614-40a6-9591-fff33822c781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee46f2b-f38a-4da0-a996-668c35fa0685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafa466c-86f9-445e-a245-f222da1eac2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87aa8ea3-5418-432e-93b3-62bfa294d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad97070-17f5-4c91-823a-64ab2de3e1e9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd993d-990b-448b-8ca1-d4be961e72ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaa656b-47a3-4308-9a60-d691c23e1bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45931820-608e-4739-9314-002af13ab4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "255fdf74-c955-420e-90f9-82f31701958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8414019-0240-4c35-8ae7-ba42d345d498",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cef672-4150-41c2-9729-39d45b09d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61e817-6bd4-49b0-aa71-358578f66df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ed015-b755-48bb-bea3-7d98e61e7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925a81e0-7655-4bc8-8f22-051ec51f8494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c038d9-8ab0-4a50-b9ea-0c0038bb8242",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d63daf-f3e6-4480-b34d-872dfd644ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996854d9-9dfe-4db7-ad79-c3b5fb6d1fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0f72c9-f744-4b09-ac24-297d1cc15379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62569080-4e11-42d8-a759-31d63df86bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1252b-d9f0-44fe-9e81-22c21ceee576",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e9d267-72d8-4b83-b89d-8c8efc252ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69454868-1d9b-42a7-b58b-2e0741563f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d85a297-e857-43b6-b9fa-4c9d8fc814f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "813639ff-bf78-4280-945b-d7e14f72c3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1147ead9-00ca-447a-b176-9d5050897db9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460afddf-bb48-47e6-9e35-a54ab432b62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e76bc1-06fc-4af3-b889-5e6b7a5724a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44ab8c-3bb4-4a93-9776-d45b45566a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c75b43-253c-4fcf-9d55-0a1bff64df6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2916494f-a36b-49fa-ae0c-29e5515d0a7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adb9d29a-572a-4418-9305-05d1f1153677",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca1f3f6-aa6a-4f29-9be9-ffd2be49559f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e423ea3d-4f79-40ee-af46-bef4868118fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175e7c5-e7ff-465f-86e7-e7108cfac1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca7e95b4-87ab-4ef8-a4bd-a4706e18a7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaa0209-3a76-458c-b856-4b1a48a21b46",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7348ee2-c630-4c5f-95b3-222bb1cd8460",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c75bd42-3cd7-45ac-b1ef-a4a5ea2ca928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ff6fb-ae4d-40ec-9203-5023f412e789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "098ed6cb-35a8-452c-8c79-0e6481014796"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63092824-4f2f-4655-b149-29345d9ead60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76870653-4e95-4263-b00a-9a593eed6dd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08052c5d-3552-4c1b-80e4-fce9c6081cff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1e67e1-2837-4fae-92e9-67310b0ac6d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83856e71-e285-40a4-b9e9-371eb8ba172b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ce67e39-4e19-47be-94d4-86ead6bc4cc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc55bbf-8dd3-4c4e-bfde-bc4ffe900248",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49f22b30-a367-4bfe-80a4-4f2f225c8c28"
            }
          }
        ]
      },
      {
        "id": "c9ed4e0b-8e99-436c-aef0-78156e972018",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2c623eaf-58ef-4553-ae5f-1196218b40b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a3c0a94-57d4-4587-b7d0-8e1ea1c85373",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0ae320e-50f6-476d-88f4-8d1f397e8fce",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3491b78-1526-403a-a9d7-4dbc89ac066a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527e004a-93f8-40ec-ab8b-d7d3ede895dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c5bde7-d379-42b5-a59b-15a00b906506",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb19aa08-3306-4113-a431-a02befe27139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74334540-1315-461c-bf73-0c2d36d87867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c9c27b-33bd-457d-ab27-322089b2e7b6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba492aa1-6bf1-4772-b60e-5b35ef4cae4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a152303-15c1-455f-8259-9dc4c69acac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9fbbba-39a9-48c9-992c-ae3c11c1a311",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ddbce6-5a21-463e-930d-5f5c37164ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd678a4-9824-4f85-b94e-6b8aaa1dc484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eba72b-18de-452a-bd90-1a12779f7dc4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5cead6-41cb-4433-8269-daaf7441b053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1325f998-57c3-446a-a3aa-35a29cc17af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd611d9-37ee-4654-b54e-95c705252a0d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f73e6b9-2ee0-4052-bf52-6fd49298eadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae2c268-3670-481c-8791-b7e93b5f33c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332b37aa-bc04-4752-b477-b95edb927c55",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae3e83-13a9-4431-b75b-f66ab71eddeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7240ae84-996e-4fef-895d-5d8d9cf5aea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ccc0ce-9d56-4866-9948-6622fba969e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763f30b2-9a5e-4759-8822-5cc30f0593d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3d9608-5ef7-4b4e-ad71-3b279c2566f9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b20ae44-deaf-4ae2-a0db-0830b6a8193d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55210b0-2f9f-40ed-9d11-8b778762ac4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5643e2e3-d500-4134-bc53-337d041acfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835aeaa5-2cbb-43a0-b53b-b3967a1a0eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0c6a3-46c7-495b-89b3-711a6b06feeb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be95699-fe55-4315-8f24-ed21713e474a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad7944b-fc37-4b9b-8df5-279fbd4f6075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de0591-762a-497d-965c-b0168b039294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c513ad6-94fc-4727-8136-c8cc557f61b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc341e8-e996-4633-9bed-6cf2acb9074a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c554a323-4156-4856-9a21-2556499716f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adbfdcf-4b00-4c5b-80e2-71170d4326a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89f48b1-2892-4d55-ba91-141a7df266ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e039f6a-28cf-4eb1-a31d-b18f416cacbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8198906-da79-4d25-8744-06a6c8e2d650",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b217fd-87c0-4a26-aaf2-2baeabdcd9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8811e8c-cec2-4f93-afe3-d3d7e5078181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8258d953-cbf2-4312-8c19-f8134577f03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55419312-6a69-44cb-a174-317cc629e4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204cf58d-b5a0-4551-a978-3e6ed07885d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e2af5d-d461-4e7a-9dc5-3e1e252555e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023b002c-9b44-4554-b607-cdd19d718d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d92b9a-1ab4-492a-9b7a-8f55de882fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e2785b-03d7-4936-9e2d-024ecfa393e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a78b2ca-773f-4506-958b-b267538f5aa0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcab1e29-8a74-45d5-ac91-11c0c0388ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7dbd062-9c98-4b46-a8b1-642a28037ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7891f9-787a-4ab4-8021-500ef7364d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006a99c5-ba96-4fc0-884d-80e9de4b71f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3acbc0-cb03-45fe-b468-b200e7d64d74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcf3168-8586-4ecc-95b4-dc46cc3c0b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377e076b-17b7-4504-bff0-ffd1136ad2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a55b29-ff63-4332-89c7-1a7f109e5de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a8ce92-399d-46fd-89f0-940a61816a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd60c23c-0c33-4d72-bd4f-a3b3eae14717",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf71727-c110-4b0f-9690-7ca4a9573f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a8cfab-2915-4857-a997-c4d69f3f7eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928e765-7fad-4580-adc5-72e4dad0c5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cfd183-2683-4a23-a21d-2f3649c7e7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc8537a-2b3a-460f-a8ec-38ef5873c6ff",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f21faf6-ea15-4b90-b82d-9c093d3f5c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b4ab23-4502-47bb-8d26-01c2f42bbf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e1c0bc-f9da-4718-a326-ad1fe42b0e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7d31b8-70e2-437a-975c-817b41e1d33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de0077-e725-4f20-b076-2c9bffe659ee",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb1563-d8a1-46a0-9043-1321eae7d9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444d7786-94e0-46ab-8112-93d81a1af2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e05f0-44a1-4538-a052-1801fb0dfa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e7ee28-4831-49c6-ab31-850d531d4a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7e376f-9093-473a-9969-5a3898669bd8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217fff76-4ab6-4d41-a262-d34765de14aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35da3ee-e496-43e5-a85b-8e955f61c2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cece7dcf-c406-43a2-ae1e-f53a8d408752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6ea839-c8c9-43e5-a7a1-74af0f071d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920a641-60b9-4f06-a347-87e1d8433c12",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990ba56c-ee2d-4b7e-9908-4d9ad81fb440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79f822d-3019-4ebb-a23d-70a8c6f3205c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a117f3f-dc22-4f8e-a661-78a4f43c5708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863971bd-4fd1-4fca-a3fe-a33ccefef880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc3c6ad-14bf-4f52-bcb0-856c107e7ea3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bc290e-b920-4986-8326-8470b65128c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4871b10d-e1ce-453c-9412-c2e828dbbe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508f63b5-26b5-415f-8a35-a86631352fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6871ff-cdde-45fc-a13b-59cf1d4eb215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ff1ef-4b1a-4dc3-bac0-7d979f8b2a4b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dc99fa-4963-46cd-9a59-9015644c85f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e3173f-0f08-4859-b550-fa938d9a4df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7970b453-5e4b-4964-8903-add4fcfd2d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f4c1a0-fa3d-4105-8c81-a00d6242a1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bd697-90dc-4deb-addf-76ac63174eeb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc40446a-d50a-4969-997c-6cb542951a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9c5d92-3d89-4a15-9f21-ee2c942b39c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8987e6-df66-4b3d-8089-b23cf0024493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b03cac2-f1d1-424f-8812-60d4ded20a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13a1183-400b-484e-8459-52a60b96c777",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f13b732-4582-4be9-bad2-3e21767644bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb605a85-1546-425c-abb5-ec6f363f68a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69af4731-a2ae-4f21-84a1-9d7a32327f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222026e9-1929-4318-9f22-8729530ed514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c9ba18-198a-4e1a-a6f5-ad92abd96b6f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6a870a-d085-4347-8502-cbcc2d43b63a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c648f7-60a0-4e83-9b67-214ddf4c155d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65edc4cc-a017-4234-bf3e-a8f42d7c37cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c18151-34c6-406a-81d9-27d8da4cab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274607f1-a4b8-4221-9607-c296a9331190",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c335b918-9b1f-478b-8628-7836de92f971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9886cd-424e-46ee-9310-c87d7b33ed91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0122d5-4f6e-460d-9ba9-3fbfbf6182d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb175313-cdac-4e5a-806d-13778d02e5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f539e3-d5ac-4018-a872-090a97bd40ae",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b79463-980c-49f9-ace8-3c3ca0222529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a371a587-b8a9-47b7-8b22-44af1cc20965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60114a40-bb18-4688-9ea4-b0101f3185c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da1b16a-71af-401a-a55e-63a076a07e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77329e06-84f7-4c48-80d1-e5fd840f95df",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce5a95e-e4cd-4132-9ccf-435731247a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9ccfe2-a4d1-44fd-b993-48a77123daa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4ab8d0-34fe-425e-b007-36addb7b9dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23055c3-0911-4b73-b2a6-ff54da212616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9340a828-c09e-497c-ac2c-94d5be60abfb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658af457-ef61-4f9a-9830-32b4485db2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766895ae-1e30-4490-9d5d-c0154c35079e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee24b3a4-efc8-40df-9b73-3e7db762d824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f385cde-e053-4199-8c2d-e28bf32676cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627a7502-5da5-45d1-97cf-1f75fd3ffb36",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fbbe06-ba1a-4124-84f3-c43942a70467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61116a0c-0880-4f39-952c-9b7787da10c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c5d85-8d34-4595-9612-f813a63a2eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d4e56b-d046-4595-9937-3a47209f63e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9db966-2f5d-438c-8714-8f6d21602062",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c4a05-e73e-45d2-9c2a-06ecf7cea4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0dbc02-4b2c-4645-93c0-f4ae066bbfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ac2b96-a76c-4979-ab02-a44619a35700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616d4b99-46d9-4ee3-bce2-3975bd4c0a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b8f754-b0af-4bd9-a934-3be8af646222",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452d7a55-6d64-49bc-8515-c4d8e3abdfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5faa00-2cf2-47f7-adb3-023990dc6715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd28033-5334-4859-831a-506d60380ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b350023-212e-491c-9808-1b419f1630f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aed1b0-5298-44b6-8780-187f93ccf20a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c9e967-091d-4251-841f-6130085e3216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ba73c1-8424-405c-a7e6-7acc996825eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b275904a-571d-4582-9bd2-af6ee084363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc11aefa-d61f-4675-bc6e-8a89d93c25fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703e2f87-081a-4975-8c28-60f478373177",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7dde61-e3a3-461a-a95d-8bc5ede214e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5570b0cb-7f8f-47df-8178-595e2bd3c03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae973c3-3c64-4a93-8d2d-abb488a71066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99202f22-45c2-43c0-9fff-0c9e8ab8fc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f181cb3-5b95-4ae7-ac7d-a1db13ac2d39",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd8a31-1e18-40e3-8da3-abe3b583c207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8dadd5b-4422-4748-968a-9d369964e0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2fdb55-9efd-40ab-8db7-06d6f3830c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ad9092-6799-4b8d-8c84-44df9d80b05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3dcb5-a85a-48f9-b0a7-33383dbb76a1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62902f4-361f-409a-9c01-36dced2c6a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae09e7de-96a6-4a50-acef-a852a35b7a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a50914-5393-4a5f-8ec7-bd2bf6938b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab08cebc-708d-4a1a-ab5e-3ea9958cf5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b889f07c-f6c3-4a5a-bde1-56f97ffb91c6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d94385-b33c-44ad-9c82-41d02a6a17f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009831a4-6520-4705-9b3a-693277714ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744c0a4a-0bf3-4c42-abbb-66da469a65f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a76780-9e85-4d27-ad98-d7afa7636996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac69ed3-c571-4ecd-8dab-96a0053aefdf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d03a532-66bc-4806-8ed7-2bf5849d694f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c5fc1b-adda-496f-a8fa-b053eaed7ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d71d27-e237-4f64-ab0b-7f6b9354ca63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b60d218-a8f1-4452-b3c8-3ffcb418cc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddf0b21-b521-4d71-bf80-cb3619118ddb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3ca923-9ba0-4864-9e05-22c096ce78fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0b07e9-fac5-4f2b-8ed1-b36dbae13452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6065e99-1ad7-4025-adf5-6b4aebf6f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc4efb5-cac3-4501-bbf4-73eed7b0d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5895825-779c-4987-9e80-38635eabe57f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d6a16d-64b1-4e6f-8960-9d2708664288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ef831-b07d-4905-adad-a8e503c36ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a83c8f-030e-4a5b-895e-b048552e6b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186ea06a-6b75-4a05-a967-f3b58d4aaa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc23d97-4b51-4f72-8c71-133dfaade822",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d787bd1-418b-4c4a-aa0e-5ff00827a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee2fab0-64bc-4a3f-b864-ba71c45002a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987b0bcc-cc60-47ee-aeec-bc4cdb50f39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e66f8ee-7a1f-448d-a7c8-0f3f9a8c1a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6696b269-23e5-4cb1-8a26-4f9a18305146",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac77bba-3224-4958-9236-ee2782f45567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a1715a-f859-4321-82c1-80b6fe9906ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5fa6b1-9146-410c-bcd8-84b4642e8909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53379909-5e23-4b2a-a8aa-59ab82ce7e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8231f3c9-03db-45ab-8833-5ac46ae45c64",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04ed37e-8019-429c-8181-c47f32f9e1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef52abe-9cb8-4169-ab06-f522df21de58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c95c92e-679a-4ded-89dc-17cf53e9e175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9178885-dd90-4b76-9677-4ddf31bbd83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88827d0-15ae-41b5-9860-caf51443085c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9297c2-2373-45a3-ab68-f9074454b869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3129522-64f0-4452-8cc8-29a1ebf25035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25789bb3-92dd-423a-bc87-91b84c955822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e41e55-719d-4417-ba05-b5b0c4a2224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b59b20-a2c2-481b-b872-fa44429e880e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8beb43f4-6243-40b9-9b5f-76be1665e7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2882fe6-07f4-41c2-9e54-e75f74ca103d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f4d5c5-8c44-45cf-ad72-8f8c0eb5af4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25605a4a-ea83-45b9-b30d-7c270da74e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e521532c-4fb2-43eb-b76d-dc6712af1452",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ca34a5-c8d3-405b-b141-c5469c1aeab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96375e07-a544-4fd7-834f-c002b89d1048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf499a5-ab1d-4b52-bec5-a898d4ca2d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fd9a76-b1f0-47e6-bad4-a675335d0caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce32e6f-3242-47b3-8f3c-cd3969ef09fd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da300ffd-3a8f-41ac-90ff-4b2facb1dbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211cfb33-8603-4e07-adb1-4c265dc80bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607af0e5-eac0-443f-9460-ef862577cac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce1803c-acc9-4401-a20a-212e06941c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d98b31-ff9c-418b-bb0f-1a8c7875c458",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbceba3-4006-4cc7-94cf-8246e685b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29997b2f-89f8-4a15-a6ec-6b943d34a9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ef875-31bd-4093-9383-0aac105b8afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e257e06-e698-4657-95c7-ff625283bd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad107860-458f-4c41-8bfa-2711c26359f0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f1dbf-8be7-4f33-a460-0f0d91d9ff38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef377659-8e1c-45d9-92e1-c0588a892ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2744fc73-898d-402c-82a8-2e05f76651df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cbc81f-4522-4d38-a848-657254db0e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160b8b0b-7d50-4409-b65d-8c6ad802196d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03141498-1f43-42d0-8d50-7b6da59a71ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f62a09-ba1f-4138-9937-3fffd4a767cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e678c348-d19a-4a0c-8f5f-bc78778aac51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b1ad0a-7d58-41d6-95d9-3e6b64b5d91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554e52f4-b0df-4965-9adf-9c5d7e3d5afb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77da283-67b9-4156-ac8a-399e224d8f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5728696-96ce-4832-acd3-ebfeea82580d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15f1554-9194-4b2f-a618-1a68772114fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac977c0-6688-4b0b-845b-3f0e85f45157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcd3366-235d-4707-ac7e-f14c29b20f21",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2915a7c-880a-4d11-b5c7-6a26af9b3d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddf06a0-d252-4736-b985-2a26616731b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0066c1a-6be5-417a-b1c3-91d27d9a4c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78ed8dc-b6d5-459e-83f3-8fb48ac530a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a54067e-e452-4636-9216-f02845ba8605",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4e252d-794e-4dea-84d0-62967260f44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbe3ec3-2ff5-4e82-ac78-54638713c6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38387b-92de-4dde-90ea-da3dcf585494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ac7cd0-b031-44df-8c3c-0b931b3b7358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ff16a-27d2-46e4-90d6-2d1b2fbce67f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6351608c-e368-42e7-b123-88494c1fe44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94108ad2-1781-406d-a460-91b0a0b1f38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d750a77-ba1d-400a-a596-9df11529fc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4763a004-94c7-484d-ae49-971c0a8aefc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c134455d-b359-4d02-892b-ab9974352bbe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906bfc15-8b1c-4434-b68d-9d5f448c23f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d98b43c-0eb9-4e65-93e3-902c820609f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a295f3-9cd6-4c3f-b85c-b294de7aeec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c6eadd-03dd-4bbb-80f7-86df1b5084ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca444b6-d940-4b4a-b60d-e1910d011464",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82f5fb-b712-4de9-b64e-3285df4c506c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37017cae-3392-4915-80e1-686ad586010c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7669b1cf-0aef-4cd0-beec-ddc5c8af7e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee8dfed-c26a-4b6c-8b86-a30edd08ab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6123b46b-b9ba-488a-bd14-27d859c45e8e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d79965a-0004-4af4-80c7-6fcf35e14b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea5ecf1-7047-45d1-a603-5ef96efa6224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6d3424-f795-46a0-9c1e-9425ef9b9d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a38bcab-3e47-4252-8dd6-67d55456411e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e5774-26fb-48a4-9f85-649697993a14",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb59c813-f008-4b91-bf43-63e3b4344056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828d943c-bfb7-4c28-8f21-7c4de42007cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b179a50c-3231-4281-a6a9-4473270cc8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3a7dc5-7116-4cfa-b35c-4fbc7986582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c362f9-a34e-44b2-9768-a680d08286be",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70be44b-6408-42db-b6ac-6ea0b9c2feda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611583e0-ff30-40ce-bbea-889fb0187180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21c4782-67d0-44c0-b113-71ae502bdc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b27465-b097-4248-a71f-25de769da122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f53b174-0911-4ba3-9df7-da28110d8ba7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6691664a-0c64-416f-b2e3-a3a8e215fe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df253b6-17d5-4f9e-a2d9-9fcf326cd86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e940ceb-dea1-48c9-bb38-e6955ba16b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75169044-1a30-4ae1-8d9d-19848bba0ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0eb0ed-8f7e-4d95-b07e-0504ee16ead5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58811ee5-03df-4e09-830e-abc7c3fe99e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d764dc2-45bf-4907-a97a-50624aa1e7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e73a9c0-1954-4d6b-9797-8af0ad4deea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b730607-d42c-46da-aa4d-4098bcc4d7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad21255-5c0b-4b26-9714-e4c269822507",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395d5d1c-7500-440c-956e-b55545d30c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d61bf31-df86-4c84-8361-e6b6d826e793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b34426-3ec6-4bfc-a548-44eecee80338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6056e86-2610-4b8f-810e-a0d05ea24f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a3d56f-fd61-4a1f-96a1-cd49da03ed45",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f54036f-5f58-4621-8098-6dda1dc86ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a041676-20b3-4202-ad9a-1389e7d6c134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4ca694-1f37-43b6-9dc7-155afbdcd979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37336be5-ef1c-4e7c-a667-06b6d0736dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bca143-3069-4007-a684-9868d408af85",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f40708-8641-4219-b32a-fbf9a7fd6cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc06a16d-0cd4-4343-a3d7-aa0d36193e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a67d01a-121c-4974-ba27-fc48f46be9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3256de83-c211-4e1c-ae7c-515b60fec89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357d7459-b83f-474f-bf5a-c8a240b634e2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac81028-6b5f-4e5b-abb6-e423483f91bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489f3d4a-bc41-4ac7-abd0-529a37583145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e568c2d-a057-4c01-bf35-4939905db1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22b23a8-89b4-4259-b158-4029b210ca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b626867-7117-4ab8-bb57-979ce5060809",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503c2c7f-8816-49c9-8cb0-8d4e0f457d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c818d60-1b76-420e-94b8-972835dc089f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6705aab-7a81-4730-878e-03992828b2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e84492e-6cfa-4b21-85c1-4b08ff9fac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d250e142-2dcb-4535-a802-c2492560c5f5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec4e7db-9a76-41bf-a602-1d9924152ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5650abb7-4060-4da8-8a8d-369522c95d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a1604-3ceb-418b-87b4-c47d7f3ce8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382a4ef9-186e-4a55-8233-d0d3beb7b36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48778b9e-5825-443a-8e81-188594ee2bf7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f6f8b9-4cc0-49b7-84e6-f2e18396e08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22458497-bc6f-469e-9403-5c4d96aa48e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb45edc-5482-4e3e-8806-c67d293c4b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a624f31-45b2-42b8-90be-a292f507bd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635f805c-732d-459e-8ab6-cd912b048d92",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855df288-e5b7-4d22-ab6e-7f49446112df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a65223-113b-4f47-9f97-3dd403dbf091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fedb71d-b8c1-4193-932d-6bdc081120d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4104f18-71b4-4863-815d-31b425c9fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642c4273-3cd1-4817-922d-3f450b723936",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e5e568-c74b-47ec-a921-67b8b211a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4b0639-3954-4f19-b90d-a348b0a8488f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31997e4-e7d2-4c0d-9a93-9ab0354509ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c691e9-69b9-4235-a070-f6dcabca9a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f7a89b-9699-4d16-a7a2-ed76af6b1b63",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a1d754-5718-4d16-beef-e482214d4a0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d023342-b857-4385-8ab3-c322edd20483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814705cd-cc74-44fb-bcb2-7c88a9ef87f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44735e0-f668-4c32-9be7-d7187aca5a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3114a3e-d1b9-4a9e-94c1-4b1cfc2515ea",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d98957-1d80-48b7-95a1-6802107d683c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d1deaa-efbe-4f9e-b24f-5c1b7a467b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cbf9a0-ce30-485c-ab62-f72affc7e0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f563f0c-644d-4181-b683-846f61a3bb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a3c159-97df-4d1c-8def-6feaf2a75140",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5095864b-174a-453e-8eb2-a57e89a8a992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd554f26-5dfb-44ba-8ead-9fdb5c7c1dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8203a2-18d3-4235-99b4-5c3018768987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8844621c-59c3-439f-ae2b-bdc511f7ee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d3a65f-065f-47c0-8cb5-93143c5f5300",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f5490e-784f-4877-a883-dbe22a2cd7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea17669-663c-472e-89ef-54ed69e4f9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9482c9d7-368d-45f2-af6e-13823a096b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2d5a9f-d811-480d-84cc-917886995c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a913330a-551e-414d-9a79-79fc2bd432d7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3e2740-9c4c-4dac-90b3-404bc703d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d39d289-db62-4899-8eb5-44efc55a04f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8e2c37-7558-4b83-ae60-2d850b143e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c9f6f7-41c2-4635-9d78-53e446f6f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68e601b-91d9-4112-9e7f-52306ea36e13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d68e43-6806-4d7c-b94d-577e91b25ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a8da23-c050-46fc-ba30-5130dbcd7bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05c3720-438a-4f51-a7d5-15f58ceeb924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ae4eb1-812c-4315-b307-c5d798cb9c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b573dd-900e-4ad7-9ba1-e61a6adb3b33",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24f80c5-2eeb-48f6-a29d-afe256bf268e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b94c3e-34bd-4eb7-b219-c695ac539959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3069cc15-53e7-4e50-aeb2-c92da002e01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc14528-196b-4600-b342-6852cbd76a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7270e0f2-833f-4588-8f00-301676a206ad",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c31561-7368-465f-894a-ce7fa681413d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e54cd76-6146-43f3-9f05-f360ef604617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2891c-e1b0-4d0d-a80e-5b94d899ae0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15711c53-7157-4fbb-8dab-25d009e0af9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ac5b7d-7ad9-40bd-89fa-457031aa0c5d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd5cb85-4701-4d7b-8c98-9c1e6feaa2c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb7b8a7-02ef-4df1-bd26-4adde441cac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230b745c-592a-4e35-8a32-cf88b7db00a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01835d6e-e07d-4504-9902-063fb9ff80cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9d4a81-7344-4574-bbd7-986d8612a1e7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5d31e-452f-418a-b84f-9683300abfb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f941fb96-b438-4d58-ace7-5bbd32192a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4de99-63a1-4cc2-976a-166b05e53b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77c0751-e07d-48ed-925f-7ed58be20d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512095d-b079-4ccb-a2f4-b3fa2e289c06",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc1f59b-bf3b-4fd1-af68-938055082cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f008c977-3f8d-4727-ad6a-13543bd7dac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f867a8d-2f47-4179-af27-263efff6f573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36f7114-8a91-4251-be2f-eb9f0bbbe6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d705ee-282d-457e-b3c4-84a7f2b959dd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2407f6-fbf9-42b1-9cae-69b495ae0da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620b6742-c600-4da8-8b6c-e8fda7b8e793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d308e0-1f10-4ccf-8a3e-a7ac2d8c3f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f849a0f-1e24-4783-bae4-79161d79c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0439e4b1-0c66-4ade-9212-2d9c58db59a2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db680000-fd13-4adf-8bad-a47a75f3e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51d772a-4133-451c-9a30-3e19d2ec020c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70eebc5-eea5-4634-826a-a2f30f9e65b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5dfb08-b146-46da-bb4d-0467a4f16cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c7588-34a1-4e6c-856d-bdddf2f0adee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb89867-c692-43b5-8eb0-e0421ca4809c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d93c34-0bed-4b6f-8288-b4b3a0d2f3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eae88d-11bb-4597-a668-6fc95ace2efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013d69d7-be9a-42d7-af07-7c8d1519da35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cab5223-cd90-45d2-bcc5-49122d4a4579",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5478d69-6ed8-479a-ba6b-d1362d14e92e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba0d600-0a75-42d0-b403-5c1c2597651e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd31cc88-6688-4087-a850-dc9501799544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4915dc-582e-4631-b22d-22384d8fa2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d5cd78-6b05-4a19-b9ff-53881c7bde4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4638daf-d425-463d-bf30-9206789a3af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bba5f78-30b9-4c62-8a6a-f37eb2f0eb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd460551-d567-4274-af80-0275201c6c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c14141-1bee-4993-ab51-a81fba7b30b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b375eef0-ba9d-46d5-ac4a-cd17378c0161",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68603d4d-aef0-4877-b6fb-6ab42a215dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c14f19-1ac6-4b1e-acba-3b43b1e2a451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a92f9-d11d-4bf1-87db-ee4af2bde92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ef91a2-1a83-45a8-9fe5-3bab7f20872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe58f6e2-948f-4463-bd20-7ac0a8e750a0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ce5c70-9b6a-4bd6-95e9-203e6370a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83d9aa48-02e3-49c1-a1c9-6b74159ec408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af641ce-9381-48a1-be46-8f550c8275b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc53ac9-f779-4ef5-a5ab-73557fca7e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bceb60-b931-4c71-b5b2-652bd913f5bb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0636a11-099c-4647-b602-6113b53f438a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117a6efe-f6c7-4d72-ad9f-73422637f434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec8acfb-d25c-4cfc-a80f-4b71a6103a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6181f4-3939-4cfd-968d-3c472f0de7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f974e3-4d80-4b37-934b-433d094aa300",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cee17c-fea2-442f-92cd-cf5fc0de8a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6daa76-e9be-490b-998e-e84053eb05d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d223d6cd-e309-41e8-affb-372d18d7fe18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dc9b64-639b-4f33-bd2a-2c19b876e05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6070c1-dd25-489c-85de-313655b2ca1b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5738c399-af26-4331-89f6-04b2ec501b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134fdd92-a993-4db7-a2f8-4405e038878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d995beb-4899-465b-b74a-14126b90b92b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63180db-1088-4c33-b04a-f89806305384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f27b7f-8a94-4ace-8331-c84b3e23db6c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d77d237-c9c1-48ee-b191-baeaeb752b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad98d0e-6ff6-465d-ad89-258dd040c0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f855f-b737-4b9b-8e3d-0261ba30bd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c635658-e603-4d9a-a30c-682146bb7bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff8a1d1-4370-4526-a5a1-c6620fe6a0b7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a98550-4309-4cb0-8cc8-1e829afb9293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8661adb-b9c5-42b8-9016-9f29993f30a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5850cd8-1972-4c76-9e4a-bf3fb7992fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dc636e-85a8-4559-816a-3af7e717369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed0037e-16b7-4b3a-9471-ee61e27c3e94",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cdd6eb-db6d-44cd-a862-fad8d352c588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685b143e-64a9-4843-ba4c-3c7048bbd9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd74acf-e757-4e40-9d19-1ccb7f9eaac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2bc689-f182-474b-89e4-c432ed030e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c558b7d9-6aff-4987-8ec8-8d0ef019b9ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9872965-b86d-41e4-8b2f-4ff471eb4a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f582d8f-b266-4f14-b90c-3be4618981de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98552789-78e2-40da-a2cd-12c6e1f0b1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b2b5bd-189e-4354-9184-46d6d14ee475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b59734-732e-479d-beba-d7cba8668763",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a473f024-e936-42ef-a4f9-2b6648ef291e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5256758b-02a8-4fcd-baaa-41f4f0a3cd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ca879e-aedc-46fa-912f-b7bc334f91ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef405c3-85b4-41e8-ae8d-9025e60ad5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1f28b-f7a8-4542-9a08-6d8456c67607",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701d19b8-f274-468c-88ec-6ba6887b4366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f84e5c-c33c-44aa-bf87-dd68cf415fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b79ccb2-78da-46d7-a267-a23fc13e7d75",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6b7355-8697-4658-b59c-301795aa1dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeedfba9-4263-40db-92a7-919e554afcf7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c788844e-9fdd-4304-8fdc-63e22ac6a39b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1f0336-ec24-45f5-9444-27a28ccbc44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21c461-edd8-4a2d-813f-2a833d61832c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5076260-d1a4-45f7-a182-4222833393f8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bd43d05-34a9-4737-a1b2-532a1ba74f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7e9548a-9a01-4932-97f7-792a9ee99ffe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45a91b60-3f65-4784-ade1-a171bbf6fc8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c4e05e8-8855-4f64-862c-61870c7ab8b9"
                    }
                  }
                ]
              },
              {
                "id": "736d8858-adfb-452f-929b-5d99482f302b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89b6667c-f0fa-461c-ab31-07cbc2c01153",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c35e91-1dc4-458d-b0e7-8c8afc04e846",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7a24a6c0-46f5-4671-8d8c-bb8dffe7268b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0630d69-d92c-46f8-aa4d-4dbb6c90a831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86c8f77b-4160-4c9c-b712-639376dfcf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8667efc8-37aa-4ec9-9dbc-8ca70b5412f9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dbe9d9-3cf8-4d9f-8bb3-89d3342edca1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a55066d4-35a5-4f64-8955-bfe07f1f2821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdb107e-f702-4a31-bae5-620e68dc40bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4834183-0b9a-451b-bf82-0635508b9202"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "352a72b5-a1ab-4832-865c-af6711650468",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "791b4abc-2d30-4ece-ab83-805f765295c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9541fab2-8829-4856-8260-a84087a15884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f818630-edf8-4751-94ba-9ed28a3636f1"
                    }
                  }
                ]
              },
              {
                "id": "ead4f2b4-a9de-454e-9511-6ef69675cd01",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1ea81dc6-e6d7-4784-834a-8757b45ba8e6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6ff4f6-0c66-412f-bef4-01bcefea9822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7408fde2-8306-4cc6-a0c0-73571fc4b214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb41bb9-6d75-4304-b664-95c969e310b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144dd8e7-7b53-42c1-a076-cc35ab7bf0fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ce2d99d-e108-4632-99c7-43530f5ec102",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11adb83c-0dca-4952-8c92-46061f525e41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67b8487-6ce5-40ce-b563-44e7689dc641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3adfe7c3-d34c-4b58-bccd-671d4d3ba207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03d162b9-a999-4308-82e8-2226686641e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4426265-d6d4-41f4-8cac-24fcb703083d"
                    }
                  }
                ]
              },
              {
                "id": "3b29569d-3c4f-41c2-82fb-3ba903609780",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf8f8bc1-200d-42a3-87bc-b9aac192158f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31d7a201-9d70-480e-8370-8c0bc49450be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93b32bc9-b802-4657-a232-74e807bc231b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "668d4521-a925-44c0-8f41-dc49b6a81a77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64a4802b-d866-4905-82aa-0cf8a7267800",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "11f97c21-cae8-433a-ae1f-b67b28a81db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b51b3d-2ee1-4b8a-83df-980a3f6c3408",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1070a1b3-8364-4d39-b0b8-d2c510fdaa26"
            }
          }
        ]
      },
      {
        "id": "8b529b08-0540-4911-a85f-46a853fa1ff7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e2dcc60a-7b16-44f1-922d-38074358653e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59af9ec7-cfe9-459b-96ae-757659c0a57d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da297641-b1ff-4619-825e-d94b7c347121",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6cf834b3-e183-4204-845e-abbfd88c7b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01710321-9b35-4548-8171-ebb515632255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "596da77b-cf2b-4283-82d5-7cfd6fd9256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca627f3-4e32-4cdb-8b89-e9fc7a44c539",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d119e28a-ee34-4338-ba76-e53a779fbf36",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83a395ac-bb2f-417b-b908-c3e45041f9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0617de76-ecea-4263-9ece-cb99fa009db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bf312ed-6b19-4387-a463-3b1ebd972e1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3178ad0d-fd36-464b-93c6-7de5c93c23d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a845a4bc-6fe7-4e9f-86e9-8ab9542bad2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb942c4c-18b0-4c54-b6e6-d1e1a39d9b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf20287-dd8c-420a-96fa-cf5240b3ee3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40a933f8-3ae9-44a3-a75e-493433392cc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cd7046bb-438a-404b-b236-6de27e136f93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db987453-9876-404e-b0fe-49007829dc59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29bf1eea-2835-4de3-aa42-4f5295bad311"
            }
          }
        ]
      },
      {
        "id": "fe08f5ef-6ec2-4a54-b45c-7fdcab83005b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "376a2dcb-fa5d-46b4-a5db-19f2c972cd74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8820f7e-3d04-4b34-a1e3-8bf7cdc2fb14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95038e55-f6de-4466-8818-6c63293e50fa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05917905-225b-4a80-bdf9-2a39082dbc86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eeb0f24-2960-4656-bf7d-8b82b97b0e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de69311-e2a8-46eb-b3ce-f86019feaa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf4ef584-a1fe-4c25-848c-240ec76fcde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab07a4-7014-40ea-86e2-8920bc3e109e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99804c87-57d3-4e18-9b3e-d8eb57cf7dc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "732afeff-2c15-47ff-a915-29ef4cc11430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef114a4-2a68-451b-bb87-7b6332c840f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c0b57d-0cc3-4fae-8afd-95e32f4f6470"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "369f5eda-725c-4ac4-b5b9-f5e2208ec0e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8378a8ab-9be6-4fa3-9550-a6fb8a982853"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d69a18d-4d33-42e3-b2a7-eba1ef4a1e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c3480f6-9504-40ae-875e-52078c393c9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09a223b0-3c9e-4dda-8f63-75d8249305a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "723d8aa3-7606-4294-aa41-d127554a88b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "569fcce2-e09c-4f8c-8386-b068b2f6d8e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5bf9003-b5d1-42d6-9491-ca885747ee12"
            }
          }
        ]
      },
      {
        "id": "609c6807-6b5a-40df-957d-2de313606605",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "62bc87d3-2380-4bb9-a18f-00bfe049dd0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a0d6689-8acd-4a4b-bb22-35e99ea24087",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef8a4853-a879-4fe4-a2a1-485c61f1a624",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25479f5-fac9-4742-8c38-3d8de666e640",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43bed0ba-9e32-4021-8b37-97b2e2473c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cbe750-6abc-450c-a8a5-0a09d1316a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff90f094-89c0-4604-af9d-051e8cdf77ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429615ff-54dd-4a81-9af2-0588575b9840",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028c687-9554-4084-8798-3f9c9499fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd57eff-1078-4187-a7c1-6336d426c094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa7223b-fa8e-4aac-9c64-fdf320aec373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d800a31-ba08-4e2d-85ed-465984ecccc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1106c655-2d08-40ea-87fa-b8e11faa25e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4934a0c6-554f-40aa-88ab-d7e89d47ab71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34e357af-00d5-4e39-a5c3-9bfb102afa4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce5fc073-3e0d-49c5-b17f-68f064625ddf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c661e2f-1c9e-40f4-a3df-f0476b50ad6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30061b7c-0285-4618-bffb-505be6334539"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81ebe06c-3720-4d86-8dd5-e867fe4f9689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "027e5fd6-dabc-496a-8964-b72fb33da9c0"
            }
          }
        ]
      },
      {
        "id": "b09e2c7a-1549-46cc-8cf4-ceccc9d92370",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a6f5a06-d6d6-447a-b9d8-751a3395285f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "987ea294-2176-454b-afe2-eb178823036c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5673c997-f79f-4cab-a651-84a379d6208f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306fa604-f6b7-4887-8bfa-b425c5935c01",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6360ade5-1fcc-4b74-b51f-f96e87cf405d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.799227799227802,
      "responseMin": 3,
      "responseMax": 499,
      "responseSd": 52.67183901181283,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678581713168,
      "completed": 1678581728213
    },
    "executions": [
      {
        "id": "cb4d78d3-dd34-44b4-80bb-8906c03a3101",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9db2891a-ad4f-4740-b4ad-3832532142d2",
          "httpRequestId": "b6f791c7-2086-406b-831c-1293f7797411"
        },
        "item": {
          "id": "cb4d78d3-dd34-44b4-80bb-8906c03a3101",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5815d9f4-f416-4bf6-ad85-d6404ab39a0d",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "18e44f10-3c4e-4e1d-beaf-a771c07723b6",
        "cursor": {
          "ref": "f11e90cf-fb30-4939-83f6-78ab6c92a86b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d06c91ef-8410-4eb1-9445-4547e9607abf"
        },
        "item": {
          "id": "18e44f10-3c4e-4e1d-beaf-a771c07723b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8dc405e2-faac-4ab1-88e6-13683b72c9d0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "14893265-4d43-4c30-8fe3-d5d1353bae5b",
        "cursor": {
          "ref": "adad728d-e248-4cc6-852b-2969d99b5657",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "09b7e8f3-11fc-442d-88db-981795012611"
        },
        "item": {
          "id": "14893265-4d43-4c30-8fe3-d5d1353bae5b",
          "name": "did_json"
        },
        "response": {
          "id": "ec9f678e-dd0a-4cb4-bc63-a4e0c8238597",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b6ca9-05b9-4d0d-ab14-6731be0be169",
        "cursor": {
          "ref": "3ee78bcf-1327-4cbe-84fd-a2a5d65c83c8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8d31c0f-fbe3-4474-9f88-aaedb02f060d"
        },
        "item": {
          "id": "c49b6ca9-05b9-4d0d-ab14-6731be0be169",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc139033-db20-4e40-8904-db8b1a70d043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b6ca9-05b9-4d0d-ab14-6731be0be169",
        "cursor": {
          "ref": "3ee78bcf-1327-4cbe-84fd-a2a5d65c83c8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8d31c0f-fbe3-4474-9f88-aaedb02f060d"
        },
        "item": {
          "id": "c49b6ca9-05b9-4d0d-ab14-6731be0be169",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc139033-db20-4e40-8904-db8b1a70d043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4cac16-1b49-4d39-8bcc-3a2cc58068ab",
        "cursor": {
          "ref": "eb293d10-86a8-4cf1-8f01-b25dcaa98c12",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b5f7d677-52e8-4b5e-96b8-ff4127600d62"
        },
        "item": {
          "id": "fe4cac16-1b49-4d39-8bcc-3a2cc58068ab",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d57d0d81-f80a-4d72-9a0e-ee7efc328cc9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e85a3-e062-4340-8b51-9b3524c3bfc1",
        "cursor": {
          "ref": "b6b8bad4-76f1-41ba-a1c8-f1cfcd3b5601",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad109da8-e645-4ae1-b0af-db043089318a"
        },
        "item": {
          "id": "eb4e85a3-e062-4340-8b51-9b3524c3bfc1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3aae697e-61f6-4c3b-b171-50789650a630",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081f5198-e8d9-46a6-8189-f07b02144b9f",
        "cursor": {
          "ref": "047d1ed7-0d5f-402a-aa37-ec3e8682e07d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5057e784-c522-45f0-9811-7fa8c5626242"
        },
        "item": {
          "id": "081f5198-e8d9-46a6-8189-f07b02144b9f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "196cf384-21d2-4453-a342-6a2287782f5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e84a5-36f6-4f1c-968e-0499437aabce",
        "cursor": {
          "ref": "f80eac0e-699a-493d-afce-545475b4679d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd51ba75-f4f9-49d8-936d-39eb526e6952"
        },
        "item": {
          "id": "7e8e84a5-36f6-4f1c-968e-0499437aabce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d0fdce9a-bf2e-4387-9a3c-d334f4c07471",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e84a5-36f6-4f1c-968e-0499437aabce",
        "cursor": {
          "ref": "f80eac0e-699a-493d-afce-545475b4679d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd51ba75-f4f9-49d8-936d-39eb526e6952"
        },
        "item": {
          "id": "7e8e84a5-36f6-4f1c-968e-0499437aabce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d0fdce9a-bf2e-4387-9a3c-d334f4c07471",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c76fd85-8d8f-4970-964e-e99fff0bec80",
        "cursor": {
          "ref": "979762b2-f33b-4cba-bc96-1636a5d056ec",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "25b429a5-56d4-4009-8cfd-d4d1c64ce62a"
        },
        "item": {
          "id": "9c76fd85-8d8f-4970-964e-e99fff0bec80",
          "name": "identifiers"
        },
        "response": {
          "id": "4b9b0ecc-a6b6-4b2d-b116-ddcfd4462d20",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54be665-541e-449a-a286-34ed5e61912f",
        "cursor": {
          "ref": "0ed38987-7605-4eb7-998a-a129a8cfcbfb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "174aa221-7ff6-46ef-a1fa-8c256a61404d"
        },
        "item": {
          "id": "a54be665-541e-449a-a286-34ed5e61912f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5ed612f6-c3a1-4d81-b96e-275250d240f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54be665-541e-449a-a286-34ed5e61912f",
        "cursor": {
          "ref": "0ed38987-7605-4eb7-998a-a129a8cfcbfb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "174aa221-7ff6-46ef-a1fa-8c256a61404d"
        },
        "item": {
          "id": "a54be665-541e-449a-a286-34ed5e61912f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5ed612f6-c3a1-4d81-b96e-275250d240f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f55b95-9622-4745-adf5-4870f81b084f",
        "cursor": {
          "ref": "4bc162ac-0a14-47f3-94cf-dad214eb551d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "003b2478-2860-4254-9472-db0c8ad492d3"
        },
        "item": {
          "id": "a3f55b95-9622-4745-adf5-4870f81b084f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "743ddfc4-eb44-4037-8235-4267c0dfe1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01df3121-0ac2-4c58-989c-58848707e7da",
        "cursor": {
          "ref": "3da7d607-5be8-4796-ac64-af6a5dcb4722",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "07b011e4-1424-4d4c-b0f8-a80201af2824"
        },
        "item": {
          "id": "01df3121-0ac2-4c58-989c-58848707e7da",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d32c2daa-3b1b-46c7-af81-2eff9f9f20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd290c55-0eeb-4b50-a8cb-8b3db7bb5a4d",
        "cursor": {
          "ref": "0044985c-6f62-4348-98b1-88349165ab64",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e5f3efb1-3dc2-41ec-8505-a83107c7d0b6"
        },
        "item": {
          "id": "cd290c55-0eeb-4b50-a8cb-8b3db7bb5a4d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "377f1741-bbe6-42bc-a45b-bc5eccc5b79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348b3196-b1d6-4d50-bd5f-88b20ff29ea4",
        "cursor": {
          "ref": "99d3da56-4c50-4350-a709-08d6ceeba32d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "81725500-9351-49c0-bb55-abe78f750fed"
        },
        "item": {
          "id": "348b3196-b1d6-4d50-bd5f-88b20ff29ea4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fcb1128c-26cb-4926-9fda-11c5e4e199a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77956135-f88f-43f5-9945-79ed588adfc4",
        "cursor": {
          "ref": "b1d6c1c1-db99-4db3-b366-517483dca5bc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3d88a694-1bfb-4891-9fff-cba2d7d9abcc"
        },
        "item": {
          "id": "77956135-f88f-43f5-9945-79ed588adfc4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88a41ae9-7c9e-4529-9843-3261855cbd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455a2e36-501a-46d8-af73-17f4d8980531",
        "cursor": {
          "ref": "fa847b12-e6a8-426d-8ed3-5cf50c923672",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "720e3309-0d54-42d0-9faa-b4ba3c53256d"
        },
        "item": {
          "id": "455a2e36-501a-46d8-af73-17f4d8980531",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "94d005de-24c4-4077-b448-50bc1240e0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2110835e-79cd-4583-97fd-c7070acdbee0",
        "cursor": {
          "ref": "672aa4b3-9579-4428-9540-a5600918bf39",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3cc02132-2f48-4f6b-8ebe-f62ec53918f6"
        },
        "item": {
          "id": "2110835e-79cd-4583-97fd-c7070acdbee0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "34c7be67-e494-4ed9-8e87-5bbc3b1d9fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e09242-2e1d-4ad3-8d24-690d88e3828c",
        "cursor": {
          "ref": "5899c524-15ef-4e1b-b403-6f5aa124543a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "11215098-d52d-4c12-8dd0-23c4b1b8827b"
        },
        "item": {
          "id": "05e09242-2e1d-4ad3-8d24-690d88e3828c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "856dcc67-5bd8-487c-b8de-399a5ccf92df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f245c93-16c0-42f5-b2b0-bcfa7f33acc7",
        "cursor": {
          "ref": "4404a808-bd17-4a8b-9f34-b829c28b0944",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7723e3f0-b75e-4fdc-9c3b-81c12f4b8723"
        },
        "item": {
          "id": "1f245c93-16c0-42f5-b2b0-bcfa7f33acc7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "acd38875-c962-4814-8f7f-3779b059d36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f9d09f-bc72-48ee-8ed2-6958cac9ea54",
        "cursor": {
          "ref": "82ed1800-545c-463c-a6e2-7fe738712fc1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b1c064dc-9701-49a1-a5ac-7bbda10f4668"
        },
        "item": {
          "id": "99f9d09f-bc72-48ee-8ed2-6958cac9ea54",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "301e6e1b-d012-44c7-8377-3ac8d6db010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059fdad1-b3a9-4fa4-b978-f35270970a0c",
        "cursor": {
          "ref": "cd07de70-a6e4-4158-b546-f3cfb80e06e9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b3e1c10-23a0-467f-a4fb-cd3619775dd7"
        },
        "item": {
          "id": "059fdad1-b3a9-4fa4-b978-f35270970a0c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8518669b-cb52-4c4e-9707-5000674c112b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0796b65-c8bc-49da-8ffe-0b53328e0eba",
        "cursor": {
          "ref": "becb7a29-36a3-45e0-8f9b-b20c743c4bce",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1e134fa8-bdab-42de-b240-29a4a8073fe9"
        },
        "item": {
          "id": "f0796b65-c8bc-49da-8ffe-0b53328e0eba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "77efbf23-49c9-4b8b-a9ad-11334f8e353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12fd7c-ed86-43ad-9b5b-09c8ae7bc885",
        "cursor": {
          "ref": "defc5eca-375f-4669-9909-43b0538df5ce",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1095ad96-e6b7-4af4-bc09-481b6a31f478"
        },
        "item": {
          "id": "6e12fd7c-ed86-43ad-9b5b-09c8ae7bc885",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dfb56952-f064-40a5-b6b3-90271d0afb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a960ec6-9a58-4e35-82a1-884ff71012c6",
        "cursor": {
          "ref": "283c7e48-2021-41d7-ab94-7e26aefad7a2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "115fa43d-1c02-4fed-87bf-018a2389c6f5"
        },
        "item": {
          "id": "8a960ec6-9a58-4e35-82a1-884ff71012c6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fc65f1c9-702f-459e-ba2b-ece97457a3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62995c21-7c3b-4cb4-a9e0-e94649abb8fa",
        "cursor": {
          "ref": "178dc639-afc1-4240-8eca-eadc22aa194e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b502302-3a0b-4e63-93d8-c9e6e65fec08"
        },
        "item": {
          "id": "62995c21-7c3b-4cb4-a9e0-e94649abb8fa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "15a66b3c-920e-4e74-9c9e-8c7a0e71c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f14f04-240f-4c9f-ad1b-f94c79a75400",
        "cursor": {
          "ref": "f97556ec-4828-471b-96ef-854ddd808c72",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "779fdb81-bab1-4a59-a003-864164885069"
        },
        "item": {
          "id": "95f14f04-240f-4c9f-ad1b-f94c79a75400",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6e379c2d-d691-45ce-9b78-26eb4ecf5e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb8ddb-5e6f-473c-bf5f-882f666df914",
        "cursor": {
          "ref": "6aec7d45-2480-4015-978a-4c4c4355327b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dcb601d6-6e5a-4d44-a036-3e1503734e62"
        },
        "item": {
          "id": "a5bb8ddb-5e6f-473c-bf5f-882f666df914",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c4a4bfdd-89f1-4933-86ea-e501e18f7339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1fb2bc-23cc-4a7b-84cf-b110701cad75",
        "cursor": {
          "ref": "9460ee42-12a3-469e-9656-4e95d734e559",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "870c95ac-4eb4-4642-8617-68406bf0f1ad"
        },
        "item": {
          "id": "5f1fb2bc-23cc-4a7b-84cf-b110701cad75",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "125ae263-b379-4ab8-90d2-85ace4cd93f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0f538d-509a-490c-9dc0-273633eb6b0b",
        "cursor": {
          "ref": "7aef7a43-3698-4960-a887-24867a0c0e76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb10f925-3d2a-4ddf-9ead-d317478c0c63"
        },
        "item": {
          "id": "1c0f538d-509a-490c-9dc0-273633eb6b0b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc25eb36-8f8d-4552-8913-372f87c7999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54b04dc-1f42-4194-b007-c4447b10f848",
        "cursor": {
          "ref": "897e67c6-e52d-462b-a325-920c7ca9960b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bd806282-16b2-40eb-994c-1fdb3e818df2"
        },
        "item": {
          "id": "a54b04dc-1f42-4194-b007-c4447b10f848",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8918220e-1c1d-4bd8-8337-9c3146925490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a2e6da-bf2a-469e-9752-7540880c09fb",
        "cursor": {
          "ref": "84a6a688-d00d-4258-b42c-1910f996ece3",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6aed8bf2-2729-406c-9a5a-3299165b2493"
        },
        "item": {
          "id": "17a2e6da-bf2a-469e-9752-7540880c09fb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f5c5135c-3871-4ad7-8dc4-0795194c8b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a23b4-af5f-4558-9653-d4e8ea18d3d6",
        "cursor": {
          "ref": "b161607c-ce9c-4286-b6a6-516d23bc4548",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0cfb21be-f67b-4fcd-aa9e-da000a9cf911"
        },
        "item": {
          "id": "973a23b4-af5f-4558-9653-d4e8ea18d3d6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cbc49fcf-5fc2-46af-bac5-ad76d96a5cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dc90fb-303e-4a29-818a-694bdac14689",
        "cursor": {
          "ref": "3cc46f78-3012-47b1-b992-cce042e2a027",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ca440bbb-6a48-4b35-9068-500f7651818a"
        },
        "item": {
          "id": "b6dc90fb-303e-4a29-818a-694bdac14689",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a8920941-edb6-4e78-9406-6b45870d068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8c7653-7e72-4c3b-ac33-5e75b65e3b67",
        "cursor": {
          "ref": "c16dcf12-1c01-4709-8519-7ceb7ab0e9ef",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2982078b-cecb-4525-8ece-87b411e189ea"
        },
        "item": {
          "id": "0c8c7653-7e72-4c3b-ac33-5e75b65e3b67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4754715e-e599-44da-92b1-11ad389d6446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613c65b6-8692-46b5-8023-4eae88d5eb75",
        "cursor": {
          "ref": "464fc959-f1bc-405b-afa0-d06806e418ed",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "64637c62-f401-47a4-8ac6-c87d903e0b24"
        },
        "item": {
          "id": "613c65b6-8692-46b5-8023-4eae88d5eb75",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "216356b2-7662-4715-92e3-a4a7b217db08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2abd13-420a-4cee-94a7-48a4f3a96000",
        "cursor": {
          "ref": "9e474597-9be3-4a09-83a7-a91a13540f0c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "92a56809-cbd9-4f9e-ac04-5e9ec3285c94"
        },
        "item": {
          "id": "7e2abd13-420a-4cee-94a7-48a4f3a96000",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b76b47b3-46b3-4bc4-98bb-57eddeffdc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ee4ca6-c147-4fae-a360-8233b6ce0abe",
        "cursor": {
          "ref": "e8e56106-d339-4219-af7c-af094b2edc66",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b3876e53-8eb5-4913-af65-04cd4f86a1c6"
        },
        "item": {
          "id": "68ee4ca6-c147-4fae-a360-8233b6ce0abe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3de71a02-e132-4f6e-8215-7c999d4378a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9268dc09-d0be-465c-8ffb-6ed7d5dab77f",
        "cursor": {
          "ref": "61487123-8791-43ae-88e1-1b928855fe38",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e87fedea-3223-4d3b-b016-7e415b5d31f0"
        },
        "item": {
          "id": "9268dc09-d0be-465c-8ffb-6ed7d5dab77f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2692d39d-f2e7-4ba0-8ab2-ccf322a06a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c169e8dc-4fc1-4f2f-84a0-244452c235f4",
        "cursor": {
          "ref": "dabe0623-f2ce-45ae-8043-5bc84a5bf0a2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8ef8ec55-27a3-41ba-a113-af40fbe1cb52"
        },
        "item": {
          "id": "c169e8dc-4fc1-4f2f-84a0-244452c235f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c54b97c7-7312-4574-ad37-f9dc61f1d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c304761a-32e8-45b2-8d8b-af5a7f270d91",
        "cursor": {
          "ref": "e6eb646a-76e5-4a32-a3c2-6d80a7f90298",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c43ae3a0-e265-4de3-a49f-796beba008f5"
        },
        "item": {
          "id": "c304761a-32e8-45b2-8d8b-af5a7f270d91",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "45c0c091-4e7b-4501-995d-2443ad6fd5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b614aef-28bb-46fa-845b-491d3f29c50e",
        "cursor": {
          "ref": "ab8fa091-15a4-46e4-be13-0fa9f0504b1d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b6403d2e-9680-4113-90d7-f5e77b20ff8c"
        },
        "item": {
          "id": "0b614aef-28bb-46fa-845b-491d3f29c50e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3c2d701-a3a8-403b-934f-b056d5eb8306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652bd389-4d8e-4df6-8fca-e2f25553216f",
        "cursor": {
          "ref": "44258379-82b3-4f86-98bc-a396aefd49da",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "00a0fa69-0aae-4bfe-8797-dc80665096f8"
        },
        "item": {
          "id": "652bd389-4d8e-4df6-8fca-e2f25553216f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f70748a8-66ed-438f-a684-eba0c3268a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c457fc-b8fb-4149-ad29-64402e9cdc9a",
        "cursor": {
          "ref": "19bafabd-bb49-4238-b5fc-617eef1fed3d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a10955ad-2f79-427c-bd71-a6957edb00db"
        },
        "item": {
          "id": "93c457fc-b8fb-4149-ad29-64402e9cdc9a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3b6b39d-2a14-4051-a336-1a0221c177d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee7e9f7-0598-44ac-bf92-a144db565ed3",
        "cursor": {
          "ref": "986c569b-3aed-4fb1-ba4f-e3a9f9da8f46",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7ff20e98-49d3-4d76-b80c-80137e84e6f8"
        },
        "item": {
          "id": "1ee7e9f7-0598-44ac-bf92-a144db565ed3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "416ba2be-645c-4e8b-bd77-6ef237aa8eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1578e9cf-70e9-48d3-9b72-2d9a2d54b4a6",
        "cursor": {
          "ref": "b520f322-05e6-432a-9885-de30b2f906b4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04e45e7e-87d0-4445-bd93-115c45e0e416"
        },
        "item": {
          "id": "1578e9cf-70e9-48d3-9b72-2d9a2d54b4a6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "635f0ec2-8f5d-4914-9421-e6aea3c66688",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b161341-1047-40a6-a8e3-4374962a8b4c",
        "cursor": {
          "ref": "79f1d4df-78b9-4dd0-9567-9b14132ef616",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed1338d2-dc64-4343-a8bc-3f644ff25071"
        },
        "item": {
          "id": "6b161341-1047-40a6-a8e3-4374962a8b4c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a8015622-6a24-46d7-b2f4-c896a06ef7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12838bfd-0bf1-4725-951b-149ce4eca4e8",
        "cursor": {
          "ref": "1f5365b4-3bcd-4a0f-b8d0-9cacb49912d7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0dfb484-136c-4c62-93ab-636bc2e8ae7b"
        },
        "item": {
          "id": "12838bfd-0bf1-4725-951b-149ce4eca4e8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d0c8ed5a-18ab-4b75-a90c-58c0a2f095d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721b229a-ac24-42b3-9b5e-46c23374f89f",
        "cursor": {
          "ref": "2b89f679-e8c6-4d4a-82f9-4d81a1823927",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a78e9d92-c463-44ee-ab80-8083ff135009"
        },
        "item": {
          "id": "721b229a-ac24-42b3-9b5e-46c23374f89f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5cba193e-58e1-4f8d-b20d-059567b401c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309f28ef-44ad-4cca-b9c9-c8a13012129c",
        "cursor": {
          "ref": "535ce2c1-757e-45e9-be55-18c5ebeadb34",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8139b63a-03bc-4754-9543-3f92d97a5527"
        },
        "item": {
          "id": "309f28ef-44ad-4cca-b9c9-c8a13012129c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3185456-aeb6-4654-8e27-dd28123148f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20013862-8738-42eb-9074-f33ebd19225f",
        "cursor": {
          "ref": "533595f4-76a8-47ab-9b9b-9133256b4a02",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e5d03d41-8a45-4b52-910e-be97d075d2f3"
        },
        "item": {
          "id": "20013862-8738-42eb-9074-f33ebd19225f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c8a6dd05-35d8-4e60-bbec-a4a9faf4c33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12cc716-e01c-41fe-998d-35ff3dc2b52c",
        "cursor": {
          "ref": "d3a729fa-3519-4bd7-b73b-92115705e68c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e91815a2-837d-4889-a024-5fad29e34c04"
        },
        "item": {
          "id": "d12cc716-e01c-41fe-998d-35ff3dc2b52c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "db1b187f-477e-4937-952c-fbc96c0a069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534bf25f-a2f9-4805-a19a-fb3050c13209",
        "cursor": {
          "ref": "e98244a3-c018-4cef-924c-a27b055b7be4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "da91d40e-d34f-4fff-8fb0-01e2ae3e6453"
        },
        "item": {
          "id": "534bf25f-a2f9-4805-a19a-fb3050c13209",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3dc744b-270b-467a-b7d5-9ce6b60a76b4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40775b2-3eca-4c3d-af3e-8a71cb34cc28",
        "cursor": {
          "ref": "8acd530d-fbea-4282-91ef-3689790bb1be",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "da3fbfd5-ec64-4cf4-9d2f-5883a7e629cb"
        },
        "item": {
          "id": "f40775b2-3eca-4c3d-af3e-8a71cb34cc28",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45ad840b-45ab-4e6f-9eec-492a23077678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aea48fe-8611-4ef0-a501-e4d866836099",
        "cursor": {
          "ref": "d5149001-9180-4369-b63f-d08b89b05329",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "64152999-3ad1-4a40-9dfb-91acff43d564"
        },
        "item": {
          "id": "5aea48fe-8611-4ef0-a501-e4d866836099",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a93a128a-a423-431b-aca0-25935ad75214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340b436b-481a-49da-b1f6-95a569e59c46",
        "cursor": {
          "ref": "c48ce1b0-7413-4c47-ac50-baa55c2313b1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e85fe06-dedf-4316-a0dc-1d0963a6de05"
        },
        "item": {
          "id": "340b436b-481a-49da-b1f6-95a569e59c46",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8866f154-a0f7-4ad9-b293-79100ca9857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aecadc-9121-462d-bb3c-5866a03df3c7",
        "cursor": {
          "ref": "a21d5204-dd27-48c3-be58-5fe586d4ee36",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4cca0c50-1647-4ada-9ff1-66d682d9304c"
        },
        "item": {
          "id": "33aecadc-9121-462d-bb3c-5866a03df3c7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bdebd1db-9af6-4ba0-b8af-1dc308f5cda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9e3e7-690a-4d6c-b05c-4bcaee2e4e63",
        "cursor": {
          "ref": "5ec57ebe-b7b7-4a25-a5a7-5f7a836ec28d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c8afd058-778a-4459-8840-786c09374006"
        },
        "item": {
          "id": "1fa9e3e7-690a-4d6c-b05c-4bcaee2e4e63",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6597a3e3-8d4c-43ae-937a-2472a4f110a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded5181-c6bc-413f-bcc2-105588c771cb",
        "cursor": {
          "ref": "1876d9d2-fff1-49b4-ae3e-862f7e73574a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3f7b155e-9d90-42c9-9a37-a8d1cd6ee6f4"
        },
        "item": {
          "id": "4ded5181-c6bc-413f-bcc2-105588c771cb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "724de48d-ca2a-4880-8ff5-3bc3613faf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f402f899-180c-4710-b334-0264f81c6b7a",
        "cursor": {
          "ref": "b4863289-99b8-4112-9ff5-336290657063",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e33a69f4-f161-42a4-9a73-24fe17d62ca1"
        },
        "item": {
          "id": "f402f899-180c-4710-b334-0264f81c6b7a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "52eb8b52-e335-4809-a29a-05da4bb1ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21789fc0-9752-4aab-8a6e-d7a96a768700",
        "cursor": {
          "ref": "b0a96e8d-1a3c-403d-b2b0-92619681ed89",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0875b636-9b99-49de-aacc-7b5094ea79b9"
        },
        "item": {
          "id": "21789fc0-9752-4aab-8a6e-d7a96a768700",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6e399e11-33ee-4938-b319-228d94907abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524909fc-7006-496d-a070-7035e0e4917c",
        "cursor": {
          "ref": "3c656593-0f22-48a9-bf2b-6220bc6acf86",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b98a9ae4-c593-422a-9644-0d1981ef01c1"
        },
        "item": {
          "id": "524909fc-7006-496d-a070-7035e0e4917c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d1973835-a844-48cc-ba66-ba8896387822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b22c78-483c-4593-a3ae-244fd859a09c",
        "cursor": {
          "ref": "963fd393-a886-4e0c-aec7-265e4fbf234a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d122a6e9-5d73-425b-a0d6-4c09e8ff13cb"
        },
        "item": {
          "id": "72b22c78-483c-4593-a3ae-244fd859a09c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b01ca688-25a0-436c-93f7-f9b79d7ad51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaefdba-f2f6-47e2-a4cf-bd779d064e3f",
        "cursor": {
          "ref": "b5b64473-22dd-42fd-bda2-bc5f0e69f4f9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ecda9923-e845-4640-bd43-2fdbb41e5bfe"
        },
        "item": {
          "id": "cdaefdba-f2f6-47e2-a4cf-bd779d064e3f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "51f17b2f-9be9-4a58-a455-562effa256df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e052f7-ac24-4429-a8f5-cf30547861b7",
        "cursor": {
          "ref": "9622d680-e2f4-4109-9feb-afec78149a6d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1b51de9e-5962-45aa-bcc8-66b620de53f1"
        },
        "item": {
          "id": "c9e052f7-ac24-4429-a8f5-cf30547861b7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ff26bee0-be49-4012-aef9-4e3910d78d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d868e16-f341-4d05-985d-3905ceaeb0b0",
        "cursor": {
          "ref": "3fa65686-9d63-465f-8ea6-6609f5cc8d4d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f44ea5f2-d117-469d-b3a4-eb24579a3faa"
        },
        "item": {
          "id": "8d868e16-f341-4d05-985d-3905ceaeb0b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cedba6cd-17c9-4144-97cb-c8a149f42b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f073f4-a4ee-42af-90b9-119548808699",
        "cursor": {
          "ref": "997ea460-f6bf-41b0-b18a-b5a74c1e2549",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2a5b6a6e-5e3f-4661-b040-afd766b23d18"
        },
        "item": {
          "id": "91f073f4-a4ee-42af-90b9-119548808699",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ad4a07cd-61a8-4e42-a502-7f0fa8bb7dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3231955-85bd-4840-a037-3424264cbcff",
        "cursor": {
          "ref": "9385c6f1-070f-4c9d-961d-001052b6f88b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "98726d7c-23f5-4b69-940c-97f18fd5ebe8"
        },
        "item": {
          "id": "e3231955-85bd-4840-a037-3424264cbcff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "29c42e13-bca0-495d-ab9a-70b6e9f35193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638319e6-6f02-44bd-8ad6-3d181b8af8ad",
        "cursor": {
          "ref": "fed8d9b0-2812-4c87-ad32-02ff8dcfc342",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "14c83569-e009-4eca-a921-1d42fc0dc3f4"
        },
        "item": {
          "id": "638319e6-6f02-44bd-8ad6-3d181b8af8ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5240fa7-e060-46d4-826b-758003be5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2639582-9efa-47e6-98a4-906d6779e58e",
        "cursor": {
          "ref": "43042c08-9bac-40e9-aff0-e012c0e249a4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a3266620-84c3-4bd1-8cea-ff447113dfac"
        },
        "item": {
          "id": "d2639582-9efa-47e6-98a4-906d6779e58e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "21a5bf85-57b4-48d9-8806-30068af80600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d8e15b-406a-482f-b22a-fa5f59f419b5",
        "cursor": {
          "ref": "98f5f12d-5bd8-4f72-ad54-50ee0bebed2c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "736d1632-00f5-4fbf-be99-60956d4aa077"
        },
        "item": {
          "id": "d3d8e15b-406a-482f-b22a-fa5f59f419b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b6314c0a-2fc5-4b8d-a3cf-f4f997894b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b71ca51-48e0-4fff-a230-29ef09904c3a",
        "cursor": {
          "ref": "13054dd3-c49d-4fa1-8f08-393179201d75",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "742f4d15-f812-4f16-b9ee-5f8ad572deb4"
        },
        "item": {
          "id": "4b71ca51-48e0-4fff-a230-29ef09904c3a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "63304d22-46b5-44fb-a0bf-c92663cb449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fa92c8-f573-410e-b777-e9b199e34224",
        "cursor": {
          "ref": "28a354d9-f504-4c89-a793-5aeb365f79ec",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6b8ca0c3-4cc1-4088-8607-7309e61fe2bd"
        },
        "item": {
          "id": "70fa92c8-f573-410e-b777-e9b199e34224",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a76af882-e3ec-4142-a782-02579109c911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79680b81-224d-4e87-9c4a-0f7c5b3711ec",
        "cursor": {
          "ref": "81112e7b-b982-4e00-a061-36ed6f275411",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9bcaa0f0-f496-41dc-8643-681fa1d7cf97"
        },
        "item": {
          "id": "79680b81-224d-4e87-9c4a-0f7c5b3711ec",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "15adeb4d-434b-4a64-860f-41a38d8623e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb077d3-a7e3-42fd-9769-2c6036fef65a",
        "cursor": {
          "ref": "8ff63a2b-d644-42bf-8114-8aa3134d6709",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f935fe65-5c77-485e-9e8a-90000fe6de27"
        },
        "item": {
          "id": "9fb077d3-a7e3-42fd-9769-2c6036fef65a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b2b1dfc6-7abe-474f-91f4-2b2d81d478f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af72b6ea-17fb-4fac-ab44-4b71dfc9de32",
        "cursor": {
          "ref": "933f43e7-70e6-46fb-ad55-4fb5bd4037d1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "900d19ed-cb1f-45f4-9f07-40f205ce83c5"
        },
        "item": {
          "id": "af72b6ea-17fb-4fac-ab44-4b71dfc9de32",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "98d5ed0d-f28e-4f3c-b512-0261e3a23fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71985508-a29a-4180-a12b-9fa804ae3922",
        "cursor": {
          "ref": "400107da-26b7-4bcd-8bea-1c456d012947",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "89d8caef-3ca2-446d-b79f-7be933e26add"
        },
        "item": {
          "id": "71985508-a29a-4180-a12b-9fa804ae3922",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "492abb1e-c3fe-48bc-b276-941999806095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb654df-34ad-454e-a687-c03318b9d33f",
        "cursor": {
          "ref": "72c6a357-a42a-44b8-af70-1162837d69f3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f2453799-41e1-4706-8099-be7101e89d8b"
        },
        "item": {
          "id": "cfb654df-34ad-454e-a687-c03318b9d33f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c0ee9a7e-c658-46c6-95e8-4ff1364b845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64cc286-68b6-43ac-b566-b97620a85d66",
        "cursor": {
          "ref": "dda9f517-6849-4282-b240-25686e2f9c76",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "373f68fc-f5cb-4c39-9d65-eb56b81f9e5c"
        },
        "item": {
          "id": "e64cc286-68b6-43ac-b566-b97620a85d66",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6cdfaa73-fdbd-4bbe-9584-77d5b3b38d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538e2ca3-fa75-4013-8d07-1f8242fbeb0f",
        "cursor": {
          "ref": "9fbce194-0bb0-4820-9162-4c71ab0c8984",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "80c732ad-6cca-4f9a-9008-2a1150a7eb73"
        },
        "item": {
          "id": "538e2ca3-fa75-4013-8d07-1f8242fbeb0f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f8246b15-d40c-48b3-a147-5b2020b43da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7f7ad6-eb5f-48ea-911a-eaa79d79e0bd",
        "cursor": {
          "ref": "c9869935-3486-40a2-87f5-871dffa59d1c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd9007c8-c4a5-4e9c-90af-d37bc24a31b7"
        },
        "item": {
          "id": "ca7f7ad6-eb5f-48ea-911a-eaa79d79e0bd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c4861d4f-0372-40e0-8ae1-9fe5c7609dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45252351-bf0d-4378-85b1-605de822bb2d",
        "cursor": {
          "ref": "acfa32e0-ef56-4e13-827c-3270d3bc6b4d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f2d44b02-881e-4b6a-8777-b3c1fa10a6e5"
        },
        "item": {
          "id": "45252351-bf0d-4378-85b1-605de822bb2d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1db7736a-fcbd-4104-850d-7442b4a15932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c21172-1d27-44f7-a4a2-c7075406a41c",
        "cursor": {
          "ref": "0d65ecae-31fc-4bfb-aebf-b07fd4a64733",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48a6072b-7cd9-4858-b2d7-3fd3b6857a1d"
        },
        "item": {
          "id": "f4c21172-1d27-44f7-a4a2-c7075406a41c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "df8c2b66-a159-4892-be66-9e67f6326e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b6d3aa-591f-4026-a6ba-131a2284a7fd",
        "cursor": {
          "ref": "3033e20c-2c7b-464d-aa65-14ebe00f6fb5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "061ad158-1263-4304-8c24-c452b4a2da1d"
        },
        "item": {
          "id": "35b6d3aa-591f-4026-a6ba-131a2284a7fd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "86352eb6-a71b-4fc3-bd3b-dd6d77f76ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01806d-6723-4a9e-8763-21097687d35a",
        "cursor": {
          "ref": "a954577a-a121-46e8-8665-da0adb8ca1e2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "877b11ff-d859-4c56-a9e7-4f73726c2fbd"
        },
        "item": {
          "id": "2a01806d-6723-4a9e-8763-21097687d35a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2db506e5-f518-4c92-ab0a-a427968e3cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d9d5b0-b138-4b29-8426-2cd80ad2d145",
        "cursor": {
          "ref": "726f2451-2ed8-4c01-a0b3-8a355c8addd2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "84bc1e74-f26a-404e-8dfd-0b2cbc1762c3"
        },
        "item": {
          "id": "66d9d5b0-b138-4b29-8426-2cd80ad2d145",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "77ebd104-0405-4552-8653-2c385fd4bc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac34fb6-efa4-473a-b07e-dd3011ae5420",
        "cursor": {
          "ref": "fde2fa83-740b-434b-b585-deac762ddb3d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "778dad27-6f54-4a3e-83cc-18f16b94b3d5"
        },
        "item": {
          "id": "1ac34fb6-efa4-473a-b07e-dd3011ae5420",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "79a615fc-ce9d-4857-a829-d838ce691e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f95fa6-a078-42db-94bf-d65896f71ca3",
        "cursor": {
          "ref": "3afbebe9-e04a-42dd-9272-12ccbf66afc1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7c461b1c-f70d-4cca-b83b-06cada5270ca"
        },
        "item": {
          "id": "d0f95fa6-a078-42db-94bf-d65896f71ca3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5be740b9-f9d8-4af7-81a7-0a8c9892d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3f3eb2-8927-4dee-af69-df65ce3f5b24",
        "cursor": {
          "ref": "91d8f414-236f-493d-a18f-898cbfa30115",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "189cde1b-1619-4a7f-98b8-fe3354a80b16"
        },
        "item": {
          "id": "7c3f3eb2-8927-4dee-af69-df65ce3f5b24",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b26c3d06-43b3-4baf-8767-b536b5850845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8b9b36-0bb2-4015-8562-d1aca097ab77",
        "cursor": {
          "ref": "b68274d3-2697-407d-976f-c23ae14714b7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1cac1829-d2ee-4952-bcf6-f170ab835fe0"
        },
        "item": {
          "id": "9f8b9b36-0bb2-4015-8562-d1aca097ab77",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e15288a9-935a-4b0a-9109-0032fc82353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe1244-68b2-4457-a98e-c6dc8c69b7d4",
        "cursor": {
          "ref": "8b1c2eaa-a067-46b3-afe1-381fd7823d38",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1983204b-a125-482a-b1a2-6b0a85ceba42"
        },
        "item": {
          "id": "72fe1244-68b2-4457-a98e-c6dc8c69b7d4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7318f4ef-052f-456d-be80-d694e3fe771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2484a1-26e1-49d3-ba72-c9bbf4147a85",
        "cursor": {
          "ref": "bc333774-2185-436e-84f4-045d026fb82b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cb3fddb5-a06d-4983-b3ca-564941ac1401"
        },
        "item": {
          "id": "ed2484a1-26e1-49d3-ba72-c9bbf4147a85",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "72cc0ba2-485c-452f-b20a-d3f97a323197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec68e8-aae4-4517-ae64-ee40058663aa",
        "cursor": {
          "ref": "d34591b3-7c6e-4f5e-9cc2-ff6b42e288a0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5e18261e-d80e-45b5-b149-712a68085044"
        },
        "item": {
          "id": "3dec68e8-aae4-4517-ae64-ee40058663aa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a21b06d9-0451-4a4f-979c-5eb78913f0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614735e3-68d9-4049-901f-d601f5c7a04c",
        "cursor": {
          "ref": "8c5a08e2-621d-46e8-9c1e-bbaa11fdb0b7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "81d0fc92-8f18-4154-a554-861cb2503da1"
        },
        "item": {
          "id": "614735e3-68d9-4049-901f-d601f5c7a04c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3a9222d1-276e-4158-9b9a-8aeaf302b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5907513-b2b1-4ae1-93c5-a9ff979e709d",
        "cursor": {
          "ref": "d517bb3c-37b8-4482-96de-1204c5fecaf3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec615ed2-0e07-4471-a3f6-07d1026a9f74"
        },
        "item": {
          "id": "e5907513-b2b1-4ae1-93c5-a9ff979e709d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7541174c-5cc0-4abf-944d-559744020c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4313abc-2fb0-4ec6-8f90-0d94240fbbaa",
        "cursor": {
          "ref": "caed4d66-334a-4efe-8aea-8254bf3fece0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9cae1317-84c2-4dde-8845-012db191a669"
        },
        "item": {
          "id": "e4313abc-2fb0-4ec6-8f90-0d94240fbbaa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "257907c9-b94f-4c97-8e28-5c4f8b8d0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634670b4-0e97-45f0-9054-5f80c41f46df",
        "cursor": {
          "ref": "f1c5ad55-229c-4e96-80c3-db568361394e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "25ee6e92-2888-471b-a740-7d14626ff515"
        },
        "item": {
          "id": "634670b4-0e97-45f0-9054-5f80c41f46df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "93194659-f55f-4b39-b0e9-1523dc7900f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d877760c-ed12-4ec9-8295-58441aa2ba51",
        "cursor": {
          "ref": "bea98771-7590-456b-a2d2-f09481b21edd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "145bcab6-697a-4eb7-b8af-a1a7324d2893"
        },
        "item": {
          "id": "d877760c-ed12-4ec9-8295-58441aa2ba51",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f29bc059-b73f-4dc4-be9d-f381bcc27e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b1e725-8dfb-42b7-bf3b-41f5493a9b37",
        "cursor": {
          "ref": "96ddaa53-93cf-4469-8b3c-b63d2518df02",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0e68b0d3-6c58-48b1-ad0e-5428df504339"
        },
        "item": {
          "id": "d0b1e725-8dfb-42b7-bf3b-41f5493a9b37",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "02eba161-f696-49b0-ae90-3814133c8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c5ec6d-1bb2-425c-a62b-ffd5a2e54117",
        "cursor": {
          "ref": "d7ac0a6d-5974-42da-bbdc-200ee83c6bc3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc506364-3eef-4398-99c5-4c5225f809c7"
        },
        "item": {
          "id": "79c5ec6d-1bb2-425c-a62b-ffd5a2e54117",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8bc3ff8c-3ec6-4672-9da8-641b5abc65e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fd4311-1466-4ad1-9943-a8d85ac4286b",
        "cursor": {
          "ref": "8289efde-d448-4b6e-bfbb-6914edf43be3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "258af6ef-e139-42cd-a436-98396d56c845"
        },
        "item": {
          "id": "53fd4311-1466-4ad1-9943-a8d85ac4286b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8e57b6b-e787-4c13-81c4-3135769515ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db03f9b-9766-4438-a761-93758a1e53bf",
        "cursor": {
          "ref": "afb80d7f-14be-4e69-8aab-4dd1826fca18",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8f21e11-4bc3-45b0-b9c0-595f06f86938"
        },
        "item": {
          "id": "3db03f9b-9766-4438-a761-93758a1e53bf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "63552a2d-8ced-4271-a799-1f186286dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1479e57b-e0ec-4c59-8031-1c96207db995",
        "cursor": {
          "ref": "67866a02-3fe8-4f77-8b42-d5e6fa695673",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "07074d1e-196b-4533-8806-4f9bc704a518"
        },
        "item": {
          "id": "1479e57b-e0ec-4c59-8031-1c96207db995",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "11caaf85-3b96-417f-abf5-cd121e38f2ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d73b83-0fd5-4cb9-ba4f-2c0199e7ed73",
        "cursor": {
          "ref": "78fdddce-08f5-4751-b9a0-fb69cffe66b0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb9e28f4-31df-4296-b1db-093249dcf8f5"
        },
        "item": {
          "id": "90d73b83-0fd5-4cb9-ba4f-2c0199e7ed73",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3cd42194-050f-4e08-87c9-56a3d2bd1a17",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 45,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b58c47-2002-4dd5-ac32-2449241f0506",
        "cursor": {
          "ref": "64f1c619-7806-4462-8cfc-10fc48cfe9ad",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "356a350c-5b83-4dea-b973-a9b89c65ceb9"
        },
        "item": {
          "id": "d8b58c47-2002-4dd5-ac32-2449241f0506",
          "name": "credentials_issue"
        },
        "response": {
          "id": "800e7ec1-f28b-44b8-8f85-a3e1311f2d43",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24777e8-567d-43f9-825d-fa41f597d4e0",
        "cursor": {
          "ref": "2531231e-2e49-4d95-a232-96c9f3053e38",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ee42f5a7-40f0-4cad-97ff-a0c9ca409944"
        },
        "item": {
          "id": "e24777e8-567d-43f9-825d-fa41f597d4e0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "89566d68-6a2b-43c6-88e1-5d52c976ed47",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "161fe924-d8fe-40e7-8d6f-a8ed94b07b90",
        "cursor": {
          "ref": "a6b52a39-b485-4f58-af42-528c1c317c94",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d4a462a-6ff2-48a6-b5c7-459302abd004"
        },
        "item": {
          "id": "161fe924-d8fe-40e7-8d6f-a8ed94b07b90",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "27026b73-6687-4e85-8c4d-46bdaf05676f",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2205ec-8737-4046-93ee-770888be47c7",
        "cursor": {
          "ref": "b8591680-c81a-4161-b870-ff2846dffeb3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bd541c1d-c3cf-4afb-8815-4a9e3ed82e03"
        },
        "item": {
          "id": "6f2205ec-8737-4046-93ee-770888be47c7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6243274e-6f70-43d7-9c9c-b355517ffed1",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f0654-d294-4d10-a8d0-e1c7da73dfc5",
        "cursor": {
          "ref": "3ebc93b4-e542-4c40-8df6-52a0967d8d4e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ad69c879-3956-4655-a2ba-2379064c5f0f"
        },
        "item": {
          "id": "a77f0654-d294-4d10-a8d0-e1c7da73dfc5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b49ea183-4c47-441e-8838-ab66dd534c00",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6b30c5-6aa5-46a9-b866-e2bc784f5055",
        "cursor": {
          "ref": "27f034c7-3157-477e-a531-90e7d6d9dd05",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94838cae-1ca1-4a54-b770-a30e99d49fde"
        },
        "item": {
          "id": "dc6b30c5-6aa5-46a9-b866-e2bc784f5055",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7116663d-eb93-4871-af2c-3c0d2c14cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6b30c5-6aa5-46a9-b866-e2bc784f5055",
        "cursor": {
          "ref": "27f034c7-3157-477e-a531-90e7d6d9dd05",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94838cae-1ca1-4a54-b770-a30e99d49fde"
        },
        "item": {
          "id": "dc6b30c5-6aa5-46a9-b866-e2bc784f5055",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7116663d-eb93-4871-af2c-3c0d2c14cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7129c-1642-4e25-8cde-5ced26e5839f",
        "cursor": {
          "ref": "0c45e9b2-74ae-4aa2-9f0a-7dd318bb6005",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eef8b64b-7ab2-4133-86cf-510badb595ee"
        },
        "item": {
          "id": "80f7129c-1642-4e25-8cde-5ced26e5839f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2499ba9f-8893-4a3c-8778-b0785bb92d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad8dceb-213a-465f-bc64-736585426f33",
        "cursor": {
          "ref": "86b0111f-e7e4-4487-8a26-09af479fc909",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6433ab39-e345-48ed-b685-4805f5e6b245"
        },
        "item": {
          "id": "fad8dceb-213a-465f-bc64-736585426f33",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "307edb6f-78ae-4d47-912d-d180ff967cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab4d916-7719-4710-a01e-c8c777ead588",
        "cursor": {
          "ref": "39a42bea-2cef-4a48-a0e1-5597ee214094",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "da726a1e-e19e-4d88-969c-2c8d14bd7875"
        },
        "item": {
          "id": "0ab4d916-7719-4710-a01e-c8c777ead588",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "031c7ec2-9f1f-4535-b37a-74d9bbf02a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c69a4ed-3bdd-410c-8c09-ed315acbc153",
        "cursor": {
          "ref": "7488bf31-a9b9-4503-ad2c-1353fd37000b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7cf813a7-32ce-44d8-b6f6-69406bc6cc5b"
        },
        "item": {
          "id": "5c69a4ed-3bdd-410c-8c09-ed315acbc153",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bdbaef7a-052a-4d50-b671-f912b1764c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791ac00f-c220-4d75-bcab-d84f455e1204",
        "cursor": {
          "ref": "e414e059-94db-48d5-9433-25b4f655fe0c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3db45143-cd79-4a93-a589-5eae75138e44"
        },
        "item": {
          "id": "791ac00f-c220-4d75-bcab-d84f455e1204",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2734b456-9bfa-447a-8585-4332998e05d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baea04e-d49a-4744-a0d9-e90fa10ba2f8",
        "cursor": {
          "ref": "5fd08dc5-c3ae-4a5b-ac68-16bfce82e8b2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b8fb7882-0136-4ce3-8a47-162353333827"
        },
        "item": {
          "id": "5baea04e-d49a-4744-a0d9-e90fa10ba2f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d09f34e7-ff84-40c7-b7e3-746fa4bb538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403e07f5-55d7-4543-8e0b-6215c92d6e25",
        "cursor": {
          "ref": "4880e07d-610d-4d04-be12-a88b1e285def",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "82e301b0-9d52-4826-849a-5e2feb58d9dc"
        },
        "item": {
          "id": "403e07f5-55d7-4543-8e0b-6215c92d6e25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "843e6ff2-5857-45cd-b84d-6a50daed5e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729a3038-b33d-4e0b-b98b-dd2dd83cc131",
        "cursor": {
          "ref": "d717c19e-782a-417b-bd01-33134da72a0d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c913eb27-4a26-4d6f-8694-6bb7990c2133"
        },
        "item": {
          "id": "729a3038-b33d-4e0b-b98b-dd2dd83cc131",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "600fc3ae-3c39-42cd-ace1-13c0ad8d6bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ae3c6-7abb-44a1-bafa-eeaced613fbd",
        "cursor": {
          "ref": "c90e2c16-90bf-4500-9107-9907d6412ce4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bce100c3-4373-4132-b8bf-22542ca2c459"
        },
        "item": {
          "id": "929ae3c6-7abb-44a1-bafa-eeaced613fbd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc473cda-2b26-4e3e-8c63-1ab7e9281c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1194a80-f2a3-4b37-86eb-ff3d867cc4b4",
        "cursor": {
          "ref": "89548239-9dab-42e7-ad0e-5b2f240834e9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f45f5f97-61d2-4a56-b65d-7973f4e19bf4"
        },
        "item": {
          "id": "e1194a80-f2a3-4b37-86eb-ff3d867cc4b4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "59c2b4b8-9a0d-48a4-9db5-9079c2457fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c2776-7229-4850-ae47-ced4cf5a0d9c",
        "cursor": {
          "ref": "164f0a31-1b9e-4161-802f-1790cfe40f15",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d2990eda-7b23-4db2-8a8c-e8a13e313793"
        },
        "item": {
          "id": "ed7c2776-7229-4850-ae47-ced4cf5a0d9c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4d01d471-8576-46b0-b0e4-4acab39193e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2620ebf8-f2ed-4574-8e87-53f5dad31327",
        "cursor": {
          "ref": "17b61a31-ede1-498d-bd64-ea83cc49e56a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "71a5f9d6-f8fe-4d91-88f0-94a3ef9d5ea7"
        },
        "item": {
          "id": "2620ebf8-f2ed-4574-8e87-53f5dad31327",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a893ef67-7164-4ed3-b448-6c4a2d23243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918240ec-1e4c-47ed-8fe2-7ab89b2801fa",
        "cursor": {
          "ref": "6414a220-77d3-440f-9132-e53f767e4fac",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "612256f9-dee3-420e-b010-bbbf127c89fc"
        },
        "item": {
          "id": "918240ec-1e4c-47ed-8fe2-7ab89b2801fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f183697-11e9-48bb-91ae-c3afccc537d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8d84d-a119-4794-a135-8b4b809346d4",
        "cursor": {
          "ref": "ed92cf2f-defb-47ea-90ce-5ff18e7d6824",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5644174c-8fc2-4f8b-8a18-7f6478403424"
        },
        "item": {
          "id": "23f8d84d-a119-4794-a135-8b4b809346d4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68898240-d5a9-4637-acb4-3bfc068b1028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181433f1-cb64-46e8-816b-776ac5032943",
        "cursor": {
          "ref": "5f34bbab-3012-42a0-96cc-1b4f35eed57b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2f9d5fa-bfb1-489a-8bd9-c3158e0a118b"
        },
        "item": {
          "id": "181433f1-cb64-46e8-816b-776ac5032943",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e6300f1-9dae-421d-886e-6d148bad388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf6658c-e59e-484c-b87b-c00f36bc775a",
        "cursor": {
          "ref": "fec44c7c-a9de-4d1f-8af0-7b7094b969a9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cebb8a55-025b-4442-a284-a66d6ccb96a6"
        },
        "item": {
          "id": "daf6658c-e59e-484c-b87b-c00f36bc775a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "660ff21c-ac69-463e-8a9e-7c9055fc76eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f936e01-232c-4d92-94e0-85bc78fb3e45",
        "cursor": {
          "ref": "ceaf7f70-99fa-4ccf-9fe5-b161e0dd25df",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cb31acc7-4415-4342-aab1-ccd73cb2c0a0"
        },
        "item": {
          "id": "6f936e01-232c-4d92-94e0-85bc78fb3e45",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4829e19e-14c1-4103-9f12-fcf77a24d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d292c6-4a5a-4877-abe8-90cbeb9677cb",
        "cursor": {
          "ref": "89a0a8d6-b18c-4e10-83ec-084ef04dbf3e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1dd3a07-679c-432f-bdf8-7142d94453a4"
        },
        "item": {
          "id": "91d292c6-4a5a-4877-abe8-90cbeb9677cb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "73429314-e8d9-4875-92c6-da03eac62661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2d297c-bdfd-408d-b0ec-ec4ce7889d98",
        "cursor": {
          "ref": "f846cf10-118e-44b7-97a9-fa528beb4f4a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f14b1d76-08de-4d7f-925f-6a6a6d7996b6"
        },
        "item": {
          "id": "ec2d297c-bdfd-408d-b0ec-ec4ce7889d98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ac5f8397-43e0-4137-82da-6afadab5d523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950b3200-705f-45c4-baee-06b684d71ebf",
        "cursor": {
          "ref": "b20c7a25-cb33-484a-997f-fb50a6c86aee",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "32d787fb-90e3-47a7-8800-be052a412e6a"
        },
        "item": {
          "id": "950b3200-705f-45c4-baee-06b684d71ebf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "08c8bfb7-af56-43d0-94b5-b506ae4ce684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475504f6-6fa8-42ce-82ba-5a04bfb9b2e4",
        "cursor": {
          "ref": "542dff53-71db-4de1-8632-4e017e90b369",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a27a754b-1c6d-4e67-bc5d-fb8b415fecfa"
        },
        "item": {
          "id": "475504f6-6fa8-42ce-82ba-5a04bfb9b2e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "708e2914-cdfc-4cac-a6cd-9af0bf0c8cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e79a26e-3c14-4913-8220-c2c8f696c129",
        "cursor": {
          "ref": "11f8d245-19dc-45de-a768-020541154f95",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "22e71223-37c8-4ed7-ba29-cd45e33e982f"
        },
        "item": {
          "id": "0e79a26e-3c14-4913-8220-c2c8f696c129",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54b49e67-bd7d-4f7f-a64a-f09930a7dd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88b7b93-271a-45e4-91bf-5e73170dc433",
        "cursor": {
          "ref": "a40913f7-a14e-48b6-ab3c-8062a41879a5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7800c16a-253b-4955-8976-557c0d958161"
        },
        "item": {
          "id": "c88b7b93-271a-45e4-91bf-5e73170dc433",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bf0ea7f-896b-4031-a6da-17a082d4cbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c8046d-414c-4c20-b1a5-1dba4dad1b73",
        "cursor": {
          "ref": "d1517396-2808-4d10-920f-96cf68065995",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0b8c9286-18fb-4812-993a-1a2040278a16"
        },
        "item": {
          "id": "b2c8046d-414c-4c20-b1a5-1dba4dad1b73",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c1ccd1d-1551-4960-bd09-25e263fe9023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b93ec0-2e94-439d-a769-a9662cfd2397",
        "cursor": {
          "ref": "05005aa9-5677-4437-8a1b-f291049a5d5e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "afa6a970-dd12-4499-9271-883223d89f7d"
        },
        "item": {
          "id": "54b93ec0-2e94-439d-a769-a9662cfd2397",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0f5396fc-c856-40a5-aa93-39f4311baedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7056b93-1931-4036-b72b-9d70f14f7f34",
        "cursor": {
          "ref": "1e599128-7324-4870-9ad0-00d8282bb345",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ea7b764-1d57-422a-a138-c9116651aa6b"
        },
        "item": {
          "id": "d7056b93-1931-4036-b72b-9d70f14f7f34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc6a3d56-6640-48d1-8c1b-f15508ea712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad97070-17f5-4c91-823a-64ab2de3e1e9",
        "cursor": {
          "ref": "c0ddbe09-66fa-4e95-acc1-cd1f9bd97624",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b86032c5-ec3b-4120-a570-2928ebca127b"
        },
        "item": {
          "id": "4ad97070-17f5-4c91-823a-64ab2de3e1e9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b02f10b-ecdc-4788-91b6-0a3db50a95c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8414019-0240-4c35-8ae7-ba42d345d498",
        "cursor": {
          "ref": "8bffaf7d-a44c-474b-a823-8178f4b3c7f7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c69ed854-d372-496b-b057-66690f73391e"
        },
        "item": {
          "id": "a8414019-0240-4c35-8ae7-ba42d345d498",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "72cb7fee-5b9c-4825-a43e-3d35926941df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c038d9-8ab0-4a50-b9ea-0c0038bb8242",
        "cursor": {
          "ref": "744e843a-2b2a-4f3d-8a08-b9b84cce0b95",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c6e5d732-c532-4698-9aff-58d7d2d568ee"
        },
        "item": {
          "id": "34c038d9-8ab0-4a50-b9ea-0c0038bb8242",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e391935-f9f8-4eba-952a-ffe35e64274b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1252b-d9f0-44fe-9e81-22c21ceee576",
        "cursor": {
          "ref": "2cbbb544-7297-4ee0-bee9-0babcd7feb94",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d8f21de-c667-4378-b245-1184c741370c"
        },
        "item": {
          "id": "baa1252b-d9f0-44fe-9e81-22c21ceee576",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9caa335d-0fff-4f7a-b82e-efa94b51f50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1147ead9-00ca-447a-b176-9d5050897db9",
        "cursor": {
          "ref": "a497f141-b884-485c-a6ed-f58ab1e95c39",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d438ec7f-7770-486a-a457-5bb317f87303"
        },
        "item": {
          "id": "1147ead9-00ca-447a-b176-9d5050897db9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7d6380f4-edf9-41d1-9db0-4539ebb46fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb9d29a-572a-4418-9305-05d1f1153677",
        "cursor": {
          "ref": "63085352-3123-41b7-b170-e61104ebce90",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "679345d8-58d3-4300-b708-9e89b487dd38"
        },
        "item": {
          "id": "adb9d29a-572a-4418-9305-05d1f1153677",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9bcec6b8-c911-4c90-adbd-7edeca9e23e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaa0209-3a76-458c-b856-4b1a48a21b46",
        "cursor": {
          "ref": "4c47d334-ef1b-450c-97be-e7140572eab2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d259d897-7f2e-4bf8-bf63-d60a3f64c7f9"
        },
        "item": {
          "id": "bdaa0209-3a76-458c-b856-4b1a48a21b46",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "56aead6e-1d25-4694-94ba-7989ad14d1f0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae320e-50f6-476d-88f4-8d1f397e8fce",
        "cursor": {
          "ref": "25fec8ba-a37e-447b-95e7-97c5cb547711",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b3153e33-147a-4e4a-b3d6-9bf15c512e97"
        },
        "item": {
          "id": "f0ae320e-50f6-476d-88f4-8d1f397e8fce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93bed36e-b315-457b-8b1b-8d449718d727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae320e-50f6-476d-88f4-8d1f397e8fce",
        "cursor": {
          "ref": "25fec8ba-a37e-447b-95e7-97c5cb547711",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b3153e33-147a-4e4a-b3d6-9bf15c512e97"
        },
        "item": {
          "id": "f0ae320e-50f6-476d-88f4-8d1f397e8fce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93bed36e-b315-457b-8b1b-8d449718d727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c5bde7-d379-42b5-a59b-15a00b906506",
        "cursor": {
          "ref": "52638bda-ec13-445f-afe8-3998ad80183e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "749e2963-6fd7-4ff6-923b-4b63b0757bec"
        },
        "item": {
          "id": "a2c5bde7-d379-42b5-a59b-15a00b906506",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ff4deb71-93fb-477e-8730-eed80efc7c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c9c27b-33bd-457d-ab27-322089b2e7b6",
        "cursor": {
          "ref": "3c595b75-8f1f-493f-8282-00b56bd1ddf4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "19f25cf8-a4de-4b75-bbba-3d86400626b2"
        },
        "item": {
          "id": "c6c9c27b-33bd-457d-ab27-322089b2e7b6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14b9eb0d-8ba8-4636-9232-ed26b05162fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9fbbba-39a9-48c9-992c-ae3c11c1a311",
        "cursor": {
          "ref": "41971be6-c130-472c-a19f-34b356f8d98d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b8119827-c5fb-451c-b6de-46a12ca5671c"
        },
        "item": {
          "id": "4e9fbbba-39a9-48c9-992c-ae3c11c1a311",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc0e0202-be67-4c10-87f9-5f22cda2a8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eba72b-18de-452a-bd90-1a12779f7dc4",
        "cursor": {
          "ref": "e149380f-fe2e-4f9f-8fa6-6d4187afb0fa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f3582b1a-fd8f-40cd-b5df-52265841dbd2"
        },
        "item": {
          "id": "16eba72b-18de-452a-bd90-1a12779f7dc4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5657a778-2b43-49fa-b116-84c5ea3cf819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd611d9-37ee-4654-b54e-95c705252a0d",
        "cursor": {
          "ref": "8b65f0db-cdf8-4a0c-a3d1-adc8ac51ae20",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "10a4a7c7-b51c-4779-9012-fc5e4e94adae"
        },
        "item": {
          "id": "cbd611d9-37ee-4654-b54e-95c705252a0d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "386eb967-1db6-4603-b33c-bd612fa4efa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332b37aa-bc04-4752-b477-b95edb927c55",
        "cursor": {
          "ref": "73fbfbef-7ee1-4aa1-b980-99d0796457eb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ed5cfe4b-5738-491c-855c-b44e2979d7da"
        },
        "item": {
          "id": "332b37aa-bc04-4752-b477-b95edb927c55",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f4cf83c8-ddf7-4be0-b179-d1e6aa7e0f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3d9608-5ef7-4b4e-ad71-3b279c2566f9",
        "cursor": {
          "ref": "0f1306e2-7e54-4f87-bf00-130bfbc24280",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "781a309f-9624-4453-bfc8-83a834767941"
        },
        "item": {
          "id": "ba3d9608-5ef7-4b4e-ad71-3b279c2566f9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "492c9367-4e95-4b86-b181-fef9996acaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0c6a3-46c7-495b-89b3-711a6b06feeb",
        "cursor": {
          "ref": "0510754f-d2a7-424e-a3ac-a2e5ffd6a606",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "600c8893-c0b6-45af-b7fc-7395d9e5ed1e"
        },
        "item": {
          "id": "12f0c6a3-46c7-495b-89b3-711a6b06feeb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "20c74cd3-b0ec-445d-b1e6-75139dece966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc341e8-e996-4633-9bed-6cf2acb9074a",
        "cursor": {
          "ref": "4757329c-aaaa-4fe7-8b8d-899fa4daf292",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9a0763d3-bad3-45c2-9a1d-04cae6071ce8"
        },
        "item": {
          "id": "ffc341e8-e996-4633-9bed-6cf2acb9074a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dda40e9e-1627-488c-afea-2eb0deab91f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8198906-da79-4d25-8744-06a6c8e2d650",
        "cursor": {
          "ref": "9a8497f5-87a8-4b1a-8f77-31e26b1f1b35",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "67ad80fe-3865-4290-91ec-3bf5e6c32e6d"
        },
        "item": {
          "id": "f8198906-da79-4d25-8744-06a6c8e2d650",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "49a09756-7842-4661-99e3-2b253f06ea0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204cf58d-b5a0-4551-a978-3e6ed07885d2",
        "cursor": {
          "ref": "50adc7b0-eb7e-49f7-96cf-c48087fb0530",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b3652d73-d962-4bb7-bf36-82ca0a4eae23"
        },
        "item": {
          "id": "204cf58d-b5a0-4551-a978-3e6ed07885d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11ae5e57-555b-479b-9cdb-37af0aca11dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a78b2ca-773f-4506-958b-b267538f5aa0",
        "cursor": {
          "ref": "b8428e03-f1e9-4878-8990-a39c189ca48a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3e1b7c4a-0b2c-4b1d-a798-25f23d993843"
        },
        "item": {
          "id": "8a78b2ca-773f-4506-958b-b267538f5aa0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25a48934-819a-422c-a34b-3537a09b0796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3acbc0-cb03-45fe-b468-b200e7d64d74",
        "cursor": {
          "ref": "3629d7d3-fb9b-4b88-a902-9e5d7d8c8f14",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a3718a3-c76f-49ce-97ec-1526c3775d48"
        },
        "item": {
          "id": "6e3acbc0-cb03-45fe-b468-b200e7d64d74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ee26bf2-c706-4dd5-ac15-45c953a10dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd60c23c-0c33-4d72-bd4f-a3b3eae14717",
        "cursor": {
          "ref": "451bfe8a-d26a-4f9a-881c-20c771cf3816",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d3adb193-6ddb-4a4a-9942-5980831f9cba"
        },
        "item": {
          "id": "cd60c23c-0c33-4d72-bd4f-a3b3eae14717",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5267b9e1-b3b1-4924-9e47-f11c6d5d7d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc8537a-2b3a-460f-a8ec-38ef5873c6ff",
        "cursor": {
          "ref": "4cd3fbfd-351e-4ad5-8308-6d2247149ecc",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "25015e69-cf76-4794-811b-5cd31609dffa"
        },
        "item": {
          "id": "8dc8537a-2b3a-460f-a8ec-38ef5873c6ff",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "56183ada-3415-4c34-a442-36b6e0f2ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de0077-e725-4f20-b076-2c9bffe659ee",
        "cursor": {
          "ref": "7b295444-a1cd-46eb-be32-1baeb034ab34",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e9f7b7e-b72f-49b7-be4b-cdd327295a26"
        },
        "item": {
          "id": "e2de0077-e725-4f20-b076-2c9bffe659ee",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bc177e4d-cfe4-47cb-a90b-588aa515de9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7e376f-9093-473a-9969-5a3898669bd8",
        "cursor": {
          "ref": "314a9357-93f0-4df5-aa3c-884991e1164a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "781b2148-55c0-4a4f-97d3-a6020343fe2d"
        },
        "item": {
          "id": "ea7e376f-9093-473a-9969-5a3898669bd8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8e6bd1ce-182f-4402-ad11-e229ee45c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920a641-60b9-4f06-a347-87e1d8433c12",
        "cursor": {
          "ref": "ee0f5f7b-48c2-4458-b05b-630b98cdc69b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0cd84c12-886f-4da8-b0cb-c21c9d4e506c"
        },
        "item": {
          "id": "c920a641-60b9-4f06-a347-87e1d8433c12",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4316b081-8581-4089-a4c3-1952b89fcbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc3c6ad-14bf-4f52-bcb0-856c107e7ea3",
        "cursor": {
          "ref": "1f20b590-722d-4d7f-8798-0f31bc989b06",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ce80962f-770e-4af0-82b4-a7ee202d826b"
        },
        "item": {
          "id": "0fc3c6ad-14bf-4f52-bcb0-856c107e7ea3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "36d653aa-1823-4a4e-85ea-6c330004f2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ff1ef-4b1a-4dc3-bac0-7d979f8b2a4b",
        "cursor": {
          "ref": "74d68ea8-290e-42e5-afcd-ac7259d6463a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bdab3d17-187d-4b3e-9bb5-cd7a0d4a509b"
        },
        "item": {
          "id": "372ff1ef-4b1a-4dc3-bac0-7d979f8b2a4b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b1082c32-38e2-4266-9ca5-bfe4259194c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bd697-90dc-4deb-addf-76ac63174eeb",
        "cursor": {
          "ref": "83ab66ad-3af6-4e17-9b12-8449c7537541",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "db4142cf-041a-46ec-b33a-b5b10244cce6"
        },
        "item": {
          "id": "a13bd697-90dc-4deb-addf-76ac63174eeb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5ce1afc9-9b43-4501-926f-37296f34f65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13a1183-400b-484e-8459-52a60b96c777",
        "cursor": {
          "ref": "d0b4339b-258e-4d2e-9aa3-a1137bcef408",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b930422a-dfca-4e93-8ff0-5f92667a9af9"
        },
        "item": {
          "id": "a13a1183-400b-484e-8459-52a60b96c777",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0729c58a-a637-4dec-825b-eaaf98776111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c9ba18-198a-4e1a-a6f5-ad92abd96b6f",
        "cursor": {
          "ref": "50b4e69d-f5e5-4c3f-a56c-46d859a846f2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb8e99b8-277d-4e55-9ca3-3292e91d5248"
        },
        "item": {
          "id": "12c9ba18-198a-4e1a-a6f5-ad92abd96b6f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "69a7a0e4-caef-4874-b30b-472a7158a091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274607f1-a4b8-4221-9607-c296a9331190",
        "cursor": {
          "ref": "2ac8c6a2-a060-4e48-8cc0-00d182d541af",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e6e4088f-bb47-4937-a71a-e42512a04606"
        },
        "item": {
          "id": "274607f1-a4b8-4221-9607-c296a9331190",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8dccf831-8bd1-4dda-b3a3-050860e6afb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f539e3-d5ac-4018-a872-090a97bd40ae",
        "cursor": {
          "ref": "4bef779d-c713-4dac-8e35-306dda7f71c6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6083000a-d550-4e86-a932-2fa09d0c2d30"
        },
        "item": {
          "id": "90f539e3-d5ac-4018-a872-090a97bd40ae",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95896f54-ba42-47c3-a2e6-805f7b723d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77329e06-84f7-4c48-80d1-e5fd840f95df",
        "cursor": {
          "ref": "f3400dc7-8dd0-468a-a1ce-c3c2294dad14",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "87d419fb-79c5-409e-9338-a12b48e2c1b6"
        },
        "item": {
          "id": "77329e06-84f7-4c48-80d1-e5fd840f95df",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d889507-241e-4aee-adb8-d503f3358497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9340a828-c09e-497c-ac2c-94d5be60abfb",
        "cursor": {
          "ref": "9ef76348-7045-42be-b1a1-604c01f45e71",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "549102b6-0b3d-47ec-a67f-33c9d5c68245"
        },
        "item": {
          "id": "9340a828-c09e-497c-ac2c-94d5be60abfb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "89a09e6b-be1c-4c27-977b-6833ceb42fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627a7502-5da5-45d1-97cf-1f75fd3ffb36",
        "cursor": {
          "ref": "fd67866e-c648-4f9f-8259-674d98732897",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d7a574c0-6d37-4e50-9a08-0d8eae73423c"
        },
        "item": {
          "id": "627a7502-5da5-45d1-97cf-1f75fd3ffb36",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec28bfea-9c2d-4226-ae93-c4a38e2bccea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9db966-2f5d-438c-8714-8f6d21602062",
        "cursor": {
          "ref": "ef72f30e-218f-44db-81f5-fe9d60a656f3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62c6a676-734c-46b8-a381-af8e4643e799"
        },
        "item": {
          "id": "4b9db966-2f5d-438c-8714-8f6d21602062",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7c041aa2-da3e-4741-b7a5-32ef326f7a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b8f754-b0af-4bd9-a934-3be8af646222",
        "cursor": {
          "ref": "1dd285db-a999-437a-a450-b06e124433c7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b8121606-49d6-48f0-ae74-b9aa3f19c51e"
        },
        "item": {
          "id": "34b8f754-b0af-4bd9-a934-3be8af646222",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "384a50e5-3b65-41a0-a221-ba63a558400d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aed1b0-5298-44b6-8780-187f93ccf20a",
        "cursor": {
          "ref": "db2c93b9-c5e5-449d-8b3b-becdc83b7248",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12503855-1b9d-475b-b6ec-43690545877f"
        },
        "item": {
          "id": "28aed1b0-5298-44b6-8780-187f93ccf20a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fb7b1a06-04eb-4d6f-9e48-54c4d450a141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703e2f87-081a-4975-8c28-60f478373177",
        "cursor": {
          "ref": "4ad2114c-2a77-41c4-8322-2d9f58d02837",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "87dddd1d-eef1-4783-b0de-2ddc8481270a"
        },
        "item": {
          "id": "703e2f87-081a-4975-8c28-60f478373177",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "63067b5b-bd9c-45b7-aa72-75dd8e7a7f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f181cb3-5b95-4ae7-ac7d-a1db13ac2d39",
        "cursor": {
          "ref": "897c188c-90a4-49ed-a5c4-7b34733fd18d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c5bfac72-2313-4f00-b942-40dbb1f6087e"
        },
        "item": {
          "id": "8f181cb3-5b95-4ae7-ac7d-a1db13ac2d39",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ccf0b9c4-f40e-47eb-83c7-9f6a49c12b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3dcb5-a85a-48f9-b0a7-33383dbb76a1",
        "cursor": {
          "ref": "01bcaeec-f9da-402d-9a87-3bbe5c1463a5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ad226e08-db73-4adc-a669-2ca0d973e9cd"
        },
        "item": {
          "id": "30c3dcb5-a85a-48f9-b0a7-33383dbb76a1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83cd5687-b6eb-4c5e-9b94-ef07d607e03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889f07c-f6c3-4a5a-bde1-56f97ffb91c6",
        "cursor": {
          "ref": "1663d9a2-3a6d-471d-81fb-a663b10ee04c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f076f41a-3c07-44dd-aa69-4e85ac4d4e44"
        },
        "item": {
          "id": "b889f07c-f6c3-4a5a-bde1-56f97ffb91c6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ff7629b-af01-484d-9f96-3b07c66449a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac69ed3-c571-4ecd-8dab-96a0053aefdf",
        "cursor": {
          "ref": "a60af036-23f6-4956-afe2-d6c8cd773a6a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "881b9990-cb59-4951-bcf3-165427e21ba3"
        },
        "item": {
          "id": "aac69ed3-c571-4ecd-8dab-96a0053aefdf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "97431096-0093-4a6b-b875-c30a1a64cc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddf0b21-b521-4d71-bf80-cb3619118ddb",
        "cursor": {
          "ref": "0fc6ec6c-5b38-474d-8c53-065a0eb37ceb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f18ef39-82d6-440b-90ef-8c7e7e634733"
        },
        "item": {
          "id": "cddf0b21-b521-4d71-bf80-cb3619118ddb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db747eed-2a9e-4198-a33b-c082dc118f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5895825-779c-4987-9e80-38635eabe57f",
        "cursor": {
          "ref": "a1e205f4-fa15-4320-9479-528a239f1ed9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "61d74ca5-2e6e-49b6-8fd1-8a598179e90c"
        },
        "item": {
          "id": "f5895825-779c-4987-9e80-38635eabe57f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "41ab6e7a-1066-4e5b-83be-ecf2346410fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc23d97-4b51-4f72-8c71-133dfaade822",
        "cursor": {
          "ref": "ff6a9d45-5c33-4aa2-b27b-82b0d6a2cec4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6acad5f6-7cac-46f2-bb25-e69a42b82d5e"
        },
        "item": {
          "id": "cdc23d97-4b51-4f72-8c71-133dfaade822",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e81db04-7458-43ad-8c1a-f0fd3cadf522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6696b269-23e5-4cb1-8a26-4f9a18305146",
        "cursor": {
          "ref": "b1f41a83-754c-4a3e-a63a-692b13ec4ef5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0ac833ec-42ac-4b00-a676-57359fa35d36"
        },
        "item": {
          "id": "6696b269-23e5-4cb1-8a26-4f9a18305146",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "168eabb1-3500-4d22-98c9-50e239dcf428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8231f3c9-03db-45ab-8833-5ac46ae45c64",
        "cursor": {
          "ref": "3d6082ed-bd7a-411d-a8e3-892bf2a3dbf6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ae2581f8-2c05-4a77-97a4-0ba898b79113"
        },
        "item": {
          "id": "8231f3c9-03db-45ab-8833-5ac46ae45c64",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "71c32172-0465-4d07-be85-24c9943dc2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88827d0-15ae-41b5-9860-caf51443085c",
        "cursor": {
          "ref": "902ab343-0560-4d23-b27f-f960611773e6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "406dfea0-d875-4794-8e86-43b44ba1a990"
        },
        "item": {
          "id": "f88827d0-15ae-41b5-9860-caf51443085c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "03287bd3-4f8d-4081-90b3-92501f2d876f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b59b20-a2c2-481b-b872-fa44429e880e",
        "cursor": {
          "ref": "a1eef5aa-2bcb-4269-a6f0-58f676d39d82",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a6ed27fb-29b7-452e-8806-3678bb39ea48"
        },
        "item": {
          "id": "74b59b20-a2c2-481b-b872-fa44429e880e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bac8a29d-70de-4beb-9b03-35415802704b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e521532c-4fb2-43eb-b76d-dc6712af1452",
        "cursor": {
          "ref": "a632eff0-f5f1-41e9-a759-4327a3d0ce99",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cf25065e-3c14-4c7b-abef-697730ea29cb"
        },
        "item": {
          "id": "e521532c-4fb2-43eb-b76d-dc6712af1452",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d899068-0a55-4aca-a7ea-b4741893ad55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce32e6f-3242-47b3-8f3c-cd3969ef09fd",
        "cursor": {
          "ref": "66d7927f-836c-4028-907d-eb01b135b6ea",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1b5fa7eb-e67d-47b3-99ca-abbd8cfa34cd"
        },
        "item": {
          "id": "5ce32e6f-3242-47b3-8f3c-cd3969ef09fd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b01d816f-836b-4f77-bb75-a5010bf3f610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d98b31-ff9c-418b-bb0f-1a8c7875c458",
        "cursor": {
          "ref": "1aa455e2-f010-45e6-b02b-1ef278db2bfe",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "27bad04c-fd99-451e-b013-c2504f9932a1"
        },
        "item": {
          "id": "d6d98b31-ff9c-418b-bb0f-1a8c7875c458",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d1fd3b68-d41d-4b37-a608-64cfe65e5fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad107860-458f-4c41-8bfa-2711c26359f0",
        "cursor": {
          "ref": "f2eb396f-85d5-46d7-ac34-d95bc3999f26",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "890d02fe-5b28-480b-8cd5-fb9113e93a0c"
        },
        "item": {
          "id": "ad107860-458f-4c41-8bfa-2711c26359f0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "41fdf80d-eeb0-4d07-870c-f14e7af9438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160b8b0b-7d50-4409-b65d-8c6ad802196d",
        "cursor": {
          "ref": "341e71d8-9a23-49c1-a43e-55615604ba57",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "417f5694-5d46-43b7-8a06-5ecc22b75166"
        },
        "item": {
          "id": "160b8b0b-7d50-4409-b65d-8c6ad802196d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7ddcd5a2-5d20-4676-ac82-816d7c91adee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554e52f4-b0df-4965-9adf-9c5d7e3d5afb",
        "cursor": {
          "ref": "c7772735-bb69-49b7-b056-d2a76441b62b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a4d8765d-9edf-4c5c-a017-0a4434ca3abe"
        },
        "item": {
          "id": "554e52f4-b0df-4965-9adf-9c5d7e3d5afb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39171f0e-e9da-4d88-a4c4-69b9f97c3ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcd3366-235d-4707-ac7e-f14c29b20f21",
        "cursor": {
          "ref": "49f9132e-c66f-4e3a-8d15-53b331209e72",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ad097eca-ed46-4988-91b6-6fee840f0dc7"
        },
        "item": {
          "id": "bbcd3366-235d-4707-ac7e-f14c29b20f21",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "73f1abd9-716f-4410-8564-6ec5a3a45a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a54067e-e452-4636-9216-f02845ba8605",
        "cursor": {
          "ref": "9d2937da-fff7-4671-9276-68482f43442d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fc0224f0-180e-483c-82da-eceadc689269"
        },
        "item": {
          "id": "0a54067e-e452-4636-9216-f02845ba8605",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9e43e553-57a5-4782-a726-f7ff0284b957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ff16a-27d2-46e4-90d6-2d1b2fbce67f",
        "cursor": {
          "ref": "2ea32e44-cc61-46b1-8e03-9c6a9827bb9f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ba6b59b5-48e7-4438-b914-a8cfc26670dc"
        },
        "item": {
          "id": "a59ff16a-27d2-46e4-90d6-2d1b2fbce67f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9333a0da-cb70-4734-9f92-3802a0b6806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c134455d-b359-4d02-892b-ab9974352bbe",
        "cursor": {
          "ref": "66177e78-a4e5-40dd-836d-05d8386ea066",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a7d85dff-5490-4d52-b5cd-085114f7531b"
        },
        "item": {
          "id": "c134455d-b359-4d02-892b-ab9974352bbe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "19a4583a-3fc6-4cb2-ba15-cad8effb7a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca444b6-d940-4b4a-b60d-e1910d011464",
        "cursor": {
          "ref": "00bef4a9-00fe-46ef-a490-0b74068ac38d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "38a80681-ad97-464a-847f-dbc289a4d182"
        },
        "item": {
          "id": "7ca444b6-d940-4b4a-b60d-e1910d011464",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5a739f69-7adf-404c-bbdb-fc8ad76dc723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6123b46b-b9ba-488a-bd14-27d859c45e8e",
        "cursor": {
          "ref": "cc7c599e-7495-41e2-8094-ac10c1ac7d50",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "55c3cef6-bc06-463c-8b9e-591525269114"
        },
        "item": {
          "id": "6123b46b-b9ba-488a-bd14-27d859c45e8e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "41584c54-b8a3-4acf-a1f4-b6e9523451f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e5774-26fb-48a4-9f85-649697993a14",
        "cursor": {
          "ref": "c3fba732-7bd3-47a9-8217-c90eecaa388c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "845c923b-846f-406c-acbe-00be05ec8d03"
        },
        "item": {
          "id": "dd4e5774-26fb-48a4-9f85-649697993a14",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4a55090c-4053-40d1-bc70-01aa204a7f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c362f9-a34e-44b2-9768-a680d08286be",
        "cursor": {
          "ref": "85e72893-5584-4197-82b7-cccd75a9e4dc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f51cbbeb-c89d-4b90-ab2f-f4f6d81c2565"
        },
        "item": {
          "id": "66c362f9-a34e-44b2-9768-a680d08286be",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e562701c-a88c-4e43-a578-4f9ad747d501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f53b174-0911-4ba3-9df7-da28110d8ba7",
        "cursor": {
          "ref": "531cbdb5-61e8-4717-913c-22159e43e0ee",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0960e111-99ba-4744-84cf-57280131cd81"
        },
        "item": {
          "id": "6f53b174-0911-4ba3-9df7-da28110d8ba7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0e508297-2f67-431f-ab46-85687a946be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0eb0ed-8f7e-4d95-b07e-0504ee16ead5",
        "cursor": {
          "ref": "16e2b664-898b-4043-ba15-8ebfe7d2da66",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e5aa2baa-fe6b-4297-b1c1-2c5ff76205fc"
        },
        "item": {
          "id": "2b0eb0ed-8f7e-4d95-b07e-0504ee16ead5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a1019ac1-7120-4163-89f4-4dfc43278715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad21255-5c0b-4b26-9714-e4c269822507",
        "cursor": {
          "ref": "e56b1402-67f9-45cf-bf59-e0f2cb87ebe2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6172493c-5afd-4cf2-ab35-fd64ab38a679"
        },
        "item": {
          "id": "fad21255-5c0b-4b26-9714-e4c269822507",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e885ecf-2625-4685-8d90-d5afd4a9147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a3d56f-fd61-4a1f-96a1-cd49da03ed45",
        "cursor": {
          "ref": "9dede52f-4269-4690-92db-07c3887bf7b6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ba255ddd-634b-4948-8499-8f448f771fe1"
        },
        "item": {
          "id": "76a3d56f-fd61-4a1f-96a1-cd49da03ed45",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7ffb57a9-0908-45fa-8fd0-d45ef0b4f222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bca143-3069-4007-a684-9868d408af85",
        "cursor": {
          "ref": "e8a3d464-b2a8-4473-a06b-25d2851d99e5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6ce5343e-e29f-4f31-a756-c14ebc420d50"
        },
        "item": {
          "id": "14bca143-3069-4007-a684-9868d408af85",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04d7148e-888d-4cc4-8889-e919469e4b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357d7459-b83f-474f-bf5a-c8a240b634e2",
        "cursor": {
          "ref": "d310dfc5-9ccc-4600-81e3-17af5feb019b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a38d2f4-90e9-4f7d-aced-cef4eab38ce9"
        },
        "item": {
          "id": "357d7459-b83f-474f-bf5a-c8a240b634e2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8af095f3-fc08-49c6-8e82-4d16d12a0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b626867-7117-4ab8-bb57-979ce5060809",
        "cursor": {
          "ref": "d8753dc5-c888-4cb6-b027-de15adc1cc4d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f3fac8b-d5e3-457a-a8bc-a91589968f83"
        },
        "item": {
          "id": "6b626867-7117-4ab8-bb57-979ce5060809",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dd5d5c72-7e8e-4bc1-9e0c-d3f920a7147c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d250e142-2dcb-4535-a802-c2492560c5f5",
        "cursor": {
          "ref": "6efda9f4-f381-4683-9ba2-d18b6cd65697",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c7fc9fd-e95f-4cd2-8021-8c6b834c7f01"
        },
        "item": {
          "id": "d250e142-2dcb-4535-a802-c2492560c5f5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "11241add-ab7b-483e-97e4-e0fe7e89237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48778b9e-5825-443a-8e81-188594ee2bf7",
        "cursor": {
          "ref": "15b5744f-ff7e-4844-9953-208c1bd6eece",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0c64af0d-4d1c-49fc-b15a-317510d03e08"
        },
        "item": {
          "id": "48778b9e-5825-443a-8e81-188594ee2bf7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3b062abb-006b-49a2-b51f-fe485d193b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635f805c-732d-459e-8ab6-cd912b048d92",
        "cursor": {
          "ref": "db9fd0db-5296-435d-8dce-0ec0997daa4a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "59a816c2-b614-4bb7-a768-fd0b2e435076"
        },
        "item": {
          "id": "635f805c-732d-459e-8ab6-cd912b048d92",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ef74ed45-4f6d-4ba5-a3df-730299ca3305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642c4273-3cd1-4817-922d-3f450b723936",
        "cursor": {
          "ref": "b1a18f3f-575e-477b-af09-829a37d32217",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1e97dec6-603e-445a-80b5-77084a950e69"
        },
        "item": {
          "id": "642c4273-3cd1-4817-922d-3f450b723936",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4604fb1c-be65-4361-bb28-c8b544fb19d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7a89b-9699-4d16-a7a2-ed76af6b1b63",
        "cursor": {
          "ref": "b483bf64-32a8-4162-8856-517f72ef2127",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cb984e4c-0f10-4e24-a19d-b8ee9619a25e"
        },
        "item": {
          "id": "a2f7a89b-9699-4d16-a7a2-ed76af6b1b63",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dfe4dcba-f860-491c-94c4-9d6f84bbf594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3114a3e-d1b9-4a9e-94c1-4b1cfc2515ea",
        "cursor": {
          "ref": "fe100533-2325-4031-814f-4df8f18660c9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7a7817a0-8451-4c2e-bab8-147993e5b13d"
        },
        "item": {
          "id": "b3114a3e-d1b9-4a9e-94c1-4b1cfc2515ea",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "29b98493-04fc-4c21-9f4c-52dd55595d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a3c159-97df-4d1c-8def-6feaf2a75140",
        "cursor": {
          "ref": "fc5fdc5f-9ebe-42a4-963c-e306e204580f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cafdcf5f-0911-4b37-b4da-ecd89a3428c8"
        },
        "item": {
          "id": "57a3c159-97df-4d1c-8def-6feaf2a75140",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2affde7e-7ea4-4bc4-87c0-916a353ddc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d3a65f-065f-47c0-8cb5-93143c5f5300",
        "cursor": {
          "ref": "b6ba0e05-22bf-4aee-b58d-d6c916932820",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f7797689-4d17-4db3-a7bd-a0f9d32fa962"
        },
        "item": {
          "id": "99d3a65f-065f-47c0-8cb5-93143c5f5300",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8dcdabdd-2ca2-49ec-b1a3-a381e04fcc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a913330a-551e-414d-9a79-79fc2bd432d7",
        "cursor": {
          "ref": "88688d9c-b96d-42d1-8dbd-0391c1d77869",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b14b5b79-2447-4e24-95d7-52ac5c48a152"
        },
        "item": {
          "id": "a913330a-551e-414d-9a79-79fc2bd432d7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c93bc7a3-3811-4760-97d4-54f84a452b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68e601b-91d9-4112-9e7f-52306ea36e13",
        "cursor": {
          "ref": "5d35789c-a6dd-4e66-b367-58f7727691f1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "84baeec7-fd23-4b8d-8ffb-fd1c7621bce4"
        },
        "item": {
          "id": "a68e601b-91d9-4112-9e7f-52306ea36e13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fbbf4534-4fb2-4dc8-a069-adecffa3efe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b573dd-900e-4ad7-9ba1-e61a6adb3b33",
        "cursor": {
          "ref": "7c129ca0-45a5-4889-b712-0d9009a9c313",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "52dd449d-ebb9-4fde-8655-9ac5d8fe5ea0"
        },
        "item": {
          "id": "48b573dd-900e-4ad7-9ba1-e61a6adb3b33",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13746cd2-dc28-418d-89bb-ab8fae829960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7270e0f2-833f-4588-8f00-301676a206ad",
        "cursor": {
          "ref": "ad9ca349-95e1-4f51-bcf4-9e6e3a1d8b18",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01cf4a06-bac4-4c2f-84b6-59c52a440009"
        },
        "item": {
          "id": "7270e0f2-833f-4588-8f00-301676a206ad",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7248f123-9cc1-4915-ba90-f32d6ee4fbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ac5b7d-7ad9-40bd-89fa-457031aa0c5d",
        "cursor": {
          "ref": "a6d1cbef-bcb3-4b34-8dd0-a44913c6e6f1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5b6d78f5-1928-4e66-b98c-b563c35f6d1f"
        },
        "item": {
          "id": "77ac5b7d-7ad9-40bd-89fa-457031aa0c5d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a0bd3ed2-dc95-4837-b20c-8aab5127aae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9d4a81-7344-4574-bbd7-986d8612a1e7",
        "cursor": {
          "ref": "379a84fb-bda4-4242-b4cf-89f416869f98",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "83d02bce-5acb-412c-851c-c7e6328a72a5"
        },
        "item": {
          "id": "ee9d4a81-7344-4574-bbd7-986d8612a1e7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "65e70d08-e7b7-4bfd-93c3-ac7e092214e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512095d-b079-4ccb-a2f4-b3fa2e289c06",
        "cursor": {
          "ref": "a8ec77ea-619a-4704-aab4-caf33e895fab",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e287c166-b0bb-4f02-901e-9b5f77bb8a73"
        },
        "item": {
          "id": "5512095d-b079-4ccb-a2f4-b3fa2e289c06",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4c98cc38-b873-434b-9659-020f4a67539c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d705ee-282d-457e-b3c4-84a7f2b959dd",
        "cursor": {
          "ref": "fb8e2588-a0a1-4977-abc5-3530ce7d5c57",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b34c118-c3fd-4c47-9b18-b183fe1c4fca"
        },
        "item": {
          "id": "29d705ee-282d-457e-b3c4-84a7f2b959dd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c1ce498a-4819-4320-9c64-400849b52088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0439e4b1-0c66-4ade-9212-2d9c58db59a2",
        "cursor": {
          "ref": "a817e8a2-2c17-465d-9882-6b9a270ddf62",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f42c8af1-62de-48c3-b847-0378a9437951"
        },
        "item": {
          "id": "0439e4b1-0c66-4ade-9212-2d9c58db59a2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5b0869b9-0743-4e96-9aa2-5b4ae2e39d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c7588-34a1-4e6c-856d-bdddf2f0adee",
        "cursor": {
          "ref": "0ee39028-e810-4b6d-b057-f7daec1afeb6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d1f793c9-dc99-4372-98c0-3fc30dea41d1"
        },
        "item": {
          "id": "5b5c7588-34a1-4e6c-856d-bdddf2f0adee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af1795d3-dca3-463f-a236-fae0e46554e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab5223-cd90-45d2-bcc5-49122d4a4579",
        "cursor": {
          "ref": "e7b0cda4-be09-42b2-8631-b7a6553d544e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c0affcd6-8cb3-4a76-b1c8-d504c02ac3ea"
        },
        "item": {
          "id": "5cab5223-cd90-45d2-bcc5-49122d4a4579",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "43807988-6d01-4a7a-a0f5-0fbb93e295c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d5cd78-6b05-4a19-b9ff-53881c7bde4c",
        "cursor": {
          "ref": "9cd0c0dd-7c2d-43cb-a45d-288cfc7d0c25",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "19277d5b-9be4-49b6-b2b9-f2bd53bc87f8"
        },
        "item": {
          "id": "c7d5cd78-6b05-4a19-b9ff-53881c7bde4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "100c65de-1398-4e6d-a6a2-4bffdbf70b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b375eef0-ba9d-46d5-ac4a-cd17378c0161",
        "cursor": {
          "ref": "6973f68c-af3b-46dc-8804-4c1cc5b12cb1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91c13240-0533-43b5-a843-0611da150f78"
        },
        "item": {
          "id": "b375eef0-ba9d-46d5-ac4a-cd17378c0161",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9dfd2401-6c43-4907-b293-658498ea8177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58f6e2-948f-4463-bd20-7ac0a8e750a0",
        "cursor": {
          "ref": "300dc669-26bf-4842-822a-1c439b10726b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4e487322-b04f-4395-b311-b1bfe94939c2"
        },
        "item": {
          "id": "fe58f6e2-948f-4463-bd20-7ac0a8e750a0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "37e56721-c588-4d23-9f79-4cf42519bff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bceb60-b931-4c71-b5b2-652bd913f5bb",
        "cursor": {
          "ref": "293884bd-1ecf-42d0-ba40-8951a2e803ff",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e56b8c81-60d9-4581-9af1-f9177ee7ef84"
        },
        "item": {
          "id": "07bceb60-b931-4c71-b5b2-652bd913f5bb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2d766235-9ab7-4f56-bcf5-baa618dc28a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f974e3-4d80-4b37-934b-433d094aa300",
        "cursor": {
          "ref": "24bb19d5-754b-49ae-8c90-fbce9b2b3745",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cb210d4b-84fd-4874-be4c-7f125ee33387"
        },
        "item": {
          "id": "45f974e3-4d80-4b37-934b-433d094aa300",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "44ba6759-c924-4acb-939e-41466ea2eec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6070c1-dd25-489c-85de-313655b2ca1b",
        "cursor": {
          "ref": "612de477-fd34-4711-9b00-a0380847b20e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cecb2478-de6c-46cc-8d4c-fce41b8231b9"
        },
        "item": {
          "id": "3d6070c1-dd25-489c-85de-313655b2ca1b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "34ed8979-5b1a-4095-bd88-66d247e2ce2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f27b7f-8a94-4ace-8331-c84b3e23db6c",
        "cursor": {
          "ref": "2a47fc93-c8dc-4c85-9ee9-9c184e49599d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "042bc563-7c60-45a7-9a77-8ad66512eb9e"
        },
        "item": {
          "id": "f7f27b7f-8a94-4ace-8331-c84b3e23db6c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7c63c656-e705-455c-b2c9-61d9eaa0fc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff8a1d1-4370-4526-a5a1-c6620fe6a0b7",
        "cursor": {
          "ref": "64465627-7768-48d7-be4b-f4aac3e6a4f8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ecf1986-e8c9-4769-b0ea-4d462fb3a365"
        },
        "item": {
          "id": "5ff8a1d1-4370-4526-a5a1-c6620fe6a0b7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "672c7328-1890-4bf1-a1c4-ed070db16c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed0037e-16b7-4b3a-9471-ee61e27c3e94",
        "cursor": {
          "ref": "90df0044-b602-4e5d-930a-6a8a1e8f6478",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1af9f7d0-e123-4217-8a37-c991d4a18872"
        },
        "item": {
          "id": "5ed0037e-16b7-4b3a-9471-ee61e27c3e94",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e8773e71-95f6-4553-a628-2d7bdea6df44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c558b7d9-6aff-4987-8ec8-8d0ef019b9ef",
        "cursor": {
          "ref": "93472721-3142-47bb-a0e3-ccd829f20f3c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d622e1cf-5bc4-4177-a9db-b6a28bf39673"
        },
        "item": {
          "id": "c558b7d9-6aff-4987-8ec8-8d0ef019b9ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aa664e62-a74b-4482-afc0-68d851d0e218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b59734-732e-479d-beba-d7cba8668763",
        "cursor": {
          "ref": "293684a4-3d57-4a14-a417-38261d22d811",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25671f1a-4d14-4d7e-aa9d-240507e4c6c7"
        },
        "item": {
          "id": "57b59734-732e-479d-beba-d7cba8668763",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3649944d-0f98-4d7b-946a-e3249ec2df8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1f28b-f7a8-4542-9a08-6d8456c67607",
        "cursor": {
          "ref": "d4b025a4-4486-462b-ad68-97150980aa6f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a05fca3-1da3-466c-9b96-d704eac208e5"
        },
        "item": {
          "id": "3ad1f28b-f7a8-4542-9a08-6d8456c67607",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c330dbf4-9149-4814-857d-d0c2d340468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeedfba9-4263-40db-92a7-919e554afcf7",
        "cursor": {
          "ref": "99d834d0-e903-4e88-b399-2c42b8e20122",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0ad1ac59-05ff-44e8-b265-5115e6da1607"
        },
        "item": {
          "id": "aeedfba9-4263-40db-92a7-919e554afcf7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04d77f61-eb19-4e84-915e-e3f27d18dade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b6667c-f0fa-461c-ab31-07cbc2c01153",
        "cursor": {
          "ref": "ff1d6bb3-3233-4173-bcca-5e042a3fccc7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a493c7a6-5d73-4cee-a4dc-7e1421b1d6fc"
        },
        "item": {
          "id": "89b6667c-f0fa-461c-ab31-07cbc2c01153",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ddbf525-ee09-4935-a519-362d8cbeff20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667efc8-37aa-4ec9-9dbc-8ca70b5412f9",
        "cursor": {
          "ref": "72bf8e9a-e0bf-42f6-b922-a1f2129254c7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b8c5cd4-da66-44ad-8352-94ca48b7d136"
        },
        "item": {
          "id": "8667efc8-37aa-4ec9-9dbc-8ca70b5412f9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b0569164-8411-4a19-9da2-e0fdb44ddcb3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea81dc6-e6d7-4784-834a-8757b45ba8e6",
        "cursor": {
          "ref": "b4ecf02c-09d4-48d6-917f-00c3e1c1e103",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "876dda50-6bfb-44bd-a7bc-fa95a9c4885f"
        },
        "item": {
          "id": "1ea81dc6-e6d7-4784-834a-8757b45ba8e6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c18168d-7c06-450b-9572-5bf7d35cbb6d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11adb83c-0dca-4952-8c92-46061f525e41",
        "cursor": {
          "ref": "b26f42de-99a0-499a-ade7-b76e51ff1252",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7271a5bd-61a5-43ad-9f37-2f32bd17137f"
        },
        "item": {
          "id": "11adb83c-0dca-4952-8c92-46061f525e41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d0e439ed-b499-432d-aaf5-f1c06e7f9e06",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29569d-3c4f-41c2-82fb-3ba903609780",
        "cursor": {
          "ref": "e4f8f42d-5771-418a-8a57-35e675c7e54b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "49d1c7db-8876-4afa-8830-6bf422d2e103"
        },
        "item": {
          "id": "3b29569d-3c4f-41c2-82fb-3ba903609780",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fef7a120-5621-4f94-926e-9ae370c5467b",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
        "cursor": {
          "ref": "34430b9b-06ac-4ece-9279-c4f7f3dc90d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cb537065-8586-43a0-b69a-f0868ca84395"
        },
        "item": {
          "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e4e73cc0-64ec-40e7-8c8c-3ae0799b811e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
        "cursor": {
          "ref": "34430b9b-06ac-4ece-9279-c4f7f3dc90d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cb537065-8586-43a0-b69a-f0868ca84395"
        },
        "item": {
          "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e4e73cc0-64ec-40e7-8c8c-3ae0799b811e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
        "cursor": {
          "ref": "34430b9b-06ac-4ece-9279-c4f7f3dc90d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cb537065-8586-43a0-b69a-f0868ca84395"
        },
        "item": {
          "id": "5b172c6c-7549-4d59-9f1a-3661c3905b85",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e4e73cc0-64ec-40e7-8c8c-3ae0799b811e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca627f3-4e32-4cdb-8b89-e9fc7a44c539",
        "cursor": {
          "ref": "305987a9-cc30-4d70-83b0-d45791641c1a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e22b13eb-a535-46f9-9646-ad4956f641c5"
        },
        "item": {
          "id": "9ca627f3-4e32-4cdb-8b89-e9fc7a44c539",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5cb3e4e2-009b-47b9-8536-d02014928619",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95038e55-f6de-4466-8818-6c63293e50fa",
        "cursor": {
          "ref": "a63eba18-2407-44c5-8906-8018fc09f825",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2a04fdbe-461f-4fc3-9f7f-8356844287e0"
        },
        "item": {
          "id": "95038e55-f6de-4466-8818-6c63293e50fa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3866a97-4339-41d9-8296-6ff90f57be52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95038e55-f6de-4466-8818-6c63293e50fa",
        "cursor": {
          "ref": "a63eba18-2407-44c5-8906-8018fc09f825",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2a04fdbe-461f-4fc3-9f7f-8356844287e0"
        },
        "item": {
          "id": "95038e55-f6de-4466-8818-6c63293e50fa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3866a97-4339-41d9-8296-6ff90f57be52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab07a4-7014-40ea-86e2-8920bc3e109e",
        "cursor": {
          "ref": "3a838d42-ab64-4f2a-9cf9-a88654fb15b2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ac035171-bfcc-4774-9c91-efb93b31f8dc"
        },
        "item": {
          "id": "b7ab07a4-7014-40ea-86e2-8920bc3e109e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6a400a7f-2e3c-43f7-9cd4-2178323529f0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a4853-a879-4fe4-a2a1-485c61f1a624",
        "cursor": {
          "ref": "7e4d2b54-516d-42ca-8f99-7309a9b6eb74",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31637174-2080-4cdc-a1a9-a5e2f23f75da"
        },
        "item": {
          "id": "ef8a4853-a879-4fe4-a2a1-485c61f1a624",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ab34215-20f5-42ba-85ac-ef0ad0fb0413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a4853-a879-4fe4-a2a1-485c61f1a624",
        "cursor": {
          "ref": "7e4d2b54-516d-42ca-8f99-7309a9b6eb74",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31637174-2080-4cdc-a1a9-a5e2f23f75da"
        },
        "item": {
          "id": "ef8a4853-a879-4fe4-a2a1-485c61f1a624",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ab34215-20f5-42ba-85ac-ef0ad0fb0413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429615ff-54dd-4a81-9af2-0588575b9840",
        "cursor": {
          "ref": "a3cec799-9a32-4bc1-a4ae-c79040cb1d81",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3b4ba244-b7e8-4cfc-a5c4-6050ffdc17fd"
        },
        "item": {
          "id": "429615ff-54dd-4a81-9af2-0588575b9840",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ed6aa417-3ee8-475f-b8f2-2c3731c8ce2d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}