{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc414f72-8088-4b11-92ad-a00378942c79",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1ac7a97d-9d6a-47b7-b028-d4274d076ff7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "453b8d6d-4f35-46f6-ae4d-e405a9510f24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53d4b6a6-75c8-4abd-a25d-8f872163ddcb"
                }
              }
            ]
          },
          {
            "id": "9617d77b-ff54-4442-bfe2-1a034b9913e1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a15c3ec-6f3b-4d74-b909-302a6213c141",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "153c5919-0382-4956-b008-c6d3a5e70fcd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59a8f006-f5e9-429b-b27e-2e335eb624fd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1c172a8-d163-402b-937f-88828584b396",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a838b1c-7915-47dc-827b-1250863fe11f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf9d6652-b322-4297-8694-962836e34a11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3159da1-88c9-429a-b8ef-5f1c7ced0f50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9b225a9-1796-44c8-a5b2-4a4fb2ff8573",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e651a18-1dce-4152-bfd8-d1179855cd62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c280b115-617b-4613-a248-804665bdc1f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a940272-de5c-4968-9228-08cbbf6d0202"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adcd35d4-ca90-4d61-bd50-b0b0899cdda6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d3c0bca0-fdbf-47f0-8ab1-7a987ab9d5b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f85bd604-dfde-47e8-a944-542ac75aaeb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f0c97d6-7de0-49be-9ea4-846761051b5d"
            }
          }
        ]
      },
      {
        "id": "d3638dc6-891b-493f-a320-0d2c96c2526f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ad30872-a567-490e-ac2e-6809692ac1a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fa76f9d-03e8-4da7-85e5-9c2316bca145",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0df644f6-4d37-4489-82ef-d24f08a7fd22",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb118f3e-64a2-46bf-88b6-e05b0fd2ff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85c8622c-0b15-4e28-ac39-bd8cfd20053e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ebc1fa-8ddc-4e14-8f90-6d8cf0c256a4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7f0d2d-bfe5-493d-8ebb-9d6621dad73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f02ba70-4f09-4f20-a3f1-3c954d87cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e0677a-5879-48b6-849e-64843b9f16fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eeedd1-f3e6-4936-9341-d641a9d0ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7af90dc-1b2c-4b6a-a962-0a7df4c0f98a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0594ea91-a35b-4c45-80dd-7c4dc1f63e06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9870a8e2-04d9-4d29-b86b-e45b660d0259",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5662c443-ded8-471f-9381-36bebc35dbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f14a0f23-cd59-408e-8e25-f673a6037826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d0f2aa-ba99-4f65-bc2f-967bb1cc7707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e82acf9-756c-44fd-8fbb-f501b9a118fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4a5abd2-42eb-4adc-bdbd-2cc01e614a99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4151336c-248a-4044-a842-cd93a27b8ee2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d7f6783-9116-4958-9e5e-a48511053040",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "37937b37-02f8-45bc-a19e-aea75acdaad0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fd939d0-7754-492f-a56e-809af4de2561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a9e49bd-95ca-42d3-a46c-f6069ab71e3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "755e2f6a-7fbc-4f34-8dc7-b2d3d78d89f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c6528b1-8c4f-4663-b5d4-90134b01ca84"
            }
          }
        ]
      },
      {
        "id": "9562c4f1-acca-4d6b-b21b-16f8a4b6b4d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1bd8f70a-7675-4698-a37d-7c6f0ee5c26e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3e83806-eb82-4e38-8d3f-33d84665fd0f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "879c88be-7359-46b1-8c7b-8861a2dd79d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62339188-cea4-4b39-beb3-e1479fe1c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504bf700-5618-400f-aa76-0c64f8b7f097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab317a-9e22-47f5-9bab-31fe80cc659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd290b4-b4f4-4814-8c3d-a770d0c7f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23185a8-f3e1-4210-8884-92c74dee24e7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d819e813-88a7-48f5-978e-861d4ad41a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7608ad10-5d79-4b93-96d3-8770197aa969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624693bf-752d-4d87-b836-7b37a90ae80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f01abe-b1c9-4b65-8007-022616d07abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a0faf2-dd40-4caf-b63a-f8039d05cbb4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843a1780-ad61-429a-81a6-ec6be65a7360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33895f19-e95c-4c6e-8d91-5df9afbf3ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de8da2a-d30c-432c-b95c-f96742769959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d6f93dc-9f37-4974-b248-bf7ed2b9f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b7e1c-f9ba-4868-9e0c-b1d7689906dd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa46f013-15ab-4cfb-a2f2-d69b51f88deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a25f7dd-ce01-4d3f-b8ff-e3813f645fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d89daa-3516-4fbf-8134-03e9ed71c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b16cec82-88f7-44bc-b093-73866586e703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde8216f-617b-4f1b-997e-d6061a0877dc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d884437f-eb60-4aed-bb55-4dda6aa03a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d706be2-591a-4293-9851-74c045f89c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c1d492-a903-4872-9339-cce69a9682ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac40ed1-337a-4639-b583-2653e80f923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf3900-350f-481b-80a1-3d188316c1cf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed080262-0753-4d6a-9fe4-5d41bfa7891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db152ee8-baf3-4cfc-9d32-50199952b35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925efe33-cb9d-4e0c-97c9-930491068646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "380e6c61-b0a4-44a6-9d55-f045a405deb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ed297f-1ec8-48b5-b32a-88e1870dadf3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5b33c6-ea98-4005-96f2-59fb56afb029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4e0f25-cf88-4f04-9c0c-3309f538aeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85cdf40-53b2-406b-9f6e-c6ecf41a09f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9de82f2b-8c13-4383-9e42-f60314e698d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cc0658-fb1d-4008-952c-17ad2e43b5c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea781d6c-6684-453b-834c-64bc41715e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1110d6c3-9462-4686-8b32-b0dfbe72589e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46334882-ec83-4403-9cd8-f301caa6b946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eea8940-2370-43d0-9253-c431ff2798a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5db6653-70fd-43ad-adc3-1c8d9265ca71",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb45de6-6c61-4ed7-862d-6818ee635f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270fc8ce-4c22-416d-a700-926ac7082f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6376a5-377f-4de3-a5b3-9aabf1a19bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed0e37a4-12f0-4829-a9f6-6b31cd21a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b2497a-e50d-4b99-9fba-25baab09ee5a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb2ef1-cd6b-425d-aebf-842b84df8fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c36ef92-293a-4e40-8d6a-4d68740712ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a272d2-f5e7-4492-8d57-92736f5bd0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb0b1703-11cc-4026-a067-4eaab1a0dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853d4d0d-6eac-41d2-a081-3b19396a0da8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4493b3bd-2bfd-4ac7-aaed-4cdb2b96aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73913fc6-e1a5-4b00-9e0a-6c06169b0e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0e148a-cac4-41e9-8373-e0864067bc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62acb14c-c106-4833-976f-4ddaa5efe846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22e0a60-6705-4d37-a1c8-2fac2168dbb3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac92f708-d1ba-4942-aed6-488cf14fc947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf0852c-eebf-41b2-9853-3661e47c8535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffb206e-2ae7-4bf4-aa96-4b0b5dbf3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "931dc3e4-013e-42e9-b353-e14b9df4ac62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b9fc0a-4732-4ae5-8163-8b9f67dc6f9b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556496b0-4bc6-4aa4-9c0a-3631a8731884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3f1bdb-6fb6-4f2b-9c26-802d430c9e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f17c82d-595b-4911-b933-be3d50473893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5041dc8-75b1-48b8-a0f0-3b5ff656df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6421f2e9-1c5b-4cdb-920c-0769251508bc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b53082-d014-462a-a151-7ae52c1adde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c19b5f2-b399-49ba-93be-534a9bcf135f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170d2bc4-6d29-4827-a28e-cf8dca995880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0ee6f99-f4ce-400e-a4f2-b6097cca4dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59930fe-98fb-4736-b86d-650aede3f1b7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf92377-24aa-40b0-bb32-f968e4170a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5618e8-727b-4731-82d4-bce022a28221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc21e441-5740-483d-ab99-5d24b8907709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02a086b8-1c36-4f5c-a333-76abd6c29195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7c7450-7e30-4443-bf6d-b97c7592a11b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dd5e82-dc02-4d36-8c25-c81498b2f6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5aee057-2d50-4603-9792-8e25ac460632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4a0646-9732-4ada-8cd0-085e6aa9c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c6aa1cb-670d-4ee2-b52b-f3f8a3525728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47b1b4f-9e14-4ea0-9dea-f0db9d03762a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1edbe2-b5a9-4e23-9040-4c3283b12960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a667a17-86cd-407c-a5d5-e586da772f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db02b8b-de28-471d-9a1b-b1a32a70110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11124226-d0cc-4f8b-a010-ab9e52a5deb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a8d6e7-c6a3-400b-91bb-dc2c10989aa8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb70c6e6-abac-4802-88b7-a580237ecbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b55d70f-5ca9-41b2-833c-f03886b5fc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e46a3b6-2e83-4bbf-acf6-755994d5e4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97b205b-30f5-40a9-87be-bb1c38ef360e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e0a665-d8e9-468b-9cc8-6d5a153388f9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f84ba-9c0b-4248-ba0d-1e0790b048d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63e47b8-19e1-4995-8d4d-27e70c955b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbd322a-352a-470f-b22c-33f65f3e84fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc53f5c-c1e4-428a-ad0a-d9bb466679b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bdadfd-cb40-4894-beb8-897fe988c5ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d9b3bc-607c-46bb-a7b1-935c369b6ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ce2e81-4c89-4d68-baf8-c942a81b80a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061c735-71fe-4159-98e4-49748830dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "041315ed-42a1-4dab-9bbf-65e76fc14df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682f8d36-68ed-4c55-879a-b25d72e30d00",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7637e181-b808-483d-b966-8381056ef2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dd02c1-d377-42f3-9a08-3b0ea6ab0fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a12f28a-4c98-4298-ad7c-d9ecc8ecc7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07bc2096-45da-4304-9982-236b23f37640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a374bc8-1516-4809-a960-3c69f264ea9d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9662cdfa-949a-4cb1-ac4b-392256305a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cd5c88-ffb8-492d-a522-93dacfdbb3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd8dacc-3706-4d76-9a41-de432b1a0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "405c82eb-8163-42c9-ae53-c8600ee1b14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c8c923-3772-4985-8335-2473ee078fc0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ce7a6b-8817-49cc-b268-856eabab21f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb34668d-4034-414d-97d3-c11c2e206e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4feb0e1-33e6-4563-ac86-c7e68b6b7a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d38ac73d-02ee-45e8-8ae0-5af460235dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412149d0-64f2-4e6d-b9a5-eca85a01af34",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6d8f4b-89a6-4f2f-b21b-beacaa19ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4233727-3d3c-4c9a-a649-16b680d73e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee451b6f-a7cd-4bd0-8ead-52787c76cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c15896-ab76-4ba4-b650-6a7006c6e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b43a82-15b9-4091-9330-12cf42abfcb9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d81b522-1234-4dc4-b3b3-d623a8c7517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093b1831-2a5c-433e-9edb-13902536064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c95b54-2866-40d5-ad30-80ee95ac48ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8cf437-7866-43a3-adef-04c44c0ed1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f6d955-443b-46a0-84fb-7f29075322cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450815bd-22fd-4147-80b0-fb48c28f6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a7bd52-478e-4349-90e2-df2bd5623d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e831c819-a27f-4570-8955-fe4581b39e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db4411d0-a3ea-4b8c-b328-c7c7b0d384b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98de242-3336-4c00-9b07-c933e999d27b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec90ded-1692-454a-a7ee-5f42c313eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5777236-02de-4729-8cdc-cb26ce885e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bcb3e8-aca8-4740-856f-8ecd65350277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd10821-49b2-4350-b9cc-8c2409f2d881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510eefbe-da06-4232-b81c-1e29249c542e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d38530-ac42-4234-a64b-5391dfbf98b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa7caf-4420-4185-84ed-21367bbd020b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b6076-1012-4aef-89d9-c8ac0c16f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c5f6a1-ab7c-4d72-b022-181b420fdee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6040de-4732-4b3f-bac9-2c48b7001326",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bd8610-c7f0-443f-a938-580ec5a67f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec67807-8f4c-49d3-ae10-775ec8520379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a90bcc4-f38d-4b17-8bf3-cfd7c558613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7503d888-b4f4-4cf8-9871-f72c5e4d2890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee39f4d-1af6-4d85-b1cf-fa393163a21a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1555d-b218-4093-a29b-48c53463c273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9f7285-3333-44b1-a5f9-5a6ed5689cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17edde85-66a4-417e-b99a-99c528b17f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53885942-4847-4495-ae6d-fae5ae0141e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92348fc7-c24e-4db2-be5e-e67dae84c25a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b48b89-bbec-468e-905c-0c26ce20b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da023fb-2eec-48dd-a35f-e47469e7eab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ac1af4-7f76-4a0e-9adb-544d495dfba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa97e745-bf2e-47a7-979d-05b814d4285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c0e147-b461-486f-9659-88237590a947",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df9180-2aa4-4a82-83a5-757ecfdeecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0533d21-9151-4fb3-9e18-77f90c0d90f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaae8981-6c83-4c1a-8e4c-f8235d2c9f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac761170-69b5-40d3-b599-a43498e1d475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d46a65-e53d-4e11-82c6-72eb882982c9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5f403-6eb5-4288-b169-18f1b49ee83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c0f5c4-b9d5-4f68-9f51-d48e3b20582c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773d1be-60e1-486f-8c1b-7604456b3953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdffe39-5ee0-45f5-91d9-6bc087a582be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b526bb-6aa2-45b8-804f-0e1f0fba5f2d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fec21a9-66b4-45ca-8872-49aa4c583022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b42e6f7-f312-4a1a-bfb3-c6d2d65d7f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037c653-fc7a-4a26-a2f4-e0f04157ceec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c595ef6-f69f-42ad-a1aa-b85ae556abd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab916e7b-4c23-4901-a761-0eb939e27acd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2329cd1e-70a7-49e8-8252-82f9c2f7fa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d939316-3be8-454c-9828-1215cc7fc4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2c452d-e7d3-4469-8007-63e23e0b69ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8b4fc2-6f5c-4529-a6a4-c3efed861035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d003c8f-2cc2-4fc5-a2b6-dd4f738d0a56",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8265d92-d192-4f52-b9a4-b4f1796b08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e75df3-28ea-4f6a-bc5e-2f6cbc0d0ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b319c7b-3058-44ff-9bf7-07cc42620a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00d03489-9223-453c-abed-034bf663e5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09100792-1163-45a8-bf92-f0835a32f1bd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ac571-c6d1-421e-bb95-0d8fbb6ade11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95177c4d-dd24-4e34-9e59-749baf043a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b9d8e0-49eb-4c0a-b68e-1c2bf9ba6f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1736005-91d0-4d2f-983a-133cb674ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466118e-5b21-41fa-bc24-b3012b5099c9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d21fd34-d825-49c3-89df-91dc02df7bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33d67b5-30c4-4edb-8259-5cf08453faac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d867ae71-3ced-4305-9e05-7ea33ad679ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46dc502-9236-48a9-8473-111a9c785900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5eeb31-8d8a-40b7-992b-af22e224d496",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c49c4-de59-4422-b87b-41b6a134b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4222d87-d8f3-4654-a422-a5b8f98f93fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03a29a1-0366-4f0a-a23d-6df1d04c51f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9265158-0329-42f8-9f07-9ead381645ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc54cd61-2c2f-49bd-9bc1-a831609455ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b23a753-1649-4b39-8493-98aeab6dacb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb35543-a2b4-42da-946e-d04dabd6407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceb15fd-bb93-4107-bf21-5e80498b5df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a713f085-f246-4da8-ab30-cf08b15544e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f80535-6697-46c3-8de9-c9164508e0db",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d2f12-88f0-4e86-87ba-feba50d2786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90925afb-17ec-40cf-ae32-0c865858dce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7ec46-1097-4e51-bf20-aab3889f2187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb34562f-ff78-4a1b-b13b-de14882164f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c69c432-d4bd-4e60-af8e-f01ea5946b50",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a888ed2-7b79-46e3-925b-fb79ce2b2101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d15f0be-2471-48b6-9ec8-726b7c785300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d974e33a-4278-449e-852f-8d2317fd9f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd52fb-476d-4d2e-b289-c343af8dd56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23fb889-30a1-4c62-85cb-c63c1b2e974e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5310ebcb-8030-4471-b3d2-08dc3ba73ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3700c45-9ccd-45cc-bbfe-007125220069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38231167-f710-4aa8-8dd5-d33b090f774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd5f426-8620-46c2-bc48-1c8fecac8652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c770e107-8e21-4c15-8da6-07d0512ff788",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c94fac5-c713-4647-91e7-483fe9dde38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e69474-847b-4177-a4da-a11e38ed0937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6144f9-79d8-4a7a-8c3f-f4072334bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01bb34e-0b9e-443c-8690-c7fb3adedc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eb39b8-b3bf-433a-97fb-100ca9c387a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c125a86-d091-4012-a1a7-8bc20d1a585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a783db-0902-4ce3-ad1b-b8be4555e303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96873c0-b83d-4e10-8fda-dc668c9d52a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8abfacb-cf63-4200-8b36-cb13f004de4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a6b23f-b26a-4c12-bdba-0d253c20e3c3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de63c08-7c43-435f-b257-c9bead0405e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e431a57-751b-42b6-8290-5d62706025e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5ad94e-1c1d-4363-b7ee-595f474917e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881320c6-7645-436b-951f-483934723aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d533cc39-64d8-4331-beb1-64399a67882f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdeb72a-42e2-4b6b-b90e-b3ed8781db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c0887b-e481-4afc-a075-bcc5745eec14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346ac34-42de-42e2-8206-3bb3257ef104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4327b6-274c-4370-9687-3a99b980883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a802d-2ca1-4313-b767-b23de4c159cd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eb1837-cee1-4125-a3f5-754d5b752d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f82356-7409-4681-a6f0-5174939d2d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a72a3a-3c92-493f-bd79-ad40c6e473d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aac7fb1-48d9-4a5d-b0a0-4cb3c500e225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30cfa6f-76d8-430d-894d-cba8d253571c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb04f72f-24e0-4d00-be87-8c6b9dda5d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e701262-e4f4-4741-95f8-763edb32eeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db0d6e-bf8c-46d5-a9f1-d51dbea82e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aab68a4f-4bf5-4e69-9be3-13fe2a0148ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b806d6-0f06-4c81-82ad-b18dc3ad76a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc64770a-feac-4e8e-8673-c6c811e5449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b524acd-4358-4893-81ac-8787dcde41e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f664eafc-73a9-4ef2-8986-48d4fddfb47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed58c177-9b8f-4e35-849f-77a72d4717c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5adaeb5-93bd-4bc4-a3fb-185409c2b630",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34137be4-35bf-4f0b-8547-4b189b24bde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de92e2a-cbbe-408d-9f44-aed8abbda39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310b6848-998b-4ada-8651-6e9db2795378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "86dfa265-c64b-4176-893e-1ef9237c9513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0922007-fbf1-4100-8491-37738d4443f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3037529-afdb-44a8-b613-96aced7983f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c919241e-a78d-4291-9a84-bfd211da1e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c596f9-c02c-4248-b211-f8586c7d88b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c985b4b0-f3b9-4b31-b1f8-8b515b7e9dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceae0119-936e-4c7a-bd84-20e01398663b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faffbe9-8204-4f1b-be92-8d7eff958036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fc4073-e055-48b4-bf0d-e5d1aae0c84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c54af6c-2cb5-4ba8-9a3f-0ded09e6cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7362de16-a3d3-4f17-9576-aff16c886e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad6ea77-cdbf-408a-ad5c-208006cd8865",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02d683-483f-44f6-addd-c378abbc5242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf0450f-eee1-47ad-8ea2-e23061c48524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37d2740-57a7-4803-b84f-629d74ad178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c330db-dd37-45e3-aab1-3bccd370c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede6f3dd-c42c-4456-9def-fb382b4fb915",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311f5349-3702-4451-8f54-617dba03608a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62373b56-6fd7-4811-903c-e04fdd7a20d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d617049-59d3-443d-b254-a0d894a3cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28b43cb-5a34-44cc-8098-dec8a2ee55f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787d67bb-de23-494e-823e-7b1a9a9b276b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324c9d68-713b-4807-b0ea-532ab5561f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf64b36-2f01-4044-846b-0c9d3ab4bf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab659ddb-a114-4e32-bcb7-5b6178a99363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "448407f3-7aa3-4402-9f96-459c73605806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2700fac2-c673-4185-adf8-692f1b4ae87f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf3d7b-f238-453d-80ae-fdd930f7cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc072c0-df47-47ed-8f8a-68fb4842e4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f130a5-9539-4359-9442-773551b8a83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d954e65-95d7-47da-9ec1-8962ba4023f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a72b18-99a7-40fe-8c56-22e56a4a2512",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a049d02-ccad-476a-9247-fbd104f03114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0532eb-b47f-4245-b3f8-b3d665525804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5f6e9a-ac8f-4cd1-b3b9-0c27bc539787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b4322a-8d89-4cd0-a333-f2c5c454947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e9b5ca-1c68-4ba2-9d1a-1c7fc27efb51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a79993-fef9-4ba3-b823-e3e6a6959b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a99a4c-1e14-4529-843e-cfedc42b2c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73aa1e1-6392-4297-828d-caad21eaa5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ec7e9a-2b5e-40b4-bfe4-a8df2b5155b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b98980-7e06-4360-852f-bde962080e3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50436f3a-ed7c-43cc-8bd9-61d277614b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dddfe0-204b-4626-8343-00776aa8425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4ba8a-9433-4841-9289-b4806841ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60937657-b715-4071-b8e7-82d10da383f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0870f37-3485-46d4-b43e-d01b6f7370a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4992f1a8-4f49-41f0-b7c6-aae5dbe73531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942d0e0c-b515-4dce-8419-29d0f642fa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d5f52c-493f-48b5-8be7-a574916c5796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e1dd81-4529-436b-830e-3f1bd72ccc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0fb505-37d6-49ba-9591-0e7af0d21cfa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74fcc67-71be-49f1-ace2-d5c3f3cc85f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08e1ba9-7c72-4104-84c4-ede31c3e5190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdd0fc2-cd25-436c-8132-9e5cdc799c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e411d080-a3b4-4225-b7ef-0d92bacce3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1d8db2-0597-4434-b70a-402f71bb38c9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7cee8d-e0bd-4776-a1c3-a3cf94b3c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097caed0-b4b4-443d-945d-085e6869e0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3483ef-27a7-4793-bcfb-c244c4ac20e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e865a69d-a9da-4d17-87cf-d6b7bfae8453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46175dd3-9183-4040-a7ee-f0912093f04b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8615b43e-c781-40b9-ad2c-116642f795f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f6e356-2970-41dc-b4f0-76499c4a3586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd04da55-ec42-4fef-a429-badf12081fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb543de6-f199-486a-a094-f88c4229583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e35d33-45a6-44f9-a2bb-92b9b2a92ba9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6773ee-32b3-4e3e-88fb-3a54c09bd086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f262fe-733f-4f0b-aa09-84b6a002a097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6354c334-dbf2-4660-8570-5b9f5dbb2721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e42ac5-4fca-4b3d-813d-e04ca1e826a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feabf419-8e97-46c5-89e8-7360bbf24ac1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f049a-a228-43df-8a17-8a3bdcb5ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8287af50-d23b-485a-9707-aec6029fcde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0627821e-01a6-4d44-909f-868d72cf6827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bac4232-8caf-4b65-b429-a6fe331255d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db8432-b180-40cc-8b7b-4934e04260df",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea094588-6dc0-48c4-9663-96c0f7f7b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c242634c-0736-421c-af97-ae04821e5c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27848c-fe72-4ca7-8929-405500dc84cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2194734e-7b0a-4df8-a33f-955d99af64db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e669865-8614-47d1-ad9f-68299ae95ff3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12189c81-7a25-4ae0-bb2f-ec70d7077f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d183ce-a3c2-42da-80b9-b67e3657d014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2327a9-5b5e-4a87-8ae3-9fd0fc39b54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4edad9a9-0ce2-48c5-936d-3d9aae232a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdce3045-84eb-4b17-834f-9b41996b4792",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94731b55-4c7c-40ac-83fb-dbd8feacc2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15da5b30-c0a0-46c7-be0c-5d54e59cddc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4117a9ab-7966-40cb-851e-96f025dbc34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e004b54b-c93f-4809-a6b1-d60e2531ecc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6160c394-e9d0-4df9-ad49-300d37531933",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b27d467-17d2-4e8f-9f98-90964e10b961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951fe7d0-cd6a-4752-b52e-38cf241c0056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6df6a6a-ac0e-4946-982b-8c4b00df7a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f4cba9-e6b0-487e-897e-cf9230d89882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d3c73c-a8b3-4e44-9adf-658bc6f1c7c0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e075025-751a-494e-b805-fa151f073093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986fb865-1b10-4bab-9ae5-1429a50ec7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7185d68-de91-4e5e-b429-1f9588463637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e4459f-17f9-49f0-ade4-293865a88a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ff52c9-c6ba-43a4-8ee9-97cb7f9e91ff",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5471cb2-c4b9-4d6f-826f-2d3fca6b717e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015b16c2-925e-4505-aeb6-1b1849ea0cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5e4010-517f-4875-9789-1e85088dff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf517135-71b2-4a19-b88b-cd40a1572da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1771dc-6a0f-40c6-9923-be340d556bac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171261a1-8ace-4cce-8f05-ee9fddeddfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006154b1-d369-44b3-86f8-68d2de82e423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d647a9-a1a0-4f95-aadd-64f68bfdbc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c57344f-2247-447c-94a7-9d23ce0f9452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bd5a0b-cabd-4bc7-97b1-4e9d0555e311",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7c4856-f69e-4fc5-81b6-69961c9f9693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0feab0e-78f8-4097-a588-f276bd410276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4631b94c-95b5-454b-865d-134fc7b4871d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "034dbdd5-0364-424d-acc7-af689d0260c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5801d8eb-69ec-48b5-ac8d-64bd70b83d5e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5480e53-be4f-4f0c-b1e9-084ae47dfac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001daf6e-0e13-4d5f-8838-68936ba7686d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838cd880-3a26-4a94-a0ba-b7958ca56fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd873cb4-86e9-4435-873a-33f77baa5651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7af5ff1-73b5-47f6-963a-b3551d1362bf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff25c47e-07d2-4d2f-90aa-598a30df47c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e34bdb1-b9a7-4666-a2f4-3c5df060250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83843695-ee25-4536-b090-f1d21db0716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d95b6-4e48-41a7-98bc-4e67d8cfee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee427198-2985-483d-8e82-0cc6ec99f570",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9832ec-e1c3-4353-871a-01dfbdd6c595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08e354e-719b-4b85-9afd-d956afd6c245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43c9a5e-13bd-4d68-b5d8-2a7962ac4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2510f5b-49a9-498d-8aa2-3c577f9c673a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b568cfa-df5f-420c-9f23-1055ccb4631d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995f67e8-325d-4167-b06e-a35fdad8dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d3e37-d2e3-45bb-b623-2756160d8905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e2d38-5e99-4178-bfb9-ed83893b2ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20339799-c544-4bb7-9a9f-c98f6bbf296a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028970c2-36f9-4f71-8aaf-57db322772f7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67174de0-ef62-4540-99cf-9ed2833d9afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d70fafe-a94b-4892-b1f2-9bfe3919f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4987ad13-c499-45f7-9345-b803a3de7d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2d60a7-09fb-4da8-b5fc-3044a8c11e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917d83c-2471-4eb5-9072-5fb340b803e5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d6d9b2-9e0a-4f3b-8425-b8107d72aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2ebf06-a2fe-47ab-b7e4-b31a606c594f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dd5b4c-bfe0-4370-bf69-66d55b3230d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "798fb0a4-849c-42f7-9c4b-e393e4070884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a21c1-fa7e-41ed-b55e-9d5dcd0d1891",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456c9643-2367-4830-bc64-4e7caa5f008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fa422e-cfd0-4cfd-8de3-03901c72344d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce53be62-ffe9-47a9-9434-33c6fec8a39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b048447-54f4-422f-a267-644d8c8f3d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75998dbc-204f-4a05-afd7-574e491fc986",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a57b4c8-542e-4e63-9a44-4e4691a429f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c683127-b5d7-4a3d-9565-1e99ae965470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea62418b-94cb-4e26-ae45-96448ebb721f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66891260-bd88-4c09-911d-5df60b2e534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b7724-9b62-47ab-8353-14922141d998",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc080c-91c1-4657-aa02-21166ca52fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a51bfd-5a3c-4d8a-8ae2-207522f3af97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2dda17-2cf8-4bde-ba25-ebbde8b64b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f9ad54-2526-4db8-8e33-eea4864c8f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2077df-39e5-4985-80e2-4e427bfa8195",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6be1b1b-448c-44d3-96ad-30a3e338c718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911061f2-5166-4a2f-aff0-7057519b7350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6347aa4a-ec67-49d4-b27a-484f1139bfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd69568d-8a36-4cbb-9bf4-fc8db7b50f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a711366f-a67b-4af5-912e-b96d28765544",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2646556a-8069-4748-a80b-50920cda58db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e743040b-14f0-4abe-8eec-55e8e35f74c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f24c44a-7b83-4fa7-ae24-80282afa1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a001fc3-dacb-47cd-aac7-a5fa4ebc1867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f596be90-78f4-44bb-9d0d-5e5fa578f3bb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d7c998-9220-4124-a084-19496cc300f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40805d8b-0f8b-4228-8d28-afb1d4dc0c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bcdd9f-6ad1-4598-a9ef-664f86eac448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b026640f-0e58-4fae-ba3b-3077728bd33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283ee9a7-7ee1-4b0d-8516-220f67c7cbbe",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf123e-54fd-4086-90c9-1d124e3ffc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557f024b-a88f-4170-86ec-e321deebbc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9b6c5-dfb4-42b9-a209-781e8c4ce371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b88a4b0-ecb8-4a08-84ed-a8129519b7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4224dec-27cc-4699-a515-93e8f5dc3379",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d42ed-573c-4f13-bad6-cbb709ba3757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a3e665-16f9-4ff1-a122-8e59fff28243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a3d62e-0378-41ce-a78a-abe241eaf1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c929db7b-84d1-447b-8048-f84ca82a6397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf39538d-8c85-4d47-944c-8cadf3aa37a7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84316b8c-eb3b-4f62-a3d8-08e59fc57551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb42692c-2024-4c6c-8f5e-2830038a423c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42da3fa3-5c68-4b2a-8081-939f0558b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4986d650-2825-40eb-a6f1-be456566d3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e80983-d9df-42f7-84e1-9f1b1a5c6265",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e16984-0ec8-43df-8bd2-b9d6de66d627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4755bd-6b36-4c6d-824d-f4013e90cbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7aa9a6-6c02-4f51-b109-6fbdb2aa463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "faa25709-6c5d-470a-afd4-a83578789f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759f0707-2ecf-40f3-91f8-5046faed3197",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee4392-9dc6-4026-ad17-3f4b5658e3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe0cf71-935b-42f3-bbb5-856909847a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46571ab0-0bbe-4e17-b974-a45347c59263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "14145c65-e8a6-4528-a986-1460fa9d68aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd460b34-f685-4b95-80fc-f6e2af44bfe3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3b9d7b-f7e4-4e94-bd2c-e66d0e6bb055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d330564-d160-4b3d-8eb2-1330dd315b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f56d54a-b320-42f8-87ba-e91695e58b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c69c080-814f-4d8a-9a1f-4900558ef2dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64c44175-6055-47bd-8628-fb82d1db9e0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb9990df-27e6-446e-956e-5de5486e0ab9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00d102b-61a4-4781-89c3-0b11764b731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d8ab4c-8694-49c7-bf6a-6bdddd7be90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81915788-3844-4b97-a0bd-87a38970291d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8e053f5-1040-4098-b456-33a3953336f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a944706d-ef44-462b-9f8b-beb115537f2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c9dd8e1-0f20-4bbf-b6d4-ac1c47207d31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4b6a14a-b3b5-410c-a558-e00a185fedeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c82d759-ef5e-44f0-b9a1-3e98ccd3795d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c21956d4-836f-4ca4-bcc5-05e617579985",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc45f678-01f9-4df5-8412-80a29d67c0f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b829f342-1d47-4104-8fa6-c8927bef9ec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "637e13b2-8dab-49fd-a20c-ba2caa31187b"
                }
              }
            ]
          },
          {
            "id": "a469929b-4882-472d-a57c-31075f1817dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67e761ae-d781-4cff-98f4-623e6acb069d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b96928a9-8aec-405b-a4e4-dae372766dd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5dd547b-f866-4fd6-aa07-7af2697aa75d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51fa9444-ff1f-4bc9-aa8e-1cdaa145409b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fce3346e-00c3-4c1b-8fe7-33d9128a0db3"
                    }
                  }
                ]
              },
              {
                "id": "6aa7fd7a-a3d6-48e0-b6d3-0e5428ac851d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c2aa5e-e997-4eb6-9aef-69867fc862b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26a989e2-c3bb-40f9-940f-a78af5b5fe6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "784015dd-dbb5-4cd9-a933-631bbb4495ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "639a4cd1-b2e9-4fbd-97f3-233220b14f99"
                    }
                  }
                ]
              },
              {
                "id": "d94bb802-b531-49ce-8bab-b67dc125f0ed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8704ed-c1e1-4074-a357-76bff950e0b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b07c7b9-cc08-482f-ae53-d07464e77408"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d632782-c358-405a-b61c-135626fb21af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e562f56a-2530-4364-bd59-180ed9083de7"
                    }
                  }
                ]
              },
              {
                "id": "1b814458-2709-4356-a9ad-c9096029313b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa8c0a15-85f0-4748-ae35-c1b645150a53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b3a5496-7781-4a8a-b5c6-c7eb469ab71c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2692423a-c112-4b9b-9c5c-1877b13872d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ea73ed6f-4993-4387-9c1e-04855de88d5d"
                    }
                  }
                ]
              },
              {
                "id": "bd97b2f3-1ac3-4eaa-9b0d-bc15118d22b2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b527e901-6e4c-4eca-8091-87af34ebefe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c0ef4e3-12d2-40a6-9fee-7e7343389a87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be39bed-0046-43a1-a1c8-f93ef8679915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fe698287-56de-4d97-bac4-8abcd061b67f"
                    }
                  }
                ]
              },
              {
                "id": "15055646-75e7-4dea-8322-f3b3f676524e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff1e30b7-0b42-4577-9de8-72e49c2a6cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50f812e4-16a8-4f30-bf0c-8914aff15607"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5738066f-e994-4225-82a2-90ff5a41feba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc1c0868-97df-412a-ab32-37210279b5d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a6e30e1-6eda-45ad-8312-a5676ef71196",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d0115e3-6e38-459b-8cd0-185c17ca3819"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d70380b-0fd9-43ab-8caf-f77c174310c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34d403d5-9ef4-4e59-9406-ee7e17225cca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0f7aa38-0f75-48c6-9c02-95fad864a1e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a2419b66-291a-42f6-83e0-ed1e4b841e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6a80f42-99a6-446b-8d26-c07178a21928",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36b0b9ce-55e1-4c8e-86b3-1d70575cf613"
            }
          }
        ]
      },
      {
        "id": "1e2508f8-92ea-4c00-a55c-fc8258876931",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c13fb132-f380-4e71-a9ca-756997b16776",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cd0921a-9d2c-49f3-a0e6-f664e920a003",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0fbe724-7a17-40dd-9d99-1d7ce80579bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6490d8-16dd-4231-99a4-559aee6c6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b971beed-7c31-4e0c-bfd4-6a6dd8543118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aad38e0-6987-4823-9cea-c78f4dff0bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e41fa8-a9c2-4be3-b1b2-495d46183ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372110cd-d42c-45a3-a391-60271086e03c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b874893-d4fa-466d-9edc-bb3bdb61c52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1b213f-b2d7-448f-93a8-b31bba7a415c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07ced12-d64c-4dd9-abf9-37053fc8e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "413b9ff0-e0db-4ef4-8927-47f2e505e399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82028aa-0a57-4620-8583-1ce1805cb2be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79856c9d-6c0f-4633-af65-481e19554561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27a6832-f54c-4d0e-9ebb-7e406962a77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04a50d-8d2f-420e-8cd1-bade2bcccf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78eb03a9-568f-4c45-9783-87a0bdf9132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3437e5b2-78eb-49bc-b301-a5db1815fb14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f70e988-3470-4872-8228-23e7e9764134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa10596-517b-4649-b2fb-1d72fbc204b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e22c0f-9a55-4755-8115-b2d673e10df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f8a901-e55d-4d54-b161-2f1c0b31f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0e0f1-570d-4039-9dfb-10949b7769b9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3259a98-06ee-4e06-8b5c-f235ed3758d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eb5c46-0f2a-4ac7-8a47-e984062dcd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ee32a-3b0c-4f71-b22d-38e4934b5dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95948bab-0139-4ff5-8329-1140dfc04354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829600dc-fe1b-4bdf-8fb5-c0b83c421246",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53895be-b2d7-4cfc-880c-54fe3c2334b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe5a98f-88fd-4061-a501-cc2b85b3a5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7246fb-b9f4-4936-aa55-24703740b9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "304c9af8-d9cb-4fb8-8120-2f960fad2b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0518de-f478-4bf8-8c54-74a5bec7d057",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a1677d-cc12-49f3-b59e-c04a0cfe2f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863ee8f3-cfed-4fbd-a159-45c0f7a73d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c6919e-e330-416e-9fe7-c41a33bc1dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d55534e-68f5-4448-b4df-add7960a85f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c1acc-cdb9-4690-8273-b283d0acafd8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3562e257-baff-4f43-98aa-490eebaa077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0d245d-99ba-414e-a7c8-026470cbb229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b15c53f-5525-4394-98c6-a90dbf92b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5df1376-94cb-4180-9ce3-f9c241f9f8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be5343-8d82-41c8-8e06-44b5b55f3a83",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff4b11-1ef8-4bcd-8737-10466702d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3bed12-a2b4-4a15-8ec3-5d2f8629047e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a90afe9-902b-41a2-8a16-d5b9d1ae5995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfef02-fa75-4a3f-b670-0d2571495b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a53ec-56d4-48bb-bc61-ca93f46b0f1b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87831a33-88c5-4c72-9b85-e0626a483238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859191aa-3d09-42de-96bf-5eae08eb1698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641f1dbe-9d76-4249-b74a-3925461e36dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a09c82f-10da-49fb-9d4e-8c055b0f552d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecdb3ce-a608-4cb1-aa39-18fd2ff5cf4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f59528-08d3-474b-8229-b79407eef6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50504c2e-1ff1-48a2-9072-671fba090dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eab585-15f3-43ed-a57e-519dd7d831bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "83c3cc04-63d4-4053-9601-4d5671d7e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702a1e99-2a8b-4cce-a1c7-de1fbec1ed95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b611ce-b210-4d7c-9162-271f034e5036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6913242e-3bd7-4a6b-ab18-b9cb5f56d6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505ce755-0cd5-4d80-a7fc-36efa5f1d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "541b6dbc-f883-485f-a432-7bca81e05427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbcaa31-9da0-4272-8940-7626f1404a5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b784b87c-9622-4b70-b4c3-4beecefddb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da677dc-bed1-4114-a9ab-6974dba78d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc3eaf5-3f2d-48f0-8106-575abe0a09ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fdf9ae-8757-4ea0-8a75-4ccbd1184077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a12ffe9-ad6b-473f-a3d1-e8b247c7c747",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289998dd-9b56-4089-b040-794e35198c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4aee30-9ef7-4332-99f9-891059835a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebc01ee-5b0a-4918-9186-8df9bd4ec48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "742891c5-c384-4023-b365-3efcc804d549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4888e8b1-1daa-46fa-ab9c-5ce322fe112b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ee8d68-f9ee-4ef3-9966-3e0f23e6b95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f5ae33-754a-47f1-bc36-62e0c65b62e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17bc821-273d-4cfc-9553-0dcc7675240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c1e6ff-283e-429c-932d-b2f19cda67a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef9663f-dfe9-4c84-9bc5-369463e88a4d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f68329-06aa-46e9-8243-f979d79f8427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f040b0-b1da-4d5e-b056-fb46ca3c8349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442ab1f1-640b-4189-a679-cfd263ef1493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b317216b-1213-4b2b-9a50-7a5e089145bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3bfa39-ed70-4b5c-87d9-b1dfbbfaa757",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d240628-433b-4624-91ad-997a84cf733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2dea69-5304-436e-8867-e5cfc9d92c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e31b3-7d99-4dd4-b5ea-b4a9a69ea4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d51e91-315c-483e-9191-8abac75f4371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458c74b-2e8d-48d8-b7f9-ea797f50a171",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e8852f-b9dd-429a-8a23-4d83c21048e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4643f19a-2320-46e2-8a58-446ffab727a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d5418-a7fb-460e-ba48-a2bfbc332d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6edcbea2-c307-493c-9f88-bd14b762bb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8deab0-0e61-4a89-abef-18006efd9fad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd9d54a-042b-461e-b830-df63abd891d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf5b322-9c11-46c8-82ec-e38e139efd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21701cd2-1788-46f7-a46a-424fc877badb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c5440-3c44-414f-9ec5-136f2548d8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fef688f-7177-4dd6-94f3-b1c09ae083bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c426020-3a40-4f3a-8148-43deea665838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2e3514-745d-4c86-b82c-22d2071d47c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998ada0e-5f43-4770-867c-3b1018acb4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ca9067-41f7-4bad-94c6-19f6c3f70ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60c485-0833-4cd1-9e7e-e6232859c714",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a442f6-db09-48bc-8e9a-e2c5babb11ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182aeeca-9c5b-42b6-a809-2e714ce3b345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1316dd-af2e-4bb7-aa2b-02d457249309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca24a7ee-7f76-4949-95a5-8d6138f81c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f9d83-f9a5-4015-be62-cbc16e7233e3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb2346-c098-4fa4-8991-900c16e00938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf2c6a0-8354-4e38-9a81-e7e6bc4e1f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370bbb41-936e-4bdf-82d2-56e809450c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e093d85e-0d1f-4d04-bf79-f61d9e4d912f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50a7668-ab13-44a1-b3f3-335bc5a8ca2d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad004d4b-0696-4db8-ad02-4b25ece11f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8eb1f7-e5d4-467d-bc2f-ea937de3dd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2fef9c-d419-48df-98d0-dc38bd4927a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1557071-7f95-4258-b38f-d6923c42cef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0cc124-5a37-418d-b786-f2b3a2736ac1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dbca11-4552-4fe8-8842-fe11d916df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b600f74-9d37-4579-826d-b547f2642250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f854e5f5-fbd5-405b-a746-f52933ebef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39252a4c-cb6e-4d1d-8c04-04f27892beb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5dc7f1-b57d-4ef0-83b0-bce72f1cb651",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564142f8-df05-4cd7-825c-b2a5bcd082be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673972c1-4130-473a-bc6a-6598de128a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0833a6-c262-4e4e-b3e1-fb9e4447a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afd1f50-cf48-4eb0-bb66-0412131b4010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92912cfc-0d6e-4cb1-9b3f-683f64abe008",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3903c471-6940-4595-a517-08205603dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250460d9-afed-41c9-9bf7-50ea26b96255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adbc013-536d-418b-8651-75a5fd201cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f13b744-5e62-4494-b347-ebf3445406dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b7c416-5214-4bea-bb1a-2031eacd8b43",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8f448e-1e00-467c-9d66-addd4d02ca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f970b6cf-bc78-47ae-b09f-452f7ffdcdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7ced4f-8fae-4ab7-a6e3-6d829cb43334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b488c7-6af5-4d57-a2a3-87770f9a33eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90701076-6fcf-4e50-86f1-8eaf9274201d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a890e8f-440b-4a82-9d60-944eeab23097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743e4646-1c73-4d0a-998e-4a772dd0e977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85677d-58f7-4015-9406-9086327fef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91929f90-f2ef-4f3a-8f47-1b4ec666c980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041a3766-8c82-4fdf-aa45-c19f0411c7ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37096561-f951-4e7e-af00-38bf9924195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116a12bb-1d79-41e9-8526-973814af3982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14ad42d-ebf0-488b-9b9c-0ed1ad4b7154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90959e0-6200-4064-aba1-c670cfe68fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7519c286-2795-4ed4-8b3c-35fde53e186f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5490836-271a-48ec-89e6-6dd5bb83f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1546d5a7-adbc-4f28-b2fa-c637c3587e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed79ad-000c-4af1-bf47-a37383012d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621c3a99-3737-455c-840d-008e678dc640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84d209a-e713-490e-8d6c-117c89b24f0b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c28213-bcd0-487b-9989-e4cec1fa0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00773d65-b3eb-4627-b3c7-68f148ab441d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d66eaf2-479d-422e-8ca6-b19d1b4063da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb80c5f-7348-4386-a150-b7f79bd1f0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a41f6-9648-4c35-88ff-bfc173431c2c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c9d816-1c94-4688-9dc5-adafb6745cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec1718f-6f7a-4922-ac20-ca89a325282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0823c-4313-49b3-b07f-7e375e8e41e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338a1b43-b51f-4705-9cad-fd5a99f4638b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad32c8be-196f-40a8-a5f2-e222fb241908",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b549798f-1c18-4ff3-86f4-e8761e5fb544",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d86a27b-5fef-4443-a09f-6ceab8dab590",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d72ffef7-63c0-4d4c-a2cd-dbe980e1fdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce9934d-4947-4a45-adc6-cd7f70d92de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67ca2bf3-8e05-4645-a7c0-fc8495879bd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fdfade0-866b-4f43-851e-15861c9ea769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9b4325b-3534-4612-933a-835a4d367b1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d7b6b14-fe3e-49ed-8541-091b75370b7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84118d9c-e9e2-46b9-8307-a3def7f7e883"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5356cfa-ba12-472c-8f52-e4615401ab7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42ddebee-fb0c-48be-b331-e50a20a2862a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7116344-d1f3-462b-9b7e-2f06a8f27b7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae953d8d-36df-4fd8-b7db-899e27579449"
            }
          }
        ]
      },
      {
        "id": "39a11193-95c1-4061-ad70-4f28f486d7c1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c39b12e4-bd4a-4cf0-8a3a-6297083f7a87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c31735f-0c05-47fc-8f26-9d267f496908",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b84b582-0165-46b4-b139-db4e041c9ba7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06caa5-92c5-43ca-bb9b-f0c96a89e320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556a244d-efa8-461d-a967-ae2cb382b318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5c127b-0363-4634-b0fe-8020bbef87c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d12855-c2bd-4920-845f-3d60a3d1e6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c8147f-4909-47e3-81ac-60199d21c8af",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c83a36-de76-4cde-ba58-7fe61ad5a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55528ae3-21af-4467-a3b6-2adedc07f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad809425-e564-4c31-a969-d860d05eb0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "258537b8-5740-42bf-bd5e-e515b7638f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b018535-27ab-4199-b306-a55efcf73ef1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a6e60b-e9df-4122-805c-1dda6d61b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8702322-ffd1-42c8-85f9-27b0a4497e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebfb4cb-d19d-4057-8c44-b0828af1d223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ea3a47-d237-4956-b513-e72487c8764a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cb5e59-a0c5-4248-b0e4-4cfc66f23aa0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3b5b1f-c419-41e7-9150-0499cd8592a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc78255-3d09-4f4a-9414-e279adf25ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b0a54d-1fec-4200-a3d6-08021faf7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed142cd-6af7-406a-a4d3-5e0d654551eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6f83e2-7a1f-4020-bbb8-6e29aa7c8714",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61232eb-71c1-418d-9668-d289a46bd4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1debe164-4ef8-43d6-b346-a37c74096116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7922d9d-e5d7-442f-8e0c-3305d547285d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf0b14e-b5c8-41ce-bd42-ae5a81b9fab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45ab9a-3c1b-4790-a18e-79fe23708859",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d4740a-4c02-473b-9e78-fae1f2abf5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e450ee-2c77-4eb0-a9c3-130b8fb6c0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39861c10-e617-46fe-9fdb-5cc2490764ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b962834d-3564-4ef3-a870-971a2962971a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f474ef-fc5a-451d-b372-63542f2c0ad4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4e1fb7-91c8-4852-a22b-41663a8bc133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358ee893-c88d-4ca5-be46-8b3b4c73c76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1ad97e-16ea-4955-ad9f-59d3320cf12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db3c6c2-e381-4c5a-a00d-c39bdd9958c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6d2a6-c46a-4c25-9d56-f2ccef3b491d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc6cc47-8842-466b-81f6-f48c306be515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b81f3d-6ebc-4b98-ad31-ea5170972eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fd2ce5-33ff-45e5-b87b-4d6b2903f8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ab6f84-485c-44e3-aa67-595d73336d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a871ed-272e-42a0-af88-5ea831e8d3eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dd5204-494c-4641-b89e-97ed69c5a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363dc786-2520-4be9-a2c8-a2d014d91616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f035bf-aee8-4274-86f6-3b0bc1bc09b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e3c7d8-c1c2-49f2-9699-a0c795a002f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0001dbf0-7a3c-46e4-b9ae-d27136b7d5c2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e75cb69-1e81-4610-ae92-25ab17a5f753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0610d-6fb7-4607-906b-f15c11850a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb33f873-a310-4cfb-81da-e69e5b4e7a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d10409-4bf4-4e16-b4d4-194de1712a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b76acc0-aa97-4503-ad0c-7d32ea151bdd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876097ba-3ab5-48c7-b345-abe4ec1e1682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76baa95-0321-47aa-961c-2c4950d6fff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5cae5f-b48d-43c6-b1a5-60221430e82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d47ec2-8597-4ac7-9928-b6ea60833b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d558c3-a8d8-421e-a0a0-3b8290cd4393",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7dddad-6276-4684-8b98-8f58f5a6e467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea185e92-704f-43e5-82e9-7b6aa40a3302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e799dbf-116c-4fc2-b4cf-e29c9a808c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82538ac7-f36d-42cc-b889-76b7d5aa02fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ca24b-1f64-41b7-aedb-4f9840f2d340",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0da8d1-859a-4eac-8bfb-ba1c0d24a612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6635e54d-031d-4fc0-aeca-74078be5dc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee345f5-1e7f-4279-8863-7f18f8b5e8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b58881f-4bcf-42c0-8961-ed8c4a89c7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc02c5e9-e030-44b4-aea3-70ade78a30e4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864f955-b884-4e0b-b3d4-a50d6171dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d7a7de-193b-4e77-97df-f9790db521ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7b5e74-b3d6-430a-9fa2-4885c27902e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e45d995-1109-403b-88a2-73e6200ef8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bea94af-4e42-4174-867c-974895f309ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67576b29-4a02-44a7-a791-9b69df6cfa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5799dc7-5ab5-4040-a311-9c340faefe3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf3af7c-23c9-42df-beb1-7a61fbd0c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d591aa20-4d37-4744-b1e6-5e7da6240f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0c1fc2-e214-40ee-96e6-33fcb8643ff8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee5e61-2ad2-4932-88e9-e211ee67416b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4553f0-fcb9-4793-9bdd-4b9fe6e813ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ef3ee-1a31-416f-85bd-5965f800f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cf7ed3-dfa7-4107-a1f8-69f807ee500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e7ce56-0af8-4edd-959f-16abad9b99e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4936e6d-712e-4882-bf35-f4a924f8aa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9b6911-ed8c-4db0-b326-f1e4cbc63633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc70a8b3-bbd6-43e4-b9d3-f004ab223237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de96bfcf-4ab3-45af-a759-407f0504d166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3006389-1b19-4e96-ad7b-c939400ca039",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56afbd5e-b1bc-448d-8a78-8a26f8a9beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22f5c5f-31db-4070-9ffa-ee9e1143ec2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168fdfde-d606-4afd-ac92-55572f1d6573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0496d8-9240-497f-b318-9073f49c6841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133639af-fbd4-4e37-b3f4-2bc27012f993",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed29702-e0ef-43a1-aceb-a9b8e40c8e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4780af9-ee61-4683-846c-63041612f5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46102b3-967d-47ad-ada0-fa9171c681b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d8ff4c-27a0-4fa6-b768-311ab7d65676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c765cda-2195-4e17-9abc-b40dd6da1943",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6a0c37-ed0e-47f3-8045-ed70772a0f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf56eee6-f5bc-45af-a073-1f2c2b294320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ed5a79-413c-4a5c-ac5e-8761fb7e9b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b455d7a2-1421-4924-b9b9-a5e52fcae9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c555f9-87f1-461c-b2a4-e39e840f72d1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61291b80-c0cb-4f3c-a16d-3a5393dfbc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed06353-f8af-417e-b230-72c954fcb26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84072ec5-db7c-411e-a1a9-bc227b1a500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "662bc860-34ad-4a2b-880e-2b323fbe8742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24cb780-63b4-41f9-bb89-88aeb659b27e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee0bdd3-51ad-4420-978e-3bb226225089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95acf6e6-691c-4f96-b940-c1694c2adc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a6ec5-c0ad-4c1c-9c40-31f1d80f6e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dabd4e7c-ef56-4ddc-ae8e-a011a3d21858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4e98f6-f106-4e7b-a008-95ec1d6855f6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee8e4b5-458c-4d4b-bbaf-290b5218fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b68024-699b-4648-8425-ec9f49a18a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7166ab-2182-4d92-99de-a33474b09e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e539dc29-574a-4a20-9bd3-f5e53ed6bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d087748-b215-4ef2-903f-0aa494ba95d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea55997f-1f09-4693-99e0-9b47ea9aabc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ac6e9d-ba0c-4c13-8dee-bc734392ecde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc0151-3dd6-4916-ad3d-b345cd204d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bb0a2e-69d0-4471-ac54-1e06ccc6aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f019a5c-5e24-47fe-af5c-e0ab7bf8c962",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a71993-c577-4bca-95da-9159ac3f4820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8818e3ae-59f5-443b-94ff-359bad89981d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34d3f95-e206-4e60-98aa-4fc458c3dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eec30d1-8025-4b5f-bf80-1bd66ef4b029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc022d-8265-4bf8-85aa-540835d8a91a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f61c44-474e-4ddd-b37e-28ed3a4354e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df516f2-146a-418c-974a-a81b2740736a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8108b55-dcbd-4e46-bbe3-c1fd0b37c277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121f2184-094e-474f-81a4-46337bc43f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1778d23-7d27-4b7f-934e-85e114ff87de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072cd6a5-ae33-4e64-ad83-493b1370f78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f9cb83-cd30-4a36-a8a2-3f8d2edde11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab926c17-e10f-49e2-8ffd-f95d7a0233a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301435ac-e2f1-4b4a-b603-8e0d3d069d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de81850-7707-4082-8fc2-355f28d12fb5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8acfeb-e6c0-4e1d-a449-8f07e1ac9d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdefd580-289c-47cb-b56e-a48c6e4c00ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54afba20-1b4b-4496-9ca9-ac1c310f2803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b831088-2a41-40e8-8eae-197711eb5a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52de11c7-8bfd-4f62-bd96-f0b8772722ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322409f1-0971-4502-ad81-e2dd3ae74254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81754585-f4a1-4b80-bbd3-be5d88c0932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef337936-61c2-4642-b86d-5a53d6a3f091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d83171e-e559-4fa7-b763-738167d37035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde82f45-fa6c-4033-97e2-210c51dc9e75",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83a3aee-d4fe-4816-bf84-6bee087d503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9045bb39-6ff9-4931-af48-380bf1ab9bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bee7fa8-224b-43c5-8676-71991803ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "322f18df-9228-400a-857a-f8c4925e4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f00de85-a810-42df-9704-fb3978c6f69e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af5684-7a28-47f0-acc8-3638c01fe399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508d072b-70fc-40f4-908e-6175b598410c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55403742-7370-4599-835c-eb4cd9b5dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65833048-8559-4abf-9070-4d9174f34779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac82f0-a2d0-4ad2-af11-f424d18f8fa9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79baf32a-053c-43ce-b5b7-006137d52bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5d9275-58d7-4647-9263-2d5d99bad199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78732d3e-1294-4a04-ae6d-0134c675f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb489eea-b4ec-426c-8543-e2a4ea5d86fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e252c1-84b4-47a2-851a-f0e89e6329bf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d420d-2dbb-415c-af60-f30e10959956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da89901-ef9e-4f49-a40b-0714bee68402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df585b64-6171-4877-a065-01dd838a200f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6e6fe3-59aa-43b4-851d-5ee82d5a7148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be5b514-973d-4809-917b-a8720f54fd51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1227dea4-7fc0-4708-af29-bba53c897f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db46d34-d987-4761-a492-0b7b11a0a635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a07e821-42e1-4282-91ea-caf1f1772e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "893f9f1c-9153-481b-959e-eec3b93054c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329b497f-96a0-4f7f-b1b6-eb4c85e8ea84",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc25f99-1f05-47dc-970b-a50215f7d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74877f3b-14a9-4c47-bdb6-61fc057cef7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5113aa5-9d10-467a-ac18-5f3efc19c711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b55487-300c-493f-958f-cbc531c690ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9af3733-3e80-46ec-989d-25cd2443e116",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0115c5f1-26e0-4858-90fc-ee42b5c5bf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892214fc-1479-489b-bc28-49688b4d1148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979c57e5-be24-4307-9097-15499ea38ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e780c8-db00-4978-953c-6beef3a2d73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f304bc0-99e1-4e07-9318-ba664137653f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3526b-a5b8-42b2-84b9-39a0c7a93a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aec798-0490-40a9-8036-0e709eeb038a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f12c68-054b-41c8-b7bd-f7155b7045a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb6c65-4ab3-4208-853a-4c8d3b7458e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "994b5f68-2428-4937-8636-032cca1fcccd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85db7d27-2b99-4f3d-af0c-cbbf3619a5c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4b212c-9994-4b4e-b69b-e02493ac6e64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "329a0378-a5f1-4c8e-9762-03266d91db77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3ff215-a3ce-48c0-9825-e1f0102209a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b38405b-32d0-4b15-b21f-4d9a515a0606"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29a17f1f-69e5-4782-8da8-38af894615ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e9120bd-db6d-4e2e-a1c7-86459651f2ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "326a4015-70e0-4dd7-af9c-24049fa55510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cc508fe-6f0a-423e-80fd-0091f7d3335d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bcfe0db-858e-488c-abde-b5c77af6b792",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2df20456-71f3-4288-9c1b-c49db71e92ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44ce470f-4f40-4587-98ca-b1e06a78e6c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72672d96-cce3-4989-8cfc-05cd3c20033b"
            }
          }
        ]
      },
      {
        "id": "e6643556-7e14-45d0-8ee8-23022084beac",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9064abc0-cf55-4792-b0e4-3b44ea8ca304",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e0955d7-9b2d-490e-b254-23f5bf02fd10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e1b57ff-8371-4ff3-b60a-b752fab7f3ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d8d045-c49f-46ca-82c1-8faa422bc77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fef3105-98a5-4164-a46d-f06112261d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807f9b9-3207-4e06-990b-80a9b6f41b88",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c1ff9d-dc30-47e7-aaf9-4a81fe9bdfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20954448-e7e2-4f53-952e-60a6bc96600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39b29c0-072c-41ce-a56b-c70c264057aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398c4a3-383d-4f04-bf83-d07fcdbed338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfd61a1-1e09-45bb-8358-c6a6bf361c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733674fb-291d-4758-bb40-8b3c720017dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f94d8a8-451b-4629-b1a1-22b112c216ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958c42e7-2c90-49ac-b7ef-7140e8cfc3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029a7f7b-ced5-40e5-95de-2294e457a52e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64857c10-4de8-472b-b4b6-ca593df75bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ffce02-7741-451e-bd37-15c1832d3793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c903e93-a140-4bbb-8123-7fa5a538aaad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa3087d-50b4-45b2-b854-cef442002e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e74280-8169-4297-8dc4-63c82d40d487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3065f3-1283-455f-8e32-da6b653c31c7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931b4b23-a135-4f83-b761-d7298ebd7774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6673492a-eae9-4048-9df8-572bcb4a3183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88b5ef3-00e2-4569-aaf0-a2f8d2d5b87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd008fab-20f6-42b3-a88a-1572e417c275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420068b-a1d4-4e7b-a7ad-40ae2bc7cb68",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ff5719-7700-483f-9360-3b98b6e72d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03939134-8456-4ae0-9a25-266e900dd983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce07ac0e-ceec-4971-ab43-1417c5825d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f31bb3-ef47-47b3-885c-2a2f61cb3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b4a0d5-df8b-48a8-b1cb-7a8015c554ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2156a41-b71f-4bdc-8640-f3209443ef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d753249-1157-45b5-97bd-10e28d4c9bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4231dde-c79b-4bba-9dfc-fdb675a8303a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf02d89-2b91-4a82-a7bf-111b23083cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f40aa87-84cc-49f8-b78b-737e28a0fdda",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3e05c3-7bec-46a0-b539-5f7922b2c301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0d5442-3b54-40f3-bb9d-0efab6b86f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7461ae7a-3c72-4769-9ec4-e7011c846978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86589d78-0775-4191-ac62-a47e4ce7675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772e746e-e241-474a-b985-d2fa9cd70d7b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8a0713-b777-4658-916e-bacb13499943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84557f0b-8fa0-4229-9f65-89ecf7af86d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb519020-8249-40c7-bc77-4a9719140603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea54b415-f058-4320-b2cc-8120c77f8f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56e31f0-75dd-4780-be69-f46d5156cd97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064d8a40-6d52-47e0-a174-f27fce62aa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f17ec9-3cf4-417e-bfe7-99fb9f9e120e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc38da1-730b-4fde-80a8-bd3f9b3cfcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5cc948-0266-4e84-997d-39b5e3bd210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20f2f27-c67c-4182-a128-6f3c1826e9f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4a2b9a-0aea-4873-8fe2-55a521d3bc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a73795b-1eed-4126-b6ef-fbcd4cbc967a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b816c5-670b-4b55-9cee-127e570f3877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2bba60-3675-4cf7-b63f-0ddfdfd1a045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc81137-da6f-4fba-8db2-4a3f67f72f18",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad97af2-8d20-4f56-b441-142e6e6ad7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285f37eb-0e8c-480a-b72b-400dde70500e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1760aa0b-ba97-4bc8-bf75-e9731a87cf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5121962-0494-4486-826f-e1333781802d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619329c1-6a9d-426e-bbd3-4f150309abae",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae77331-18bf-4c3d-a383-54078a407f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b7f4fc-f6ca-45a8-baae-f6684c5bea15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8783ff93-9aa9-4270-aaef-0ec525ae4810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7fadac-cd3a-4329-88d0-4989b1b633ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61124aff-f792-4f74-930f-1642f8b3f406",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e7ea1-0559-4b78-b6fe-d93f539cabf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd7d71c-b3c9-4c37-83b5-fb45a7ac0c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1cf5e-7a42-4087-b3b4-bf34e9fe7ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb68fb01-7910-4e17-9ace-f1441cace29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d19c0e2-706a-44ec-97d2-d04a07d874cc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5954b0f7-4f7f-4e2e-9339-e91535ceac25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b240edab-c233-4ec0-998e-2cc1063c70c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6e184d-ee9c-4128-b4d0-7f4a86d47a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcd3085-d535-433e-a94f-c438b98bcb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8352adcd-15b0-4cb3-abbc-ef12bdd330a6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1c0594-67e9-4449-8d52-e424ce9ca498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea82263-b0cd-469d-86e6-a15dae8e05c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a234aa5-e364-4559-b94c-009fa31155b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10046ce8-4273-4b56-be0c-b933160e098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add1ada0-bae0-440d-9935-782eb53a5d20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f803a6f-4c99-4361-846e-baa1c01222ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99774f3c-e677-4e78-9f5d-4ddc3313fb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001362b-6b15-48e0-bc0d-467b8953beb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13f6acc-2cf6-4814-b8a4-1dfdaa3f82b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af47b626-6600-42d5-a80d-9d50a4e0f362",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b3f9dc-3963-487a-b6cf-22d6f5990f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960a80cc-982b-46ee-b392-a8c4f4eb2568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfd7de4-6cc5-4695-82ca-6fdb628ae658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3191dc-af4c-4b04-9881-03e1441a3a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee200f-e5ea-42dd-8e92-f4d5dbf3efe5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a33cb7c-7aff-4e0c-a5cc-efd78b8d996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd26958a-2b89-40e2-afea-e8184e21f07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465bb5de-1065-4b2e-b30a-96d030d59677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dfad74-1902-4143-ab5e-6df725e88422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620179e6-c5f4-464c-bfbc-fa709f4f14d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b8ff64-b765-4d62-8250-9656db24f9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d25a39-d5c5-4dab-b0d2-a70c1f493949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2244b658-21f7-41d2-98ba-314c7fd3cc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9053040c-c339-4292-a28f-771c84da3e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cef6bb4-66b4-4448-ae84-d9cb96813af4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd8b40-8abe-4b61-b5f7-94ab22cd5da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedb9306-7a6c-400e-9ac1-222772f6a379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6951e00-2e87-4119-8761-8605a0f5090d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8e55e0-cc53-4057-94fc-79da7778876a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4793a-884b-453f-a4cd-21a610fe219f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299d1079-c3e6-42cf-87b5-f82b48ebf923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3afdcf-56a0-4e5c-9b84-afaa0f19677c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a6ec3a-f3ac-42b4-83e7-7913c9ebb245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddc3450-be99-402e-aa47-689bb246d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806609f-f3ef-44ff-89fa-4c07ba6756d2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81b569-45e9-4d1b-bde5-e19e6efed3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3a0f4c-3022-4ecb-abd5-66d557d717c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c11ac46-1de5-4dbb-9701-ce25640a2b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5d8981-681f-4b10-a1e3-3c7bbb007921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d825a4-466a-4f7c-ac71-876a6352fc0a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c15c0-b176-4ec8-90b5-1c69944ab4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d11ed6-9e09-476d-9274-99c3fdf0cc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d94c4b6-81c0-48c9-bfdf-962df102f718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00fa2d5-5168-4946-af40-40f2a505ff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98720084-a929-4a31-a347-bb271526373e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c715939-0117-4fc1-ad88-ec9f0a579361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4b9a44-2362-4c7b-aa6a-83286b1cf1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2002c7c-251d-4020-ab78-314f96679c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f151334d-01a3-4797-9f13-b99089a89c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b8a63-4107-41c0-a10e-2c821149af7e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d532e23-41d5-459b-9c5c-be5f05556639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4eadcc-b514-4f6b-b294-0b1a60570fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11281e0-3725-4057-a67b-344b029112d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc49882-029d-4adc-a822-26b1d60bd39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753423b1-6fed-4050-a688-a219cb330b9e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d844e1-22c8-4531-898b-35abe257c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04071fd9-0e5e-46f1-9135-cb13f128b8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f3ed04-357b-4bde-be5f-fb0da5aa9cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db62736a-50db-4b14-baab-d8e5a3d424d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa46225-e363-4226-8be2-1010b9527985",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d653d1-3447-455b-b308-3d66af408f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677b6ac6-2167-4ed9-820c-c6f78a171949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58fd245-fa69-49be-99ce-2bfe2bda57c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a12220-326d-4ce0-8b7a-ab6780f1632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70edeb9-f03b-482d-a109-66c34130e48e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea1f602-f896-4c38-8b34-a1a8cbc124c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bb4ab5-d344-4249-bcda-d287e0f4bd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4882b6e3-83b5-4e96-ad50-306bd44a16c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a213c5-989d-4401-a5a6-508d3f978934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856cb83b-a834-4378-a62d-071a963dbc16",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc85aa32-7941-4269-9840-a476eb9be6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3c6f2f-6273-486c-af69-76462a3c9ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cd5fa9-4063-48c2-8b13-048830f98f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b238538c-d4ce-4301-9b40-349f86849bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a275c64e-d45c-4ad1-9138-d93c7a327aba",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d900b285-4374-458b-84f5-0d10c08b5ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a8a87d-92f5-4fa3-b9c5-ed7d12e2a363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a07e10-a6d1-49d4-818d-157058c84ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196c8312-6c70-4eeb-819e-3b5e9eaa0edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de969490-480d-470d-8793-c41d248f7d8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba66edd-7dd2-49d1-8888-d242e0d54b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a54aea0-3248-47a5-adbb-cbf804b050d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d24f76c-f9ff-490d-9a63-29fbc981f537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1b23da-79c4-45cf-a3a0-600259a04089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398180e-f006-4782-8113-aab2ff8ec400",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa2859-e37e-4fa9-8791-bf08b99527cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41223728-8f0c-4920-8108-b8cb88f0d1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822fa796-f6e7-47ed-89dc-2c09c71b5caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b56f9cf-05a2-43c1-8f60-13361a0700b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135abdbc-b6fc-424b-8ec4-ebf0d4bcb1ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9830ddb-4a23-42db-b6a9-4de87132366f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d94f29-86a8-406e-b1a9-fe6d2cba2a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b306a8c-2438-4465-8b3a-c82cf14ef029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caebd07-a8f2-4137-923e-cc78a5763f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b7a82-ceb4-4f69-81e9-645b36920e7a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d687e-0a3c-4cdd-afff-1e8fd5c70f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31b09fb-60f3-4ffd-89ec-b77e2f30983f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ec152-5785-455c-af5e-caa25914b084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c527161a-a642-4ede-80a1-a19c44a0551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ee0bf0-46dc-4a02-bf67-93e7801a6eac",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ee8f61-96fc-44d8-9156-fe619389f1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ecb5c3-ef1b-4429-829d-a135f9d99bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c203047-563b-420f-822d-bf6aa987b7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfc36f8-b5ff-467c-b2a4-2bf0c7232fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3ac71-e64d-4561-b7bc-5d44f12f3ba5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e41004-c524-4207-96b5-13969299804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b396e091-5fe5-4f67-b302-62781042dc65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c1d0f7-e792-487f-93ef-afe82096eef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ab3f16-d82c-4ebc-8ccb-89f49046cc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776132fe-40e8-47fb-817f-4e3e798498b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95427e77-9542-402a-8d5c-139d6915a3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d03cf5-fb66-45d7-a41f-77bcf92e8b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4da4cf-6f03-43bf-9c72-b53436687ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8230aad-130b-49f4-bc94-7c369f26cd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e10e2-6061-45c6-914b-04c31776971c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc882e-81f2-4f9d-bfd9-5ec821da816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521269c5-e377-4a9b-bcc7-6cfb9c63ec6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b702d15-0a8e-4a44-bab1-2a921401ff93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27e3343-5002-4cc3-b157-f771029df0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6be80d-c0da-4986-8f42-57272f3be4e9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee5acc9-1d07-494f-a82f-9b5de110beb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcae3e32-dca4-4367-8830-0691e7adee2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e307e043-864b-4ba8-92e5-0cb157718169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41103fb-9899-49c2-8685-5e449a6622ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489aaa09-fd3f-4b0b-8cdf-efcf6ff40044",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259b33f1-afa0-46f8-bbdd-cea2885a52f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d363f4-805d-4aa7-96bb-ba8b6e2a9194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1f656c-42b9-4309-8dfb-f5891e8e69b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa10b3a9-6b9f-4c41-9c0c-640d15af1810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40640eba-bfa4-4049-856f-011706eda63d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0f1e8e-6297-482a-b56c-5eb2564017b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2bba59-f6fc-496c-ac25-c8b89b77c26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20d9c5d-9931-4ac0-8a21-0c4ad1510d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57161bb-4614-4174-9ef7-dd2782f61f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addc1f1c-5973-402f-a7e9-95779d1ef6cc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc77a02c-f8ab-4514-8acc-4fb5c3e6bb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f21bac-eb77-491e-9bd7-30cbaa3839a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f67bb90-67dd-4d98-a90e-2717562dfa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9cea17-66ea-469a-baa0-e10ad0890725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf9bb16-da21-4407-934a-b338fa0425b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d55184-fad7-488e-b898-e6137a0f6203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dcef16-798f-4486-a0d7-5e0787325c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c530541b-cecb-4825-98db-dc8cce9329e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4395976e-295e-4339-a6e8-9aea200d84b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f806a8-ff01-4e6f-b72b-3bd7307db266",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb146f6-6772-4ac7-be99-c648ed1e5a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07be5fc-d63c-4866-b5a9-43bba1485984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4af043-6c4b-437e-8842-ffea3c43b5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5752c265-1dda-4fe2-896b-c9f5893f606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eee044-b8c4-41d9-bf4e-53cc832e3520",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d942f650-a0f6-4a1e-8eef-ec73c0ad9ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c6cd56-4d17-4f91-af80-e536d04b7005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543b2686-7815-4e6a-acec-6fd4f6d6ad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9900ee23-3922-4af4-8245-2a605ec72907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41418594-46b7-4ab1-b9ed-0b18b445e75d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a07673-1a88-4138-92fb-020fc80f01fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b072337e-5a88-4a0b-b796-efd89ab95417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424601ba-fdc9-44c6-a66e-b35d8ce34bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5647c1e-7e80-42ab-8ba9-0e5087d9987a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781a1861-d948-407c-9bc7-0faa71f92b01",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a470026-c67a-4869-be68-ba7c24ce8204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb96c0cc-ec30-4b57-8b1d-c932103e3d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2992323d-4d94-4106-af00-3634c856e4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3ff89b-8bd2-4e71-97d4-074221d058b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56621923-710f-4ce8-8ac8-938b4292bcae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477e4bfc-7e65-4f1a-9004-73d5a7cc8706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd7250c-230a-4fb3-bc5a-3b3737f9041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a1193-2280-4738-a3c5-73c890da8d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a22f3c-4ed5-4141-9b01-d6a7cf2f91d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc13a29-84be-434e-9bea-367194691ff0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78b8625-62cd-4902-b3ac-aa16f04b3621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3a892c-fa2c-47dc-b7ec-a45f56db6a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce1f45d-1f7c-41c9-bb0f-e4852e852493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b286dc-ff32-4b4a-acd3-76ff25e8e1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db10ae75-3d32-45f6-8cc9-4805c1e22868",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3ba062-0f7b-413c-a54d-c2c22aee0fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb804b67-4ee1-42c0-9c4f-25578c35d0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bb3dee-5bdd-49b2-bcc7-bbcf52a5b0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90517368-7d62-40d7-a774-e2dc9fc7f898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9b5e1d-3f84-4755-9c83-a8da493c484b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34caf255-0408-4dc5-9141-45ba601c05e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832e90f2-8399-4848-a320-10e35b6cc1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb089eca-c944-4376-9d25-889b62697a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19101580-c12e-4cd4-8a74-6d2ba9640439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b90ad-ddff-456f-94f1-357caeb8e682",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439434df-fb0d-4af5-a644-9861917ceb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b97f9a7-815b-48fe-871c-f1d43f873e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb16b193-b316-45b6-86c0-be8eb25d6451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6796c1e-3778-4874-b47a-92a720a668c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5b6fa5-e936-479a-a703-8e1c4dab033c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50c9b75-34f4-411b-a31b-5147b20b67cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62027f8f-47e0-439b-9940-459297a2c7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcac069-2e19-4c39-a525-b3331e0eb8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678c7648-8f43-4f45-a9bb-9cca2e6a0316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a58dc9-ed5f-49f3-ae0a-b3e665b81719",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13caac1-41ac-415e-823f-47d354a99fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5da894c-9960-40c6-b4cd-61258da6980c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf431ae-c66c-436d-8930-4e85ea97d1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f52424-f28f-460f-873e-7a1a042bd97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a3fc86-622f-4da5-ba14-4c116309296d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f716e3c-e067-4757-b762-29b06a18bf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828dd1b3-18e0-49f3-896c-fcf54545c14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d70ad9-00f0-489e-ae4b-945a5ed205b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8892451-5a81-4c1f-81e7-f35dbeba2538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417da8e5-62f5-4f8c-8044-59318e7a2afb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a78f5c-4e54-48bb-99c9-b9b2e49f9333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8010e684-d269-4041-ba92-445697d59b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a260f6-d2b0-453b-bc5e-44e65ab14cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a74020-aac6-42ca-a40b-83d456db1a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84572661-2ab8-4b56-9103-84cb279ce8b5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34843c9-e864-4ef6-a3dc-73edc2958a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bff031d-1f2f-4509-8acb-4c4125ee69a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac24ce4-54af-4c89-bf70-5a49db3e57bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af5a332-4c8d-4a1e-a8aa-bd5685fe2cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3f7049-2307-4a32-8440-898db5c1ccc2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eec53aa-26a4-4913-aed5-a33cacf76092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38f6a5e-112a-4b27-95b7-fb8f4920ac0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1a5888-7c80-4988-95e2-abb83977b601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0477bee5-2ea0-492e-92e3-7857b1de502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe1cb3-cde3-4829-95a7-ba0ee7c7b62b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9891d6b-b48f-48c0-b522-d558d20b4759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f76d064-4cb7-4c2f-8ca0-186c2e36fef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed14e1-54fc-4df4-8c1d-e008c8adb0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b55398-0210-436e-b111-8aa14de7dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9a3e62-bd7a-459c-b671-315f9166ec93",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14ea52e-b9a7-4d7b-8893-e00149e2e72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d55443-5d54-4872-ae63-b95c36a0af95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf5cbf3-c18b-43fa-a9d7-52d7d2110ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3f20a0-232f-46ae-beff-dbf015370ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d17cc51-6159-46b8-bdb3-1e4ba391e80a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a26ec1c-b672-4a13-ba82-da952c5738ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9511dec9-8853-4945-b283-c57a7c5eb6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca40fe0-13b2-425c-b865-b6361a4c94ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572ab074-11e3-4692-86dd-a4c426f9c6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af313841-43ec-4f32-9556-fa8602813e32",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ce9ef-d003-4ff7-96f2-e00870b1462a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578e59cf-c06b-44ad-bb3c-8bb753890d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da508d-6816-4361-9da1-3a224ead5273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620491c1-419b-47e0-8a52-ef16e2dcf0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbc4421-ace2-48bd-801d-573ebfd20863",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8793b0-abd4-4a86-896c-dba669794bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06d7549-95d4-4e51-91e9-8d9f62eb41b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2734fb34-df15-40c6-90dc-fae01d45776f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeb8b9e-89f5-488d-8487-15098cb10a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9073c4b3-8119-4dc7-84d6-779d02d5c6b0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce45927b-250d-47d7-87bb-1c84800a4884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bd3aa8-0fe7-4506-9c14-a201b6deb52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacc1193-dba3-467f-8c66-e28721dd9b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c6dc99-4bcc-445c-801a-5219155c8e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa0d9bb-3d67-45dd-bcfa-6778a5be0eab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9430f224-37bc-4c9f-ac85-b2fefe66f52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c06c4d-b123-43f6-8069-2eb12ca9c8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7557e0ba-33df-4ea4-a92e-e33719464a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bf788c-1928-4e32-981f-b6d85f7ec49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d54ade4-7b36-4426-a3fa-c418ac75e5fc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6a4a4a-7417-4f10-9a3c-6b80d2c47e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552f70b7-f674-41f2-841c-e685076969fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3a48d0-53a7-4a30-af3e-d86af9432125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85a3266-857b-426a-a217-f1756554865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa02ee8-0387-432f-ae09-3bf6c370c506",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68ccee5-a471-419a-8f33-fcd53b942f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a89484-ebf6-4aa5-8190-8257e5df6a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8108a026-8eb5-4400-a384-df6badec3557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21a315d-3951-4cb8-bc1a-edea92b08dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2c58bc-2313-4d8a-8256-92f0f525c74a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd128697-106a-4686-8224-e33b0742c901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a570c689-7c29-4157-a2ea-2d0e3495943f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d5bfe8-dc6f-4760-bb39-9f4a37c0ea6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956ee49b-e079-40a9-96a9-eed8d10bb7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbec153-2a5f-4b04-a9b2-b142a1dce2b5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f3e2d0-014a-41c9-b835-5d641f331c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a862bfe-4239-460f-bc72-2d6bf25f780d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75707d62-db5a-4c9b-a2b8-0e101e48e8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb26031-f274-4dfa-9018-5750c035151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaa51f7-f153-4726-9517-87f5f33ece4a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b52608-30e2-4b04-a6c1-ecc1d8caa90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb27565-fd5b-4c20-9fc1-a7f3605fd8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1f7a99-e16c-4552-ac71-ddc147b99cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61142b5-dfff-4d63-b3d7-ff966b9143d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0096ff-ff61-4f31-a8d8-e648ecef2655",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2302e75b-c797-4ddf-a204-698211d6940e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eee5f79-9bbf-4a60-a5c1-309d2d009e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac5ac78-8457-48cd-83c7-6e1da1fcc091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845a4a0c-6572-41d3-9ef8-078f2302fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da58425-bf58-4fb3-985c-b9d88ccd2fdf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4877d6-761b-424d-92be-4b0e2c70a29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdef92b6-4767-4258-9551-d74c4522b778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6507ac-b339-4c22-92c8-bb334251d715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb77cc9-3b49-4f08-9173-d8ba1d3dfdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5777339-946c-4b49-9c26-88e8d9c66a0c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b5b865-6564-45f1-a63a-698b5c0fdfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77ddab7-f2b1-4435-8ed4-b2a68e517d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75f2f37-8e34-433b-a3fd-8f1a1f17c409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e154989-0401-401c-bb88-06560e7447c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451dad06-6592-4900-aea1-49087411b014",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c03f95-efe4-4187-8baa-f9e2edb42065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310495dd-f003-4bb4-aa8c-760e22db17f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b16609-678b-4575-8708-9e7014cf27f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d1a3ed-eb41-488d-a2dd-4e6b25a2959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e9f31-8665-4de0-927b-e22946efd0e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66d9c00-d269-4677-b984-662e1e2b80cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7578591f-31bd-40e0-95e3-26b8cd85d107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d5bf71-53e2-4f61-a267-b0fcc0303076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6298c36c-dfc4-4478-aaf3-d6b8a3a14fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492e8fa3-76e9-4f96-9569-8ce601bc67c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5e85ba-1078-46e7-80ff-60c40284063c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226b2ed5-1b14-4c88-a6d1-788718cef5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b66b6a-dda2-49c4-8784-96b9ab0841fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a71c8d5-521d-4f96-9f43-9addecfbea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d5fe45-1dcc-4a67-a34d-4e9a2e7f8b52",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0633e8a0-1168-4b60-ba0f-5479abb6b73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1cdee1-522f-4494-b395-5791ec8ea661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25636b2-7322-4497-bbed-b55c1923a359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5215f062-3692-4ac6-aa22-c75c8ad6a014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d980aeb-c612-4c10-a3ca-0e09618cd2e2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a653beed-f0eb-43b9-8391-1239de97a72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb3f49a-717a-449f-97e1-40a699274b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4730fa-67cf-41ac-9845-8ca30860f513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47daf6b7-6428-43a0-8bfe-dd55cf9f335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b997e83c-c436-4062-bdf9-b370f01db8b2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe20a842-2acc-499e-b2eb-a4eb2ac60ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed986f77-ec62-40d4-a225-bccb87289e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9995d4-b8f8-419b-9006-050e384c5142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed54c076-9fca-45a7-b12c-c694488c25a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb086fbf-6dbd-4b54-830c-0bc3d7c9a0ea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ae69aa-3ba5-4126-bdb7-6e4a58041f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac8b60f-3610-47e9-8064-64e809ef2713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4ab5a-c373-4ea2-b926-12fb8a137815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a93c35-4042-4463-8291-dabb609041ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc02307-f5d1-4427-bbd9-f25e569001b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f062941d-3882-4f25-b7f7-82016a132bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd9bf28-57bf-4e7c-a88c-4781fa60c0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af76aa0-9619-4719-a33d-3fb841348869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df76b0e8-8645-4b91-9e34-8bdb0d020f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5cc411-18b6-45bb-b10e-f1514513174b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24ebec9-30cc-40ce-8ad2-491094073b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5521026c-a21f-4453-92f7-abe800bf5679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9670141b-c1f6-4f7c-a2c2-44769309fff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc91a05-5b7d-40d3-bd12-ae68d83bb0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa4b8e2-cdd0-4cb8-bcf5-ede9df497993",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0184fe18-5ec6-4a76-b43e-f36b46227d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0cbbfe-20b5-4abb-940a-aa59b4a5cde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d470ec-3700-450f-87aa-99c8fb2d8edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39268859-34f8-49d8-b506-c3dd41615640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc647d4-081d-4f02-9255-68163b1c4cb4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54df4044-8c10-4e19-a6e5-f4de8a770082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4db41f-5f25-4061-8199-740ce937791d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5e15f8-af16-44df-a4a5-c0e260bde4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6a395c-c871-4f68-9679-5d1ac561dd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b0f35-0535-4087-b0ce-c9cdfd73e0ee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14762610-c764-4172-957a-c07ed220f978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8663ddea-12d3-4ed2-9f3f-a0c30401f946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bc9063-43f2-4f36-8653-037886da267d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ab859e-dda1-48b4-8c51-0f73eaaeb003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074fbbc1-0c33-498b-90ee-7163893e87d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7474db07-cffc-4433-a583-9ffaa52faffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd22075-7855-46af-b5b8-e3e13bd4d6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b497d-3e21-41cc-bf18-d088ad1aa391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a961c8b-12f3-4cba-a1cc-384fc93a8baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c765f3-dc33-4f46-bfc5-220d858908b0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fe141b-2060-44c7-bb47-610020b8051a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddf521d-6873-45b8-a1e4-fec686ec5d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41181601-46e9-4c8c-91c2-51ec5fcb1f0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e461feeb-ee0c-4f7d-bba6-49301fede24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70193728-a505-4013-8003-ffe9667eeca8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8af506-c9c1-4265-8db4-ed3a0d5a6656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3b1ea1-c38e-441a-9bf9-f5fe29a406bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bab3c4c-8f9e-4937-bd63-b198d24b8a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35f2ad1-e176-4dfe-adf9-fe70494fe894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c763ea-29c4-473f-a84b-cfb8713af675",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b69d73-ef15-4d86-865d-aa59ad196d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be31f642-7cb7-49a0-9478-d77307c3170b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b08c01e-da3c-45db-8236-b15298f50984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46ac616-d646-4cf3-9a4d-3c77f8d37b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcee12da-3944-4b4f-9512-a9664e65e496",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967ca70d-8b50-44a8-9bd3-fa8473d3189f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db08874-9507-47e1-a067-aa8780b7c729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860de03-b20b-428e-a466-6c24999d0cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe5b3a8-7f0c-4a82-b281-206b9509f622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b0be63-ce74-41d0-8371-80b8b21cb8f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd01b83-dc61-4a0f-b765-e56b7b114376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66dae858-417a-42e9-809d-a17657ec901f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea73671-8889-4124-a19e-7117be17fbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea8d85d-0743-4796-8cd1-e874e89d3450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08776a2c-ecb1-4be1-ba52-9f1d83e46192",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045352f5-a22b-4a16-b49b-b9fb4dee8492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5a8361-9dec-488e-9466-1d4725bea494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2315a0b5-641e-4d46-b337-e6d13be99c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccf7adb-e379-40af-b51a-98bec063bbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cdb579-8c22-4810-a3f4-40b3612b35c1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf74097a-812c-414c-80f6-d72dc40a3d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a26c60-c994-4b35-9026-6fee77a3b8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a61f31-3dc2-4d7f-b792-0a076725197d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443ae759-c8e7-4715-9cbb-194a8056f032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e77ed-e735-4ef6-add8-86799ceef8c1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd4b51c-67f5-40b2-ae51-3004b30ce9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7c0e77-9bc1-4fd3-a76f-f777d0390e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5099b5-f769-4d28-a1de-7ee757277e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9006c231-09c9-40f7-8c7a-6952d22c1b26"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1b0152a-ea5f-4823-b83d-d4fef1e5bed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64aa6e50-7e50-4979-abf3-3906b073dba1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bedfc240-2be7-427a-b5d3-d8bfa48a8917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a648447-8720-4bda-8658-ea34d69e67a0"
                    }
                  }
                ]
              },
              {
                "id": "496a0d02-8c6b-4198-94ca-95d4961b5814",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30ac585e-220d-4f46-ae2b-093a97b7e517",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8206e043-1f19-4ff9-8eee-47fb33b2f267",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "189ca655-da7a-491f-87e9-f17b9991045c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a3aee-e3df-40d8-b749-b36430fc6500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a313c6f-4945-46cc-b9d5-2c3079868de1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2074887-d042-43d9-917c-a373e522972a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e797c444-2e0d-406c-b67e-9c6ae9857e3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c48181b-fcb3-43fc-a714-0bfb92ee5b0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3ecdfbb-7ff5-44d8-8773-ccf608dcd51b"
                    }
                  }
                ]
              },
              {
                "id": "11744f1a-1ed2-4a5e-9450-00db7c298cb5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f0514eda-24d4-484f-a93c-4ae38e061a01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55113687-0289-4c4b-88ae-ffb90ec98550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c83a84de-29c5-4bfb-b6df-67514f938f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4d80b-4d4c-44fb-9d06-2670ccf7379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f24f68-2275-49b6-9556-4a47f2015ce6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "341e8c69-7d05-4bf8-81c2-c5cd0310e53e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9d2c901-d67d-4a78-b6b2-c7f8a476c454",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ebcf579-adff-4a8f-b019-602ae181f721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5978138c-56fb-4bb0-9466-99a5ed3ce321"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b93e929-2488-455d-8677-3199e69223df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eccae74-697b-40da-b00a-d51b5b31f4ff"
                    }
                  }
                ]
              },
              {
                "id": "4e4d2553-106c-4261-9457-b0e13000d048",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "897c7870-8873-417b-a676-d58b509a238a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "576926c6-fc61-47f7-9668-c8c25b32ac3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c7d2f51-9fbb-47d4-b644-bda8e597617d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eacf77fd-ee43-4522-934a-673c91215d7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e8211d7-c32f-43a0-ad1e-eaf99f32c717",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4416fef5-2c02-407b-aea9-a8a17a3b3661"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9df05632-e54f-44ea-bd98-d4e9ca33320f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44d4303b-2fda-4b73-8497-dde043294a10"
            }
          }
        ]
      },
      {
        "id": "28e8c9b4-eb41-4bd1-81c9-252afa7ada20",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9180e82-db0f-413b-b45c-a43793ba9939",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f386160-3362-4426-8fb3-88f5f1d3ee2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20c375ee-93f9-4839-9ad7-d1662fb683ea",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcde8b51-7eab-4f5d-952c-1f1c649a3d8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c5e9356b-ea42-4cd7-88a9-42f8aede14b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0b3ace-6b81-4b91-8a30-5120de87dcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa7aea6a-8f05-4f22-9ae6-bb92cc2384ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a29e0f64-a671-424a-ba58-e6b75c4dfdb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72bb5f96-d34b-4e56-82b0-6986fdc28e3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31227c01-3586-483c-b65a-048295b76017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e2b30a8-9b91-4edd-8597-94d37be29c1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b419f570-b4d1-4f88-a810-aad6c9fb0a09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b7547d87-8c21-40cd-af4a-81a7dbd1d60b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd16f00f-c3d3-445b-8228-03b70aad0f13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73afa7e0-b7de-459e-a22a-b816ebeebcd9"
            }
          }
        ]
      },
      {
        "id": "715d9888-b06b-4058-adf2-bd28b1b3e434",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e736859f-c7e4-495c-9192-9e78e87bbdaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdb1735c-0536-46d3-8598-c783bd956374",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61cf639a-c4ab-402b-a16c-272e69a4a52f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74b3c79-1b09-4119-898b-10ac3838aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d97c0d-4092-4547-b45f-1371d24c5f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1d59ec-3efb-43ac-96e0-283437d7b73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecd03e69-0b4f-4fb2-b1da-729ed35ae56d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce458a9-68c7-4d0a-98e6-7c7bf59c032f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0e7a29-e2ad-4b09-b513-28d20364a95f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cc2bca4-0ed7-429d-9528-040e085fe338",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3946f77f-f2fa-4802-8cb3-b24f937c60ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4fe9958-7cee-4940-98a6-bd49bd41e48a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92de4cad-e87a-4ea1-8e24-80efc78fdf71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41f1c39b-d1b1-4bb3-98d5-5a497b7a85ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6057478-a341-44e5-b3b3-f1759125a71a"
            }
          }
        ]
      },
      {
        "id": "06cc44a3-0e49-4195-92ba-f1149560ec43",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5ebf80e1-0acf-4d62-80ef-4d89bfa0240d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4f3a66e-4f2c-451c-bceb-553a31d398ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad1babb7-4d16-41c5-9272-09d0a1e4c578",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc314d6-6bb4-49ad-b4ae-3a4b8c087b10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc187aee-b816-415f-ab8a-644f6a09ac97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c395c495-f5d5-40a5-a1a3-35e5b68e2995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ee0a56-8fcb-476a-81f9-e1714c1f781d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e8c7943-3428-459a-a4ee-e5e9ea909386",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b643f5-cf00-454a-8b70-8a9fb867e7fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86caa119-9126-417c-9ddd-6bf1fb080e8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8975d988-f353-42f1-b34f-eb9fded5548c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1581c8db-956f-4671-8672-476cf42b62ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9c70e63-1339-4e99-a0f5-2fa3ebcebdc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11a6f0fb-d19d-4ded-9053-bb849fe4bfd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ef40683-737b-42a1-9e70-3338ae73617c"
            }
          }
        ]
      },
      {
        "id": "49a243e8-5078-438a-ac37-4ba1aafa5ffc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a73397af-4103-4c89-ad66-700958cb6965",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1836e02a-d21a-4670-a831-a86a7400830f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "76c4bc96-d5b5-4294-a6dc-ee0535a42159",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c19a9d60-fe94-4524-a955-db458b0f579a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5153daa0-26e2-4b64-9777-3081a497cfc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.62323943661967,
      "responseMin": 8,
      "responseMax": 390,
      "responseSd": 29.808938931305068,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688777233686,
      "completed": 1688777268026
    },
    "executions": [
      {
        "id": "1ac7a97d-9d6a-47b7-b028-d4274d076ff7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1b679ed3-7df6-4884-89ff-e2ab2668d90a",
          "httpRequestId": "f13eb8c2-fc46-42fd-8b6e-cf62613da473"
        },
        "item": {
          "id": "1ac7a97d-9d6a-47b7-b028-d4274d076ff7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "532dfefc-a23e-494e-a2c8-1337d6183278",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "9617d77b-ff54-4442-bfe2-1a034b9913e1",
        "cursor": {
          "ref": "c816ed8d-d002-4766-8e3d-e2c44f0431c4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea8d3b2d-edf2-42a9-adaf-446f313cb616"
        },
        "item": {
          "id": "9617d77b-ff54-4442-bfe2-1a034b9913e1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "099d02a3-0f56-49fa-bfd7-1db069841965",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1a838b1c-7915-47dc-827b-1250863fe11f",
        "cursor": {
          "ref": "eb50926d-84b1-4e75-84da-665f4864209b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d1304adf-390c-4af0-bd83-0ab1b458d7bd"
        },
        "item": {
          "id": "1a838b1c-7915-47dc-827b-1250863fe11f",
          "name": "did_json"
        },
        "response": {
          "id": "136b1156-aa67-44db-ab29-731a6c1a4e90",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df644f6-4d37-4489-82ef-d24f08a7fd22",
        "cursor": {
          "ref": "5eff63e0-3c7c-46e7-ad00-0a9acfbbbb82",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d0347c3-200a-4af4-b1dc-864831bab0e4"
        },
        "item": {
          "id": "0df644f6-4d37-4489-82ef-d24f08a7fd22",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e91e47b-98dd-47a7-bb3a-9c53dfd2337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df644f6-4d37-4489-82ef-d24f08a7fd22",
        "cursor": {
          "ref": "5eff63e0-3c7c-46e7-ad00-0a9acfbbbb82",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d0347c3-200a-4af4-b1dc-864831bab0e4"
        },
        "item": {
          "id": "0df644f6-4d37-4489-82ef-d24f08a7fd22",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e91e47b-98dd-47a7-bb3a-9c53dfd2337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ebc1fa-8ddc-4e14-8f90-6d8cf0c256a4",
        "cursor": {
          "ref": "60fa430b-4257-4fb0-a068-3afb002bcfa0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "37b91344-f70c-4a1a-9e26-2ff6db5bc6dd"
        },
        "item": {
          "id": "e2ebc1fa-8ddc-4e14-8f90-6d8cf0c256a4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "28f88734-f955-401c-b3ee-21396c3f6afd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e0677a-5879-48b6-849e-64843b9f16fd",
        "cursor": {
          "ref": "bbfc2b59-8d55-4a6e-adb5-b4a98c622286",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "77e70ce2-61c5-4f48-bc24-afa318eaa7ff"
        },
        "item": {
          "id": "46e0677a-5879-48b6-849e-64843b9f16fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9bc8803e-dc71-44e3-8065-89dfdf126609",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9870a8e2-04d9-4d29-b86b-e45b660d0259",
        "cursor": {
          "ref": "a0f015dc-ae9b-419d-8333-e6b5f17ce642",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "715da2de-0259-4362-aaca-25cf1800dac9"
        },
        "item": {
          "id": "9870a8e2-04d9-4d29-b86b-e45b660d0259",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b3cdb812-d517-4e73-b2fb-c7c2e3beb225",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4151336c-248a-4044-a842-cd93a27b8ee2",
        "cursor": {
          "ref": "9986059c-b2e6-44f6-802b-89f626da17f1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a780cf8b-f10e-4e35-af96-fa2a5633555b"
        },
        "item": {
          "id": "4151336c-248a-4044-a842-cd93a27b8ee2",
          "name": "identifiers"
        },
        "response": {
          "id": "b0a74f76-4ba7-4158-8a07-9b090f88ba13",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879c88be-7359-46b1-8c7b-8861a2dd79d4",
        "cursor": {
          "ref": "175cd6d4-8a4e-4e83-9d25-9fcc044526ff",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "340f0b29-719c-41e4-a43e-93ca43520d59"
        },
        "item": {
          "id": "879c88be-7359-46b1-8c7b-8861a2dd79d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e09b4aa-2132-47f5-a49b-2fd3fd8e6ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23185a8-f3e1-4210-8884-92c74dee24e7",
        "cursor": {
          "ref": "e618645c-825f-42fd-9709-b98964e7ddb3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4b300dd2-90a4-437e-94a7-48f065e2868c"
        },
        "item": {
          "id": "f23185a8-f3e1-4210-8884-92c74dee24e7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9db01ffe-d073-4e2e-93f4-5bf86379e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a0faf2-dd40-4caf-b63a-f8039d05cbb4",
        "cursor": {
          "ref": "8552ca4e-5c34-4f25-b083-f96bf4695170",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3969487d-de07-4da9-9285-47b317cef6e7"
        },
        "item": {
          "id": "06a0faf2-dd40-4caf-b63a-f8039d05cbb4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e08b5c26-9b75-4f8e-98a8-bbbeeca05090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b7e1c-f9ba-4868-9e0c-b1d7689906dd",
        "cursor": {
          "ref": "5a9be9ef-5484-4b98-98ba-43f1a7a0f97f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "72e03077-69c2-468d-aa57-cca5c3e8fb64"
        },
        "item": {
          "id": "be0b7e1c-f9ba-4868-9e0c-b1d7689906dd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "60d3799a-1f7f-4eb5-8a08-e1cca45c891a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde8216f-617b-4f1b-997e-d6061a0877dc",
        "cursor": {
          "ref": "dff618e7-e685-47b2-ad0e-b76e655cabf2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "08cb7689-2bd6-46d3-b0b1-ce4f117eba29"
        },
        "item": {
          "id": "cde8216f-617b-4f1b-997e-d6061a0877dc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ce4be1aa-d051-4f06-9983-58dba3cceb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf3900-350f-481b-80a1-3d188316c1cf",
        "cursor": {
          "ref": "58a934f1-c52e-452d-9c6a-14e3dd317868",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "76d449a8-c0cb-41c4-a0c4-92dafb49a2f9"
        },
        "item": {
          "id": "11cf3900-350f-481b-80a1-3d188316c1cf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d8999182-a60b-40cd-b616-658c3646a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ed297f-1ec8-48b5-b32a-88e1870dadf3",
        "cursor": {
          "ref": "d151706e-80ff-46d4-b1bf-ba884eb6a00b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "475ba203-b328-4787-ba05-fdf3e9a1aa30"
        },
        "item": {
          "id": "17ed297f-1ec8-48b5-b32a-88e1870dadf3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bec2cd7b-9279-4d31-b2df-002f9d2333e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cc0658-fb1d-4008-952c-17ad2e43b5c7",
        "cursor": {
          "ref": "dd26b9c3-2e37-48f2-9a77-f10f59497bda",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "abaf7a33-b249-43a6-a3db-06f3b13760ee"
        },
        "item": {
          "id": "e2cc0658-fb1d-4008-952c-17ad2e43b5c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "10cb7528-396d-4d19-99bc-7f891dc9952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5db6653-70fd-43ad-adc3-1c8d9265ca71",
        "cursor": {
          "ref": "5c7583b9-5033-4a70-a132-58b815a4e1cf",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "64c37b96-5d4e-410e-a8b6-4b1fca3cdaa3"
        },
        "item": {
          "id": "d5db6653-70fd-43ad-adc3-1c8d9265ca71",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fc4c5c06-1379-4c1e-a683-46237c812024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b2497a-e50d-4b99-9fba-25baab09ee5a",
        "cursor": {
          "ref": "a0c826fb-6a58-4c44-9f4d-381d26403960",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d506f70-b25d-43ef-8332-ef421cbd6fc4"
        },
        "item": {
          "id": "50b2497a-e50d-4b99-9fba-25baab09ee5a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b20d813a-e7c3-48ba-b7d0-75b558f397b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853d4d0d-6eac-41d2-a081-3b19396a0da8",
        "cursor": {
          "ref": "0601e7c3-d14a-4a23-8b00-581f29863515",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "150d9b69-6b3c-4d84-8f11-1e7fe3b5b6c8"
        },
        "item": {
          "id": "853d4d0d-6eac-41d2-a081-3b19396a0da8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4a3fe650-6c07-4acc-8c22-94efa7edb286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22e0a60-6705-4d37-a1c8-2fac2168dbb3",
        "cursor": {
          "ref": "43dc939e-af29-47cc-87b9-59d2de598af9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb6c0cd5-adf8-417e-a74f-12f3cf403e08"
        },
        "item": {
          "id": "d22e0a60-6705-4d37-a1c8-2fac2168dbb3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a9e2689c-da13-465e-80a4-57574e845523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b9fc0a-4732-4ae5-8163-8b9f67dc6f9b",
        "cursor": {
          "ref": "c4908c56-a2de-45f8-bd70-0d302c53f0db",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "65880bcd-9d33-4391-ab83-f52717e8d848"
        },
        "item": {
          "id": "47b9fc0a-4732-4ae5-8163-8b9f67dc6f9b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "32a2791e-58ba-46ff-bd56-941fcfc95836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6421f2e9-1c5b-4cdb-920c-0769251508bc",
        "cursor": {
          "ref": "2ae70b90-4684-4734-aa05-aa055c8a5cd1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6560a498-2b92-4e2e-9411-a3dd03e634e9"
        },
        "item": {
          "id": "6421f2e9-1c5b-4cdb-920c-0769251508bc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6696aa3b-a68f-473d-ac18-da0d69ebd3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59930fe-98fb-4736-b86d-650aede3f1b7",
        "cursor": {
          "ref": "83bc3ce9-d890-4335-b7dc-e1d5c2e0f134",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da5bb41f-b381-4012-8357-88bba0cadacb"
        },
        "item": {
          "id": "c59930fe-98fb-4736-b86d-650aede3f1b7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5fcbda01-5286-489e-a64d-6dbe773a3e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7c7450-7e30-4443-bf6d-b97c7592a11b",
        "cursor": {
          "ref": "b68b18c4-05c6-46c6-8b18-74efa6a5d6cd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4077dd02-9d11-4e0c-9fd0-acdcaddbc7f7"
        },
        "item": {
          "id": "7b7c7450-7e30-4443-bf6d-b97c7592a11b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "88e078f8-d84e-4b1e-a0e5-e51dee73b658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b1b4f-9e14-4ea0-9dea-f0db9d03762a",
        "cursor": {
          "ref": "52a62df9-f6f1-41b2-8490-af07e5348058",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1814fb93-955a-41c4-8bef-9f0e54cb75a2"
        },
        "item": {
          "id": "d47b1b4f-9e14-4ea0-9dea-f0db9d03762a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17d01964-0519-4075-81a3-7b0ebeb6e1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a8d6e7-c6a3-400b-91bb-dc2c10989aa8",
        "cursor": {
          "ref": "22951793-1b4a-4553-9370-e9b094c6dbb1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "129f61d0-a30e-48fc-b053-86847f9687c2"
        },
        "item": {
          "id": "36a8d6e7-c6a3-400b-91bb-dc2c10989aa8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "503ec779-f6cd-4dd3-8c52-7bf77683bb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e0a665-d8e9-468b-9cc8-6d5a153388f9",
        "cursor": {
          "ref": "01224ac0-3693-42df-b50e-1a035dbd459e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b4c450d9-03a5-4401-bc35-a7364b0756e4"
        },
        "item": {
          "id": "31e0a665-d8e9-468b-9cc8-6d5a153388f9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e9a06529-2600-4457-982f-e1717bf4ce56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bdadfd-cb40-4894-beb8-897fe988c5ef",
        "cursor": {
          "ref": "137d99c1-6071-4c97-8e70-bc98c979d2a1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c2220451-de92-40b4-becf-2f085e2f3c99"
        },
        "item": {
          "id": "c6bdadfd-cb40-4894-beb8-897fe988c5ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "12615736-b6b3-4f45-aec8-803e3bce1891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682f8d36-68ed-4c55-879a-b25d72e30d00",
        "cursor": {
          "ref": "0c7b7081-0a89-49e6-a8d6-86dc17a652a0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ef3bfba7-d946-4eda-96f8-12067eeb1933"
        },
        "item": {
          "id": "682f8d36-68ed-4c55-879a-b25d72e30d00",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1caa33a3-7697-4b8a-b5c8-4fd61f3c2868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a374bc8-1516-4809-a960-3c69f264ea9d",
        "cursor": {
          "ref": "82e4a38b-a6c2-4635-9779-98c658fce927",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fb4c00a6-b11b-4c27-b48e-91571e29913f"
        },
        "item": {
          "id": "4a374bc8-1516-4809-a960-3c69f264ea9d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5d5fc093-6bc3-4ce5-9979-2578fad39740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c8c923-3772-4985-8335-2473ee078fc0",
        "cursor": {
          "ref": "31224486-d86c-4dc0-9978-5d8acc306a80",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5720ed81-17e7-4674-80eb-59cad6c7e01e"
        },
        "item": {
          "id": "a4c8c923-3772-4985-8335-2473ee078fc0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4cfcd8c7-5f0f-401f-8568-ae757634970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412149d0-64f2-4e6d-b9a5-eca85a01af34",
        "cursor": {
          "ref": "d4cfb599-1b4f-4345-9e4b-5314dbbbb0c3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aaecae0d-7fca-467b-b487-3b263df36dc6"
        },
        "item": {
          "id": "412149d0-64f2-4e6d-b9a5-eca85a01af34",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e83027a7-7de9-4a72-bf7a-1e5c5bdad4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b43a82-15b9-4091-9330-12cf42abfcb9",
        "cursor": {
          "ref": "464a5461-4d53-4714-9057-c3c77bc56eb1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc476e88-18b7-4095-adb3-ec0f5be4b84d"
        },
        "item": {
          "id": "65b43a82-15b9-4091-9330-12cf42abfcb9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "12b86ffd-4baf-4028-bf55-928e828e8fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f6d955-443b-46a0-84fb-7f29075322cc",
        "cursor": {
          "ref": "da5ebebb-090b-4374-a5de-f0be6fb09466",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "61ed7c9a-f8f1-4157-b0fe-17eb0867afc7"
        },
        "item": {
          "id": "c4f6d955-443b-46a0-84fb-7f29075322cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "62081ae5-9d8e-4ec6-b5ad-725e66a59670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98de242-3336-4c00-9b07-c933e999d27b",
        "cursor": {
          "ref": "038ff056-8ef0-46d2-adab-4bf445988602",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "456c4c6d-38c7-4e52-ba9a-bd0f871f6fde"
        },
        "item": {
          "id": "c98de242-3336-4c00-9b07-c933e999d27b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e01dc421-d3ee-49c0-aee9-12d9d75f5740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510eefbe-da06-4232-b81c-1e29249c542e",
        "cursor": {
          "ref": "69288f68-d328-4761-a59a-c5d724f23fba",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3c61c1ef-2bf5-4b86-8c77-1c4f34e8ae59"
        },
        "item": {
          "id": "510eefbe-da06-4232-b81c-1e29249c542e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4e82272-5672-42cd-a09b-71d8408dc9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6040de-4732-4b3f-bac9-2c48b7001326",
        "cursor": {
          "ref": "13a0faca-9629-482c-be52-73cbd8a982ff",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44007d22-9bb0-48d1-8472-14ac9bbe9fc5"
        },
        "item": {
          "id": "aa6040de-4732-4b3f-bac9-2c48b7001326",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "995b0652-933a-46d5-82b2-3f7201084196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee39f4d-1af6-4d85-b1cf-fa393163a21a",
        "cursor": {
          "ref": "d41a051f-0ae8-4d7c-8447-7e101ad896cb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7450a98e-94e9-4a37-8f95-b230823b825f"
        },
        "item": {
          "id": "5ee39f4d-1af6-4d85-b1cf-fa393163a21a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "df3dacd6-b491-4cdd-9b3a-ca4cfd4316f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92348fc7-c24e-4db2-be5e-e67dae84c25a",
        "cursor": {
          "ref": "daab6c2d-94d7-488a-93d4-53244868c7c4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eaec283b-7ef0-491a-83f0-b8690a9bc443"
        },
        "item": {
          "id": "92348fc7-c24e-4db2-be5e-e67dae84c25a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "353d90e1-99d1-4973-8f4a-4049d42ca615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c0e147-b461-486f-9659-88237590a947",
        "cursor": {
          "ref": "82f00c9d-3d6e-4fb2-a326-d0788c9ae84d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f2c05ff8-5196-42ee-8e61-69da47b7b99f"
        },
        "item": {
          "id": "07c0e147-b461-486f-9659-88237590a947",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9defd95d-8ba5-4c7e-acd0-3affb555a5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d46a65-e53d-4e11-82c6-72eb882982c9",
        "cursor": {
          "ref": "68f753b0-017c-44c8-8c23-c7aa9d344301",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8a05be0-2b42-4081-9daa-bb2a6ab5f3e0"
        },
        "item": {
          "id": "04d46a65-e53d-4e11-82c6-72eb882982c9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "db946328-ae33-4e24-af3e-9fec014dec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b526bb-6aa2-45b8-804f-0e1f0fba5f2d",
        "cursor": {
          "ref": "02a96ae1-09de-4a69-b902-fa91ac7ab61b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1238dbad-0f32-4a3b-b306-92471f70f560"
        },
        "item": {
          "id": "37b526bb-6aa2-45b8-804f-0e1f0fba5f2d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "203de205-39d9-467a-8075-bfb2042231d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab916e7b-4c23-4901-a761-0eb939e27acd",
        "cursor": {
          "ref": "f00bfec1-8028-4a9d-9d9a-da3e3a0ab1bc",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a82fb0d-db64-4484-87d7-92c7e96715a8"
        },
        "item": {
          "id": "ab916e7b-4c23-4901-a761-0eb939e27acd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e3ab1b41-98a7-45a7-8921-67e0f5b11941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d003c8f-2cc2-4fc5-a2b6-dd4f738d0a56",
        "cursor": {
          "ref": "5a660d32-32ea-4b4f-8398-52bfcdad861a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e9ba087a-dc09-4461-9bff-838b1e72fff2"
        },
        "item": {
          "id": "1d003c8f-2cc2-4fc5-a2b6-dd4f738d0a56",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9f08bb6-c51a-4edd-99a2-1df3e2b924f9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09100792-1163-45a8-bf92-f0835a32f1bd",
        "cursor": {
          "ref": "7f1ff33a-20dc-4568-8f9d-24dcfc754291",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7da1db3f-a9e0-42d9-b4b7-89a29251e845"
        },
        "item": {
          "id": "09100792-1163-45a8-bf92-f0835a32f1bd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4a7eca55-80c5-4177-81a8-89d195a061b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466118e-5b21-41fa-bc24-b3012b5099c9",
        "cursor": {
          "ref": "3001f34c-cab4-4968-9853-e8bb4a6c0276",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2b775594-6450-440f-a428-04c41f7db82d"
        },
        "item": {
          "id": "a466118e-5b21-41fa-bc24-b3012b5099c9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a2bb74d0-3e0e-4e5a-be74-3b96e413cd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5eeb31-8d8a-40b7-992b-af22e224d496",
        "cursor": {
          "ref": "d6040420-9e5a-43b7-b305-a4327e3b376f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c222fd37-9030-4bc8-a4a5-ebdab2adf244"
        },
        "item": {
          "id": "0f5eeb31-8d8a-40b7-992b-af22e224d496",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0b18da07-ca01-4196-8f4c-f87ee90322dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc54cd61-2c2f-49bd-9bc1-a831609455ae",
        "cursor": {
          "ref": "d8c7d5ef-2458-4e33-bfdf-a40d75b67b15",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "670744a3-63b6-4fc2-b604-0c60775d7398"
        },
        "item": {
          "id": "fc54cd61-2c2f-49bd-9bc1-a831609455ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be0cc776-04fc-4118-b801-c14e20d6d5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f80535-6697-46c3-8de9-c9164508e0db",
        "cursor": {
          "ref": "9e504d31-cbc1-4ced-8a85-f868a9237f5a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ea194fac-c6ac-46f1-b4ab-6b662248d4db"
        },
        "item": {
          "id": "31f80535-6697-46c3-8de9-c9164508e0db",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d3701deb-fa59-426d-8bf2-31357a0d9001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c69c432-d4bd-4e60-af8e-f01ea5946b50",
        "cursor": {
          "ref": "518c58d9-3b2d-4d77-8b11-40280699a71d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1bdcdb19-6043-4aad-a605-70ae3c5a13cf"
        },
        "item": {
          "id": "9c69c432-d4bd-4e60-af8e-f01ea5946b50",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4beec563-389f-4cd5-a5a0-f428d60b72d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23fb889-30a1-4c62-85cb-c63c1b2e974e",
        "cursor": {
          "ref": "a88e89e2-fb63-4b66-9f23-1c71fb1639fa",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2568c2e9-baf4-4928-8529-cc43e4af1c68"
        },
        "item": {
          "id": "f23fb889-30a1-4c62-85cb-c63c1b2e974e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "768352ee-1292-4921-ae0b-81ace7421a9e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c770e107-8e21-4c15-8da6-07d0512ff788",
        "cursor": {
          "ref": "df97662a-85ab-49b3-9e19-3c2a2bb25935",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f75d8987-8d86-49cf-afcb-692d5ccc7ece"
        },
        "item": {
          "id": "c770e107-8e21-4c15-8da6-07d0512ff788",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e4ac8f8e-5bec-4da2-9168-8959d9d02536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eb39b8-b3bf-433a-97fb-100ca9c387a5",
        "cursor": {
          "ref": "2c2d1225-fda4-4da1-a868-cde28c814a48",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "64e692f1-ed4b-4908-bafd-08848b2375fa"
        },
        "item": {
          "id": "83eb39b8-b3bf-433a-97fb-100ca9c387a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ce2f809-bf80-43ec-a2eb-50f0a3f2e681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a6b23f-b26a-4c12-bdba-0d253c20e3c3",
        "cursor": {
          "ref": "f60b438b-fba1-4fef-b30b-9cd5a01f0f71",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d6035e8-0885-42d9-8ae8-7e277e33fc21"
        },
        "item": {
          "id": "b3a6b23f-b26a-4c12-bdba-0d253c20e3c3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bb39a5b6-67d0-499a-8166-1e156e9f84ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d533cc39-64d8-4331-beb1-64399a67882f",
        "cursor": {
          "ref": "87bc04a2-9a20-46ee-9f93-84caac4bcf00",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f4954f87-88aa-44e3-8aaa-bc289cecb449"
        },
        "item": {
          "id": "d533cc39-64d8-4331-beb1-64399a67882f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5b2dd9fc-cf8d-444b-b5bc-9a5caec65f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a802d-2ca1-4313-b767-b23de4c159cd",
        "cursor": {
          "ref": "bb7dfede-9db3-410d-985d-db2ac96fd9b2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d0b45aa-85b9-4b56-8ff6-a391d3175308"
        },
        "item": {
          "id": "a15a802d-2ca1-4313-b767-b23de4c159cd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c9edfb6-96ad-4d98-9db6-755c4a53224c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30cfa6f-76d8-430d-894d-cba8d253571c",
        "cursor": {
          "ref": "aa02d8d3-200f-417c-b7fd-5bfa7746f51b",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9f7a965f-d0cd-4c37-afb2-aa920aadf0b5"
        },
        "item": {
          "id": "a30cfa6f-76d8-430d-894d-cba8d253571c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df7569a4-a89a-4a03-ab54-fc02e63f4be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b806d6-0f06-4c81-82ad-b18dc3ad76a0",
        "cursor": {
          "ref": "b54115c5-a026-426e-bfb7-5b0f03a8f655",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "387c9c76-feb7-410f-bcd6-8494b5c42043"
        },
        "item": {
          "id": "b5b806d6-0f06-4c81-82ad-b18dc3ad76a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aad2992a-c8c9-4d25-8155-b853c798cd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5adaeb5-93bd-4bc4-a3fb-185409c2b630",
        "cursor": {
          "ref": "6b6a03bb-c9ad-45cd-9a71-a2779487836b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "170f9759-36e9-425a-be9d-55e56680f668"
        },
        "item": {
          "id": "a5adaeb5-93bd-4bc4-a3fb-185409c2b630",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "366d44be-36b0-4780-924f-afc9a9c68f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0922007-fbf1-4100-8491-37738d4443f3",
        "cursor": {
          "ref": "157868bd-9a2b-4c41-b7ce-002b68885040",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7d0776a5-a096-45b4-a372-6c4a624c0106"
        },
        "item": {
          "id": "a0922007-fbf1-4100-8491-37738d4443f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "23cda6aa-73e4-4fcc-8aaa-54f388ab6e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceae0119-936e-4c7a-bd84-20e01398663b",
        "cursor": {
          "ref": "4e36561c-b9c9-484d-a14c-b44e85a92bbd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1fa83401-f07a-4fbb-b103-8cfa15017b38"
        },
        "item": {
          "id": "ceae0119-936e-4c7a-bd84-20e01398663b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81068b45-1acf-4942-bed8-1c980cd4176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad6ea77-cdbf-408a-ad5c-208006cd8865",
        "cursor": {
          "ref": "fc25aa7a-8bbd-4a19-8311-df7e3488e2f7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "48a4f3fe-e198-456c-9782-5232c6b3f4b7"
        },
        "item": {
          "id": "1ad6ea77-cdbf-408a-ad5c-208006cd8865",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "322774a7-4690-4b51-a64e-5c10bb148937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede6f3dd-c42c-4456-9def-fb382b4fb915",
        "cursor": {
          "ref": "218390f5-5b3a-4550-9b49-d7c0fec383b3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cbb30e96-78d0-485d-8384-9be649bccdd2"
        },
        "item": {
          "id": "ede6f3dd-c42c-4456-9def-fb382b4fb915",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b1f1171-cb8a-4650-b724-6611afc6d627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787d67bb-de23-494e-823e-7b1a9a9b276b",
        "cursor": {
          "ref": "bf2d73b3-254e-493b-a89c-0bd29befb047",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8e58db0-1d38-490d-90e5-ee3909f38203"
        },
        "item": {
          "id": "787d67bb-de23-494e-823e-7b1a9a9b276b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "728d54d5-33a8-4a07-b7db-38cf70b2c741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2700fac2-c673-4185-adf8-692f1b4ae87f",
        "cursor": {
          "ref": "8ee073ac-43f8-46f7-a970-c2549405edb1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "00551507-58d7-4ab9-85e6-054ba86983a1"
        },
        "item": {
          "id": "2700fac2-c673-4185-adf8-692f1b4ae87f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "addc5624-3aa0-41b8-a866-b9ee489f10ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a72b18-99a7-40fe-8c56-22e56a4a2512",
        "cursor": {
          "ref": "6f3fff9d-8904-4687-b776-2c65da88739b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f89d2132-45e7-4ec8-b3de-cfbc2090282d"
        },
        "item": {
          "id": "51a72b18-99a7-40fe-8c56-22e56a4a2512",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "76a7b2d5-edae-4c69-a04e-f4930c40c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e9b5ca-1c68-4ba2-9d1a-1c7fc27efb51",
        "cursor": {
          "ref": "af097d6a-193c-47d7-ada9-c31b54dd4e45",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3297b926-acf9-41f4-819b-dd7c2abf2c59"
        },
        "item": {
          "id": "e2e9b5ca-1c68-4ba2-9d1a-1c7fc27efb51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7f1041f4-d3ff-4b35-bd94-41b10cb42d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b98980-7e06-4360-852f-bde962080e3e",
        "cursor": {
          "ref": "c49f72de-df19-473b-a738-8e4ae1739846",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e9502b00-7023-476f-868b-92f0d309a550"
        },
        "item": {
          "id": "16b98980-7e06-4360-852f-bde962080e3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b2b7915f-c0ff-459f-8df4-7e631a0cd0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0870f37-3485-46d4-b43e-d01b6f7370a9",
        "cursor": {
          "ref": "2504bb85-caf2-4679-b507-3ad5afc69e61",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f9dce149-ef98-4208-9d89-7d0b52110753"
        },
        "item": {
          "id": "b0870f37-3485-46d4-b43e-d01b6f7370a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "08078001-9f11-4f26-91f4-ebd9cc441678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0fb505-37d6-49ba-9591-0e7af0d21cfa",
        "cursor": {
          "ref": "d2a552f5-f417-45b8-981d-6c2dcb12d231",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc1d687a-609b-4cc9-b0bb-2f41f43c81e4"
        },
        "item": {
          "id": "2c0fb505-37d6-49ba-9591-0e7af0d21cfa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cc0b5e31-1bd7-4f22-b37e-0fd67b777fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1d8db2-0597-4434-b70a-402f71bb38c9",
        "cursor": {
          "ref": "01c8dd78-477c-4ac3-b01d-765cd6a947f7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7d7cee18-a85a-44eb-8347-18753745a94f"
        },
        "item": {
          "id": "7d1d8db2-0597-4434-b70a-402f71bb38c9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b6c151e2-fcf6-4015-9bb3-ad1dfcc86929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46175dd3-9183-4040-a7ee-f0912093f04b",
        "cursor": {
          "ref": "22781cf1-8998-4fbf-8205-25867cd9cd60",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f79b4d8b-2ac3-4ed7-8e24-59f4ebccae78"
        },
        "item": {
          "id": "46175dd3-9183-4040-a7ee-f0912093f04b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "746a5fa6-ac16-4486-b6bf-4b934743110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e35d33-45a6-44f9-a2bb-92b9b2a92ba9",
        "cursor": {
          "ref": "861c73df-b2df-4894-8437-4e22f23c2366",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f0d6309d-964c-471c-bd59-88de39c9ce69"
        },
        "item": {
          "id": "f5e35d33-45a6-44f9-a2bb-92b9b2a92ba9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "971b5077-145e-4911-b90f-a1bc37c75956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feabf419-8e97-46c5-89e8-7360bbf24ac1",
        "cursor": {
          "ref": "fda2a7eb-9bf7-47b4-9bb0-f0eeca70b949",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7288093-6ed6-43b9-a8ab-5620e89d7ca1"
        },
        "item": {
          "id": "feabf419-8e97-46c5-89e8-7360bbf24ac1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e041f9ad-887a-407f-ba25-6f5856b61b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db8432-b180-40cc-8b7b-4934e04260df",
        "cursor": {
          "ref": "45c4c3fb-28e7-4220-89c4-8be862dafc75",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "81d25c72-1e52-4bee-913e-a46e6f6f41a9"
        },
        "item": {
          "id": "28db8432-b180-40cc-8b7b-4934e04260df",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "48be3139-c0b2-43bf-8c69-2397c4e616c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e669865-8614-47d1-ad9f-68299ae95ff3",
        "cursor": {
          "ref": "37a999c6-ad78-41aa-84c6-efba5dc5f14d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3f507f51-bcc7-4458-a676-7a27c64f387f"
        },
        "item": {
          "id": "1e669865-8614-47d1-ad9f-68299ae95ff3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c68f62c5-ded0-4baa-8825-963ed9472873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdce3045-84eb-4b17-834f-9b41996b4792",
        "cursor": {
          "ref": "3d3780da-0492-4263-a835-cee2539cadaf",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "238c346c-583b-4873-b2e5-ba3412d86fb8"
        },
        "item": {
          "id": "bdce3045-84eb-4b17-834f-9b41996b4792",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d2a82c1f-e7bf-45f7-bbbb-24e8c89cecc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6160c394-e9d0-4df9-ad49-300d37531933",
        "cursor": {
          "ref": "e846132a-94fd-4542-8745-28915370f1c2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b59833cb-fc28-4043-baf1-22b3ad66b1ae"
        },
        "item": {
          "id": "6160c394-e9d0-4df9-ad49-300d37531933",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "32325d55-476b-4dba-9341-0a42c4467ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d3c73c-a8b3-4e44-9adf-658bc6f1c7c0",
        "cursor": {
          "ref": "0533eba0-1a65-4b47-9f7f-13a3007fd89b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4d46328c-5d7e-490e-81fb-fef8558dce48"
        },
        "item": {
          "id": "e4d3c73c-a8b3-4e44-9adf-658bc6f1c7c0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1f4a76a5-4f76-4996-b2ed-02d02177789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ff52c9-c6ba-43a4-8ee9-97cb7f9e91ff",
        "cursor": {
          "ref": "8bd34dab-9518-4897-8019-03d2b28fc446",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8e47cfe-5af2-4c05-9f15-85a17a1da4b8"
        },
        "item": {
          "id": "d8ff52c9-c6ba-43a4-8ee9-97cb7f9e91ff",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9070753b-e6b3-44b1-b06b-82e3c201ef75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1771dc-6a0f-40c6-9923-be340d556bac",
        "cursor": {
          "ref": "15bc0921-40bc-48ad-a44e-11ad4693da27",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5d6cf2e0-5d9e-4cf1-8336-c1664ff03b40"
        },
        "item": {
          "id": "ac1771dc-6a0f-40c6-9923-be340d556bac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "164794ee-c768-4e32-9c62-5f20095e5bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bd5a0b-cabd-4bc7-97b1-4e9d0555e311",
        "cursor": {
          "ref": "2dc86b05-06d6-4f9e-badd-b4458ec0e18a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "224af443-75dc-479e-b3f5-83e29f41dcc5"
        },
        "item": {
          "id": "d1bd5a0b-cabd-4bc7-97b1-4e9d0555e311",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c2f5e18d-0336-4ca3-ae34-faf6f3bc3f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5801d8eb-69ec-48b5-ac8d-64bd70b83d5e",
        "cursor": {
          "ref": "a982a8df-6bdc-4363-bacc-02225a3c017a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d976452e-91f6-4b83-aa8d-cb0a6accd66a"
        },
        "item": {
          "id": "5801d8eb-69ec-48b5-ac8d-64bd70b83d5e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "44477db3-2414-4383-bd6c-6b938dafdffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7af5ff1-73b5-47f6-963a-b3551d1362bf",
        "cursor": {
          "ref": "4acf34be-1bf5-4494-b67c-347d7c6d8088",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1d77a57d-347c-4650-b516-dc1de68cd072"
        },
        "item": {
          "id": "c7af5ff1-73b5-47f6-963a-b3551d1362bf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c217a610-c635-4354-80f7-3e8f84f1a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee427198-2985-483d-8e82-0cc6ec99f570",
        "cursor": {
          "ref": "41abc713-9014-4d7a-9315-8843dd8dd510",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6d9401f9-d644-4240-b9dc-eb70a790756a"
        },
        "item": {
          "id": "ee427198-2985-483d-8e82-0cc6ec99f570",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aa9e026f-4538-49e2-8f0f-b2e8bb43d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b568cfa-df5f-420c-9f23-1055ccb4631d",
        "cursor": {
          "ref": "b813bd57-f0ff-4afa-80ae-05ca72169950",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d34715d1-94b3-4a89-9023-c217ef5fa2e7"
        },
        "item": {
          "id": "6b568cfa-df5f-420c-9f23-1055ccb4631d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec5ea953-a8ef-4ade-962e-61d3402ade3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028970c2-36f9-4f71-8aaf-57db322772f7",
        "cursor": {
          "ref": "f953a939-2775-428b-8c9e-1ec67b6dd858",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d360604-db85-4508-ade7-141930ed8ab6"
        },
        "item": {
          "id": "028970c2-36f9-4f71-8aaf-57db322772f7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55d17604-9cc1-4592-a2c5-f86877486d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917d83c-2471-4eb5-9072-5fb340b803e5",
        "cursor": {
          "ref": "d9252f36-9b55-4636-b075-013bb0318124",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dad8e941-d6e2-49ae-91a0-5aa3f4c522f9"
        },
        "item": {
          "id": "3917d83c-2471-4eb5-9072-5fb340b803e5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b3aad7aa-7eb1-4251-b8d2-a2bb67a9edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a21c1-fa7e-41ed-b55e-9d5dcd0d1891",
        "cursor": {
          "ref": "7143ff53-419a-4e72-9b7d-77b30e21bab6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "326bc8f2-2e0e-4696-912e-825798d863a3"
        },
        "item": {
          "id": "c20a21c1-fa7e-41ed-b55e-9d5dcd0d1891",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "42f63166-2402-43f0-b2ff-3d86169705b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75998dbc-204f-4a05-afd7-574e491fc986",
        "cursor": {
          "ref": "9d0c7852-1fa8-46fb-b0bb-0325c5324f09",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1b46d7bf-2e4b-42d5-b22a-bbe4950dfc3c"
        },
        "item": {
          "id": "75998dbc-204f-4a05-afd7-574e491fc986",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "045ab80b-13aa-4210-ab32-70752409c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b7724-9b62-47ab-8353-14922141d998",
        "cursor": {
          "ref": "23d09b86-e15d-461b-826d-b3dddcccea93",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2acef4b9-7db6-49a0-8867-6915a08b1866"
        },
        "item": {
          "id": "302b7724-9b62-47ab-8353-14922141d998",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "600fe3c1-3bb5-4a4a-b57e-faf6d710caf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2077df-39e5-4985-80e2-4e427bfa8195",
        "cursor": {
          "ref": "c558c98b-e01e-4c69-96a2-ed14799912cb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "48d39543-9489-44c5-be8d-ddeff9fba2f6"
        },
        "item": {
          "id": "3d2077df-39e5-4985-80e2-4e427bfa8195",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "56a2539a-61eb-45e8-882b-ee2015136303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a711366f-a67b-4af5-912e-b96d28765544",
        "cursor": {
          "ref": "35316c58-fcb7-42bb-ba51-f81266b7aae2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7c82779f-955e-4b9e-8f4c-78d301b853f3"
        },
        "item": {
          "id": "a711366f-a67b-4af5-912e-b96d28765544",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dd523329-4206-4340-b5bd-4013e20aac96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f596be90-78f4-44bb-9d0d-5e5fa578f3bb",
        "cursor": {
          "ref": "8c69b56d-a0d5-48ed-bb40-0c0ed814b4c5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "485d3e5e-bf37-456e-80a7-0a3367c3d7ee"
        },
        "item": {
          "id": "f596be90-78f4-44bb-9d0d-5e5fa578f3bb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "06aa8797-897d-44fb-ac85-136640621acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283ee9a7-7ee1-4b0d-8516-220f67c7cbbe",
        "cursor": {
          "ref": "021a1076-f8e7-4cdd-b4d3-34e0178dbc6d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6fb14c49-03b2-4318-9239-dbf88861498c"
        },
        "item": {
          "id": "283ee9a7-7ee1-4b0d-8516-220f67c7cbbe",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0281bdf5-1c0d-4758-95bf-621bc01ba0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4224dec-27cc-4699-a515-93e8f5dc3379",
        "cursor": {
          "ref": "799378ec-6176-494c-b581-d49fb77394da",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9d721554-5d08-4ede-b095-856e5d60d2be"
        },
        "item": {
          "id": "e4224dec-27cc-4699-a515-93e8f5dc3379",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e590bc68-0f89-4f06-962f-fc30d04d4cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf39538d-8c85-4d47-944c-8cadf3aa37a7",
        "cursor": {
          "ref": "5dcd3bb5-b10e-4ca4-a7d6-3a88555a8fda",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b6d64979-854e-4b71-8200-790c01c1ad07"
        },
        "item": {
          "id": "cf39538d-8c85-4d47-944c-8cadf3aa37a7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "44b1d8a3-9fbc-446f-9c02-0c9ab33574be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e80983-d9df-42f7-84e1-9f1b1a5c6265",
        "cursor": {
          "ref": "793e246c-a6ed-44b9-86e8-d0782b189575",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5661bc9-8e4b-49d3-8260-6f74b5cf680d"
        },
        "item": {
          "id": "d7e80983-d9df-42f7-84e1-9f1b1a5c6265",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7499a88-9e1a-410f-82fe-d920e0dec83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759f0707-2ecf-40f3-91f8-5046faed3197",
        "cursor": {
          "ref": "1a23a5ba-6524-4aa7-a6a6-22595e222288",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0d40f4ae-e937-48ce-8150-b7d16210336d"
        },
        "item": {
          "id": "759f0707-2ecf-40f3-91f8-5046faed3197",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "362ae9da-c646-4783-958b-dc274efdc245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd460b34-f685-4b95-80fc-f6e2af44bfe3",
        "cursor": {
          "ref": "87428e6c-2d6e-4928-bdc8-6bf48070a514",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2510d87d-4a9c-46be-8bd8-db8b404e65c3"
        },
        "item": {
          "id": "bd460b34-f685-4b95-80fc-f6e2af44bfe3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d71f6de6-1814-454d-85f6-b7a584f77f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9990df-27e6-446e-956e-5de5486e0ab9",
        "cursor": {
          "ref": "77abbcd3-642b-4867-812c-dc6feea4e285",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c573e60e-ff0c-40e5-b697-b440cf012e91"
        },
        "item": {
          "id": "eb9990df-27e6-446e-956e-5de5486e0ab9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a8287219-8622-453b-8a95-973093fd3d21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e761ae-d781-4cff-98f4-623e6acb069d",
        "cursor": {
          "ref": "5f77b9af-f670-424d-b253-d5c60df5207e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad7c95cf-a9e9-4bb5-8a3c-69d4912565c7"
        },
        "item": {
          "id": "67e761ae-d781-4cff-98f4-623e6acb069d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca8b9e75-52e8-4ce3-a90a-e15d86df9279",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa7fd7a-a3d6-48e0-b6d3-0e5428ac851d",
        "cursor": {
          "ref": "8e0b384a-9d54-4f64-adf9-ed580f57d176",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b234fcd-6dd3-433b-986a-5c2ec83ee5c3"
        },
        "item": {
          "id": "6aa7fd7a-a3d6-48e0-b6d3-0e5428ac851d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "38154b7d-c58c-432f-a865-db0723244d77",
          "status": "Created",
          "code": 201,
          "responseTime": 303,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94bb802-b531-49ce-8bab-b67dc125f0ed",
        "cursor": {
          "ref": "26c8fd4f-7c2c-4233-806b-c5206d9149a3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c06649e0-bd9e-45b5-bea7-f9609929f03e"
        },
        "item": {
          "id": "d94bb802-b531-49ce-8bab-b67dc125f0ed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "df615c67-83c2-4d9e-9c2d-6fd22d67c616",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b814458-2709-4356-a9ad-c9096029313b",
        "cursor": {
          "ref": "1a61d6d5-7816-4d3e-a417-bd3bcfd6c8af",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0e2db02a-8caa-4bb1-918d-55e41f28b7e9"
        },
        "item": {
          "id": "1b814458-2709-4356-a9ad-c9096029313b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4e16e80b-26ee-4083-89be-749512875e0d",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd97b2f3-1ac3-4eaa-9b0d-bc15118d22b2",
        "cursor": {
          "ref": "149a225a-72bc-4d08-ba9e-bf6262293a95",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "093dcc05-c297-4f12-8311-1d6272a931fb"
        },
        "item": {
          "id": "bd97b2f3-1ac3-4eaa-9b0d-bc15118d22b2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fccd35d3-a2d8-4349-8097-9dec23131e12",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "15055646-75e7-4dea-8322-f3b3f676524e",
        "cursor": {
          "ref": "1168a535-ecfb-4d33-a43c-3b70da42b069",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b437a8eb-f901-49bc-b079-86fe3c63a0c9"
        },
        "item": {
          "id": "15055646-75e7-4dea-8322-f3b3f676524e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6b11dec0-010c-41d0-8fac-83f9dc40a3b1",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fbe724-7a17-40dd-9d99-1d7ce80579bc",
        "cursor": {
          "ref": "9a439e8d-0c7a-476a-a016-d7c9e8e2cc85",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "acddf619-f56c-4eeb-b594-a4545733a8c3"
        },
        "item": {
          "id": "e0fbe724-7a17-40dd-9d99-1d7ce80579bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "572546a5-7246-4903-b72b-3f70d67d39a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372110cd-d42c-45a3-a391-60271086e03c",
        "cursor": {
          "ref": "b7652375-3e6a-4743-9ea7-059368ecd99c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "837376ac-0861-4d30-a91e-a0336304610a"
        },
        "item": {
          "id": "372110cd-d42c-45a3-a391-60271086e03c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca720aa1-ed5d-415e-9619-0fd16223e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82028aa-0a57-4620-8583-1ce1805cb2be",
        "cursor": {
          "ref": "de09aca3-1d74-4927-a6c4-93f662db58e9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f7563f12-6a95-482e-aada-91ea34ee9ad6"
        },
        "item": {
          "id": "a82028aa-0a57-4620-8583-1ce1805cb2be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6361cef6-0c5b-43ef-8445-4b3baeaa104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437e5b2-78eb-49bc-b301-a5db1815fb14",
        "cursor": {
          "ref": "fb912e20-13b9-431e-9907-027c73c7a5d7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "219e0b4d-5d5d-4612-a375-0b389b4de53c"
        },
        "item": {
          "id": "3437e5b2-78eb-49bc-b301-a5db1815fb14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a3e57c5-3492-4d37-b106-9865d730deee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0e0f1-570d-4039-9dfb-10949b7769b9",
        "cursor": {
          "ref": "099ba7dd-2ad5-40eb-ba41-0ea9cb2c008a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44afe2be-2d3d-44b6-84e1-7067ef61191a"
        },
        "item": {
          "id": "d5b0e0f1-570d-4039-9dfb-10949b7769b9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1c14498c-9db7-4a4c-b05d-87b7815f389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829600dc-fe1b-4bdf-8fb5-c0b83c421246",
        "cursor": {
          "ref": "dc479987-5f46-436c-a1d6-5dbe7777232d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0bc8b99d-c019-4f83-9a40-41ba7e030d37"
        },
        "item": {
          "id": "829600dc-fe1b-4bdf-8fb5-c0b83c421246",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44f6c0e7-d3bb-4f35-94d2-9d04f864ec6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0518de-f478-4bf8-8c54-74a5bec7d057",
        "cursor": {
          "ref": "df2b245b-fc41-42a8-b31c-14a01ef30fd3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9059acc3-8608-4e25-82a7-3007859940ff"
        },
        "item": {
          "id": "6a0518de-f478-4bf8-8c54-74a5bec7d057",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "164b6be1-809b-459a-92dc-da4c7cdc533d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c1acc-cdb9-4690-8273-b283d0acafd8",
        "cursor": {
          "ref": "2a4db90a-300d-4af4-aecb-8629b083d1e2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a2a78cb1-ef3d-4839-b292-5add7960f6db"
        },
        "item": {
          "id": "2d2c1acc-cdb9-4690-8273-b283d0acafd8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0cf44483-c404-401b-9a9d-994b0e52acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be5343-8d82-41c8-8e06-44b5b55f3a83",
        "cursor": {
          "ref": "c6c1cdbc-d372-4f29-bc9f-97185b2e520a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f5a702c6-e9f7-4efe-9c2b-976b1c130fb9"
        },
        "item": {
          "id": "a3be5343-8d82-41c8-8e06-44b5b55f3a83",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16b5cdcf-4ff7-44d5-a1c2-a3fa494038bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a53ec-56d4-48bb-bc61-ca93f46b0f1b",
        "cursor": {
          "ref": "46a4a2cd-97b2-4a82-a510-853155f68d1e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d85812e5-5ac2-498b-9273-03f259d7d0b6"
        },
        "item": {
          "id": "d31a53ec-56d4-48bb-bc61-ca93f46b0f1b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a253a040-f481-414e-b503-134770034e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecdb3ce-a608-4cb1-aa39-18fd2ff5cf4e",
        "cursor": {
          "ref": "2b8ee5c0-de57-4d28-8e16-d6387b9d439d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "67f71b9f-221e-42ad-b959-240f90b2fa8c"
        },
        "item": {
          "id": "6ecdb3ce-a608-4cb1-aa39-18fd2ff5cf4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d392765-e0a0-4811-87e3-e7180f4a7dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702a1e99-2a8b-4cce-a1c7-de1fbec1ed95",
        "cursor": {
          "ref": "5d5e01c6-4929-4b62-ae58-80abcfc0d841",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c682f126-0853-4af3-80ba-a4521eb68e42"
        },
        "item": {
          "id": "702a1e99-2a8b-4cce-a1c7-de1fbec1ed95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "13d8c3c0-84a3-48de-bddf-3bbb105c6342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbcaa31-9da0-4272-8940-7626f1404a5a",
        "cursor": {
          "ref": "985bc8cc-6364-47f4-8263-2dd2945e6a53",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a7903024-3e91-45d7-b830-979f0c864e69"
        },
        "item": {
          "id": "efbcaa31-9da0-4272-8940-7626f1404a5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0bdd7719-53e7-40e8-b37c-37e86b053347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a12ffe9-ad6b-473f-a3d1-e8b247c7c747",
        "cursor": {
          "ref": "ebe3cc77-1484-4226-8168-c471a47d5d3e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53dface8-5ad5-4e86-87fb-fcaa024f16ab"
        },
        "item": {
          "id": "8a12ffe9-ad6b-473f-a3d1-e8b247c7c747",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc6321f8-11b5-4721-ad97-aa3f52f750a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4888e8b1-1daa-46fa-ab9c-5ce322fe112b",
        "cursor": {
          "ref": "3fab27fc-70a0-45f9-b9c1-10062e7e6d86",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6609101c-ab45-480d-8e61-f7877a6d64f5"
        },
        "item": {
          "id": "4888e8b1-1daa-46fa-ab9c-5ce322fe112b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a87d147-4885-425d-89aa-c3eb01166d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef9663f-dfe9-4c84-9bc5-369463e88a4d",
        "cursor": {
          "ref": "ba46d95e-f321-4e77-b02a-01192bd992ff",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "600403f1-99d2-4163-b5e6-7268254844ed"
        },
        "item": {
          "id": "bef9663f-dfe9-4c84-9bc5-369463e88a4d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "114b4e74-0e0d-478a-a4c4-0650a32f2501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3bfa39-ed70-4b5c-87d9-b1dfbbfaa757",
        "cursor": {
          "ref": "c443f870-280b-4787-9150-27db42fecdaa",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82861b74-8dc2-48b0-ac35-51d75a6bc980"
        },
        "item": {
          "id": "5b3bfa39-ed70-4b5c-87d9-b1dfbbfaa757",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "811f6bfb-1c8f-4bc0-8004-13e62f991f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458c74b-2e8d-48d8-b7f9-ea797f50a171",
        "cursor": {
          "ref": "39ec4aae-0d03-4ea5-a95c-308af350f1e9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f7bfe1ba-ede9-4414-acd3-799a1b242f7f"
        },
        "item": {
          "id": "c458c74b-2e8d-48d8-b7f9-ea797f50a171",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "38d115e8-9182-4902-a3fd-a1bbcb80f6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8deab0-0e61-4a89-abef-18006efd9fad",
        "cursor": {
          "ref": "5a4fd644-fd87-4339-98dc-6889a79c8de3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dc460720-d477-4287-97a0-4eae091d1438"
        },
        "item": {
          "id": "2c8deab0-0e61-4a89-abef-18006efd9fad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ee2d07e7-6fbc-4805-988f-701d227aef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fef688f-7177-4dd6-94f3-b1c09ae083bd",
        "cursor": {
          "ref": "15e54e5e-aa9e-472c-85e8-4d3422ae91f8",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2be261eb-4d03-4ff3-b14a-5a4dc4b522a0"
        },
        "item": {
          "id": "3fef688f-7177-4dd6-94f3-b1c09ae083bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "97b4b199-4aad-4a91-bafa-07489f1630ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60c485-0833-4cd1-9e7e-e6232859c714",
        "cursor": {
          "ref": "8c8281d0-aa49-404c-b2e1-e4c7cb91c986",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "09b82065-ffff-40a7-b0a6-0e717b750002"
        },
        "item": {
          "id": "9d60c485-0833-4cd1-9e7e-e6232859c714",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e930033-1cd1-48f0-b82c-7ea2a95c6d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f9d83-f9a5-4015-be62-cbc16e7233e3",
        "cursor": {
          "ref": "d91626a7-04ca-4b0e-96f8-6c65048e904f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1c5d35ef-0513-470e-beb5-efc5089634f1"
        },
        "item": {
          "id": "5b0f9d83-f9a5-4015-be62-cbc16e7233e3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "186271cf-62d9-4a4d-b0ae-2a012189b8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50a7668-ab13-44a1-b3f3-335bc5a8ca2d",
        "cursor": {
          "ref": "8c510fb1-c5ce-434c-add8-bc4ee3f943c0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f1216c7b-b5c6-4a1f-9742-85211fc2cc76"
        },
        "item": {
          "id": "e50a7668-ab13-44a1-b3f3-335bc5a8ca2d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1556d6ec-b0d2-4c24-8551-d831afd2f1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0cc124-5a37-418d-b786-f2b3a2736ac1",
        "cursor": {
          "ref": "8579fbaa-2a1c-48dc-b685-cce01493930e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5da755e0-6a19-4e75-9808-590f4ecf3bcd"
        },
        "item": {
          "id": "9b0cc124-5a37-418d-b786-f2b3a2736ac1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b857b601-cbdb-441a-998f-bae1a2f0db54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5dc7f1-b57d-4ef0-83b0-bce72f1cb651",
        "cursor": {
          "ref": "a62a65e4-cf6f-41d2-aeee-bad1b094794a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f801ec7a-4f9b-4b3c-a739-94031fd61a5c"
        },
        "item": {
          "id": "de5dc7f1-b57d-4ef0-83b0-bce72f1cb651",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "627ccced-f40e-4e31-a8b9-c2032fcb4661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92912cfc-0d6e-4cb1-9b3f-683f64abe008",
        "cursor": {
          "ref": "9cbbcc4e-cc8a-4f12-a18a-ec899b130a34",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3d3a56a4-0e07-4ec0-ab3c-0fa10bdcf719"
        },
        "item": {
          "id": "92912cfc-0d6e-4cb1-9b3f-683f64abe008",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "44bd4119-aafa-47a0-977e-8974deaac2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b7c416-5214-4bea-bb1a-2031eacd8b43",
        "cursor": {
          "ref": "41d7855a-34f9-4c3e-a3d4-6a409a1ed21a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0e75b47a-fae0-48df-95a5-a555a50b7712"
        },
        "item": {
          "id": "a7b7c416-5214-4bea-bb1a-2031eacd8b43",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80d65d70-fac4-426f-adb9-fdd3ccda1d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90701076-6fcf-4e50-86f1-8eaf9274201d",
        "cursor": {
          "ref": "2f531c44-1861-4766-87fd-0aa819b41d84",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4fee6cfa-e547-4aeb-a707-a91b56bc9e88"
        },
        "item": {
          "id": "90701076-6fcf-4e50-86f1-8eaf9274201d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b4cf5cd-3b68-4455-ad65-0bf58804c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041a3766-8c82-4fdf-aa45-c19f0411c7ef",
        "cursor": {
          "ref": "72a8c094-9216-438b-9b6a-2ef360878c52",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66d66285-1e09-4155-93bb-80efe805255a"
        },
        "item": {
          "id": "041a3766-8c82-4fdf-aa45-c19f0411c7ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c43cf1e5-7a8c-4fc9-9587-1a35315c0c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7519c286-2795-4ed4-8b3c-35fde53e186f",
        "cursor": {
          "ref": "74d851ad-6a78-4035-ab0e-3a90d5b0101c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "52488a36-4022-47d5-a98b-8228d703e0e4"
        },
        "item": {
          "id": "7519c286-2795-4ed4-8b3c-35fde53e186f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ded341a0-8b66-434f-b7b3-730ac4094dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84d209a-e713-490e-8d6c-117c89b24f0b",
        "cursor": {
          "ref": "0fc9fd89-00ee-4c56-9410-bcedd22ba07a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "486225bc-a67c-4f8f-9257-b0b4ed3c8765"
        },
        "item": {
          "id": "c84d209a-e713-490e-8d6c-117c89b24f0b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e3cdd2f8-ca22-41e6-b725-089c240e8429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a41f6-9648-4c35-88ff-bfc173431c2c",
        "cursor": {
          "ref": "2e92d455-a382-41f1-ae01-68da16eaf978",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f8a4f352-1c3d-474f-a777-d27ba0a8f5b8"
        },
        "item": {
          "id": "af8a41f6-9648-4c35-88ff-bfc173431c2c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "352f1a20-9dc8-47f1-99cd-28f6ce75ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b549798f-1c18-4ff3-86f4-e8761e5fb544",
        "cursor": {
          "ref": "a0cd0a45-1f9f-4820-8c39-a131cf754148",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e994fbe-e9bf-4898-addd-2cc11ec6f313"
        },
        "item": {
          "id": "b549798f-1c18-4ff3-86f4-e8761e5fb544",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "efc817ec-c4cf-460d-b706-5f0e85b174c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b84b582-0165-46b4-b139-db4e041c9ba7",
        "cursor": {
          "ref": "49532403-fb9b-418d-9ca3-eddc2deab8d6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f2f00e3d-c2f3-40b4-af4d-b27b0b8a788e"
        },
        "item": {
          "id": "9b84b582-0165-46b4-b139-db4e041c9ba7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a6c4ac56-36fe-4444-8385-198dcb7dfa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c8147f-4909-47e3-81ac-60199d21c8af",
        "cursor": {
          "ref": "6e3041b7-3b1e-4aaf-a4b4-9551c268663c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "55f6056e-8bdf-4ce6-8739-721dae9be475"
        },
        "item": {
          "id": "58c8147f-4909-47e3-81ac-60199d21c8af",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0cd9d31-3a6b-4fcf-acfe-913eae0681c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b018535-27ab-4199-b306-a55efcf73ef1",
        "cursor": {
          "ref": "a5912011-f6cd-4f64-9193-54991873f490",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7d16a355-fd66-41e2-8170-770fc4278a50"
        },
        "item": {
          "id": "6b018535-27ab-4199-b306-a55efcf73ef1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3b576f7d-794e-4532-a910-823347339852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cb5e59-a0c5-4248-b0e4-4cfc66f23aa0",
        "cursor": {
          "ref": "b526c2fe-1e56-45d7-9fed-28ab96a9fbe9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "99a84a69-ec24-4233-bfcf-542c0e645b1e"
        },
        "item": {
          "id": "51cb5e59-a0c5-4248-b0e4-4cfc66f23aa0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "63640ecf-c901-4479-a849-efb17d0979bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6f83e2-7a1f-4020-bbb8-6e29aa7c8714",
        "cursor": {
          "ref": "e6a10c30-3601-4661-9b37-3e28db33afbd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6b7992f7-254f-4c0e-8c39-b3a29767d753"
        },
        "item": {
          "id": "3e6f83e2-7a1f-4020-bbb8-6e29aa7c8714",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "569c87ee-936f-48e0-a02f-1dd75a23d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45ab9a-3c1b-4790-a18e-79fe23708859",
        "cursor": {
          "ref": "37655265-e00e-4d92-945b-099663823ca2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "68ae0c36-c3fe-4a7f-8bc3-7be5b96002fa"
        },
        "item": {
          "id": "4d45ab9a-3c1b-4790-a18e-79fe23708859",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "78e794e4-16ad-4f23-bcad-b27686e006e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f474ef-fc5a-451d-b372-63542f2c0ad4",
        "cursor": {
          "ref": "ce54f1eb-1d30-43d5-a1a9-10c04f9a21a8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "30c33c21-2b6a-4455-a885-505f6a7a2635"
        },
        "item": {
          "id": "64f474ef-fc5a-451d-b372-63542f2c0ad4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c1fc53e-9c37-4d6d-85bf-b681e5de8cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6d2a6-c46a-4c25-9d56-f2ccef3b491d",
        "cursor": {
          "ref": "5c08a8fc-dc51-4cbb-8a01-768f591a40c0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b703abdb-7aa1-42ee-a8a8-2b99c1a307e1"
        },
        "item": {
          "id": "6df6d2a6-c46a-4c25-9d56-f2ccef3b491d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3318548d-fb77-4a25-8e6d-645bb3be8244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a871ed-272e-42a0-af88-5ea831e8d3eb",
        "cursor": {
          "ref": "72f76388-80e7-4cd3-841e-9bd7c2e6bcb6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "df37f07a-cd3d-4493-b3d6-8bf00a94f6fa"
        },
        "item": {
          "id": "75a871ed-272e-42a0-af88-5ea831e8d3eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "caedf884-7f8f-4a34-aa0d-c5ccd634be04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0001dbf0-7a3c-46e4-b9ae-d27136b7d5c2",
        "cursor": {
          "ref": "045e676a-66a9-40db-a86f-a1f32d2fb331",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d0b4717-0bde-46d8-b730-4b06cce20591"
        },
        "item": {
          "id": "0001dbf0-7a3c-46e4-b9ae-d27136b7d5c2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86c7a3f2-d14b-4f3b-b82c-f7155e919614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b76acc0-aa97-4503-ad0c-7d32ea151bdd",
        "cursor": {
          "ref": "78bc7d7c-647d-4a43-b754-6ff1ed4fb217",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "15dcf873-a809-4287-abd6-71335cfcaac2"
        },
        "item": {
          "id": "6b76acc0-aa97-4503-ad0c-7d32ea151bdd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df456c78-4bf4-4fad-aadf-9ea03bc9ff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d558c3-a8d8-421e-a0a0-3b8290cd4393",
        "cursor": {
          "ref": "3485e686-71e7-4c3b-9c06-e89990f25ade",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48c24b7c-7a8e-45a8-abec-de0f7a59249e"
        },
        "item": {
          "id": "b9d558c3-a8d8-421e-a0a0-3b8290cd4393",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "691b7828-c199-4ff4-8d7e-9e8fc264d605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ca24b-1f64-41b7-aedb-4f9840f2d340",
        "cursor": {
          "ref": "972d494e-3c30-44c9-a6b4-bcaa864f3ae8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "308f582f-9dc5-4e85-8b46-085c6123ad2c"
        },
        "item": {
          "id": "ec4ca24b-1f64-41b7-aedb-4f9840f2d340",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c44ddfe-0be9-43b4-a22e-22b5f6577fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc02c5e9-e030-44b4-aea3-70ade78a30e4",
        "cursor": {
          "ref": "2a7804a5-2fc7-45ad-bdeb-650083e333c7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "de116208-6fc5-49d8-bc8c-b9b7924a09a5"
        },
        "item": {
          "id": "cc02c5e9-e030-44b4-aea3-70ade78a30e4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fdd6f216-a725-4abf-9eac-d1648fac6af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bea94af-4e42-4174-867c-974895f309ef",
        "cursor": {
          "ref": "9230aacc-5057-400e-87eb-a5453e250f80",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d977e21-5e32-4feb-8fdf-a1e178953e0c"
        },
        "item": {
          "id": "6bea94af-4e42-4174-867c-974895f309ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30ef1183-7403-406b-aafe-c2b15874865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0c1fc2-e214-40ee-96e6-33fcb8643ff8",
        "cursor": {
          "ref": "9d1ad773-eea4-45df-8b04-98c22ffb50f0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8c1f43ce-c7ce-4aca-bfd3-f986c571c59b"
        },
        "item": {
          "id": "2d0c1fc2-e214-40ee-96e6-33fcb8643ff8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b11e026e-14ad-4b45-952b-338f4f285866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e7ce56-0af8-4edd-959f-16abad9b99e3",
        "cursor": {
          "ref": "51d8e052-e522-4cec-b2e7-c01a4ca67802",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e01e9c3c-a3e2-4494-87f0-c1cb376254d8"
        },
        "item": {
          "id": "a1e7ce56-0af8-4edd-959f-16abad9b99e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a350d4fa-e9a8-4081-bb41-0171510efb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3006389-1b19-4e96-ad7b-c939400ca039",
        "cursor": {
          "ref": "d3d3b5d8-5b99-410d-a291-2697974093e5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8be25cf6-bddb-4c86-b641-fff11882ab98"
        },
        "item": {
          "id": "e3006389-1b19-4e96-ad7b-c939400ca039",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0d431c1e-2667-47df-a427-62fa0391f4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133639af-fbd4-4e37-b3f4-2bc27012f993",
        "cursor": {
          "ref": "1b02996a-6cfc-4fbe-afb4-4d728458f069",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "35095f2c-9169-49cf-b205-9bd34ea87127"
        },
        "item": {
          "id": "133639af-fbd4-4e37-b3f4-2bc27012f993",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "01d408c2-0a65-4a51-90de-76cffb409c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c765cda-2195-4e17-9abc-b40dd6da1943",
        "cursor": {
          "ref": "1caaffa0-3fce-4274-91d9-1d47e49089cf",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61d21347-584d-48c4-af54-ab415644af0d"
        },
        "item": {
          "id": "2c765cda-2195-4e17-9abc-b40dd6da1943",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f5a9784-3978-4ccc-9858-407fcb0188b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c555f9-87f1-461c-b2a4-e39e840f72d1",
        "cursor": {
          "ref": "fef02407-be92-44d0-8c73-19be49e9a971",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9220e23b-5a3d-4159-acda-c78ddc9e9107"
        },
        "item": {
          "id": "d7c555f9-87f1-461c-b2a4-e39e840f72d1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f0493952-b508-4bdc-a3bd-5b172eaa4f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24cb780-63b4-41f9-bb89-88aeb659b27e",
        "cursor": {
          "ref": "7bcc8f71-bd18-451d-92dd-76cc3dc59bdf",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ebddf450-7308-41e1-bf06-ba80faa05b99"
        },
        "item": {
          "id": "f24cb780-63b4-41f9-bb89-88aeb659b27e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df8bfb69-7d5b-4bb7-892d-29b6021b22d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4e98f6-f106-4e7b-a008-95ec1d6855f6",
        "cursor": {
          "ref": "c0255806-989c-4e90-87df-d5b155655e6c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "820a4a55-137f-4b03-8cd4-d69da2db6d76"
        },
        "item": {
          "id": "fb4e98f6-f106-4e7b-a008-95ec1d6855f6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c9bcb258-9d4e-4822-94d9-fa2929e5f486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d087748-b215-4ef2-903f-0aa494ba95d1",
        "cursor": {
          "ref": "84291ec1-da63-4c1c-ae95-93155162fb70",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cd399454-cba9-4b9b-8704-108165c7ec15"
        },
        "item": {
          "id": "5d087748-b215-4ef2-903f-0aa494ba95d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8479617e-1db3-472f-803c-1b376113fc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f019a5c-5e24-47fe-af5c-e0ab7bf8c962",
        "cursor": {
          "ref": "e07dc03c-a640-4890-8b44-6074bc18cd39",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "779e9a7e-ddc5-4ec5-86cf-f19b651e6169"
        },
        "item": {
          "id": "7f019a5c-5e24-47fe-af5c-e0ab7bf8c962",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a10d68e-7858-4c49-a9f8-896f84f7afea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dc022d-8265-4bf8-85aa-540835d8a91a",
        "cursor": {
          "ref": "e7bb6229-3fcc-4929-929c-85b0b0f45cfe",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4eaba0bb-4b16-450e-b28f-a3f0d80db579"
        },
        "item": {
          "id": "d3dc022d-8265-4bf8-85aa-540835d8a91a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4755a89c-3ae5-42a5-a6c6-a68be1f663c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1778d23-7d27-4b7f-934e-85e114ff87de",
        "cursor": {
          "ref": "32eba402-9752-42cc-8ea8-ea13b6fad9ef",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c67f65dc-812a-4a6a-a55f-b7351a33e0e4"
        },
        "item": {
          "id": "a1778d23-7d27-4b7f-934e-85e114ff87de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e29581bb-633d-4212-a0eb-eab8356f8030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de81850-7707-4082-8fc2-355f28d12fb5",
        "cursor": {
          "ref": "ee2d7117-6fb7-4507-8b9a-3116093a7262",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "baa3fbcd-03a5-4b80-a2ec-36fba3d6f1a1"
        },
        "item": {
          "id": "6de81850-7707-4082-8fc2-355f28d12fb5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dff76bcb-ff5f-482c-8458-313b038036b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52de11c7-8bfd-4f62-bd96-f0b8772722ca",
        "cursor": {
          "ref": "5481fe0d-80a9-47a4-9ce5-f7142e9078dd",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eba77907-bc7d-4540-a14b-8ec0c5b5840d"
        },
        "item": {
          "id": "52de11c7-8bfd-4f62-bd96-f0b8772722ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dd8fe5e5-90de-4882-94d8-793369397715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde82f45-fa6c-4033-97e2-210c51dc9e75",
        "cursor": {
          "ref": "9e842003-bac9-410a-895c-5076c432fb0f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ad38f00e-6e3f-4300-a19c-81f414452c46"
        },
        "item": {
          "id": "bde82f45-fa6c-4033-97e2-210c51dc9e75",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d1a6c990-4346-4fe8-88d2-7523548193b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f00de85-a810-42df-9704-fb3978c6f69e",
        "cursor": {
          "ref": "843e4512-b776-4d73-92a4-3e2b9d79c8e9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4e902a1d-e4fa-472f-b780-5a701c14cc21"
        },
        "item": {
          "id": "3f00de85-a810-42df-9704-fb3978c6f69e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d66b1075-b7e4-46ab-a24a-016d676297ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac82f0-a2d0-4ad2-af11-f424d18f8fa9",
        "cursor": {
          "ref": "9b450a77-8c02-4122-9150-f030f3613aa2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f1ed6b82-11e6-4b47-b1b0-c259718a1bc3"
        },
        "item": {
          "id": "f5ac82f0-a2d0-4ad2-af11-f424d18f8fa9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3d31ecd0-c04f-4a02-8709-64ecf377f5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e252c1-84b4-47a2-851a-f0e89e6329bf",
        "cursor": {
          "ref": "b7f8e856-c410-489e-8047-a3b5d01af721",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6739549a-24c1-4761-a6ec-f82a79f4e8ab"
        },
        "item": {
          "id": "97e252c1-84b4-47a2-851a-f0e89e6329bf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2a4e5f58-c549-40ad-bd0a-f2577cbf1b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be5b514-973d-4809-917b-a8720f54fd51",
        "cursor": {
          "ref": "e35f2769-ecf8-4e14-aef9-5158b523e550",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2da7c62e-6796-4a23-abca-a782ef2d66b9"
        },
        "item": {
          "id": "7be5b514-973d-4809-917b-a8720f54fd51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "acee1702-d093-4064-a0ca-a5817c3c571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329b497f-96a0-4f7f-b1b6-eb4c85e8ea84",
        "cursor": {
          "ref": "f96618bb-9dcb-488a-9a38-dc150220df0b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e5f89fe-60af-4834-9958-7ffd16900bab"
        },
        "item": {
          "id": "329b497f-96a0-4f7f-b1b6-eb4c85e8ea84",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1f3d1f19-6f5e-4bd0-a88d-43fe2744586f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9af3733-3e80-46ec-989d-25cd2443e116",
        "cursor": {
          "ref": "c735d5de-95db-4838-8bfd-f17d75b2f3fa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2703728e-8686-4ebb-bc51-8075c790cd9a"
        },
        "item": {
          "id": "e9af3733-3e80-46ec-989d-25cd2443e116",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1dc76db2-2299-4917-bf98-1f4aedd2124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f304bc0-99e1-4e07-9318-ba664137653f",
        "cursor": {
          "ref": "27f2463e-05b3-455f-915b-e29cf8f88a83",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "90034299-9926-48e9-9945-e6679ad66979"
        },
        "item": {
          "id": "2f304bc0-99e1-4e07-9318-ba664137653f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c2943a1a-bde4-4210-b67e-490dba80de51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85db7d27-2b99-4f3d-af0c-cbbf3619a5c9",
        "cursor": {
          "ref": "e3368774-5546-4eaa-b3ea-095f4a2dc3ff",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e71bf024-08db-4ee8-840f-775b9d7eaac8"
        },
        "item": {
          "id": "85db7d27-2b99-4f3d-af0c-cbbf3619a5c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a142623e-f574-4eba-a1d7-2cfda388b7dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1b57ff-8371-4ff3-b60a-b752fab7f3ef",
        "cursor": {
          "ref": "03888ba8-a63d-4e69-a5e4-b708173609a8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "50a9a984-ae2e-4544-a7c2-7be7d2e76da3"
        },
        "item": {
          "id": "6e1b57ff-8371-4ff3-b60a-b752fab7f3ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "14932e7e-a6c3-4921-a1f4-d652c74ed4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807f9b9-3207-4e06-990b-80a9b6f41b88",
        "cursor": {
          "ref": "ab9261d9-404b-43b5-8634-c4e3941fef45",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9a13b9f5-ede7-42d1-bb58-5d6c4a7c1410"
        },
        "item": {
          "id": "7807f9b9-3207-4e06-990b-80a9b6f41b88",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b959c5e2-1894-4123-ab21-9bbe452113bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39b29c0-072c-41ce-a56b-c70c264057aa",
        "cursor": {
          "ref": "593de27d-9f90-45b9-81e3-a79dc2920b75",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "395d5eaf-d718-4a5b-8876-f26fdc17a12c"
        },
        "item": {
          "id": "e39b29c0-072c-41ce-a56b-c70c264057aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e3788537-12f0-4ccc-b903-d79ca4345beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733674fb-291d-4758-bb40-8b3c720017dc",
        "cursor": {
          "ref": "7c3d6957-9fc2-4d6b-a539-eba3860b356c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "013c69d8-9983-40f3-9637-72215e5b83f2"
        },
        "item": {
          "id": "733674fb-291d-4758-bb40-8b3c720017dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "63518870-d5ac-4872-8319-f3d3667f6c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029a7f7b-ced5-40e5-95de-2294e457a52e",
        "cursor": {
          "ref": "5e653b6f-998c-4528-bce3-c01d770752e4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "90d8074e-b107-4779-b075-bed7aee4d47f"
        },
        "item": {
          "id": "029a7f7b-ced5-40e5-95de-2294e457a52e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "42d34c64-7af8-4c80-b92a-0a044cd50322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c903e93-a140-4bbb-8123-7fa5a538aaad",
        "cursor": {
          "ref": "ffc2ede9-e977-452c-bbe9-52e02d0882ab",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5f790e8b-1f70-422c-927c-43eab367aa03"
        },
        "item": {
          "id": "0c903e93-a140-4bbb-8123-7fa5a538aaad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a312c135-722b-46aa-a590-9be36e070678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3065f3-1283-455f-8e32-da6b653c31c7",
        "cursor": {
          "ref": "b033d2cb-7b66-4010-8b8b-c4543b16740b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aa9be7ec-4fa0-4a2d-94e9-a29d2f739127"
        },
        "item": {
          "id": "0f3065f3-1283-455f-8e32-da6b653c31c7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f8935c52-47d6-465e-9e16-6ea2a8bb9d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420068b-a1d4-4e7b-a7ad-40ae2bc7cb68",
        "cursor": {
          "ref": "cd797bfa-7c42-4ba4-92dd-9af309becb19",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4b735bef-ef94-410b-82c0-3eb5b0d501a2"
        },
        "item": {
          "id": "4420068b-a1d4-4e7b-a7ad-40ae2bc7cb68",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4d09395f-326f-4cdb-8802-f1679230cd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b4a0d5-df8b-48a8-b1cb-7a8015c554ac",
        "cursor": {
          "ref": "f48a09cd-2257-4b2c-8ec0-35d7f3a7a064",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bd605f14-7b7c-4e83-8196-7104b3bd737e"
        },
        "item": {
          "id": "e7b4a0d5-df8b-48a8-b1cb-7a8015c554ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e574b9a-0851-434d-bf6b-eb332b72d021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f40aa87-84cc-49f8-b78b-737e28a0fdda",
        "cursor": {
          "ref": "ab7f8579-2ea5-4698-850a-7c33121c06cd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0da1ecc5-44a6-4bbf-9d9a-8467981387e2"
        },
        "item": {
          "id": "6f40aa87-84cc-49f8-b78b-737e28a0fdda",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a26ed6f7-9bb8-40da-8e1b-671ddcc27e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772e746e-e241-474a-b985-d2fa9cd70d7b",
        "cursor": {
          "ref": "ccfa4311-dac1-4feb-a924-f99b820f39e0",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5e7e69a5-d1b0-4491-b81b-f2022f67c1a5"
        },
        "item": {
          "id": "772e746e-e241-474a-b985-d2fa9cd70d7b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3b086086-19a3-47fe-91ad-0b32759816c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56e31f0-75dd-4780-be69-f46d5156cd97",
        "cursor": {
          "ref": "12296140-b278-475b-9590-ab0ac35fc0f0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c3861e15-28f9-4ba6-bd46-7c5da87cffa7"
        },
        "item": {
          "id": "c56e31f0-75dd-4780-be69-f46d5156cd97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4295517b-5e2c-4f7e-9a29-1b74948efbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20f2f27-c67c-4182-a128-6f3c1826e9f9",
        "cursor": {
          "ref": "60a1c0c4-a215-42a4-b1e5-216b5aa1c89f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "248ad0ea-5464-4954-8e9f-2bf8c437004a"
        },
        "item": {
          "id": "f20f2f27-c67c-4182-a128-6f3c1826e9f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "69bac8c8-59a1-42c7-8ccf-958d85c2e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc81137-da6f-4fba-8db2-4a3f67f72f18",
        "cursor": {
          "ref": "e2d59e1c-cdc9-4461-9a92-75a45651d6cf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cb089e37-1216-4db6-ae06-4a83f217aed4"
        },
        "item": {
          "id": "6cc81137-da6f-4fba-8db2-4a3f67f72f18",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5df58f85-af56-4981-839d-8a69c833fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619329c1-6a9d-426e-bbd3-4f150309abae",
        "cursor": {
          "ref": "39aaffbc-351d-422a-a90d-feb8a57d784b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bb3fda60-ed2b-482b-9345-8e2d0feac2f0"
        },
        "item": {
          "id": "619329c1-6a9d-426e-bbd3-4f150309abae",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6dc9d0cd-4be1-4aac-ab75-b4a7d882c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61124aff-f792-4f74-930f-1642f8b3f406",
        "cursor": {
          "ref": "cc4608d8-f784-4243-aadd-08ed62d05368",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3271e81f-2399-42cc-9180-d6ec252272d3"
        },
        "item": {
          "id": "61124aff-f792-4f74-930f-1642f8b3f406",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d967a6e3-3b96-4f19-ac5a-d86bb1a86b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d19c0e2-706a-44ec-97d2-d04a07d874cc",
        "cursor": {
          "ref": "4b244830-8bd8-490b-a368-868756553d97",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "48a1e755-6bd4-4642-92ed-fab70489e6bb"
        },
        "item": {
          "id": "6d19c0e2-706a-44ec-97d2-d04a07d874cc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "587dd311-6f3e-4d55-a12f-9fc5f0a0ffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8352adcd-15b0-4cb3-abbc-ef12bdd330a6",
        "cursor": {
          "ref": "b8efa120-f7d3-4c54-9043-f9c76b229319",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "14e840ec-004d-46b0-b308-0e79aa1f5b1f"
        },
        "item": {
          "id": "8352adcd-15b0-4cb3-abbc-ef12bdd330a6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c3011e7-e0c7-4930-9ec4-d4f679ac4a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add1ada0-bae0-440d-9935-782eb53a5d20",
        "cursor": {
          "ref": "68f82443-7b0f-448a-8742-8833367c943a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca1a652e-34b4-4981-a1c9-9af6abf81839"
        },
        "item": {
          "id": "add1ada0-bae0-440d-9935-782eb53a5d20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "478f4b0d-58f1-4d24-9367-fb68d51db682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af47b626-6600-42d5-a80d-9d50a4e0f362",
        "cursor": {
          "ref": "3bba5690-2990-4eaa-8f04-9f211e0a191a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5788f4aa-82ed-45b7-8a7b-bb911a0eba08"
        },
        "item": {
          "id": "af47b626-6600-42d5-a80d-9d50a4e0f362",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9181e6de-c86c-42bc-b14d-49942817d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee200f-e5ea-42dd-8e92-f4d5dbf3efe5",
        "cursor": {
          "ref": "358c60e7-8bce-4457-bd09-e9282324a677",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6b38c53e-158e-4fd1-be35-7777f2477f0a"
        },
        "item": {
          "id": "75ee200f-e5ea-42dd-8e92-f4d5dbf3efe5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cbe8dc8c-b26c-4d6d-8aec-0dfa79a373f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620179e6-c5f4-464c-bfbc-fa709f4f14d6",
        "cursor": {
          "ref": "57b7f4d6-7999-4085-a475-7b01baaadf9a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4614d7a9-13d5-4fd9-8dca-2f5e1efba590"
        },
        "item": {
          "id": "620179e6-c5f4-464c-bfbc-fa709f4f14d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2b46d481-e93c-4288-b352-8c04cfa41471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cef6bb4-66b4-4448-ae84-d9cb96813af4",
        "cursor": {
          "ref": "ba9f2ea0-0eef-4a50-a767-4abdf846eae8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "62329cdc-441b-4676-b079-1193594e3d90"
        },
        "item": {
          "id": "1cef6bb4-66b4-4448-ae84-d9cb96813af4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b5c15320-c8a8-42e9-b4f5-92f81331dd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4793a-884b-453f-a4cd-21a610fe219f",
        "cursor": {
          "ref": "ba673839-c809-4eaa-999f-73667f037a3e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1429483-d7dc-49eb-9a70-12b20a88a9fb"
        },
        "item": {
          "id": "5fd4793a-884b-453f-a4cd-21a610fe219f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c22ea1a4-dc45-4813-91a4-367f51fe2543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806609f-f3ef-44ff-89fa-4c07ba6756d2",
        "cursor": {
          "ref": "c90bb3da-814c-4319-b535-f9b311f05734",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1700e0c-7001-49f4-8f01-5ed248b7f1a3"
        },
        "item": {
          "id": "4806609f-f3ef-44ff-89fa-4c07ba6756d2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4d2333f8-bb8f-4b4d-b12c-980c426ee022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d825a4-466a-4f7c-ac71-876a6352fc0a",
        "cursor": {
          "ref": "27c55bfa-b24a-4982-b62a-901b77f8cc0a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b480a262-855e-4398-adeb-e61bdb22ea59"
        },
        "item": {
          "id": "a3d825a4-466a-4f7c-ac71-876a6352fc0a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57f63597-7299-4b62-ba69-a1fb16b84ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98720084-a929-4a31-a347-bb271526373e",
        "cursor": {
          "ref": "47fabebf-ff51-4e1f-b931-24470a4e2514",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "41a8b046-bf4a-4584-8531-f5797fe483b3"
        },
        "item": {
          "id": "98720084-a929-4a31-a347-bb271526373e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba452afa-801d-4a4a-a7ef-ffd1a24eb8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b8a63-4107-41c0-a10e-2c821149af7e",
        "cursor": {
          "ref": "be13a2b1-e37d-40e6-b57d-231afdc59dff",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf3dd4ec-ee82-44a2-ac34-4f6a9bbe8c2d"
        },
        "item": {
          "id": "ef1b8a63-4107-41c0-a10e-2c821149af7e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b0acc322-13c5-4599-be3e-b64752901c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753423b1-6fed-4050-a688-a219cb330b9e",
        "cursor": {
          "ref": "49794e5c-d6fd-429c-b50f-b3b230b947ad",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b7d9d7d-aef1-489f-9c88-40cfd8b85ca2"
        },
        "item": {
          "id": "753423b1-6fed-4050-a688-a219cb330b9e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "610de603-c088-461f-b8ae-34318a394fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa46225-e363-4226-8be2-1010b9527985",
        "cursor": {
          "ref": "53d57c6d-4be6-4b5a-90ba-efe0dc6d131d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d04479cb-1d1e-4f1f-8c6a-78d9c8759179"
        },
        "item": {
          "id": "4fa46225-e363-4226-8be2-1010b9527985",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "55362377-6c32-41c0-9868-61faf00edbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70edeb9-f03b-482d-a109-66c34130e48e",
        "cursor": {
          "ref": "886b01eb-8a6d-4b37-9fdb-86d32332aa77",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f9ad604c-d312-4c80-b4c6-ed1d49bca29a"
        },
        "item": {
          "id": "e70edeb9-f03b-482d-a109-66c34130e48e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "309091a1-7c9a-460f-87da-eb7b9adc7bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856cb83b-a834-4378-a62d-071a963dbc16",
        "cursor": {
          "ref": "25e70d66-fef8-4822-96bb-8aa63b9bfe45",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45ac5675-688b-4de0-9ab6-3a7dbef536f7"
        },
        "item": {
          "id": "856cb83b-a834-4378-a62d-071a963dbc16",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68d056fe-325e-4187-86aa-5f6be5b0175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a275c64e-d45c-4ad1-9138-d93c7a327aba",
        "cursor": {
          "ref": "03b3de3a-d910-4584-82d4-c4eb222d4f76",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4baaa3fa-a2a5-4408-b84f-17c425531157"
        },
        "item": {
          "id": "a275c64e-d45c-4ad1-9138-d93c7a327aba",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e5aea726-c1f9-453e-a494-9a1a039cddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de969490-480d-470d-8793-c41d248f7d8b",
        "cursor": {
          "ref": "f774f9d3-f401-4a4a-b75c-d66de460d014",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bd504ea8-503c-4137-a22c-28f350895b96"
        },
        "item": {
          "id": "de969490-480d-470d-8793-c41d248f7d8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3d0d59ab-1372-423b-95ca-bbbd9456ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398180e-f006-4782-8113-aab2ff8ec400",
        "cursor": {
          "ref": "cb1d6655-9795-4118-93df-89c1eacdd7dd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a8eec839-6e8d-4919-95a1-5093bdd0f24c"
        },
        "item": {
          "id": "b398180e-f006-4782-8113-aab2ff8ec400",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "10da53cf-3f06-42e1-8f68-1865fc196d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135abdbc-b6fc-424b-8ec4-ebf0d4bcb1ca",
        "cursor": {
          "ref": "0c63d539-2c27-4110-b0dd-6a958673dc9b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89bd8caf-e6a3-4c97-81fd-c01b87eb62ad"
        },
        "item": {
          "id": "135abdbc-b6fc-424b-8ec4-ebf0d4bcb1ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bdce71c8-8384-4f64-a04c-f25774be01ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b7a82-ceb4-4f69-81e9-645b36920e7a",
        "cursor": {
          "ref": "032f57a0-6be2-4f5a-84d4-aa2153051c19",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "af590a24-4a17-4c73-83fd-ee21ed265dad"
        },
        "item": {
          "id": "846b7a82-ceb4-4f69-81e9-645b36920e7a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "90570074-0190-4acd-b8bd-939e4cbf94d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee0bf0-46dc-4a02-bf67-93e7801a6eac",
        "cursor": {
          "ref": "8a72246e-cb5b-4aca-b416-c70ef9b11469",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4bebef4a-f94c-440f-896a-b9b7bc91f667"
        },
        "item": {
          "id": "94ee0bf0-46dc-4a02-bf67-93e7801a6eac",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f33ed6a0-b344-4930-acde-05375ea9263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3ac71-e64d-4561-b7bc-5d44f12f3ba5",
        "cursor": {
          "ref": "33f7cb72-7edf-4cd0-a22d-08380561105a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "01cafb03-eff1-4998-bafe-bcf476d71b0a"
        },
        "item": {
          "id": "5fd3ac71-e64d-4561-b7bc-5d44f12f3ba5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c1d25172-c51f-41ff-987e-ca4eaacb5fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776132fe-40e8-47fb-817f-4e3e798498b1",
        "cursor": {
          "ref": "8ce25df0-130b-401a-982b-9268b332837b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "db5cb253-b3a9-4c55-a18e-c0d2e64a63a0"
        },
        "item": {
          "id": "776132fe-40e8-47fb-817f-4e3e798498b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "562e5ad8-9971-4eac-a647-12c57d96c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e10e2-6061-45c6-914b-04c31776971c",
        "cursor": {
          "ref": "a0ce28d0-5e93-4ed6-b60a-fca901fe9332",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "53071a6e-588d-42d3-ad58-4e8e9286ede9"
        },
        "item": {
          "id": "cd4e10e2-6061-45c6-914b-04c31776971c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4c0e4773-e2ad-46b6-9faa-2abbef72891c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6be80d-c0da-4986-8f42-57272f3be4e9",
        "cursor": {
          "ref": "d823dd09-5c78-4d6a-8695-7da688892721",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "137a4201-9d3e-4ccb-8fbd-c118b801ddef"
        },
        "item": {
          "id": "3f6be80d-c0da-4986-8f42-57272f3be4e9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0b71034d-7699-4496-b34d-bc1da64e892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489aaa09-fd3f-4b0b-8cdf-efcf6ff40044",
        "cursor": {
          "ref": "e905cd5a-a1f5-4fda-b541-81cdca5e3290",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "942c41e5-546e-4309-8fde-b56ae64ea371"
        },
        "item": {
          "id": "489aaa09-fd3f-4b0b-8cdf-efcf6ff40044",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f59ef465-fbcd-49fd-bbd7-98205fdf78ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40640eba-bfa4-4049-856f-011706eda63d",
        "cursor": {
          "ref": "2a063fd0-43c4-4ac5-9480-5ac3ffb4efbb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c14ece88-6fe5-443f-b3b4-38197b3f7fe8"
        },
        "item": {
          "id": "40640eba-bfa4-4049-856f-011706eda63d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0173dffb-33b6-4885-ba26-29e70242d611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addc1f1c-5973-402f-a7e9-95779d1ef6cc",
        "cursor": {
          "ref": "562643c7-198b-47c1-958f-09154ec27f93",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8223d0bb-ec47-4d6f-8b13-0c4e0616184f"
        },
        "item": {
          "id": "addc1f1c-5973-402f-a7e9-95779d1ef6cc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "27a91424-dc2a-423d-9b5c-eb83b75969e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf9bb16-da21-4407-934a-b338fa0425b8",
        "cursor": {
          "ref": "922d0bef-a034-44f4-8dc5-2ec4820e00ae",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "57e8d808-c4ee-40e5-ba39-b5f8742e6d65"
        },
        "item": {
          "id": "9bf9bb16-da21-4407-934a-b338fa0425b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c7dec053-7487-46ea-8195-bd3b5b89384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f806a8-ff01-4e6f-b72b-3bd7307db266",
        "cursor": {
          "ref": "b563cdca-60fb-4510-97d9-faf49c822e92",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ba6aa7b4-1c09-4219-a1b8-1817e5e72037"
        },
        "item": {
          "id": "16f806a8-ff01-4e6f-b72b-3bd7307db266",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "92c01188-380f-4f0d-8add-6f0001d017fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eee044-b8c4-41d9-bf4e-53cc832e3520",
        "cursor": {
          "ref": "cf35ad8e-92b5-422f-bed2-679669af4e74",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f09c8dfe-63ab-401d-b824-268aed60e46d"
        },
        "item": {
          "id": "68eee044-b8c4-41d9-bf4e-53cc832e3520",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "73083479-ac15-4170-9338-0f6b6e1dadf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41418594-46b7-4ab1-b9ed-0b18b445e75d",
        "cursor": {
          "ref": "6ef2b9ee-88c8-4000-ab8e-d6ce72aac1f1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea7ecd7c-1db4-4bc2-bd6d-636efc950591"
        },
        "item": {
          "id": "41418594-46b7-4ab1-b9ed-0b18b445e75d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78638536-0d13-49d0-b079-8f8c332de19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781a1861-d948-407c-9bc7-0faa71f92b01",
        "cursor": {
          "ref": "87662289-39fe-4af0-9c94-0508a6954e0c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2e85f29e-16c1-465d-8d6b-8a700e7a2ba3"
        },
        "item": {
          "id": "781a1861-d948-407c-9bc7-0faa71f92b01",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "98de32e9-a45f-4224-b991-9a91e80d0811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56621923-710f-4ce8-8ac8-938b4292bcae",
        "cursor": {
          "ref": "5309f949-77f8-491c-ab90-98230311c8d4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f6e089f3-9f4d-42a1-932d-2cf4e910aa8f"
        },
        "item": {
          "id": "56621923-710f-4ce8-8ac8-938b4292bcae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d275e60-99d6-4cfc-b104-86aca21f4ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc13a29-84be-434e-9bea-367194691ff0",
        "cursor": {
          "ref": "ccd7c15a-83e5-4780-9612-6d06ef56632a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "462040cc-1ff3-4d81-a8f6-d652598fb7f9"
        },
        "item": {
          "id": "4bc13a29-84be-434e-9bea-367194691ff0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1026ea94-3291-41b3-837c-c13ca490e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db10ae75-3d32-45f6-8cc9-4805c1e22868",
        "cursor": {
          "ref": "daf65f30-a37c-4d82-b24d-cb29c2fbb6b0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44f34624-44d7-4069-a248-6b42628caf0e"
        },
        "item": {
          "id": "db10ae75-3d32-45f6-8cc9-4805c1e22868",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fe83d233-ceac-487f-ac66-a6a537cc40d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9b5e1d-3f84-4755-9c83-a8da493c484b",
        "cursor": {
          "ref": "c4214741-b742-4906-877c-f024945548b0",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ccd10934-c316-4522-96d5-976ae4942976"
        },
        "item": {
          "id": "cc9b5e1d-3f84-4755-9c83-a8da493c484b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5958b577-aae1-438a-a325-9ffbfba34421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b90ad-ddff-456f-94f1-357caeb8e682",
        "cursor": {
          "ref": "88bce835-5436-4a04-a5cc-33bdcde75b39",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f668df08-3edc-486d-91c5-3629e054961b"
        },
        "item": {
          "id": "ef1b90ad-ddff-456f-94f1-357caeb8e682",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "978e694a-da89-402c-be84-bbc680f8c037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5b6fa5-e936-479a-a703-8e1c4dab033c",
        "cursor": {
          "ref": "b8c80449-9d22-4ca1-8003-c40a080e2662",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10386ce5-2e71-4ead-9af0-724a6ce38739"
        },
        "item": {
          "id": "ac5b6fa5-e936-479a-a703-8e1c4dab033c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "07aa3342-b045-4569-b634-cabdc1acf5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a58dc9-ed5f-49f3-ae0a-b3e665b81719",
        "cursor": {
          "ref": "2d3c7292-baa3-4c3a-b653-6d818b793df6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd54d940-cf76-48bb-a023-fb59fce63512"
        },
        "item": {
          "id": "c5a58dc9-ed5f-49f3-ae0a-b3e665b81719",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b8263887-37a2-487d-824f-75598a1af1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a3fc86-622f-4da5-ba14-4c116309296d",
        "cursor": {
          "ref": "13ac435c-e24f-4213-b557-a59c2d18061e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0d9e548e-1398-412d-831b-b7d915488094"
        },
        "item": {
          "id": "a1a3fc86-622f-4da5-ba14-4c116309296d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "33b57ba0-52ef-4d45-accd-301d907f59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417da8e5-62f5-4f8c-8044-59318e7a2afb",
        "cursor": {
          "ref": "14098f55-3948-4934-81e6-2bf20a9a7275",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e2ddaba2-ba11-46bb-b98a-4c3f29fff3a3"
        },
        "item": {
          "id": "417da8e5-62f5-4f8c-8044-59318e7a2afb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "88aa51b2-f744-4b12-b2c7-c30e9460b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84572661-2ab8-4b56-9103-84cb279ce8b5",
        "cursor": {
          "ref": "cf9a55c9-4b37-4646-8766-0a60383293bc",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "076077a3-b3f1-4015-b74e-b4234b2ea557"
        },
        "item": {
          "id": "84572661-2ab8-4b56-9103-84cb279ce8b5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c716736-5682-4f08-b2f4-ce1c7f267ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3f7049-2307-4a32-8440-898db5c1ccc2",
        "cursor": {
          "ref": "f764d9c2-c733-4835-a143-2ce5bd1654d3",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "de169cc1-4f3d-4d37-816c-ac5e4fa561e4"
        },
        "item": {
          "id": "ae3f7049-2307-4a32-8440-898db5c1ccc2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eceec5c0-afc4-4f4e-9ff0-0e6438e7c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe1cb3-cde3-4829-95a7-ba0ee7c7b62b",
        "cursor": {
          "ref": "7589db47-17d9-42a7-9a8f-b25139af4919",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a1c75e32-bf07-4d58-88c1-f0ea374f1089"
        },
        "item": {
          "id": "4dfe1cb3-cde3-4829-95a7-ba0ee7c7b62b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0f864686-6862-4e6b-9f10-4d89333d3345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9a3e62-bd7a-459c-b671-315f9166ec93",
        "cursor": {
          "ref": "4e51953c-2e1b-4f20-99c2-56e4a990cb78",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6cc97ab5-2392-4194-9e40-edf1be32dcef"
        },
        "item": {
          "id": "da9a3e62-bd7a-459c-b671-315f9166ec93",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c5bc229-ecc9-4925-955e-8efe11a14328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d17cc51-6159-46b8-bdb3-1e4ba391e80a",
        "cursor": {
          "ref": "a7e0ac26-9aad-4015-ac50-14d46bf17cf3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "91e32713-437e-4c5b-a57b-aef5ee202986"
        },
        "item": {
          "id": "7d17cc51-6159-46b8-bdb3-1e4ba391e80a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4f71e286-d0a8-4401-95c1-b532f1a47068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af313841-43ec-4f32-9556-fa8602813e32",
        "cursor": {
          "ref": "a6f4b6b9-5a39-43a1-ae34-2b2d65335012",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "365f85f3-5027-4bed-b115-1970b651aa55"
        },
        "item": {
          "id": "af313841-43ec-4f32-9556-fa8602813e32",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5558ec6c-afab-450c-b092-9e8d28488911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbc4421-ace2-48bd-801d-573ebfd20863",
        "cursor": {
          "ref": "1f45d695-a655-4015-b2dc-54534babf2b3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f34fe7a8-671c-408b-bce8-085d4b9cc808"
        },
        "item": {
          "id": "bfbc4421-ace2-48bd-801d-573ebfd20863",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "205545a6-611c-4f28-874d-9b162faeafa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9073c4b3-8119-4dc7-84d6-779d02d5c6b0",
        "cursor": {
          "ref": "a7d04b44-9cc0-4183-ac8e-9d76875dd8e1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "789cb44c-53ba-49f9-aa83-543136153dec"
        },
        "item": {
          "id": "9073c4b3-8119-4dc7-84d6-779d02d5c6b0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "75719976-a0fe-48d3-9cc1-0bcd652d35dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0d9bb-3d67-45dd-bcfa-6778a5be0eab",
        "cursor": {
          "ref": "27368341-dedc-40bb-bf86-23447abc8049",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aba052be-a84c-4a54-a82a-557be3a8d6ca"
        },
        "item": {
          "id": "7fa0d9bb-3d67-45dd-bcfa-6778a5be0eab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e8f4abdb-cf4b-44b8-a555-13b68d71cce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d54ade4-7b36-4426-a3fa-c418ac75e5fc",
        "cursor": {
          "ref": "27ff71b5-4dc3-469f-9aef-e8660e507a3c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8e92ca0a-304f-4a2d-919b-0399f5c9a0d1"
        },
        "item": {
          "id": "5d54ade4-7b36-4426-a3fa-c418ac75e5fc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2bf45832-1f3e-4da6-8c96-8d8013c85dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa02ee8-0387-432f-ae09-3bf6c370c506",
        "cursor": {
          "ref": "c55cde07-6631-4cb9-96de-3638b7ed9419",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8abff6e1-fb63-432f-a520-dd07cbc926b6"
        },
        "item": {
          "id": "9aa02ee8-0387-432f-ae09-3bf6c370c506",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "af6bd542-cab9-40e5-81a5-a46a391e0d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2c58bc-2313-4d8a-8256-92f0f525c74a",
        "cursor": {
          "ref": "9c2ac751-3ab7-45cf-ab25-029551347a21",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b0ba69b-c1c5-42f7-8f5e-435080bfc4e1"
        },
        "item": {
          "id": "5f2c58bc-2313-4d8a-8256-92f0f525c74a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1440055c-1c3d-4935-9f06-da5b4d356e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbec153-2a5f-4b04-a9b2-b142a1dce2b5",
        "cursor": {
          "ref": "0cab9a1e-d5ab-43ce-8f07-7c0db27427ad",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "876fcc54-1c3f-4c08-af28-970d7aaf2ddb"
        },
        "item": {
          "id": "9cbec153-2a5f-4b04-a9b2-b142a1dce2b5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "708a8865-658a-4f6c-8ed6-864f6fba2764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaa51f7-f153-4726-9517-87f5f33ece4a",
        "cursor": {
          "ref": "8d54c227-9f68-4be2-ac40-c992858cdd77",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c59eaf6d-e612-4b0f-a185-e077b6cbfc07"
        },
        "item": {
          "id": "6aaa51f7-f153-4726-9517-87f5f33ece4a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bf2f5496-2c90-4612-9e35-c5a7100bc5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0096ff-ff61-4f31-a8d8-e648ecef2655",
        "cursor": {
          "ref": "14a34224-68c5-4e42-813c-e3a4f5e63fd9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "43e83308-1ac6-4e82-8050-50f0cdd5ecc2"
        },
        "item": {
          "id": "da0096ff-ff61-4f31-a8d8-e648ecef2655",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72cc6bb4-1ff3-43b1-a331-3fc770f21996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da58425-bf58-4fb3-985c-b9d88ccd2fdf",
        "cursor": {
          "ref": "84dff747-c06b-49c2-871d-7108e809335b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a158aaf3-7aca-4624-8dc7-fe4b719deb98"
        },
        "item": {
          "id": "5da58425-bf58-4fb3-985c-b9d88ccd2fdf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "be2490fc-b52b-4d98-9aee-7c4a707fba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5777339-946c-4b49-9c26-88e8d9c66a0c",
        "cursor": {
          "ref": "508e2937-c022-4d0a-ba71-c2144b335cd7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d227ffdb-275e-49c9-b401-c1e9ab3cdf9d"
        },
        "item": {
          "id": "e5777339-946c-4b49-9c26-88e8d9c66a0c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "df5595c6-e3f6-459c-a22e-384bfe823cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451dad06-6592-4900-aea1-49087411b014",
        "cursor": {
          "ref": "94495c86-80e8-45b3-9e1f-ca4b13db1315",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "54db0301-c438-4c64-8eaf-49018c113fd8"
        },
        "item": {
          "id": "451dad06-6592-4900-aea1-49087411b014",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ba2a6651-cb12-4927-baa5-483dfda8d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e9f31-8665-4de0-927b-e22946efd0e0",
        "cursor": {
          "ref": "ef88d5d7-86e3-4583-b72c-0adb09f574bb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e2dd7d99-d775-4983-8197-3e4d2252836d"
        },
        "item": {
          "id": "1c6e9f31-8665-4de0-927b-e22946efd0e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ddcef36f-0acb-48a0-a6c6-e0b23734bfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e8fa3-76e9-4f96-9569-8ce601bc67c0",
        "cursor": {
          "ref": "1ee3bcbd-346c-46ce-a0d8-e6c41e85aca0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2fd5318c-b340-4c87-9e53-b4b7a9aced75"
        },
        "item": {
          "id": "492e8fa3-76e9-4f96-9569-8ce601bc67c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd5c4934-40af-4bbb-a37a-297b5b8e9e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d5fe45-1dcc-4a67-a34d-4e9a2e7f8b52",
        "cursor": {
          "ref": "45c395ce-b5d4-4aa1-aad7-4d7eedada9b6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7ea03d7b-2351-4214-a510-4a5b05b3f607"
        },
        "item": {
          "id": "f9d5fe45-1dcc-4a67-a34d-4e9a2e7f8b52",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cdbb9d9b-140b-472c-a314-844e090b8d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d980aeb-c612-4c10-a3ca-0e09618cd2e2",
        "cursor": {
          "ref": "4769e7ce-8ff5-4f05-b205-a43c0c362e0a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4af9c21b-4f35-4d6a-ae16-d0e382b4581e"
        },
        "item": {
          "id": "6d980aeb-c612-4c10-a3ca-0e09618cd2e2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cac6b673-6039-4374-97d9-5d6af432fd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b997e83c-c436-4062-bdf9-b370f01db8b2",
        "cursor": {
          "ref": "ac7509cc-c2da-4eab-b73d-896a01167399",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0d6b0fe5-04d6-4025-8ee3-157780f8fc38"
        },
        "item": {
          "id": "b997e83c-c436-4062-bdf9-b370f01db8b2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7cf42fac-2b81-4fff-82df-b5aa32e96241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb086fbf-6dbd-4b54-830c-0bc3d7c9a0ea",
        "cursor": {
          "ref": "01c1b277-e654-4066-9556-94a02cba6ea9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f2a13143-268f-45c5-8131-1da34c56e654"
        },
        "item": {
          "id": "fb086fbf-6dbd-4b54-830c-0bc3d7c9a0ea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03270101-dd22-4e59-b46c-76f3d995486f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc02307-f5d1-4427-bbd9-f25e569001b0",
        "cursor": {
          "ref": "4954b489-1c14-42fa-b792-8ee5560a1c69",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9a99a120-679e-40dd-83aa-826aee0ef445"
        },
        "item": {
          "id": "3bc02307-f5d1-4427-bbd9-f25e569001b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b8cc7a18-65b1-496c-90b2-1a06a67461ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5cc411-18b6-45bb-b10e-f1514513174b",
        "cursor": {
          "ref": "e769e427-cb45-4470-9584-0f2b2e75a679",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bf9eed35-1e44-45c0-b119-f6cfee19eab4"
        },
        "item": {
          "id": "8a5cc411-18b6-45bb-b10e-f1514513174b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5605cc79-d830-4712-a28a-7c3f4cc2263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa4b8e2-cdd0-4cb8-bcf5-ede9df497993",
        "cursor": {
          "ref": "432bdbca-e948-4043-81c7-df5375dbb5fe",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e5174f29-76d8-4429-a745-ff5952258527"
        },
        "item": {
          "id": "6fa4b8e2-cdd0-4cb8-bcf5-ede9df497993",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6dbcd19b-7d07-4cbf-8478-53ce6ea3aeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc647d4-081d-4f02-9255-68163b1c4cb4",
        "cursor": {
          "ref": "ab658cd0-fabb-4257-bb5f-d26377ea03df",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d4a6ae83-ebfe-4041-98ca-c023cd064488"
        },
        "item": {
          "id": "4bc647d4-081d-4f02-9255-68163b1c4cb4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "15920511-28b8-41e7-91e0-b4d1094c85b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b0f35-0535-4087-b0ce-c9cdfd73e0ee",
        "cursor": {
          "ref": "77feb2ad-e629-46af-b54b-925794be0560",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "015a2750-fda9-4573-856f-828c671c8c08"
        },
        "item": {
          "id": "a63b0f35-0535-4087-b0ce-c9cdfd73e0ee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "035f1207-251e-41b7-be8d-915d27b8abbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074fbbc1-0c33-498b-90ee-7163893e87d8",
        "cursor": {
          "ref": "84b26ef2-615a-4e05-86d2-5d8cc268fe8d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bf19db71-55f7-420b-9440-1d2ad84c1311"
        },
        "item": {
          "id": "074fbbc1-0c33-498b-90ee-7163893e87d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "98ee63cc-7b58-4b69-9d43-11fb9390eeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c765f3-dc33-4f46-bfc5-220d858908b0",
        "cursor": {
          "ref": "9423986d-2558-4a25-bcb9-c787fbb5f3ed",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "77515529-7aa2-4baa-aeec-80ecc8ffb72f"
        },
        "item": {
          "id": "13c765f3-dc33-4f46-bfc5-220d858908b0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2a59cb2a-6709-4442-8819-6069bdfc85da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70193728-a505-4013-8003-ffe9667eeca8",
        "cursor": {
          "ref": "d3c9e29b-ce40-4ee9-9754-3a5e9482ddd4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e79a8fa5-e5fa-4cb2-928e-f1fb7f2042c2"
        },
        "item": {
          "id": "70193728-a505-4013-8003-ffe9667eeca8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dd19bbdf-8532-4422-8e38-0dcf4b13fe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c763ea-29c4-473f-a84b-cfb8713af675",
        "cursor": {
          "ref": "6c68abf0-50be-43a3-bf0b-11c83633bbf9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "40ea3357-0cf9-4669-97d8-b16015d90536"
        },
        "item": {
          "id": "a5c763ea-29c4-473f-a84b-cfb8713af675",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "874c370d-6fe8-4068-8183-6cde08798cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcee12da-3944-4b4f-9512-a9664e65e496",
        "cursor": {
          "ref": "4098cd28-5696-43b7-9e70-f244af687694",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dee525c8-44fb-4e9e-936f-5d8e6e16e7d8"
        },
        "item": {
          "id": "dcee12da-3944-4b4f-9512-a9664e65e496",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dcded9ce-b950-42d7-85ad-86a631f10aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b0be63-ce74-41d0-8371-80b8b21cb8f2",
        "cursor": {
          "ref": "50895a5b-988e-47f3-9c18-77916b05dcdb",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ce9b0a80-3f27-454d-a7b4-d22eb08a49eb"
        },
        "item": {
          "id": "04b0be63-ce74-41d0-8371-80b8b21cb8f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6875f893-088e-4d7f-8523-f44fbea9c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08776a2c-ecb1-4be1-ba52-9f1d83e46192",
        "cursor": {
          "ref": "42b54af8-8b80-4691-a94d-926cbbd1c192",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "33e4b54c-737b-470a-86c0-43756f57aba0"
        },
        "item": {
          "id": "08776a2c-ecb1-4be1-ba52-9f1d83e46192",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ceb55a7b-e880-453e-ba5c-55ee58c3b40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cdb579-8c22-4810-a3f4-40b3612b35c1",
        "cursor": {
          "ref": "81d8f9df-99f5-42fb-a350-66f3df505a28",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d54e2eab-eff1-401c-88e6-2d3ffe10c21f"
        },
        "item": {
          "id": "b2cdb579-8c22-4810-a3f4-40b3612b35c1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4ac77e5e-fbad-4d47-b83d-cfdb7166eb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e77ed-e735-4ef6-add8-86799ceef8c1",
        "cursor": {
          "ref": "923ba572-bd6d-4485-b190-3ff1c5f25a83",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "962f4697-bb95-4720-8b41-fc6740d858ec"
        },
        "item": {
          "id": "c90e77ed-e735-4ef6-add8-86799ceef8c1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8eddd416-eb2e-4ff1-a5ce-01d75e802a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ac585e-220d-4f46-ae2b-093a97b7e517",
        "cursor": {
          "ref": "60704b7c-011a-4698-ad0f-623244d45547",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9cdbe68c-f0c0-4552-8acd-1aecea46bf7f"
        },
        "item": {
          "id": "30ac585e-220d-4f46-ae2b-093a97b7e517",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1eb0a58a-12d1-4957-8807-511bbad73ec9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0514eda-24d4-484f-a93c-4ae38e061a01",
        "cursor": {
          "ref": "38fbb06d-3270-4cfa-a3f2-d2e9ad829ed6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d5e42f64-1e23-4acf-bb09-06bdf247e5fe"
        },
        "item": {
          "id": "f0514eda-24d4-484f-a93c-4ae38e061a01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c7631cbb-7be8-484a-92d5-a0cc1959d48b",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2c901-d67d-4a78-b6b2-c7f8a476c454",
        "cursor": {
          "ref": "5322fb9a-7468-4a5b-9d01-6bf117ffe502",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1e91a336-0804-4160-8b51-754e31f38a07"
        },
        "item": {
          "id": "d9d2c901-d67d-4a78-b6b2-c7f8a476c454",
          "name": "credentials_verify"
        },
        "response": {
          "id": "16f55e22-de95-42c1-945c-82a6786cbd8c",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4d2553-106c-4261-9457-b0e13000d048",
        "cursor": {
          "ref": "6f137dc1-cf6b-4048-8409-cbc73d05d779",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5e9f1819-69b0-4fd8-b59a-53e127f584dc"
        },
        "item": {
          "id": "4e4d2553-106c-4261-9457-b0e13000d048",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4447b483-3bbe-402e-981a-ede91410cb51",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c375ee-93f9-4839-9ad7-d1662fb683ea",
        "cursor": {
          "ref": "f5c075c2-662e-43fb-a7ff-37ff10178d30",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1c4e0fe1-644b-42a6-a312-0b2de3a5e537"
        },
        "item": {
          "id": "20c375ee-93f9-4839-9ad7-d1662fb683ea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "516e4133-cf7b-446d-a44c-25616266d182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c375ee-93f9-4839-9ad7-d1662fb683ea",
        "cursor": {
          "ref": "f5c075c2-662e-43fb-a7ff-37ff10178d30",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1c4e0fe1-644b-42a6-a312-0b2de3a5e537"
        },
        "item": {
          "id": "20c375ee-93f9-4839-9ad7-d1662fb683ea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "516e4133-cf7b-446d-a44c-25616266d182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cf639a-c4ab-402b-a16c-272e69a4a52f",
        "cursor": {
          "ref": "89f54c8b-69f3-415c-90b9-096ece8e6e39",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "82301a47-3772-4e8b-85e9-bb7897f51f40"
        },
        "item": {
          "id": "61cf639a-c4ab-402b-a16c-272e69a4a52f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bd2c8049-f421-4e35-8a38-1afd93e9dbca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1babb7-4d16-41c5-9272-09d0a1e4c578",
        "cursor": {
          "ref": "fe25ec1e-9433-47d9-abd1-41222e05a2bf",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "da358623-2a3f-49bd-b8a9-c6e267b93cda"
        },
        "item": {
          "id": "ad1babb7-4d16-41c5-9272-09d0a1e4c578",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4cf3fc6-d8a3-47cd-9659-b504afa8db74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}