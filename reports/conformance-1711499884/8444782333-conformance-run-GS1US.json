{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2eeff901-ab11-4d90-a1ce-c03dbb22b22f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "50961d7c-0a78-4b40-96e1-da1a4a8dff5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f9fe980-cc8f-48f4-94a8-73585f1d5338",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cefe048c-db5c-46ca-af05-39a6cf58493a"
                }
              }
            ]
          },
          {
            "id": "34b67ab5-60c7-4bd8-925f-ef68dc9210ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95ab294e-dc2c-4f7f-9626-38fad33560b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96526dcc-b2f2-4d55-9ba4-ded52f27d441"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e374ddc0-daba-45e5-b46b-f07f4cba3fe0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80401aec-84f9-47dc-a039-270cb5efc506",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38850a0a-fcd6-4d4d-bc20-a91986a9b808",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c061a205-6514-4f9e-bc7e-2b9c2ebf2d2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fee82045-e50f-48f9-ac5d-73bdabd17e31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0838d10e-5734-4a46-9ccd-c4c20a5aadd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13469311-a19d-4f34-b970-43d81475cfa9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1e24d6a-1326-47d0-973a-f9bec9f4bf5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1658693-1ff0-4dc6-a49f-6c19ead140b6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61405d01-5c89-463c-bcfc-fb967a4faba0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60faf73b-244e-4d25-ac30-1502652d4a9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b58fbdf-8b24-4e89-8a4a-3f30c14f5f89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "122d751c-a4c0-480c-8fa5-12adb71dafca"
            }
          }
        ]
      },
      {
        "id": "b9ec5311-aa86-4e06-9862-bde95b8a0378",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8429ba2c-d300-4aa9-a99a-8f2d0b834eaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d0347ab-6ec9-4ba4-a1fa-ae657bb0eea1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23337fa5-ffe0-4f9d-996d-2f0f7b286240",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f38a706-9678-472d-9148-1cd94acc0045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a7881a4-57fc-4cca-8dc0-343856cf323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de4c19-0391-4e77-9de0-3b927641abcd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1340c010-651a-42e6-84a1-473b5a0bcbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f118719-53fc-4fc3-8b99-d8a2a93b030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb680744-c7fb-4be7-aaba-1cc3f9687993",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968e89f0-6258-48bf-bc1e-44ea94974e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4119717e-ed5f-4e20-bc8f-431ca013806c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba0c933d-2f5e-42d8-880a-dba4691113f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "794ae246-9bbc-41c9-88c3-b98318041d99",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9defcf07-0354-4d26-a377-4646bbc1734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23e0adcb-3a78-468e-bc50-3c3dd8dd9e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d66dd61-482c-4f1a-be95-d03169d57c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249899ac-20f0-4afc-9d2a-5c1b30d3c64b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f04d464-d06a-44d6-b5f9-327551ae0cdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cd17d63-f1db-4098-a95b-42cb1163c1ce",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52ea1b8a-063e-4cc5-93ac-183aaee72053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60c1d1f8-6369-471f-badf-6feee8e5b7d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63eb4be3-2482-4ae9-883a-8b414e13a28f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5aa270c9-75d7-4197-bde6-2f1bca5c47f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72fc167a-84f7-40c9-b44a-bb805ad8e63a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9dc39145-18b8-449e-b092-cea6b50c31d6"
            }
          }
        ]
      },
      {
        "id": "1d27187d-a306-4adf-8c93-8ddfad7f0bee",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "036bab94-2b40-4f73-9e9b-8d2149f4a239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48fccbf4-7ec7-477f-9b80-f60e348be8e5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "622eb717-e9df-4232-b4b8-ea8fd512db3b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fe2bbc-ba50-4feb-8d16-935ab0a70927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566ede50-d716-4dbe-86d6-cb2dd5536509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7aa154-a999-476b-ad85-6c60a8657fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8914a43c-2a49-47f5-8870-c231f146a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b425ba-958b-4ad3-a8b8-cd99f33a7137",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6126df-1f95-4263-8cc9-2026d59cbc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8659cef9-ca24-483e-83fe-a460bc5547c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156ca41-13d7-411a-9982-ca85c2fbd560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29b6c297-5740-42a2-bf31-148f2daac829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01426f3-4a4d-4e44-96bf-2e1c05792cd0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60bba72-fefa-4299-8fff-8a47db1f28ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3882476-ed7b-41dc-9817-c630ce1ea9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d83083-1a90-423b-8de9-7c6760e84379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae239e72-7c03-42f6-b350-fe296ee3c9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119537af-76fe-4e46-8855-dfe5d82a7cc7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df4e1d2-37ff-4a09-81f3-11214e3231b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89534de-0883-4b43-ad21-c107c27ffdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b4039c-eeef-49a3-ae83-0c85041e243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac6423c5-2a3c-406d-9f18-59bcc44d902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91044bfc-70fd-4bb8-bef4-542d354530b0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a63d3a0-bc44-4085-b86f-25654dab7ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea706e9b-269f-4f8c-844d-b464ac8c9add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc7859e-9799-4870-a122-35597ce5460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78577d6e-1f8a-48aa-9f78-e2289c334eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce068a12-2b47-479f-8b4d-57bec1e39c70",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5dfe7d-6052-494a-8292-abf38a3c60ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec69b4-fce5-491c-8c4c-c0e366d9e611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dfcb3d-8f1c-4f28-9efa-566e932d1ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "912e737b-c8bb-47e3-8e1d-4db3dea9387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ec52a4-c9e7-4011-bb1c-edd4f351f72f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae567f9e-801d-4761-8907-f7efac5f0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6bdb97-d2f0-4686-ab9b-06f2a51a83fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9d3b12-e4c5-4408-9910-799cc47a3c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a3bb99-3b97-4715-aa46-c3e12e33f536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420ef9a-42a0-4f11-8ab2-9018bdb76e0f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d474b107-de29-4358-8cb6-6e926e52c93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efa7438-8e1b-4c98-959d-d200c395e6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2d0562-bfd2-4003-809e-2fa8e351ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d2dcc9c-d00a-4690-883d-6d79c58f292a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a815a529-9ca5-40f8-ac70-b97d47474765",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca131a32-c556-4039-85e1-edbe4af8ce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ec486c-3343-44e6-80fd-b71c17a510ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7225fa75-5858-4672-9d82-9dcfbf89bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d9abd1-3fb4-4afa-bdce-c9029d281469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c205d2c-a903-48b9-8c79-01f581fce7b8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410bbcc3-b089-4a07-a07a-d0e7017273f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a826a84-5346-45f6-815c-bc737982a7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae79ced-b694-4030-aa36-0863992f0696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c0bf095-fda8-470a-b3a3-14d6ea72542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744d393b-ce39-4a33-a865-b73ba262fb63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691be04-d9a4-40c6-aae8-778a8c11c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e86925a-6a69-44bd-a946-f40966be95b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e202c36-b8b8-4a6f-8a60-e185ae55e2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5bf93c2-8207-4c09-bc51-0abf19f22e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed740167-e9d4-445c-b22f-ef3e0b238c0c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eda231-0a7a-4dba-a3c5-e682b4d35baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867ba4cd-a6c3-47fd-9a0d-516d5bb78471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f901231d-dd83-445c-9be1-307ffb3c6610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2420ce92-de7f-41b2-840f-ab4e211ade2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decd8176-5e01-4579-9139-d67a21775e88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a83f3a6-5dc6-4cd4-afd4-2d322bda3640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f120dd-68f0-498a-afca-fb42f0171775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3c61fb-cd86-460f-a3c3-20d395a204f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bb1288-58fa-4b6f-b087-a98e15a444d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ffd461-3a6e-4fb7-bdd8-babf2a0575d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54afaff-082f-4e1e-b142-cc538b961915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2024000c-680b-4bbc-b3b9-098c7a40793d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7a174e-6a56-4159-9383-cf10026570b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90e3a4a5-aa38-477d-946a-f6da466ca758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5350485-5849-4127-a260-fa7f0afb39fc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdba9608-c988-495b-9bc0-ad1db3bc640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e9578e-e1f6-405b-aea8-0d32003d89af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df0bd4e-dd7c-4b49-9c48-12a148f6d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f128b06e-c643-4c6d-98ee-b003dd69f09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ef081c-4bdd-4b98-ac2e-6b02af10ddfb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c610423-7099-4ff6-8bd6-31ad2ade153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2465478f-5b10-475d-8491-c76e2f752f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9405407-cd37-4d6b-af53-7f7eee51132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a0eacd3-5892-4a69-a3a0-60d336936ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f899b3-6b3b-4655-b167-33ad2b02dbe7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2906218-817c-4967-98dc-13baf0cafedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91f3bf5-95e8-4ad7-87bb-49a453f33a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0006e0-8804-4fb9-8304-9cb087e4601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8f8bca4-c216-4cba-b719-326c72d70172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d10e21-7db3-4d70-ab42-13677c063fda",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e1c2cd-f216-4d27-a16a-51bfc322c761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f8bf91-7e89-4212-b231-43c3b9103453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f94805-37ea-4919-b28b-76fceda68f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ab0b6c-5338-4172-a4eb-6a0078b2508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e409b5-b69a-4c97-a9b7-e340a572199b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39baab53-4ef5-4a06-97bf-312f7615727c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7964422-46f9-49e6-adab-84c81022afb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3aa33c-770f-429d-8c94-92535f31e07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "876c6208-5491-4d1b-a932-b267ba5b4e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6a29cf-79df-4c84-8f33-a66b18c3dadf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9daaf71-cf1c-4086-9477-bf840af2f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2d2df6-71eb-4952-912f-1f6f0b677d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c3a9c9-80a2-4738-8f1f-f8a0ad2ed615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdd809a-fb3d-44fd-a5eb-8e44b9527cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861da59f-8992-40da-aaee-75a34ab6e1b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf5f74a-3d1a-4e61-924a-645905cc0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72b4036-8cb3-438b-ae1c-563759037bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0723394-79c5-4aa7-a044-b7a9e1582a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59599b8-f299-4dab-b1c6-a24394801e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123b0a06-cfa6-4570-a77f-1228cc4d1928",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef13eea-81c7-417f-88ad-f04865452c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc037d42-067a-4ef9-bcb9-1f8765ef8e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cc71f9-8ee2-4b89-97ed-d56df18b7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee24ecf4-650b-41b7-9ea2-d8d603cfc526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c679dc61-08c3-4ae7-84fb-d38ed67dfc02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b2ec58-5471-403d-8883-fe554be2e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d1bba0-1450-4342-9ca6-322be11b84aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf882bfd-d6f3-43cb-836c-a143f35ffd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ceac4d9-e81b-49cd-8f7e-d4d68bae989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca79d00-7326-46c3-9d02-02b3bbe85970",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dec3ad-53a4-41ea-9dff-228046595e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd14de1-ebe4-44f1-b79e-144d0e02c3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182f0559-44b6-4a21-9f5a-22f80878fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fec65df-2677-427a-a99f-fc1cf1cf9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b7ab1e-fb32-4d06-b15c-82fe373a6337",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2164e40f-4bff-4c08-8244-aad0ddc5dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456db882-435c-4f17-9103-1b5647e0ce1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4147b572-8291-4d16-8c6a-e7ece273a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "636572dd-9355-42a8-a806-29ad0da9e02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370e100-6fa3-4abf-9e04-9b6c8c3c0c05",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c269dc-9b1d-4ad9-a8b7-009cce3a0875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938c5ba0-f943-4cf6-8535-90892e9e88fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c145f5e-274c-415c-9e4c-e879a82e221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "979fb937-3e82-4dc6-9709-276114270701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c067c58-bcba-4a9c-85de-487439c495aa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20adba80-a79b-4afc-9eed-9ec071bcf06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fea8e09-ecb5-49a5-a54d-f66231f97190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8766d690-89a9-4357-8286-a86155927e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f42aff9-8ac2-4b0d-a97f-74217cb9aa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb30b614-0eee-485f-9736-6d6fb6e6cd01",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a673bdb-66be-4707-ae0b-76aafed59e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e1cb4b-6075-4a87-af9e-89384e8728db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6bf3f6-0bf9-4ccc-919c-224b0cbdce0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "416cf999-a355-4b4f-852b-0e1ba37a8240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba6ca40-7d3e-41f0-ac46-0dd9e3d58c81",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14091f49-722c-4383-8a3f-ef19342852ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee29d810-10cf-4a2c-b112-9db91551c650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eb6812-2750-4bd4-8403-cc9a93cd08d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "621456ee-8ae9-4244-a2e1-53b882588f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a590436-89d7-4b36-9636-2a4e505f16a8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5042cd05-92de-4bb1-9836-deb83935ebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d87b0cd-9d2f-4055-ab8c-7bc545bf8b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a53dd35-0891-4046-bbb0-cedf70c0ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c2e789-881a-45cb-b002-b03b182f1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d881596-80c8-4051-93e6-b3d941537d82",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c42c46-34ad-4894-b3a1-c8ad4cd9903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105b05df-6540-4850-809e-939de5d8ff05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd674c7-dd1b-4253-b94f-8719fee2d030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82bab67-a039-41ec-b465-19a1416f08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016b9834-05b8-4b93-81da-b511f5d5e53e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2cafca-b6ba-4bae-ad83-c6e09bb867f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c42324f-bdd6-491f-9dd0-59a315456e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988bda83-90a8-4b8e-8789-c7af5228c437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b39b512e-5f0f-4aa1-b49a-553c662f322f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1831a742-ac3f-462c-9358-f6db5519a81f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312777e4-0825-4d03-99db-91edc24eb44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd970c7c-f023-4d69-891a-7d50d0c9f681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18062833-fc08-4ac7-b532-38522f49cd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3adc11fc-eb6b-4689-88f7-1cf58baa78fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c0e7f0-fe8e-4935-9e17-0c15721d6e64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147f5ad0-6a85-4c78-a95c-1445fe377fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eb8d4d-6ba4-4639-b02b-056868696f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137926e6-d87e-4d16-9d21-0cf9cc199aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd812b8-1b02-4c10-88f0-eb289c77ca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d402a790-8487-4caf-a071-0d3d63f28ee0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba99fbe-b25c-43a0-b492-3260bf8fd525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78324c2e-d817-4bae-9fa7-337195f1511f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879eb274-9c86-475a-9950-f761d8c89748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a78c1f-d0a9-4d40-a2c9-77f49c73ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f73c108-05a8-47ef-ab51-2f7aa6c1b7bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76c1dec-b8e8-4862-a1ab-28004205307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "163b247e-1f0c-4335-ae93-4758a8698031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e1a237-87f3-496b-b4c2-14056485a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a431ef0-d260-4493-8915-01a63147f0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003ace0e-c228-44e6-a868-b941270bf810",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f9bba4-82f1-448e-b143-270a103bcc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f5583b-c9ca-4456-b8db-f8cf83bba729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb1ea72-3193-4d68-a4f8-6b7c620c29ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85f6a0c4-cf1c-4088-9702-ce3e2181e6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4ecf7-1aa6-445c-8198-5598d8a58d9f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e5c1cc-9e0f-41a8-ac6f-1f2456d79d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a1247d-412b-4c02-8d16-6d76ce4c6d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e9ab23-aca3-47fb-8180-6f57037676ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c98fb0f5-72a9-48af-8cbc-601cb5904899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8919a27-6338-430d-8125-d33cc95fd19e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820594db-704f-4e85-afa2-1d7e54f3baae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7257da97-5503-43be-b4ce-b55a8df6e206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad362a-ed17-48fa-b11e-d32ee316b1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3d78da-7257-4df4-82da-a03646aabbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeef28e-7efe-444a-ae3c-30c1e98fdbc4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0072ae13-acac-4093-91ae-6821de5f09f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfafc06b-6d8b-4d03-9bed-c725d27d1e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827ceb2e-e80f-4b07-9508-fe41eb18ffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7f76b0-bf0e-4b7e-a797-745eedb89209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c367096-d440-4208-a4e5-7723bb301458",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11726668-0c70-421a-9a52-ce4c8eada012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca61a1-054a-4df2-836e-8d4fd0f72b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097e7200-23a6-4346-afd7-496058b47d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "805bfdcc-a5c4-4937-acb1-6ab98ec9964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af405a70-f8a0-4049-899c-3c7807960b37",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc232c8b-d3fe-4d98-9240-18c26eff1f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc413b69-ebca-4589-97e3-e23c480e8349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f08caf9-ad0d-4255-b980-4b3be23c67f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "35cf0959-a8c4-4c53-9418-70418ce21963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f9db01-8d76-4dc6-b86d-57862840f5f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc940f52-e631-4f00-aea0-1a3aaf28766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d99bf4-7d42-4b7a-8dc8-df3a091dc354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1ef29-593b-4155-8153-fa63a9bf26f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58177ab-d563-4dae-a077-8b376c3ea965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e971be-6069-41be-8f7b-782c965a8d78",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fecb484-0a19-45ee-9924-50da1071aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efed6eb-efbc-4592-aea5-20ccab11254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f84d276-1f51-4e6a-84ce-174fcf51be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbe0a8c-9790-4c4b-a5de-889e351cef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35079a5d-d5d0-4bde-b1db-10a82ec0f343",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710eb0a7-71a5-4425-badb-1224714ad725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05ea65a-df21-46ae-bd70-dce40e74654d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13a3f31-e538-470a-953f-d9a561ce1eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b371aa-5416-4d62-b795-9e5bd08a3e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed528530-f01b-4ffe-9286-f24d68b15ba5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a730f7b1-dba7-4b5e-bc4e-9ca739d4e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b075ab6-7f08-463b-8c20-0405070f6dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef47c47-28b1-43b6-ac1c-082a28aa8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a498f859-4fdd-49da-b0b5-4ac7e3a63511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aecdbae-3afc-4328-a6dc-f1674e4e7a18",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ea62a6-56f6-47ac-82c2-cabc35e537f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b751ba25-ad53-4c0c-bdc0-a17f7d62e181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe9d7c-bf57-4580-a763-0a19e59033c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4b44d-4cf7-4db8-b4ce-14b7231ad28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62341605-9b65-4bd8-b56b-eea66d03eb63",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbcdef0-a1b4-4a3f-83ad-aa7fb2635825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e28bf02-10bd-4739-bd28-7f20487b8eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b8ef77-dacc-4bcf-8e1b-8f886496783a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d1ca58-56b8-4b88-b71c-b2824143646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3a4a61-073d-4982-8cf2-df5715f1db9f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe8c002-7d6b-4200-9b8e-96c851ce45a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ee615-3e0e-42c4-a0a7-cfa0248d881d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64b1ca9-cee3-4220-abf0-8c241b9f6a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "542d67d5-f49b-4814-b828-e0cfcd8337be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647a1944-e593-4eff-a22e-5bbbf9443632",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db0cfc-30e9-4aba-896b-f7b72a87ce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9832672b-29bd-4a84-9c46-e5377437b07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a301bc-91ed-4a65-8c6f-a25eedb231c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7777665-2cf5-4d50-b406-ce575f9ad61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9debdb-4f0f-4b1d-9b08-359b8634ec81",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e43af7-edcc-4992-90b0-f780632187c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4181f8e6-bf5d-4f81-99b6-ce480178a230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9828e7a-901c-4f1e-bfe5-9c3912f67b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eae270aa-8e04-42d6-8f5b-ccf4ea9060e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91699ff0-cebc-464e-8d39-c081ef4b6b40",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0593e7-d1e7-4975-8190-8ccc6ff7e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c3bd95-fb03-42b3-a6a9-1eb204a51e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4172b9f6-40c7-4d44-b0ef-a89f52210392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2e8f67-9187-4c7c-8123-39094abc9d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20d7766-4e0b-4704-bdb3-a23ca8aab2eb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa5356e-2356-4d53-a7f0-c2d6ea6f9273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecbe759-7ab8-415e-adbe-fb433a3c3035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5b3b97-714d-4911-aa73-da595433d690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3ae373-81d2-48cd-9b12-b7c46a0ccffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dab035-629b-4116-8d9c-bda3347ccc45",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52eac8f-5ce9-4f25-b61f-999f08c4a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5390e44b-fffd-46f4-ab82-e5b6310c285f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abffd295-62c6-4d40-82e2-338bb1f9f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef4b405-56ff-4194-ae24-7ef10ddf30ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5f20a6-8c7d-4c37-ba91-362608324d8c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a375e34d-9618-4896-9e2c-b5d884189447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807ea26a-4e45-44ee-a711-0528ca8dce98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e89b1bf-0e1d-41a1-b30f-90d3ea982db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb7138a-e84b-43bb-8a29-80e92aceeee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dac8e36-d180-4e41-995b-f48d4e3e2a5e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56431856-8d36-4c1d-95e0-c02be2fd3f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b74e42-d46a-415c-8840-c1f8a3b747c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3f0e0b-a29a-48f7-a35e-942b63354cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d94d9c9c-ed85-4707-b857-39c66a59a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32cc524-470f-437a-a28e-dfb5aa027e4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e93909-f6f2-44b2-82f6-15500e955cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62114054-5874-416f-85fe-89177734b0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2344d9-ec3a-4e83-9fc9-435079e272ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4f668a-6994-43a7-84a5-ef0e737d20eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdbbe5b-89d4-4c1f-8591-bb0c6c406331",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955512d2-ad6d-4ef0-863c-9d5600448979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa95a1b-d424-42bc-8225-3be28ca0b146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ffb22b-6198-49c1-baae-73b39e61fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c588ecc-7bca-4485-80a5-eaf192737fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe066fe-b00b-4335-a983-621582e9ed0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677ae5bb-61ee-4fd8-aeaf-1419da8577b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14e4beb-49e1-44c5-8651-640f5ac91ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8faa99-b925-488f-8ae4-7d3d45786542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad80447-f32d-414f-ae66-9f1550f336b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f13b43-974e-4a35-a1a1-ecbf4aa77588",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0eba2d-131a-48d8-a221-5b546b1c45ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fc9063-4a31-4344-9256-0737d6643464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd7cf27-20f4-455d-8c5b-47d66fd4926c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c5ad72-21dd-451e-82ac-560ae680de39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d59f22-caad-46b9-9d1d-667c3953250f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c930e6-01c5-486d-9bf0-e5db3a27e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cdcab2-0535-4412-b2fa-b40d4c86c280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d609cb6f-d1c9-4682-8f38-084055f76383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2d5694-4d71-4515-9cbf-95395033baca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0730bafa-1e82-4eca-aafa-8f73c6b43939",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7fa208-a365-47ad-b27f-7f010bd4d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2e05c7-2ace-4891-a871-ccd62c59e659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa72c0b-64e5-4766-a0fd-bcef91bd72b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d1bf0f-da4c-4bd2-930d-6ea7345ebc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235c76e0-3e92-422b-8bce-1b52564200df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf07275-16a6-4c1d-894a-7d5a0207c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d20bf-95df-4d0f-86ff-afc55e05cb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bccbdf1-df7e-4cc7-bdbc-ae137987ba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7592d0-1a8d-49bb-9ac2-4600a1f476df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2155463f-c144-4fa8-9a1c-fe45b73fdfe8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05185900-6ad3-4869-9821-377304049403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a254b7-e750-4315-87e1-ebd42d13038b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc766a0c-5acd-4fdb-8d1f-c09bf64a1101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee84874-62e8-4c38-9980-86ab14ec02fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374f56e-ba72-484d-86ac-c68dbc136252",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a15eda2-219a-4309-8afe-741c66efa87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bd171e-c260-4f2c-b2f9-ab1bfe9bb322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07efbc2-2376-407c-b1b7-a2f2efeee1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bed4dcb7-1073-4c02-a7df-6e6d302026e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777c96e2-1334-4984-a2e7-96e09730bab0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dcd4f9-8b47-480b-a2c0-3687c8146db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b985292-2c06-4e61-ae38-e61ab7fee121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0be15-47aa-4b15-956a-0593e28064c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8d37ee-90f6-4a45-9600-c2e6f1ab5a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9115209-fb99-4931-8830-6e94b98193d4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3565451d-890d-45b7-b262-b0b1a5cd5004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cfa891-7564-4505-910d-33a6714e618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fc7d34-981b-40b8-a9e8-bd47a918ba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb55bb07-e564-46b9-aa99-eb51e3de8853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da658c-4d94-48bf-a2bc-6db891bc9dfb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebe4964-bbc3-4934-abeb-78013ca937a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6412be-3658-44f7-a59e-e7816ba2db47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3d54ac-5f51-4e99-8a5d-ff8f41eaf642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1422911a-7fec-4396-9efe-d56486f0b26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae961de9-77dc-4473-a47d-5b1acd706876",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eada61e-b4de-49eb-b0d4-3ebad4c7fad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4801f7b-839e-4d3e-b95a-3f92af4d4889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0bbcd8-af85-4974-82e3-94ad5d3bda4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e098d4-f400-442d-aa66-bfd4cb06f750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353ff53-b3bc-4bec-9383-b049de826287",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08436724-3cc2-4aef-9415-e618b7af34b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e290a7b-4c0d-4a6a-bb95-d5ebebaad699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f49379-3410-45f2-ab12-5f330780facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fef7f3a-49ce-4519-8985-005e975e1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8f3abc-1c8f-4700-86c6-257038dded02",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e338558e-4f81-47a3-9f68-fd9f1ab7d99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5721ba99-92d9-4085-b8b1-5a1e674fb6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89330864-9d9f-481e-9a2c-276b7c04447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a31b8ea-4041-4187-8d4d-d7efc6cc4607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254cca4-9fa5-4f59-b195-76a0bca9403a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05864a-4b89-4887-9029-c34276b08133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c65cc3-bfb3-433a-a1bf-72b2e3d5f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b80664e-48ba-4faf-8241-73943e2d501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4185174c-c1d8-41c9-b6d1-cfcd6cc6c414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916b0d60-a9c3-4c21-ba6c-216ea440a657",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8839da-fcfe-4546-86ca-5e82cf56bf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1c6d3-60f0-4a20-bf94-6b5e88cd2c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c282d-82cd-4064-bb3a-4e0feb104d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd1a075-ceca-4431-a849-d3603c192913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a6962d-c882-49a9-82d8-a5fce6abfcde",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dec799-adb3-40d3-bb0e-1ec8323cbc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1fba9f-0ca1-4fcd-a5ec-2f08d07dbe6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f966587-24c9-4905-8111-0198db71fcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "defbdb48-9956-47d0-bcec-245da757ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a3297-e331-4dd1-bb8e-6a54194ca16d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c309ab98-b5c0-4dad-8d71-4115b89f89bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362a737b-2d1d-48ff-98e9-0e6b969f6915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5257eed-730c-499a-91bd-a411b318b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c218617-ab0d-49d2-94c8-28c357d6c701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a59be9-9e3b-42e3-b24a-563ac2f9cf9f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b018e4a1-08a0-4f81-bbc9-82930405d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4173df-4d14-4e70-a02e-489d3ba80616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c240cc5-dd96-40ee-82dd-0340ccce77f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8746912a-ffcf-4bcd-ba98-1ef820aa96af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e87f4d-4927-4aaa-86e9-3d07aebb9f41",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464f337a-22fe-4019-b972-e54e03274ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef74fd4f-5d3c-48e9-83d2-3a0f46143aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a421a08-a50c-4ff1-87e2-e1a4c6bcfb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66849f19-6ccb-442c-a4ff-24b5d9c3b0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99876018-19d5-46b9-8d57-680bf6d868fd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd5fc08-dd40-40fd-8b68-95a92dbd5d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e26243f-ca1c-439a-b8e9-ff661f16c1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff58fcfa-7988-400a-8bdb-ea7fff1efe63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c501c3-efb3-438e-832c-e2fe08c43001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf5e28-71b6-4c18-9d78-d6ee3951a83a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226f289e-1d35-4dbc-beec-f4218adabf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa14172d-9243-4be6-be30-7299050e0172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a219ea-b63a-4771-af6f-29d49f5a23e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3204bf13-4c37-4c21-b612-c7c304db5dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988dedcd-dc0c-4896-8b88-8d373249ee94",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30798b22-755f-46ae-9c8a-bcbbb065a58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a78aa5-7740-42bf-85cf-4a742146a249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c45ed0-2796-47c6-8216-84e937540cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7f3d11-fe75-42b8-af6b-9be25decac72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ca5cf9-e58b-487d-a1f0-877d56c7dcb5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f8670c-e009-4d72-b0c8-9c1d7f5fef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de768cb0-a142-46db-85d4-f0f6efa8b95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a940ab34-e1eb-4309-9776-5492fa283c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "728e95c9-cdbd-4931-b629-914b6cc6c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f690a51-8670-4f4d-bb39-1e847684a8c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4eaaeb-3fb7-40c0-ac93-c2d4d1014e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e8cc3c-a46b-4768-95ad-310566c6bc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a269c261-934f-4b7e-8d0c-2ac3a86d8c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b86533-c66f-4f3a-ab8d-3c5bd980d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5515a10-7149-4256-8da6-3c54300fe809",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7960b4-e1f2-4a2b-81b0-d5ca5cbd3e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241532f6-1f45-4f04-bd2c-1743128459a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757dc207-e8b3-4a92-b5ca-9f8ea3568500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8411936d-a1bc-4499-80cc-7e0fea634c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c598fae-0009-44c8-8a1a-88adc23c32ac",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da907112-f3c2-4813-b7dc-4f69d829a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef210e1-210f-4e8d-b899-7b1431e8bb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6411c6d6-8300-4802-a311-17b26d4da71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f53da41-51cf-4498-9ba9-bec12419f9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade39e75-c4d7-4a32-97a7-e05ca80177e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54825fec-1692-415f-bbb1-3b0594c972ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76302d2-a99a-4f9e-9306-54d21eaa3a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2933ff64-f0df-4342-b57a-e7fe6cfbaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf18a33c-f49e-4aa8-bd22-2c6c6056498e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b318ea-19fd-45c1-9032-f8753a251797",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4111f95b-689c-46b7-8099-ac01c8335ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcd763e-f8ce-4b7f-bb29-51e48e265099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198efbbf-bced-4b6e-98de-51bd9150100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a911dea1-894d-4b57-b390-a2aacf728f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9321b03b-d044-46ee-9359-10dffc284ba0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaf6227-6a43-4942-97b7-60a79fda8a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db0194c-d06c-47e2-841d-dacce1a5726b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f115f-1327-433a-b0c6-64c6e0058b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e8a8a2-f125-4048-a2a9-20537a2e08e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489f2e9b-4fa6-407a-a4cc-91e6ad85e848",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eab974e-5fe6-433d-858e-a3502bfccf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5299ee2-2e86-4fe0-9e05-7cc03d8e371d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb6a90b-eae3-4d4d-b14a-ce542b849297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf0f70a-381f-44e3-8d07-9773254b7187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f4843-5b7a-4f7c-a00a-13427d777a50",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71910cb6-bfa4-455d-bb55-bdb6f80912dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89bae51-db62-4d4d-941d-cb91615df21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d1abb-250a-4e6d-859f-96b3645dc3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f30edb-97fa-426f-9d88-54dc199cf102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6f8d79-bc7c-47b9-9046-cc3550cd6e7d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b7fea-2399-434f-b5aa-3393faec244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0670c79-6cd3-48e1-8d08-84c33474ee90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e583d-506c-4d48-b7b8-435a82bfe595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b064d68e-ec24-449a-b712-a5e2a70c7434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cea08b1-4813-415e-8e03-d7ba2450f6e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c614c6e-e604-4925-b88b-d9566181112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42ef54a-b0b0-4c5d-9321-099684e6f95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c10cc1-6710-4872-b157-31605436ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9025a1d6-53d8-472b-abe6-f90eddcce3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1159741-e16a-44ab-8b24-e914ebe4188a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9b26a4-313d-45c9-b387-4e1dc4b17f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2ae55651-7b5c-42b8-b020-4d74b04ebdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e7b362-e8ae-4ea4-b2ec-231454a9dc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04353b94-3ba0-4b59-92b6-a9d4dad70df8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f86c74c-dc47-4f31-8172-5adb924539ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c243fcea-0ee0-46fe-87c7-f088acde6cac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af40ef6-1454-474f-9cc1-7aabb6f99e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb39e636-49f9-49fd-9c76-e2c91a0cc052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da4e362-0e73-4048-906a-35cd58409f20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a37912d5-ba48-498b-a34c-985f080f4d27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83a12f23-c73a-4843-97e9-f7924d1e296a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1211b858-6f1b-4d26-98d5-acfd17860c4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "517a7fa1-e0da-4dd8-ae5e-c1806d5f7afd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f700ffa-25c4-464c-a0db-d85d410a7e94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b184bd82-1f0f-4a11-bc1f-8f730583eb7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b9ab66e-e440-40bc-9ba8-699a74ce14e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45ed282a-2791-4838-be02-2aedeb4c4807",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "daa80948-a3d9-4e26-a343-0f566d9627f5"
                }
              }
            ]
          },
          {
            "id": "f9a5a383-6605-4b13-88ea-b94774fffdd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0802c8b-d691-4bef-a8ae-a77ea82d3e91",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "61261ac5-a037-496e-9218-494ace2333ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a441de4-8bc1-4295-9a5a-68cfdabd7759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d3af3d5-001b-42b3-9040-426b289cdc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996c33b7-d998-4f3d-9276-9cc0497d33b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2bfd74-4682-4c46-9130-b63dde440792"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71ced866-ba78-4a26-8f8d-4df31b0dc72c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d05338b-bd54-41c6-a256-11c49f437567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b1ba2f2-63ee-42d2-8e24-44e446c188f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0807fabe-171d-48d2-b689-e6b174fa8f48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82b69a5e-5aeb-4ab7-827e-726ff10f4a32"
                    }
                  }
                ]
              },
              {
                "id": "fea31627-3be2-49cb-8003-6175f8a9b634",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe49adb6-1e8c-4721-8e24-daae9ed844c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80bed897-062e-4f9a-bfd7-0c4b43e3b744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13a21505-b4f5-4ad0-9f1d-1935614a1080",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "934393f6-d8ad-453d-a809-c4c0362e9af9"
                    }
                  }
                ]
              },
              {
                "id": "92ad9ae3-8800-4d06-be94-63a3b841a928",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57ca8dda-068b-4ad3-af79-d4132d0d6a8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fac778d-e098-46cf-a139-908bbc50b599"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1de9fe-319a-4a68-b7cd-1d8c07e0d2bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd88d83e-cc94-4d0e-875f-511274e9bf3f"
                    }
                  }
                ]
              },
              {
                "id": "df9ca55e-27e8-409d-92f7-8ebed5913ed9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4373cb8-703f-40ea-837d-51fc13270a60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc204567-b232-4317-abb4-4330aa494328"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3396ac-6d69-415d-8ce8-499c4bd07115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "54c4073b-0b52-4dc4-b75b-87d0057e829f"
                    }
                  }
                ]
              },
              {
                "id": "811da555-5e41-48a8-990a-d84ffb9e6ce0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a5e8293-9b29-4bad-886e-a924b2d9f9fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f21b2dc-32ad-4bfe-ae97-1c43b02fd911"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40907c4d-3573-41f2-a685-946acd23da2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "80c4ebe1-878a-4480-96c3-90e650e041d3"
                    }
                  }
                ]
              },
              {
                "id": "0325ef0e-e3f6-4762-bbec-08af7853cdd3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a4b317-b0d1-4ff7-bda6-046975ebb938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "814d71b5-b0a0-416e-8fa8-abc582e1209a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d259e73f-16a9-46ad-b8bb-457da835ea6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5c48a0a-9ede-49fa-9d49-aea3ce39256e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "234dcb8e-915e-48b9-ad91-17e05b35f60e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1320969-1f6b-43c1-a886-23761a3aa63c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e45c787-f46f-4826-a095-e6b87a4238db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "704ae874-468a-4204-a4a4-2eb8ab9770aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ca184d1-3f8e-411b-aa67-cfb02e5beace",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37abedb0-5465-4648-8a44-60f7d35eae39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e523709-dc66-4608-86af-885385197c81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a4c5ca1-b2c6-48bc-841e-f3950490d8dd"
            }
          }
        ]
      },
      {
        "id": "5467925c-ed02-4a3d-8390-9bacb35b3a75",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4702be00-d4e0-418c-a93a-303a0be125e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "898b18ab-162b-473d-ac7e-52b9a64b33f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc2b14e3-62e9-43d0-93c7-49dd2cc91ed9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f83e3a6-21b8-4ee9-b9cb-9ba081e0d2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c733fcd9-0032-4ad6-aac4-41b73425d4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04d14cb-f774-4616-8aab-f129b5c3c384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1d1181-990a-4dc4-af08-affe6d972075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9822f-ba62-45ab-a513-5d6fdc078690",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d65587-78e8-496a-ac49-ee993db47c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529b152a-e722-414a-bea1-7e50452e705d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fd00ec-6e50-4ff3-bb4a-e9900008fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a5548-de16-4cc7-950f-503136b85bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdd6a31-6fe9-4279-b836-a4750118919c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e45dd11-cb18-4cfa-9114-96dcf4cb10fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e61484-ac49-4e25-8394-f091acc8ba97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c9d5ce-9017-4f8c-8e0d-cbf96f0da198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "033c628f-07b2-43f7-ad03-e96f77ce1ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5961cdf-9391-41b9-9319-a73ff8a95265",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67c49a7-17bf-41f7-ac19-153a930eb206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac192d8-5072-4d60-b30a-69f18c310859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c336345b-a4de-4428-b55f-e5f11c887683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1e2acf-67e3-4542-9917-0fc2fe4326e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b755cc8a-af8a-4932-b56b-181ee99f865c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daab47d-c292-41ee-8661-fb3b5403c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e801082-7d91-4fc7-8772-78728b5270d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e26d5c-980a-4ca4-9c2d-e7aba5113465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a5a53e-69d5-4eb9-9825-b8a10922e54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a82080-4a4f-426d-ba80-c63a67a9116a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3f2993-6848-4cb8-828f-551a6c3c464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f16850-1230-4cda-a56f-84ec05c63760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af94ac-1ddb-4306-be17-0045c33ffb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c60f800-b7d9-4d5a-ad90-e6c3b0017fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1482cdce-a36e-40c2-a958-f8cabd3293d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7a641d-0756-4aaf-9fa5-c9022e0a42eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be08c8e5-17eb-4ea4-90da-da173a409665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b5fa28-892d-44f5-8ae0-bd114dbe4919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4173210f-1544-4f42-b5a4-1b188a3d1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db93a6f5-8945-4ea5-858f-6f253507ef89",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0221740d-9e90-459e-ad8f-041f8a9ea11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985ecbc5-bdc4-4aa8-b73b-7d55a6412be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec196a6-597c-4e3e-a5e6-5dfd6e16c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6037d49-e443-4842-af5d-aaa0bc361a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d57062b-58b1-4c47-974c-54890bd09042",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bd6e3c-5478-4365-a06d-ad98a102dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e115ab30-4bb2-4bef-b8ce-e33551c62417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09efff2c-d5ed-418d-b133-7831c75ac77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbc6d16-323d-449f-9419-296facfd524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6997315b-abf4-4f96-903e-614eef32f8a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24495ece-7a45-45bd-a327-bd7331fdaa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8be659-4030-470c-a094-b57184ced5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80baee4-37a7-4596-8379-5e52ef9b8029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e017dc5-acc4-4be2-8337-7cae5d2fd915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85c27e3-e255-4cd2-8142-d564d6784e50",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8addb7-727d-4c71-a9e0-a0cd365f69c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c265ec-ef39-469f-aa76-d3ec07c84ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a475036-13c3-4051-8f1a-82472d492c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b071ef-287c-4778-b560-1be2d5f1f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e6cfb9-7192-43d2-9b36-ccd624a99067",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6070ed-4e31-4a62-b488-77eaabdddddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e6a43a-c3ea-497e-ad5b-40f063376aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b770d8-eefc-417f-b755-02aa1add9c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79768335-c70e-4467-8fee-65563931e970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584fd7ba-dc5f-4d6c-a02b-e303d7e7919d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42613cda-fdfb-4792-82c4-6a7717d484d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c35d5f-af65-4434-8ac9-4b6534772d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406f941a-cff9-4183-8408-86ca2c27c286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a090b9-c5d4-483a-9cd9-14779537b29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6608a-56e7-409a-b654-e6a3dabc223b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b418e6d-e1f6-40a7-ac8f-db5f1123a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7acae6-a646-4871-bea4-91453657ea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e0fab3-b9e4-47e0-9dfb-c98173561740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db1ac44-988a-433c-b46b-b6a8d77b119a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bee311b-5c09-4c23-afea-bb7476b98f7f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f90cda-f095-4a1e-8953-dd343a5b36d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138fc405-d289-4ac7-bc63-1c668e09aac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad60cd-50e6-448d-988b-d8da4dba8eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f0de6a-bcb7-48f0-901e-a4fc48b5bb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b071964-526d-4e72-8125-5cc35db630e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849a156-7e57-4cf6-b07c-6452e9446f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a112f4bd-f4b4-4877-8d94-881ecf83bac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e4a266-bdfe-40d6-93be-d36e0e546367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5a4be0-fd56-4f53-8136-d14239757a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4391066d-9a6a-414f-af82-6d0d4c3c1604",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381ae4e5-b5a2-40a2-82aa-e23e12df2164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e40abe-8cdf-4471-bc85-f9c9aef5ecab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a2b98-5f6a-4378-928f-2a6078e18f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "21246bdd-fda6-400f-a96f-84adfabc01c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b0af22-d297-4d07-88cc-7fdb4231f670",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd72e87-9db9-44d4-8226-1077723be3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eea847-548a-4000-8f16-83739a266389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d078c7-3848-4d3f-a11e-ed941e11a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f713651-1d88-4131-8089-fcf8878d2eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc0362-1bab-4213-b1e2-22d339120287",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3ad620-656d-4b49-964b-5d5c805a24e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bfbd68-8331-4df3-b24f-bd5d60f6d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bccde0d-46be-495f-b2d8-f8c0d769b54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac673221-a891-4630-b283-5fa8ce558540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a0111-8e07-4fd6-9461-25d2f3711118",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6149ee90-1994-4cc0-87eb-80c98c8550a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21c8fd0-71f3-4ff4-9aa8-a74b05fb66d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cdf006-2de2-4c6e-bb08-7cb51c8a5b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f475acf1-12de-4e4b-8cde-12f991c5e0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b544faa0-f4d9-43d3-b5b7-a2b00890fcdf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae50646-8c60-447e-93aa-222ca7ad4e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62f719d-d502-417c-ad25-88f75ef085b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b135da9e-2003-43a4-879c-8abda01a5d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe56095-91a0-4a5e-824b-559c95575321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715db7c3-04da-40c5-ad91-0759529ff8b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9775df-0786-4f75-bf33-8e403701759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa1e22d-9a0b-497a-b4fa-3688d639e9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93145799-adb3-484d-8ebb-8a0a7213bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a236d762-c9b0-4249-a14e-3bbf139b418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b8cd8a-e351-41a6-9dc1-c22ee7164849",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b5b3bf-2911-47c5-bdf5-72e7ad61065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26b1b5c-fa22-40d0-80f2-c606a33218b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efe81ba-0a54-437e-b8de-ff68e1b2c4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b160af-3f4f-4115-ae8b-8d0acb432c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa3ba8f-c613-4a78-ab0e-533f0b283e6b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e75981-1be7-4801-8aa9-3e7ac936419a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baf0712-af5f-4e96-9713-293a92556024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9ef102-a04b-41b3-94ea-2a39449913ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c89eda-c0af-4dcd-b6f6-553d35a18510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e025bf4-2c42-4628-bae7-86f99c5c6ae7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884e39a2-36b5-4a5f-bbc3-ababf4bfce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d744a05e-c0b9-4054-ad0f-84052d45a4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b32fa1f-f6fb-45e5-bc8f-3c30facad4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079d98bd-9085-4555-98c0-84cb88e91691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f9ba51-6796-4ac3-9463-ea2a3ed1cef7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ecce23-3101-472b-99f9-4f4e8b7d308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2ba400-d069-4af3-88a5-c135b43b3499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ffef21-25fb-40e1-af38-7fdf4814ea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ca0a04-51e6-4eef-aacc-d11c3d21a79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40d4083-7649-49a8-a821-5c9552d0e5c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3019f15b-671a-49ac-b3be-cf4b987815e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5234ed-71dd-447a-81b7-a2cd615f046f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68f5f47-5f09-4353-bf47-2e635d9a476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c7a183-dd06-4a65-96a7-71c7825b50ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c348eb9-a1f0-46d4-b4b4-0e93daa1cf37",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92822a3-562c-4b3b-bbdd-ac0b4b43ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8caebe-fae3-4b7c-bc16-381132d5e919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37b3fd2-3683-4abb-8105-e18a52589b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39400b5d-ba28-485d-a96a-a039c294a24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19707f06-1c96-496e-a7f2-3270fc37859f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e4f9d-1b2e-4f94-b468-612c9da62128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58357094-e8b9-4eaa-a523-7b76f10e31e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068bb39c-a114-4ea6-8e2b-9d5feb703b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc566e7-5ac0-4fda-99a3-b4aae70201c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8835e7ca-d689-4360-a199-5146375b7290",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c8acca-3dce-4b17-8622-3f419830e6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00339b6-207c-465d-9f35-399343610507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085b580-4ca3-4573-a495-ac06956df3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d98a1c-64ae-47f3-8b0b-1e29229c1370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96b2a6f-b611-4f28-a691-d9f938931431",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0c00ee-3c1c-4a90-b61c-e49b5109277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d04eef-5e95-4743-b411-c5de9fd4b2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8f2b52-7000-48e9-b2c8-9bcd8ceb86c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98ab047-a24a-49a0-a362-db8e3f7681e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e73b9bd-9015-461a-925b-a984f6e9ae4a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da3a871-90e1-432d-b1da-476193ee347d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3458de-a24d-4efd-94bf-94b1627a3fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7266c23-c49a-454f-9401-1a51ac4c48b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44516be-2ec5-4b31-ab3b-fd2580251364"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b5edeac-e5b2-47cc-baf8-44e1fbefa199",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5129582f-5fff-43cf-8e5a-85d20dfa8aca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c22ecb1-bede-4270-9fc0-c77350c56a9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a6099b-b71c-4351-9395-c31ba54e05dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0c449-a727-4eeb-800c-6c76515368a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23ef622d-442d-4ab0-8fed-1be85b9e4208"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521a5fe8-e993-4836-8fa7-66f02a65daa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11eed60b-4f89-42b9-8dc9-20eea863471d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c01f23-1729-4a04-baba-70290ec36292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acc03f2e-55ca-4d5d-b535-5e424ceb60af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98951610-346c-494f-92ae-b78e19026007",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68cda29d-4f5a-4108-9289-82d87f8878c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9e850d2-453b-4c5c-bb6a-609b7ec575dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4f65a79-92e2-4325-960c-b35e3832ea1d"
            }
          }
        ]
      },
      {
        "id": "d23e535b-4247-45f4-b19a-9f1f985a4b93",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7d6092f0-27ab-47e3-bb7a-09a68ca37aeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "584f1707-9d1a-425b-b67a-76a4d4250aef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6285798-27b6-452d-ab83-952fc230fb5f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fa1d35-f5ff-45a1-9c52-c9b55940d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346c3362-b924-4767-a5fb-1fe42ca41593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aecb22-7ac0-47da-9831-801293783862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0832f706-2477-4ce8-aaa7-6e6194b989ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6492197-4f1c-4b81-b1fb-9c17acde130e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d051bbc4-b7c7-4565-b6c2-c86dd7508e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2c34af-59ea-4da8-b832-435c9d00a8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db553990-eef0-42dc-84f4-11fedaf2d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db94748e-e179-4846-918e-1e59f2ac6273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466c4774-a62d-430d-87df-e0017c307a5f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0675896e-2424-422b-a3f2-b519b1fce781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8af9d4d-919a-48b4-8a5b-c2341cdc40b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b731169-f95c-4892-bdd6-847a39494320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a355cb4-ad6c-4fab-8906-7219ea1766fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee36288-8634-4093-a0b2-15c0256234ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c14d87-1e0f-4092-8996-235e06c63dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054d8995-01da-4d7f-992c-a02638f559b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30977938-7d1e-40f4-a5a2-d1a95222f0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3b3a80-7eeb-42ea-8aff-0e7b02304be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbbee01-ad39-41d5-b2b7-f68462f356c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03004cd0-fc8b-4129-add7-c1446c7bd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604b8313-e9cb-48b1-8e91-bc115368a3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b977e-0c6b-472c-bc03-c91afd27be73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14db29ad-2dd0-4f18-837c-7d23f881e4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e53ec1-28ef-416e-a7d8-7b879cb53702",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a76e7f9-68d6-47ea-a21f-a6d682aa373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c0082a-cc00-48e3-bea4-c87e07c1828a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f80bc8-f209-4ad2-84b7-39fee08ad596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5139c6e6-6777-49a1-a848-2efd07496521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9355197-d901-45c3-91d1-5d428ff8e03e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819c6c58-1556-4222-9bfa-901fc5ce2d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb691873-2d4c-4be9-aa37-aace116fa7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e913dc-2b37-4b09-a196-632e2edcb113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce63fe1-54fe-4302-8095-f11d9a41003b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c048f71-001d-492f-82ae-97a3b2254cb1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e42d65-e9fa-4f2b-b968-1643aa2f0394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baaf087-724b-4f61-988c-6156ce43381a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d623a8-1497-408e-9ecc-8d199d32f964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c870d8a0-edf6-4df6-b5c9-7217d65328b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a3ec63-db71-4920-a8f9-efaa8e93c1ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc525ee0-7d79-483b-9c34-7b6165278aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f5ac09-cea3-47f0-b5d7-2e431d53b2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec0a0bc-7d25-4e24-9e9d-8f4c2807f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed956332-8e1a-4dc2-b2cd-dfe18b5e2702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37c975c-37e7-4b71-b7fd-a0cf1a91182a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8c2d0c-9492-4b6c-8bfd-c60812af48ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80014ba5-4002-42a3-9148-d44190e3d10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f988d-17c9-4ee0-827b-197e50d5bca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "640707e3-7d47-4f45-8dad-296fd892a97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9be1297-c2e2-4f00-aa43-7ce4ce8ce115",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0026cf6-d723-4af0-8149-139177100c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535d447c-d5c1-49d7-945f-26d9a68b654d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e6628-cd35-4f0a-afea-048d9ddb936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09471f39-046a-4db9-9d99-38f9688a17bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d28f27a-a99a-4c87-b6fa-317974469ce4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c54f4-2db6-4f7c-887a-ae49c3bcc28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453621c7-747f-41ec-b5ab-93345420e56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b68a7-8ea7-4695-a755-faf43d207777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9be6bce-8bf1-45d7-a321-66e21973b38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10152cfb-5eec-43a7-92f0-ebd639ed057a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68813c6-27e7-4953-93ee-de96bce4f6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25652847-8370-4536-998e-4db1921d8b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c159d71-0a8b-44cc-82b0-d4d0aae0cb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b5320b-6534-449d-b535-c75c5ff522c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fd4341-052e-4367-826b-ca5a20c3e58a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddeb7f1-7367-452e-9217-a17f21079c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db24eb0-f6b5-45af-8737-7dcb9efbf205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be41b43-b503-43e2-9b14-a479cc89e627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9573e4-3e2d-4b1d-b45f-39739393315c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79313c7-1d09-4fc4-8bcf-f5c1405e342b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e8bbd5-38b5-4a1e-9e30-f39cfc8a88ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42472da-b759-42d1-ab21-884bc43b6e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c91772-3d93-4da2-8982-3aef38b5430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c508981c-dfe5-4fa0-ba48-2c378bafd250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6283e58-1cba-46e6-8717-34c9fa0d1a13",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c231b03-a017-4618-98fb-0ad2772cd876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aecdfb1-c915-4447-8ca6-f4f76498717c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c264900-28ee-4e80-acac-960fa7def8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a048d3-ceb0-43ea-8125-cb50f1c03fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c54776-b24f-48c8-bc67-272350a52530",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055ecfad-2bc1-4590-b8cb-eaa62aa9cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9830d2-2a59-4418-bf58-5954f1ee3bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9f6c33-67a5-486e-a251-8c662472bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3a9b9f-1e2f-46b1-adf1-f1c524c20d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c039b5-a0aa-47af-bd6d-60b9553608a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b4a0d5-89a5-4240-8c22-f9386ae42b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0f14e8-f709-485b-88ea-1885cedb6275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea16b54-368d-4669-af51-4b64dc121585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d11678-0a1b-4cac-8ac4-f65fef49f28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a8e15-ed06-4b7b-8104-dd63da882478",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dc0776-c021-4ea6-8e58-5f9991f01eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffc639a-1175-4b2c-afd0-84a98de230b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e12f6f8-db3b-4d6c-b8fd-d62640dce853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062eb93d-4e83-413b-80bf-a7b2e80ed68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ba60f1-2010-43ee-9d63-d3974585e4c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9641687-b404-486e-ae6f-990c6f9d4c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22291631-e374-475f-9c8b-d67797f5f107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d9c71d-733f-44d6-86a7-f380f43dbb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b699edc4-d5b4-47d1-977b-3d18a1af7ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048c1ee2-884e-4edd-a41d-4f88720555c7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c574ec1-5bcc-4853-99a6-ee45a7e91ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb61b015-d00d-4e61-831c-5ac19c4c544f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3cdbbd-8f45-4c1f-a13f-97deb17a4945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3de774a-6c7d-45fc-825f-a6a2ec545153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc8be4-c1f2-4299-8ef2-aa18ccfbd1e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959999ad-3b59-4a66-952d-7b92f698e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8d970-6665-4f39-92cb-8c05fd1d66cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434623de-4ced-48f2-a6b5-2e92c5ef1e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf741828-5e8b-4c03-8707-e63c8afebfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e8c2a6-0782-4cf5-9ee9-8711fcb49556",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af05aa60-056f-467a-8219-00691b96dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3042eff9-7c64-4e66-a6b4-bce42bd03054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d17ca99-22de-45df-886d-93c29fc0ee90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32a5d58-54ea-4c77-a503-f586a77ed056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb38f178-f96a-452a-adab-d868009b87b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1624260d-c8b9-4875-91db-562039723411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd3bd36-62a6-452c-a259-3eb4ba9e2199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d65e877-c5d5-4e9d-89c5-edab31819ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "454b5afa-ff78-48ba-abfb-9520792084f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc303b2-90d3-47cc-9cc5-16d7f5b2fae2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1aadad-ee5a-4587-bbde-e0562383bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c21708d-effe-487e-975a-2b7fb1bce020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4febba5-7ff8-4c09-81f5-b0b46d5659c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99166cab-52ad-4885-99a5-3000777c4578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2a4183-19aa-4a70-9151-f12ebd8a5925",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f584eee-8165-40da-ad9e-634d87a719e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d044bf6-8e98-4f0b-bcb3-08271891fade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527a993c-db79-4a81-a2ec-44080ae3799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631a9624-03a2-4bd3-849b-a0a84c574e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ee141-7dad-4574-965c-be62981e63f7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02db85-333d-4718-ae44-f092fcf64dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef0b7a8-6536-4841-9f31-cddab45fdba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79409287-ac0d-4c9a-a345-2db467d07b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c79573-228b-470c-8dc8-afb87ff4db60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6506465a-741f-4de2-9c57-408bd0da002c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f049405-f0f1-415c-b700-a0803b1f3f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26df5bb-8744-4390-8d2d-3441f9b69cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f310d2-4500-48f0-8255-8e4d406a1934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cbf775-b065-43fb-81b8-578592036d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097a2288-a14c-4793-9da4-25498a87de92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5c07cb-9852-43b2-a44c-734719bb5fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53c5658-a440-454e-9073-8fc9ffb508af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6a82a2-9182-4ae1-958a-1e7439152f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2c3b3f-185b-4973-80b5-6fd429313686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f30c30-4e08-4d3e-9f3f-0180a1f0ef0b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a08642-d2ce-4558-9844-60b202b8dc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67db793b-1a38-485e-a4b6-5382a4069b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1cc913-2b1b-4f3e-87b0-15b812381ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f5cba4-70e9-4514-ad9a-5468bda69ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc9ca4e-07dd-4f5d-9993-852003eef889",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a8206b-2b1d-4907-a0bc-0f2a0cfde110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d382cc19-e5d3-4b14-9836-36a061e4a4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d8a159-fffb-4262-8d88-1c9e1638486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29632141-a355-42c8-9ea3-cf8d519ae78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe5a9f-69c8-4bf8-8d58-2695ff68e6cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa00923-b143-4c22-856a-aea8ff7ac966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c04d19-d969-4ba3-a531-553dac706d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd889aa6-9fe6-4e79-b7a8-86a9b6ea5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c1aac2-f5cf-4045-ab0d-dda9e29dde5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f318d0e7-4277-4f88-8d3e-72af6788b233",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6001a32-d30e-49b0-ba65-4e1df6293555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8359e160-495d-4c43-92a2-aa3ee969a31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b39e04-9ec6-4f91-9984-4c6f724e1ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9216551f-bd0c-46c1-a9ff-f19331dae06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b762c71-30ae-43c7-a964-aa93c31827fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eab5d6-3cc1-43bc-af30-477a8a20f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b45fb9-2136-49f7-854f-aa67f1288d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a93ba3-3f32-4ffa-83a3-eec73aced6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "305859e7-1602-48f4-a207-b046d0c6b296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1ff8f8-aae4-45c0-b8bf-626ccae9565c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ca7aae-d64e-4a0b-a606-fa978ca5c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4754fdad-b139-4f2a-ae8b-8d6535453f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78706dd-36c8-42d5-9af3-7c9aaf0301d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f02910-27a3-4946-a9a7-3e7a7aa8815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f37e8a-3bc1-4648-b4de-728a0abf3cae",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afce11eb-3d7d-496a-a1da-a9d7119bfbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe789dc-cd13-4548-a02a-9ef20569d981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0029fe74-d42d-46e5-a87e-a11dacd29935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc1f77e-5d2b-4295-87ed-d20f5246e32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca79fe2-de9c-4259-aa4b-1a0b63eb2056",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1108c8-d8ad-42f0-a963-9372fe3dad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eef0b9-a4b5-43d0-8e5a-af24e8b7fbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a015a1-7e82-4cef-a6b7-7edea4f3c397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c23485-0304-420e-99a8-9a25f4099121"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fac79da2-ab30-4730-8867-96ed9d2c840e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d75ae3ea-eb91-4a8e-bb78-3af933aaabe4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f072668d-8ef3-403b-a8e3-ad07f326fa66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3e1cd2-8235-49ca-93fe-82654e915b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1d4718-f357-4c56-b239-fc12b6881aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d132f222-8ab7-4e13-8d03-c409c7030d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25b6d1c-bfc7-4e6e-bc54-7fa2056ca0d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158148d1-d347-4ee9-92e0-88bbe32d1caa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "843bf518-7a4a-4d67-a8d2-62f68327d9cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902ff818-d586-4585-bc3b-35f02c6bf6c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f8dd6a7-5f32-4f67-a248-46df43bdf3b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b48c8312-d51f-47cd-b179-dba08b7fecb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76a8fabe-c27c-4e22-9465-36aa413e3dfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a466989a-bcac-4451-a742-895291971b2f"
            }
          }
        ]
      },
      {
        "id": "756c020e-48da-481b-9ad1-a61bb3f850ad",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd2d16b8-6bea-439d-a745-894649467786",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb0274a1-a845-4009-8f8c-ad49fb122466",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2da6c210-ec72-401b-b256-49826d9eb851",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6585ee-b647-4f6f-8659-e75212f176a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadf934d-9431-4904-b73c-6cba2867bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a3b326-4613-4fbe-b350-dbcb59da32f7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c505953-448b-4460-bc70-8434f383b36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34586d8-eb1b-4c6f-8fdc-1e2a44eadf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522dcba8-24c7-4620-931b-48907e047c1d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e741d4-cc9d-4285-a7be-a9e2444fef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2428096b-f326-4b1e-b207-a2110c1dc88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076829db-af34-4171-85f8-1c89c333e693",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f348785-475d-4d44-aaa6-6a4f481d3454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8494611c-7183-407e-9bba-16856f1528ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21811e4-3b35-41a6-b215-9e5958c26eac",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcde5b1-6864-4840-af63-28eb5465d3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42bb2d1-e758-456f-9757-731bc67c0174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4c477c-a002-423c-a2df-3f8cdcb18381",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1c413e-a37b-4ed2-80c7-8a9018fdfe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b00d0b-58f0-435a-855f-17e41fc304f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ce116-8afa-4d1a-8a4c-86ace8d93abf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b7a679-df54-420e-99c4-8f14839d854e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047064cc-a489-4d07-8719-c7ef3c908634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d2a2bc-aa9e-4ff0-86a2-98ba408f734b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073c3c28-6c04-43e7-9bdf-c8344fb5507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fb129d-c0c1-4f98-8883-8ab1762cea87",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8026b5-75e8-48fb-9936-a6c6599a8dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d773fbf2-b4a1-46b3-9a99-8755a167b942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2f68f-9e86-4c51-beea-4dfac494e7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dfe20a-a308-43b5-abc9-80a05bc8b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06c56b1-31ce-46a5-9a15-751e0b28f55e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040a916-8eb9-474a-859f-c70fc77f2a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03eacdad-54ab-404f-a382-6aa0e42ba1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4137fa-d4a7-4af3-ba08-017d5c34026b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d433c21-32e0-4da6-ab54-571c47ae903e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5efb0f6-662f-47ab-b0dc-0f5a5b708829",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e778cf87-6c00-4448-b2ed-2cbfd9407c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d877da-4c4d-42ce-8844-cee2fe16dc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4de508-566f-485e-8944-5381f252a769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21442290-4701-4bae-8076-23695457c7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeca4dd-f687-488a-8b93-d38ae06813ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d79066b-3ba4-4fba-a1f2-c52b0025ba24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8bb20e-e6b0-43c4-978e-ee47d8adff80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dbf4cf-985c-4914-afaf-f3407ad88d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b68487d-39fd-44dd-a137-fc1e360c3d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce46c4f1-f34e-49dc-b961-f98b94f15a92",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad117001-b3cf-4a41-a138-2cde820bec78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692c0d99-1921-403b-a824-0be6af3c5424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d747e5-5495-436a-ad60-753c72a75fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33429f40-fd4e-4927-bcca-b424e1bcdec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c7b678-8241-4050-a271-659094df3fe6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178fc1b7-0a20-4228-b537-a6f60e58096a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf061cc-3304-4f31-8835-54ac185829a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480754ee-b979-47f4-8b10-cebd7ec31ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c4e11b-e481-4ef7-b277-5f450111d782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82da651b-c558-4d77-8cbd-2f7850698b11",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c277ae34-669c-48b8-ac5d-15815c58a342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148cd2dd-4fd2-481a-a5f7-5cdd6959e8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6504e8-6608-4b61-bd98-0f6e2788e04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c83b0e-eadf-4251-bedd-6ecfa5e337ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a64b11f-9ea0-42e0-9df4-78ba5801215a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d6851e-2db1-4efe-92f5-04f80182da6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68988473-9e8f-4ce9-959a-d2d96ae1dead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415652e9-9ba4-4154-a8bb-33112d2b2c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2105faa6-d7cb-4374-bbde-dd1dc6f6d4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a701e73d-dcf6-42ec-8bae-e0018a267b2e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee0bbad-55a8-4e12-91bd-54bce679afe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3350dded-4ff9-45cb-a947-fa2d344423dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f38797e-c4ba-40a1-8689-6cec830d715e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c37c99-b423-4fd5-8976-7713524adb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc812e1c-09df-43cb-8f57-09660043d066",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20762b5-c412-4668-ba9f-f1bbe9dee0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ead6d3-0a2e-4bf2-918f-5c18fbe47fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2eae7f-f824-4d27-8c85-fb867ba706af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62bc9fd-6393-4501-b61e-4525eda2077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096dc93c-24a2-4011-95f0-e0e8700ad816",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e95aa42-5ea3-47b0-8294-a3c852eee50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b56e6d2-2eb8-451d-a5f2-ce88a6a2e3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2d8f2e-4476-4448-bad9-8320f61062c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502d81d4-4a1b-452a-a7df-cafc2f4d26e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba541f4-60c8-486b-b5bf-8ea7ba42b75d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03b52fd-3f2b-4801-9b91-cfc3e273b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c27c1b7-75e7-43c7-8b22-b5b11b40f89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55dd4d6-59ae-474c-90c1-e68fec209e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17eeeed-1697-49cb-97c3-a0beace42d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd35986-671b-41a2-9013-7248412764d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ac7454-fa34-4e90-851f-1dfb0b74eb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563b2a90-83ce-4de2-95e2-06070416faab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a92e1f9-c81e-42c7-8000-10289c25c097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904a2316-4311-4bc6-9971-f326d9431a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c697db-4ab5-42f9-9ddd-c957ed4b7aa3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d300cc-d0f5-4c4f-a116-493e89c98a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8b38b5-0ce2-4a7d-b800-e72e417faf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd0542-ee39-4431-831b-9c6c946bb6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c184227-8b6f-4fea-9514-6ab55296ba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a21e12-2529-4f01-b54f-59a9d52ca611",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d0c809-4e55-431c-8b4f-03e856e62012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7afe08-3b40-48b4-8874-e694a5554fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac0c5e7-720d-4dd9-9c10-5a191d4d7a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f84dd4-0197-4f33-b21a-5e87f912812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac64b212-f744-48b8-a423-ff415fdf129e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9fc5dc-849b-4d11-ad23-8eb1f8cead86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78634529-62bf-4fbe-bbff-ffb506d2aee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5debd02f-64a9-4e3c-ada8-5f83c8bc1523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b55be3-1068-4df5-b9d5-015d503b7160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adac956-e89c-4df9-8eab-8636a13fcfe7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cedb081-9c38-4dba-8b3c-4caf66ed2a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8315b44-e213-4730-9460-2d9de405288b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7871f058-0281-4e47-8aa5-33e4256bb031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bb14e4-9cee-4696-8c20-a7a6dbd9d1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fa8147-72f7-43eb-8f47-a4b05c28434a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e30fca-5438-4a1c-9e6f-80ecafe3dd83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02352163-95c6-4d2b-82df-2d7532f23a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda7e6a-cf2a-4ede-8243-a445dbf3eda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5830c79f-38a7-409e-8cb3-d649c1940d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642e1168-bfc2-4c5e-b929-781a7fbc8c91",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e85dfc-1f16-4059-9530-abd336d8ebb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa8387a-1bc4-4f91-9eaf-b2c68654a4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1b5c74-9488-4b0f-b7d2-76632ff0e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd99ab0-e894-4b9d-b2ac-37d3b1089081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8a12c6-b2d7-4d43-9461-367af7af07c1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10e0f54-be0e-461f-935b-9fda261296ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfb0be6-832b-4eea-ab3b-c424d8317d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fd6648-8d5c-4078-9b25-6f52495f7f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970b857a-1d41-4a41-84d6-83f160ce5036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ab9c4-df6f-44dc-80d0-076bd1a79992",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150d0b75-fc00-4bfa-8f50-4c7b5110da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8afb1d0-13b9-4bfc-a2c5-b7cbe0ce09c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702a768c-40fc-4830-8b32-06b3e16193e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec27c24b-0174-4d38-b411-387c3c1266f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbed3df-13cd-4680-a5ab-07f702e0e5a2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b06ba5-4f5d-4183-bccb-35af6d41277e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5bb970-0410-43a2-a916-0acf485e4e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a556ae-2d09-4016-a3e6-c2ba8d33af4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98848f82-a52a-431d-887e-2ec3f153a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922ad27d-74e4-4427-bbc0-0f5a493a1100",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d909369c-13f5-4c96-abf1-b5546c755bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6420b6-1e14-483b-b6e5-181c03f0f235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f463d2-d51a-4ee9-9f5a-5d3b9c99c5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617bf039-cb3d-4eef-921d-7c086d53a04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecdcdd4-673e-4960-9c12-f0326392b3c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2b0a22-99da-4665-8e14-620d82c02d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b20eb1-9445-4ecb-a120-27d9d4083ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c52930-ae8b-4146-8a90-779a14d2d694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed765f7-bc08-45b3-8995-1b0bb87ca703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec674a82-f0c7-4b88-a934-1442e0753728",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012055b3-7522-4760-9f94-7ef330ff0098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5d7a8c-cae7-4995-85b9-3499480ca5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60ef30-ffdc-48f7-929d-e28487892431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d793ef7e-ffdf-4ae0-9b36-ebd6ba2b02ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29bfd0-49d0-4b52-9f43-779b34ffa3de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916cb2f0-0c71-49bc-82bd-aaa0c1d436c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad096f5d-73f0-4502-8afb-0928c4c712c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92f02a2-fd59-4d08-b8c9-aa7d7660e4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaaa772c-d4b0-45d8-9355-9f5182e0c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7673915-758c-40b1-b9b4-9bd459fac3f1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6677e244-0153-4b2c-ba96-2b38143e7481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff4acb4-6d3c-4ec5-a982-cbcf4ad2366f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71021b6-dae7-45ab-a7b8-906d11be0040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bca117-dbfd-4a36-ab21-3bb80661cae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9108bf63-0d37-4fe7-aec6-b7f7e1f67df7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e22e0-3639-4e46-b448-2a8b94e79834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7df992f-f8f5-440e-a65b-2dc821d1cdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fbfbcb-23e5-42f4-b9ef-a9d2fdba0614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95532463-b192-47be-91da-30ee2c6e8948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e6584-944a-4f08-ae29-e8b5a30d0331",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0921e6b-8b6f-4fb7-afad-086f7df7c5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10e77b8-f30a-4be5-9d8c-02ae67714b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b31c74-2093-4ca6-b85e-721a7ebbcbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0d8bbc-2fff-4c20-80df-90b958fcdecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b118545b-ed50-4630-8771-d9cca141907b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c56c670-1e9c-4d55-8a3d-c4cefb18954f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559b3cbd-9943-41ef-aa5f-293cf1450935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c2ac07-a83b-43d7-a090-4c95dad8ca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65aa785a-14f4-419e-a5d8-e4c9def81cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b050b47-127f-4d0b-86b4-ccadb51f77ae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b5c5a-ba9c-41e6-a3b6-7552903216a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe379dd-8a56-49ac-a639-cbefe9c37e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f9efd2-54b2-47f1-9707-d1d63f77612a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7684a54e-da0d-42e6-8fc4-cfb1d565eab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5cd2b4-5092-408d-9dbc-c2212275c94d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3dbd9-4c06-45cb-915b-ad96570123cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bcba5d-85d1-48fc-b154-d0f15e433daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaf0cc6-c81f-409b-afda-7cad570dcab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007fbce4-67f7-4b83-8fd5-02b8e979aa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5386210a-c10d-4be1-a895-3805f078e957",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa48421-8485-4a9a-8944-2a3886da5de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e34abeb-59cc-48a3-a260-b248254c9163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6509d6-d499-43ee-9e7a-c4519d5023b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8501fc62-49be-4808-a116-6e8253057eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c41dc90-fe41-4eee-b635-ee078ab2fe74",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84d2b41-9934-4692-9b8f-80e73cab6e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c899308-185f-4a57-8a0d-9109a95189bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b2f9c5-e171-4753-9e5a-9b57962cde94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6af2bf6-bc20-4164-9ef5-12eb30c5458a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4109f780-2ff7-4b26-9473-1da35b62d640",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d964625-534b-402d-81f2-32fe4651d6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492c7935-574a-4106-b616-4786fd21dbea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c771cde-f8ea-49f6-9062-367003c2937b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1190ba78-1e84-4251-a363-a30eb12df46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e96d2f-7d2a-4b7c-bd0c-54ce3a36e56e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2246ec8e-dad0-4df1-9928-887aa682ebe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4299a7-59e6-4ddc-a3fb-3b3ae16ffc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35671475-e19a-42ec-8e9a-b6ee915c75fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2373ac-41d3-4f9c-9abd-38038d678319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3507bd9a-f1c1-4412-b02b-5b43973d1660",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dc6aac-9d59-4602-b747-94db4dd09c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9b5aa4-2ad2-4b69-bc72-f39025fb3bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae26c6c-da69-4043-a6c4-d82335cad0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325605c1-5750-47f5-ae7d-104b76ff1487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7441f122-2368-4db2-b155-32567f212b4f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce01417d-4552-4d76-ae42-115fae463669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacc9f7c-f4de-4a15-9f31-40b5af5cd792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf29da-b4dc-457e-aa3a-3ead5f37ac58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98482e98-3bc5-419b-a63c-1bf446c8dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e258065e-7cbe-4d8c-b8f8-1107c09c1be6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95aac6f4-7dde-4e17-8460-76f4256e47ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c6fe13-43a8-4e34-ad86-fe52b5e7746b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc49343-a0ae-4e48-926b-ef0ae519fbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83354ae8-4ea2-482c-bbde-f91c6cca05e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2702f3-000f-4cbf-ba62-ad739870670d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c5c39-43cb-4049-8d04-ce05d7243b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d50e29-9275-466d-8f8d-e7b5cf49d2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588d61eb-947b-45b1-9d83-3e0e15597f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096d746c-299b-4be2-9b5f-b3fc29c0263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43560a83-33b4-4e34-932c-2d84ab80c52b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61d24d7-6bea-41d3-89dd-b5283c1435d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6c2242-44f8-46e4-854e-19f919900f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9007af63-732d-41be-bcda-7a87180808be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f808a8-5d6b-4452-a959-20f49eecb18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ff9fd-f2a3-4964-ae94-adcfed6d8010",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86309e49-5497-4500-a057-5a59f7877bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb61537c-ea63-4e27-af04-be40e1665eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6807b1-6e1b-41cf-9aaf-f977adfca319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d858ff-122b-4155-b67a-d1fa0479385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf31df84-06f8-4680-85b8-61e0001d3812",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a14cf8-c269-4df4-a7bc-a4fd99754a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50b4466-46ab-4ead-97cb-ae41e6f2b792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1716d59-c95b-4f49-8c00-9efb5cf415a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a22f9b-1632-4e2a-aac6-12c43945998c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ba8509-6992-40c7-b2a7-0b582e666271",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270ea5f8-6933-4ff8-a6ea-8589a9aa577c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7fca70-20e0-4823-aa78-18f827f1388e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002f70d0-59c9-4680-bc63-8bb0078d14b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6574b8-d0f9-41f4-a515-0dd14938514c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57f1126-0430-4564-9ff6-4560cb87d8e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7115fb-9375-4e09-8a1c-2ea2a9bbb258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf9f888-bf2b-4864-9383-46e9c84b5dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e9d65f-0ddc-4608-96ac-f7c3e87e21fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578f124e-2f78-4108-ae20-3be0f62447ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd621236-2dea-493b-aefd-d547835b525c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb880de-5cb6-4e88-b86a-3ec2b31afb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7674c343-2a6f-473b-9ff8-443fb3dcca86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d88946-d6b7-4699-b679-1bdfadd3e82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc24513f-d8be-49bf-a557-80a77de303ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5f831a-7e36-408e-add2-8441703ffc31",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d79aec-cd23-47c3-b10a-d91080295723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb58a17-b545-47d4-b898-29b832ecda70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96947da-6aa7-445c-add0-2d996515010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060ce826-bee3-4fa3-94a7-27c9a91b87e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a30cfff-f280-438e-92ee-72d3a6136ad9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28255b50-56ee-425e-a695-947b7336f766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fef380-6b99-4336-ab7a-49af4a96ed34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63db6dfb-6dcf-46b4-8f42-cc4ac0e02826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f140dab-ff14-44e6-9ae2-ea2658c0a4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a2b3b9-587a-4444-96e1-cd0f6d724127",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d94dcc3-baae-47bf-b4b7-edf56ae009f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf09111-108a-4e40-ab27-628fafcae677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39451354-df95-4760-aa75-849e0a085156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba228ddd-bedc-4d17-ac47-611f3597bbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b76369-64a8-4d10-97d2-f3fee345a619",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec0a89a-696c-4c07-aadd-13d51d8e433f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b931368a-d42f-4bcc-82fb-14d61d54a587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44349bc5-21d2-4faa-aabe-4959a052d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14e3b37-7155-44a5-a50d-cda44a760213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513a980b-a69c-4584-833e-440843c67849",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ab371-4d81-4fe2-8175-aaf5e0d6690d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d3a289-e89d-48c8-8e0b-61f6c4066bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06f42ce-7866-43d7-9113-7dc07cf87311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405c9e85-f93b-4c0f-9b31-b6f7b78d80b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f0fc5-0b38-4ce5-a341-9a5c692291aa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c1385-c23f-43d2-967c-0b446bac1b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ef1d34-b571-4827-a268-6c9f000ef642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4238570-315b-444e-8752-f5105a85072b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8417b9f0-31fa-4874-b606-a3a8547cce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249ade3-19dd-4556-806b-20c0880cd0c0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6318ccf4-6654-4b17-9f66-4a33dd578fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a2989e-e329-4c08-a705-f3f04a836b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669ad90d-dc4b-4c83-9c89-6bd51b7abd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5d555a-e87c-4442-9d69-7b2a7df0fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11477ca5-203d-4b85-9109-8fef498daab0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70d2c73-7a9e-42ce-ab7a-0657ef19d5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15c98c4-141f-478e-9c92-47ef83dcdca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7ac788-81e8-47d3-aa32-4ec7c552ea18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce6b99d-d75a-4cfa-a829-ee3c4071f72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b93c56-d4f1-468f-a0f3-972540ce96af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b9797-de79-4d20-8786-6abb3d653ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5fd3d4-fcbc-47b5-89da-9733de987354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2d65d8-d89b-4e2a-8d6a-63d04e64af69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c48759c-51c0-4e18-af6a-6c95fdd38a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0863f-b437-4640-90ad-f94c14d5c832",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704978db-122f-4dcc-8675-8b8888ddbb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5b5c28-3a99-4e35-9bd1-029df111cdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33711314-d9b6-4d3e-8187-c11476a751a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9986b4fb-edcc-42e9-b6d3-a0a90ba953e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f7aff-f224-48d6-a084-a5566b424533",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb165b-c3a7-4fe6-8158-d5074b2bf98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4343ccae-fc5f-460d-b008-294a29df6b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acba73b-7005-4117-a9bf-035eee02977a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c623960b-6a2a-462d-9956-f6265b679f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb117bc-c66e-4bd1-ba89-eeb39a572365",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0de3ef-5697-4b72-a54b-2f49f5fd0fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2660a7-17f4-43b6-92cc-4464bb38fd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd837396-e477-4595-a707-dfc500c7c2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571bbf86-b7dc-477a-b8b4-80358c301ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ea294e-92a0-4df0-9b0e-08afbb942b11",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aa7f2c-a80e-453b-8c6a-267240180599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5d84a4-68d1-4edd-bb83-fcd5f369d0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae012f9-3485-40db-9b6b-dcab30c9c419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fdd493-7568-49c1-ba5f-f19b629a3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e81dc2-6822-47fa-a3da-7377e53a93da",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1749f8fd-8ac5-4b18-9126-040b7399a13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77238466-1449-4662-adc1-58230fd5ad61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0f1860-15b6-400f-86fd-5dba9c0b6e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9b5c4b-8126-491a-8a2e-7c44d6186cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465059af-408c-453d-a69a-f48185aac63b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fde8a1-9814-4881-8671-b8c68c9f061c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84e178d-b562-4178-a466-846c9e2cd60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932de78b-2a35-4bb3-b813-fc5a7f2d7210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290aeb6d-41a9-44cc-90bf-414b2f5c01dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bf498d-9cb2-4791-9861-e3044c5d18e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5b20ab-3a87-4812-b16b-afc64e3c4a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26672231-970c-4987-8ee5-542d896866e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1ec73-1448-40f1-b357-42e4f027e20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de8279d-1560-4299-93fc-7abfe415202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4369d51-6874-496d-810b-436fd286b61f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7b37da-5ff1-4c81-952b-c521b61a8006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe85dd5-271b-47a3-8940-1b19e3b23e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29a08cb-cb8b-4f2f-824b-000c97b71502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cf5b83-6698-42d5-a705-4ecb60e827b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd32b7e-030a-4f62-b691-9b41fb310012",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d82626-1339-48da-a94f-979404e09675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcf8d10-6e73-4d22-81e0-01d0ca67c502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bdad47-51b1-49f8-b1ed-9ee8896c375d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bc7d30-3bcb-41b7-a738-f20bac93713b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643c93f5-d884-405e-834a-feb39e4756d4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab46c78-c0db-4057-b166-fc2482f1236c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8eb08c8-5a3e-4e6b-9866-c54edb109623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc82b05-24ee-43c8-98a0-fc0ff7603674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fc118b-ec23-4a74-8f8a-3153ac154afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c829c3-5d92-4456-a7d5-e374720bf0c5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0791a573-65dd-43ba-b8d7-21b92b199a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584e1ac7-dbaf-4671-ad5e-4a66e68c6a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579596e4-4ecb-4b78-8fad-fbada6827c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b999a6-1ac5-4fd1-ad86-1e0207ee104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd040f0-99af-4eaf-8fc1-a9ff09e5d7be",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab700b-ecf7-41cd-9eb4-2c0ae24e7b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6701bccb-77e0-47b9-b4d5-f1fcec0411e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda7a955-0512-45a2-8c73-b78acc52cfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d74fb3-fd49-4eca-adde-a2144495aeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2730985a-f265-4084-b66b-0c7188d5110b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e013482-bfc6-4b36-ae30-3374aa0f74f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d55eee-a533-40b0-823b-4729bc29d600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c6d1c-d82e-47e8-a05f-102686868e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c19627-72d5-47f3-a5a1-27baa3dd5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd29af9-cd13-4bf1-9098-92e50c5111fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1d89d-288b-43e8-81ef-248babe0dff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11451446-d185-4b47-8da5-4c604a97f0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcdffa8-ddc4-48d0-9e89-cc6223889d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cde5b5b-538f-4915-8d88-11588bd2b5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f95ce4-e50d-4048-b3ae-7d3badb731ac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56616530-1d42-4d1f-aed5-ecf1e07f7cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839bf364-22a9-4215-83ef-88609de9ee7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b25884-d5d7-4ce2-9575-382ea8522db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc890d0-4a0a-4479-be2a-5eb56fba0f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7210bd1a-34a6-4a62-98ef-a14be3345812",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5643f5a-fb15-4ec3-b90e-50f6c5cb660c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb14b15b-23d7-408d-9b3a-6332f5e26e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd67501-bdd3-49a3-8667-0c9767b5c4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c44dd6-bd06-4b9c-99cb-794a995b436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50929428-5be5-49ba-9497-08f8f58142db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649b4bd-5b68-4a31-b287-4cb827eaabe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa56726-09fb-48ea-9834-82d7870f1116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18922146-e7d4-4835-bbe3-8c22f291df60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5682f6-3cd4-48c8-843a-d317967b0950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc09fa5-37e1-4637-a89a-7cbe7b709e30",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d06c22-b758-48c6-b82c-df1f6c8037ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098a1899-74f6-418d-bf25-b3f61abd50ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e0d638-da04-4b09-b475-d25a27c23a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b21ec0-5447-4133-a126-ad6e39e8729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb2f2b6-38aa-44fd-b1fd-eb7480611330",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe232d7-ad98-4a2b-b51d-dfa423b34fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3607d3a9-3bca-46d3-a2e7-29c2c88a4c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69fc577-37b5-4608-89d6-41c717c35469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e94c9f-f633-4cc5-821e-3187ee664121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e11938-5a92-46d8-ac48-3092a813b61f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11012f04-d5d4-4ba3-9260-418236d91e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef29383-d013-4d45-be70-bfd498d0ab95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5e2ff9-01b7-468f-976b-52869debad59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344e316b-314f-4e8a-800d-902c30db8575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f00560-0a00-4a8d-974c-823d2d5b1634",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cd425f-30cd-461e-b3fa-9bfd8ab9da5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97fe286-897c-4423-ae01-3c311be72c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5457852-e449-410e-88af-4774bfa96282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef769e61-ea6f-4fb5-b150-03236859779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815e0029-a025-4900-97a3-c27a3a015de4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b8529-484d-47ea-b1f8-7c7fd537a74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cea794-c034-43a5-a2b9-356057892791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722c825b-e15e-49aa-b8d7-9cdcb1abd5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c0f47d-99bc-489e-bbdd-32d967ca5282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418d234-f9be-46d5-afb9-7c0d876bc2d0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d09d45-0e5b-4795-a7d1-2d8fb612bcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e477a769-2b3d-4a21-9aff-7993b0a495a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b99b46-777e-4c0f-ae20-b55298d77b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8747c2-3ee7-40de-b5d6-25aa5e6727df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e01481-6e52-4a9b-8f04-0b371a9eaa6c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e8d745-4b55-432a-8f26-f0729da33385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade3e71d-d96f-4c5f-b321-5c921c7d425e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99370ab1-1833-486c-8608-9cfe6926bcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6ab91c-72cd-4260-a83f-610a8f0a2674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2272fa9b-92a8-44be-b02b-4e6a939c1ed0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5ae899-4792-4580-81ae-20418bea59ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b6e22a-c504-4c44-9e1d-ac0935fbd2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56f48fe-ed48-4c47-a060-d743be1a1bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f259e76a-cbf9-4ed2-bfe4-f18f5e525811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99872ff-bec2-41d0-8988-aab0b7f1891d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e54a31-f6c3-44e1-9216-27e336095b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2280ba7a-11b3-42f5-bdaf-13ec1f30e30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa9910e-811e-4702-a2fc-587682f105ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bc8aae-5869-415c-8f93-de44d3d8ec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2435989a-50bd-48c2-9d09-12904b3b5be9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a234917-e1bf-4b7b-8081-c82dda5c3f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c3ec2b-4aa6-45c2-ae47-ddf9f2ad25dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80536633-fa29-4c28-b7d7-805263b8e987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dac38e-93ae-4491-9e2a-f9f522ec9227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4323b684-2bb8-47d4-a21e-1c6269734549",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b27c4c-c14a-4ffd-bd94-efbfa4681616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a4f876-9854-4b1e-9141-5dbef3d40a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b03060-82d1-499b-97ac-4d3498283c47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fd593a-6b98-4429-8742-9a0097b99aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8fc65e-1351-427c-a0dc-a825394d06e6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3f10f-57c7-49a8-a8f1-f710f80cdf4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386c5d22-3cfe-4837-820d-da6ce6763264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dcbd1b-dee6-4a13-bd6a-ca46a2d90f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dffb43-38ed-47f8-b392-63df463c27d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4a4b46-c762-4d03-a78c-671eb61fac3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6d8682-0244-4d1e-b15d-03114e3ebc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664c4820-ef9d-43ef-986d-418b80dbed62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20975b7-0ab9-47d3-ad80-1169a5e24cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2523a5-b2e1-452b-90f5-c02f612e3875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896d3e54-0d93-4aef-b0e3-cfd5d384ca46",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714846cf-2add-4371-a8ed-bf5eeacc022d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6605109c-6df4-4c7c-a71b-6c932a4317be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c093097e-d043-4e5f-ad0c-0fc3928d8a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7099118-fac0-4a8d-ab3e-d649c1a9fd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8629a816-0922-4f24-a7d6-dd0867cba532",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b531dc97-1dcc-41f2-ad16-efefd2285563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32eed2a8-ea2d-4b9d-898d-d0f280efd9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6298c13f-8fdd-4e3d-914e-a8ae81dda7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c4adad-1a9d-4b41-b8fc-72afd4e589b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecc8f96-3d35-487a-a6e1-22ce59db93ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f1d2b-d156-403f-8dba-7e76ef44ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e21fd0b-3f21-4d81-8627-73581f180b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b9de19-81f8-4d49-99e0-b455ee1564a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2847fa67-ac7f-40df-8975-9b2c7051d747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbff486-94ef-4fe4-93d1-5fe3574238e1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01a77ac-9d9d-4056-a688-b8fd9dfec4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634bd087-a669-4cfa-93a2-6618df2e0a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e3ac7-1746-4cf4-81bf-0fd5424f1db1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110a221a-fb3b-4c7f-933f-1002d0f5497c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a44ffd-8aaf-4ad0-8699-8fcd6b4def27",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1add0880-d006-41a9-956b-afc68d49031f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ce9a24-edb8-47c3-8c54-65562f117c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c97248-7dfa-4470-be10-a11c4f6d807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec26fe06-071d-4e6b-8b99-097c69076907"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69fe2f85-4b9a-46c5-b38c-e07a44ec52c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd1915f2-1536-4ec5-9421-c2c0bff51e48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74eeac13-e44a-42ee-83c9-af0056cdac8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ba50386-a451-4754-a4a8-29cd9bae3d9d"
                    }
                  }
                ]
              },
              {
                "id": "069d9124-d778-4106-bd77-7c103251191c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "181b121b-de84-47af-8b6d-2df0fb23ebcc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caa613e-e20b-4ce1-9075-a968516a19d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6b2a065a-1ec2-4374-8b8a-4f18b3a7be9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d99054-4dff-482d-a95b-cf9f9e15f928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85c2ad4d-6f7d-4f20-a13d-5e660a46686d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d57e39e-9b80-4963-b460-275d3a47fdec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f7e5ffd-4089-490f-b67f-81ee6d771a2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92e0a924-d7f7-4f56-80e6-570935e0c260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4087a90-dee4-4349-a1b0-b91e119f3dbb"
                    }
                  }
                ]
              },
              {
                "id": "76490503-d95a-4106-8c55-3c6bf320056b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "33f8aa51-03b1-412c-a3c1-a617e3ca37b7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8512c61-e6aa-4e39-aac1-662349359f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b338acbe-c12d-40f1-a73d-a2f29ef7e528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ecf8ad-b2d7-48ed-936a-1895d31a7150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf929bb-bbf3-4189-ad6f-a842e77159da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96de2656-12ae-4756-a6d0-8a030ce7dd85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b758c56-b058-45ea-8e3e-2522b384b5e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fb5cf3d-2d22-400a-83ce-6f6d56bd538a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff14a2a1-ba47-430f-828d-6486279924c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f55af3-cc11-4921-bd46-6f9cedd69e98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5f18f41-cdd3-4b7c-b9f1-95f767d3d214"
                    }
                  }
                ]
              },
              {
                "id": "ffd12094-78b5-4e2d-a53b-6747ff568593",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70765a01-cafe-4687-a065-debc29c27cdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "012bcc5a-1be4-4a12-85f7-a64229b40ce6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23311e8c-5c2d-4577-9f21-e58c36252429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "548e46d5-5218-45ab-b0ac-c1b3f9acd1ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c619cc0b-51aa-406a-8620-5351cb9553d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3fe44d00-7401-4cd0-8a43-1e006791fb67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b0d31b9-cb46-4d18-94f6-be8512573447",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c01ff08-1414-4971-b49c-ce7479f8a325"
            }
          }
        ]
      },
      {
        "id": "0db0d7d6-5806-49fe-9c39-ceaec652e546",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb33e073-0700-4c58-80fd-c28e580716d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7b6cf00-d474-47cd-992e-ee1a75b97137",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d6447b5-4985-4094-86fa-0f49aff32491",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc47fe2-8cc1-44f0-9a93-e9db63014c52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4bb376c-1180-4045-a6f1-25af084e266c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ec87b-6b16-4893-9ee5-023e9b8781b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe58a14d-5843-4323-8eea-98f93cdde6eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b4c9aea-a06a-423e-9c3d-8cd4481cf892",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5fc2029-d531-4ff2-b57c-f3228d939b7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a035de5-63c3-489f-b407-a26776052390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b15ebfd-cd51-49ea-82e6-879e80e5c092"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0934ef2-8c2a-40b5-927f-b3f83151c59f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0bc8836a-7e54-428d-87b1-7d7365bf60d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d041d2f7-8dd6-477e-a20e-82e480373a0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d960a9c1-3cb4-40e6-856c-8350d3f95e79"
            }
          }
        ]
      },
      {
        "id": "4b8f40b0-2253-42b0-9378-b2b80e51806b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "26b06d86-4da5-49ef-9cc7-33e275ec77f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6887212f-e74c-44d4-9221-4140cf36f4ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d31783b7-95c7-4792-b492-278c81127616",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd64d969-6d62-4b41-a4d1-f2e0d6bad272",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "705fc6bd-3dcc-4346-9dcf-46c904430ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be336d7-b9e2-4533-a869-9942026e2005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f459d74a-239d-4b5d-b5e3-765c3a62eb8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c06b79e-c0b4-4938-a476-de7ccd236a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2547273-e3bf-4dac-80fb-d597b230843b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7683ed91-2257-49fe-84cd-720642109c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "704760ed-5989-4fd9-9434-a8495f7a60d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26e125f3-1a00-4def-978c-6b4937d9de2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81314f5a-57e8-42df-9f05-e10874d2d0ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "013b066f-7bcd-4b60-9399-44e433f8287c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ca4e87a-f746-470e-991c-be5310a1a1bb"
            }
          }
        ]
      },
      {
        "id": "62a4f4ed-2b60-47af-b1ad-68e372d3193b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ae57acac-004b-44b8-b5c6-7974450ed58b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9f244a6-8f9f-47ec-a21d-0ebd716963c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30003bf3-04aa-488e-845b-f3137cc5be43",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260bc614-dfc5-4c64-963d-8851d9937dcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "056b8e10-7594-4bfb-b09d-cf5763210dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5219a405-7970-445d-8ba9-f5f245f92790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fe92088-a29a-4a0a-a343-43ca5ecc2d11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40b8c85c-2695-4d94-a52d-147d0eae8fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be63275d-4a2c-4e4d-a256-862da886e159"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "206fcc44-0963-4ac4-a4ae-1e6e680f5436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db2d5db3-f15e-4b7f-b026-3aa18601972e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e5c8d61-af8e-4be3-b714-101b75f18ecd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71c3cc8f-a8c7-4bb3-81fc-2a7c336e436c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5a596cf-4b9c-4958-90db-cff7b28fddc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab08065e-826d-4758-a3d1-ccc5f87222f2"
            }
          }
        ]
      },
      {
        "id": "8adb179b-3af7-40f5-bbb2-273e3a71d0a0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0e379ae-7a50-481c-a3dc-b0b8de9b69d1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b542a264-2185-4c14-a513-36e8fc23b500",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6c138cc7-a9cf-4a9a-a235-70966db87368",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c23487d-4675-4cec-b45f-12a3e096d698",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa1b2fdb-8a0a-42cd-817a-d55303f31751",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 107.3964912280702,
      "responseMin": 9,
      "responseMax": 8097,
      "responseSd": 531.7147837099875,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711499648071,
      "completed": 1711499687938
    },
    "executions": [
      {
        "id": "50961d7c-0a78-4b40-96e1-da1a4a8dff5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "09db1c9b-4e1d-4e66-bf0f-76f03dfb4130",
          "httpRequestId": "c4cf306f-6d24-4856-a8b4-61ac7bc0d34e"
        },
        "item": {
          "id": "50961d7c-0a78-4b40-96e1-da1a4a8dff5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "be9a06fc-e595-4eb5-9636-72ccd105dc8c",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "34b67ab5-60c7-4bd8-925f-ef68dc9210ca",
        "cursor": {
          "ref": "f995140c-aaf5-4b9e-8572-20a2cf07dad9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "37eacdcb-7727-4bc0-bbb9-90822ee93910"
        },
        "item": {
          "id": "34b67ab5-60c7-4bd8-925f-ef68dc9210ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "78ed676f-d5c3-401a-91d9-2cbaf0c70f79",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "38850a0a-fcd6-4d4d-bc20-a91986a9b808",
        "cursor": {
          "ref": "51ebe8ac-ed75-488b-b61c-3c2653a7b5f1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "391f97ea-37ea-4f33-83d6-90187bb096c8"
        },
        "item": {
          "id": "38850a0a-fcd6-4d4d-bc20-a91986a9b808",
          "name": "did_json"
        },
        "response": {
          "id": "8837b2d0-549d-4031-a7ac-43e5d3316178",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23337fa5-ffe0-4f9d-996d-2f0f7b286240",
        "cursor": {
          "ref": "526fe64d-b42e-41be-b1bd-def1055e196d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe02a2cb-2c37-4375-9c65-4558ed14ae90"
        },
        "item": {
          "id": "23337fa5-ffe0-4f9d-996d-2f0f7b286240",
          "name": "did:invalid"
        },
        "response": {
          "id": "a278449b-fef4-4810-9d47-1d1f2fc500b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 274,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23337fa5-ffe0-4f9d-996d-2f0f7b286240",
        "cursor": {
          "ref": "526fe64d-b42e-41be-b1bd-def1055e196d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe02a2cb-2c37-4375-9c65-4558ed14ae90"
        },
        "item": {
          "id": "23337fa5-ffe0-4f9d-996d-2f0f7b286240",
          "name": "did:invalid"
        },
        "response": {
          "id": "a278449b-fef4-4810-9d47-1d1f2fc500b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 274,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de4c19-0391-4e77-9de0-3b927641abcd",
        "cursor": {
          "ref": "1822f130-a270-4fb7-87e1-4e68ad99cadd",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d5552763-b19e-438d-8ca3-8305209d82d2"
        },
        "item": {
          "id": "13de4c19-0391-4e77-9de0-3b927641abcd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3b74c4ff-ae21-4d65-8b72-0c6ddff40cce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb680744-c7fb-4be7-aaba-1cc3f9687993",
        "cursor": {
          "ref": "2fcdd7a9-907e-4e2c-a2fc-0cfcedcaf299",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1b1c7e8-a0f3-4c66-af3f-053604076a83"
        },
        "item": {
          "id": "eb680744-c7fb-4be7-aaba-1cc3f9687993",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9565f26e-a8ae-4920-a76b-33ada29cf718",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794ae246-9bbc-41c9-88c3-b98318041d99",
        "cursor": {
          "ref": "15d08c9f-65da-4847-8f21-48811ba463b4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c060d611-1272-41d1-bb94-8c1603f38f02"
        },
        "item": {
          "id": "794ae246-9bbc-41c9-88c3-b98318041d99",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "81877964-4bb2-49a5-b7f1-df6c1655f54d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd17d63-f1db-4098-a95b-42cb1163c1ce",
        "cursor": {
          "ref": "2b2d76f1-4836-44b4-9b86-5dd30708ced2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b6e32b21-71d7-4a4f-90cf-1c0000786b15"
        },
        "item": {
          "id": "2cd17d63-f1db-4098-a95b-42cb1163c1ce",
          "name": "identifiers"
        },
        "response": {
          "id": "3d82e90f-592c-41cd-980a-5244d1d44029",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622eb717-e9df-4232-b4b8-ea8fd512db3b",
        "cursor": {
          "ref": "198ba5c5-8f75-4552-9084-225303d2a939",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4ac6b6f7-04b5-4dd2-bb1c-7744c22accd0"
        },
        "item": {
          "id": "622eb717-e9df-4232-b4b8-ea8fd512db3b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2274d47f-4c65-4923-a48e-ec40c9d2051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b425ba-958b-4ad3-a8b8-cd99f33a7137",
        "cursor": {
          "ref": "badfd6a9-d590-4a5e-b482-14381e182724",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "51349bb2-e373-4e1e-9608-7c872be6f3ae"
        },
        "item": {
          "id": "19b425ba-958b-4ad3-a8b8-cd99f33a7137",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "43ab0b1e-c9d5-4a38-8b9c-5ffee67f32c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01426f3-4a4d-4e44-96bf-2e1c05792cd0",
        "cursor": {
          "ref": "b2bb3b96-f0c0-4cc3-8ee2-a66316205a0f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3daa8e46-bac3-4858-9589-efd0d3d0e288"
        },
        "item": {
          "id": "e01426f3-4a4d-4e44-96bf-2e1c05792cd0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3fb90b81-3110-4c9b-9788-d01993450715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119537af-76fe-4e46-8855-dfe5d82a7cc7",
        "cursor": {
          "ref": "eda1a3c2-4e78-4048-909a-10ff6edcda1f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db9e1487-ea6f-4add-8157-d318fd514fee"
        },
        "item": {
          "id": "119537af-76fe-4e46-8855-dfe5d82a7cc7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2c9d4266-4c4e-4595-bd0f-74aa3a1f2453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91044bfc-70fd-4bb8-bef4-542d354530b0",
        "cursor": {
          "ref": "98f084b3-30a0-47ce-962d-8895eb4467a9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da342bdc-b769-45a6-bf5b-dd1698e78625"
        },
        "item": {
          "id": "91044bfc-70fd-4bb8-bef4-542d354530b0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad7e89ee-bfc4-40a2-b9d3-41142ef10619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce068a12-2b47-479f-8b4d-57bec1e39c70",
        "cursor": {
          "ref": "1f2afc25-0a2f-48cb-83e2-99ac6acda852",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c59f5a15-2664-4613-846d-384aca21e7db"
        },
        "item": {
          "id": "ce068a12-2b47-479f-8b4d-57bec1e39c70",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "23263cf8-400c-49a4-8006-df535811b86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ec52a4-c9e7-4011-bb1c-edd4f351f72f",
        "cursor": {
          "ref": "790eb1af-e90f-48d2-ab7b-e81e345edb24",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a84c70b5-c8e6-4678-8e95-1d87cb40a84f"
        },
        "item": {
          "id": "71ec52a4-c9e7-4011-bb1c-edd4f351f72f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1d385061-8bc7-4c41-8610-28c75ce30c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420ef9a-42a0-4f11-8ab2-9018bdb76e0f",
        "cursor": {
          "ref": "e6d15d49-2f59-4abe-a65a-b88d79867c99",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13eac778-1177-4fba-ae6c-ca8f8b05ad2d"
        },
        "item": {
          "id": "4420ef9a-42a0-4f11-8ab2-9018bdb76e0f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3ae29ddd-ffdf-499e-ba21-2f64c468f4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a815a529-9ca5-40f8-ac70-b97d47474765",
        "cursor": {
          "ref": "4fdfab76-c116-4752-9b10-da6cbef56af9",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94fd1b83-1d62-4dfe-8036-e80dfaf25611"
        },
        "item": {
          "id": "a815a529-9ca5-40f8-ac70-b97d47474765",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7ef6090-f1a3-4eba-b307-84ed4a12334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c205d2c-a903-48b9-8c79-01f581fce7b8",
        "cursor": {
          "ref": "88a0c6b9-459d-420a-bf71-67337e8a96e8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff18c887-7f58-4b5c-b5a8-909d7753d6a7"
        },
        "item": {
          "id": "7c205d2c-a903-48b9-8c79-01f581fce7b8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2b3d9349-621d-4310-a37d-766cb4481f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744d393b-ce39-4a33-a865-b73ba262fb63",
        "cursor": {
          "ref": "97573b94-14c2-4e9a-bbe4-9247a5f4add0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "62e8662e-ffd1-489b-a0c3-30f102fe5df8"
        },
        "item": {
          "id": "744d393b-ce39-4a33-a865-b73ba262fb63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d56962e-acd7-4be8-9246-a7004073a652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed740167-e9d4-445c-b22f-ef3e0b238c0c",
        "cursor": {
          "ref": "fad82d6d-429a-4ade-9e06-dee3dfcedd47",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4f002784-5eb0-4de6-9641-92033428b6e8"
        },
        "item": {
          "id": "ed740167-e9d4-445c-b22f-ef3e0b238c0c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "10563821-a62c-4e9b-8e9e-637d1682e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decd8176-5e01-4579-9139-d67a21775e88",
        "cursor": {
          "ref": "eb7f9d81-beaa-4ccd-bec9-da3682fc30e9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "308d88e1-a965-4895-b2bc-dd41dfdcc878"
        },
        "item": {
          "id": "decd8176-5e01-4579-9139-d67a21775e88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "184d4b59-ad8d-416e-9a0a-b33c6755878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ffd461-3a6e-4fb7-bdd8-babf2a0575d7",
        "cursor": {
          "ref": "eedc2541-2221-47d4-ac63-444351586b5a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "13302d83-0f46-44fa-bda2-77b43f0d2695"
        },
        "item": {
          "id": "b7ffd461-3a6e-4fb7-bdd8-babf2a0575d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9ff3263f-d354-463f-8637-9ba24c171523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5350485-5849-4127-a260-fa7f0afb39fc",
        "cursor": {
          "ref": "c1db5340-96cb-48c5-b4e8-b3e04942831d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "728cc300-4b81-427e-a7f0-0df24d3de2b4"
        },
        "item": {
          "id": "c5350485-5849-4127-a260-fa7f0afb39fc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "539f5c58-5f97-47b8-b986-c1b18066e1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ef081c-4bdd-4b98-ac2e-6b02af10ddfb",
        "cursor": {
          "ref": "57df6fff-8b42-4402-bc57-a90577180afe",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a063a6d9-a649-465a-9af7-06192c0463ab"
        },
        "item": {
          "id": "72ef081c-4bdd-4b98-ac2e-6b02af10ddfb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c3e6e4ec-e069-413b-be62-4909f24c2b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f899b3-6b3b-4655-b167-33ad2b02dbe7",
        "cursor": {
          "ref": "1665857e-45fc-4b9a-a9d4-4ce07d0d6cb8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "697af805-1ddb-43a2-af31-26908c3fdb6f"
        },
        "item": {
          "id": "a7f899b3-6b3b-4655-b167-33ad2b02dbe7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "41cfb5df-11fd-44b6-9d87-7eaaa76f95a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d10e21-7db3-4d70-ab42-13677c063fda",
        "cursor": {
          "ref": "fdad2bba-eeb5-47e9-94ea-7d7a0453b8c6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "59bc66c5-ec6f-4106-be90-cd9cefea8fde"
        },
        "item": {
          "id": "f5d10e21-7db3-4d70-ab42-13677c063fda",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8db44848-f6a4-4daa-9c6d-c671a7816f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e409b5-b69a-4c97-a9b7-e340a572199b",
        "cursor": {
          "ref": "7f044b4e-8251-4395-95e3-19274da061bb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eb539110-b32b-486d-befc-510f2e7a386b"
        },
        "item": {
          "id": "14e409b5-b69a-4c97-a9b7-e340a572199b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2bb00ff7-d7d1-4ad2-809f-6d9c7a9068e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6a29cf-79df-4c84-8f33-a66b18c3dadf",
        "cursor": {
          "ref": "14a0f554-456f-4358-ae19-35b4b515b5a6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de357da6-e15d-43c7-9140-e4b6581a8de5"
        },
        "item": {
          "id": "8a6a29cf-79df-4c84-8f33-a66b18c3dadf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c7663ce1-7e3e-4898-ae45-fabc657006eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861da59f-8992-40da-aaee-75a34ab6e1b3",
        "cursor": {
          "ref": "9500c02c-d89b-4d85-992c-cfbd2e841aa5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "900f82a8-a5df-401b-b588-c5315931fdd8"
        },
        "item": {
          "id": "861da59f-8992-40da-aaee-75a34ab6e1b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b74a0df1-de13-4b90-8afa-0971d964be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123b0a06-cfa6-4570-a77f-1228cc4d1928",
        "cursor": {
          "ref": "e9f62d44-7835-495c-a0b4-8030a484d627",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c993c306-1395-4bad-a226-76a7a8cb7c57"
        },
        "item": {
          "id": "123b0a06-cfa6-4570-a77f-1228cc4d1928",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0f240549-ba36-4b32-bc24-5117f2e25057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c679dc61-08c3-4ae7-84fb-d38ed67dfc02",
        "cursor": {
          "ref": "2adc7c88-2dc1-4e8d-88cd-ac2a0a7affb5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d31510e0-d7f0-40aa-8528-e4bdbdc75e56"
        },
        "item": {
          "id": "c679dc61-08c3-4ae7-84fb-d38ed67dfc02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "51f8bf9e-1825-4ad8-86a0-42a4db1fa6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca79d00-7326-46c3-9d02-02b3bbe85970",
        "cursor": {
          "ref": "61364ef8-b7ca-4928-a68f-e748b56f3d00",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2f029d55-e22b-4934-9910-ba4bef4118b3"
        },
        "item": {
          "id": "6ca79d00-7326-46c3-9d02-02b3bbe85970",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c09e653c-6b29-4218-a189-22590986aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b7ab1e-fb32-4d06-b15c-82fe373a6337",
        "cursor": {
          "ref": "b5d7ed35-d101-43fc-8388-718b3b71e837",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c9861383-7089-494f-94f5-8d434a36bea3"
        },
        "item": {
          "id": "60b7ab1e-fb32-4d06-b15c-82fe373a6337",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a5ee5b1c-b84b-4b2f-ac72-0b8e4a28bd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370e100-6fa3-4abf-9e04-9b6c8c3c0c05",
        "cursor": {
          "ref": "2d0e89f7-42cf-4602-8d38-049fc6393c5d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b06c2ef2-a08d-46b6-9d8b-261aadfc1350"
        },
        "item": {
          "id": "e370e100-6fa3-4abf-9e04-9b6c8c3c0c05",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf302dcd-bf26-47d6-b21e-ed535807b109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c067c58-bcba-4a9c-85de-487439c495aa",
        "cursor": {
          "ref": "45175ab1-8e9b-4b18-8291-7ba6114561a2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "28743517-be4b-42c3-bcba-e4f0a1b598ea"
        },
        "item": {
          "id": "7c067c58-bcba-4a9c-85de-487439c495aa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f68ffa0-3e35-4e42-8603-8db947fee1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30b614-0eee-485f-9736-6d6fb6e6cd01",
        "cursor": {
          "ref": "929846d4-a4fd-4621-8a19-5b277550dfe3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4220c5c9-820a-43c8-8705-3485c01ceca2"
        },
        "item": {
          "id": "eb30b614-0eee-485f-9736-6d6fb6e6cd01",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1c4d5d0d-caf5-499b-b327-08af321aa5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba6ca40-7d3e-41f0-ac46-0dd9e3d58c81",
        "cursor": {
          "ref": "cfca2c50-e72d-4933-bc5b-72b11f8fa18f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b58818c8-a958-4514-9789-b04fdf096741"
        },
        "item": {
          "id": "dba6ca40-7d3e-41f0-ac46-0dd9e3d58c81",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a142daab-e379-41aa-b92f-5925f35ad7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a590436-89d7-4b36-9636-2a4e505f16a8",
        "cursor": {
          "ref": "49d5bab6-b8a9-483e-a468-c3fa77fbc485",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f9ffe6c5-3e0e-44b5-a64d-2a7585c287bc"
        },
        "item": {
          "id": "2a590436-89d7-4b36-9636-2a4e505f16a8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0a2a9fd3-b8dc-44a3-98a4-f334b7b46d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d881596-80c8-4051-93e6-b3d941537d82",
        "cursor": {
          "ref": "93fb5e48-d880-4430-a69a-abbe5b2b7096",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be82e7ba-ec01-4496-8dfb-f6b5f4dc756f"
        },
        "item": {
          "id": "7d881596-80c8-4051-93e6-b3d941537d82",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ac2ebe85-6505-4576-9220-cbc99e949366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016b9834-05b8-4b93-81da-b511f5d5e53e",
        "cursor": {
          "ref": "920e327b-2d44-4599-92c9-67e7e95852db",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9fb75d05-7111-43af-8acc-5fd5b0edbc86"
        },
        "item": {
          "id": "016b9834-05b8-4b93-81da-b511f5d5e53e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "45d4b6b1-438c-4fef-8338-3c527a9ec75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1831a742-ac3f-462c-9358-f6db5519a81f",
        "cursor": {
          "ref": "c73a4009-1085-4c28-8317-24db66c228ed",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1b18a161-c7a1-4e22-9e77-641960b1172d"
        },
        "item": {
          "id": "1831a742-ac3f-462c-9358-f6db5519a81f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e55e46c8-530b-4957-8c84-d50131032083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c0e7f0-fe8e-4935-9e17-0c15721d6e64",
        "cursor": {
          "ref": "223aadb6-66b6-4e7f-bf0c-b6e0005b9f74",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0130a4aa-df06-4c4a-bd1e-035e5750807b"
        },
        "item": {
          "id": "d8c0e7f0-fe8e-4935-9e17-0c15721d6e64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "58600b56-8519-46af-8548-32c4e1dfe64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d402a790-8487-4caf-a071-0d3d63f28ee0",
        "cursor": {
          "ref": "416d775f-018a-413c-b543-beb094f67426",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "21f416c5-8989-43fc-8335-357cffac3fc8"
        },
        "item": {
          "id": "d402a790-8487-4caf-a071-0d3d63f28ee0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6ecae2e2-05fe-4c7e-ad72-55c851ff834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f73c108-05a8-47ef-ab51-2f7aa6c1b7bc",
        "cursor": {
          "ref": "21cbe642-b764-4405-92f6-05b8a8bc6d59",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "42a052eb-059c-4c04-a7a9-d50e6b2cd427"
        },
        "item": {
          "id": "8f73c108-05a8-47ef-ab51-2f7aa6c1b7bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "65565d70-b949-45ff-9ed8-7545a3cbd7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003ace0e-c228-44e6-a868-b941270bf810",
        "cursor": {
          "ref": "ee251937-ae7b-40e4-970f-33d35dc293d5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cc6ab06e-8ffe-46dd-96bb-b454e5bf91f4"
        },
        "item": {
          "id": "003ace0e-c228-44e6-a868-b941270bf810",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2389ad2d-fa2f-4372-bb95-820698d7a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4ecf7-1aa6-445c-8198-5598d8a58d9f",
        "cursor": {
          "ref": "072cffef-7b7a-47bc-bd52-0a2ffd8e5126",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b4bd55aa-5645-4a86-a889-52b8c10e623f"
        },
        "item": {
          "id": "2dd4ecf7-1aa6-445c-8198-5598d8a58d9f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d1b75d13-b39d-42fe-bf3d-b62b7dd4afea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8919a27-6338-430d-8125-d33cc95fd19e",
        "cursor": {
          "ref": "dad670c5-d901-4277-a5da-8f5fd1dfe47d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8bb0f640-2d17-427e-b547-815b5d2bae20"
        },
        "item": {
          "id": "a8919a27-6338-430d-8125-d33cc95fd19e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b1cd1bb5-ba16-4f52-b0b1-38c72791ffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeef28e-7efe-444a-ae3c-30c1e98fdbc4",
        "cursor": {
          "ref": "cea23252-e201-4be5-84c5-cbe75fa6e239",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e44dfa56-3d65-4ee9-b552-539a6ea10f2c"
        },
        "item": {
          "id": "bfeef28e-7efe-444a-ae3c-30c1e98fdbc4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6aff1bf9-e58b-4d6e-a179-2c89083778be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c367096-d440-4208-a4e5-7723bb301458",
        "cursor": {
          "ref": "539ba2f7-2a03-4c55-b23c-1fa5f1638abb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d71a91ee-4f32-4bac-bd5e-b0c93d82976d"
        },
        "item": {
          "id": "7c367096-d440-4208-a4e5-7723bb301458",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "99c1d651-c206-4b4e-a15e-22c9ad135657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af405a70-f8a0-4049-899c-3c7807960b37",
        "cursor": {
          "ref": "decaf272-e873-4ce9-a2ab-d4089104ca7b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f05e00b2-72cc-4d9a-a32e-f1a425e66f9a"
        },
        "item": {
          "id": "af405a70-f8a0-4049-899c-3c7807960b37",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c55f0307-ea1a-4a45-bd97-f06719f112d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f9db01-8d76-4dc6-b86d-57862840f5f8",
        "cursor": {
          "ref": "e8f868ce-6db3-4d3a-96f2-1cef47036d9e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "34d45887-6e37-493f-96cf-dfdc438a641e"
        },
        "item": {
          "id": "06f9db01-8d76-4dc6-b86d-57862840f5f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d9a697f-4be0-465a-978d-a9142909163c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e971be-6069-41be-8f7b-782c965a8d78",
        "cursor": {
          "ref": "3e8bbff9-5f76-4227-a05e-90e18c2b0f03",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7e2f9d8-28d7-4f87-aa26-133f1843915c"
        },
        "item": {
          "id": "d3e971be-6069-41be-8f7b-782c965a8d78",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "194f8859-9e66-4dad-8590-d920c21e5dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35079a5d-d5d0-4bde-b1db-10a82ec0f343",
        "cursor": {
          "ref": "5f325f4c-fa2b-4964-9eee-b6a8d2829a9e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc8a854c-9732-4610-8e00-1707dc282c09"
        },
        "item": {
          "id": "35079a5d-d5d0-4bde-b1db-10a82ec0f343",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0fde4f82-4b23-443e-a0e9-a55953398a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed528530-f01b-4ffe-9286-f24d68b15ba5",
        "cursor": {
          "ref": "6000c30b-6dbd-4ed6-85cc-b617c41ed74b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "25bfba5b-b9af-470d-bcb0-db8dfd7a6d7f"
        },
        "item": {
          "id": "ed528530-f01b-4ffe-9286-f24d68b15ba5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c2a8affd-ad9f-42ab-91b6-5de80d845099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aecdbae-3afc-4328-a6dc-f1674e4e7a18",
        "cursor": {
          "ref": "e5cc8674-b9e2-427f-9425-08eeac5ab424",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "820efce1-64cd-414d-a525-933fe5a82fe8"
        },
        "item": {
          "id": "5aecdbae-3afc-4328-a6dc-f1674e4e7a18",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1593072a-492a-42ff-9435-c43b90bc0aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62341605-9b65-4bd8-b56b-eea66d03eb63",
        "cursor": {
          "ref": "91dfe609-e6ab-4940-90af-fdba005e3cd0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b568de34-e2a8-4474-9271-065da0b89a45"
        },
        "item": {
          "id": "62341605-9b65-4bd8-b56b-eea66d03eb63",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5eb5a64-478c-4eb2-bd3b-d99eabd82431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3a4a61-073d-4982-8cf2-df5715f1db9f",
        "cursor": {
          "ref": "9098016f-8ec9-42f3-93be-cd5b5606881d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "34887b66-1f93-43a5-9341-ca3f7b70ea37"
        },
        "item": {
          "id": "dd3a4a61-073d-4982-8cf2-df5715f1db9f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f3594ba-2b84-44ba-8fb3-64bbcabd735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647a1944-e593-4eff-a22e-5bbbf9443632",
        "cursor": {
          "ref": "8d9df560-b237-4bb9-8f0d-73e9807e077e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "02abdf5a-e3c4-4489-90b3-3c526efb8a5e"
        },
        "item": {
          "id": "647a1944-e593-4eff-a22e-5bbbf9443632",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f95eff94-4b72-4062-be7c-893c74850d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9debdb-4f0f-4b1d-9b08-359b8634ec81",
        "cursor": {
          "ref": "b0702423-9d8d-4174-ab0b-125357ffe8c2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4bfba5ca-9541-42c7-a61e-5e778a663d7b"
        },
        "item": {
          "id": "cb9debdb-4f0f-4b1d-9b08-359b8634ec81",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "07b77e2c-b56c-464f-9b9c-fe22f9389906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91699ff0-cebc-464e-8d39-c081ef4b6b40",
        "cursor": {
          "ref": "c4650fed-02fb-4ec2-b6f2-13ad4f91974c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cb285d94-6edf-4cd0-b36e-cc9cd9431d73"
        },
        "item": {
          "id": "91699ff0-cebc-464e-8d39-c081ef4b6b40",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b7f39a4d-52da-4e09-82be-35e8566c3dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20d7766-4e0b-4704-bdb3-a23ca8aab2eb",
        "cursor": {
          "ref": "9fb192c6-ecce-4118-8046-ab34a447ea79",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "55142a1c-d8ea-4a21-8eee-b2f95ba97490"
        },
        "item": {
          "id": "b20d7766-4e0b-4704-bdb3-a23ca8aab2eb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5f0c1693-35c7-4d7c-8589-c856f2903348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dab035-629b-4116-8d9c-bda3347ccc45",
        "cursor": {
          "ref": "8a7d6f79-b511-4d6d-92b8-e7e5e1707a73",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d53cf388-2e0a-4111-b96b-4f9229cdc5c4"
        },
        "item": {
          "id": "b8dab035-629b-4116-8d9c-bda3347ccc45",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "65a4a1fe-d71a-4052-b39c-d7640a211691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5f20a6-8c7d-4c37-ba91-362608324d8c",
        "cursor": {
          "ref": "8ef7fc1b-2398-415a-91a5-ec3d2ed029e2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0fbad992-c74d-49d6-b1b7-3b418ab58cc7"
        },
        "item": {
          "id": "9e5f20a6-8c7d-4c37-ba91-362608324d8c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2965313c-113e-482f-afe1-992faa753473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dac8e36-d180-4e41-995b-f48d4e3e2a5e",
        "cursor": {
          "ref": "effa5b98-083c-495b-9078-7f971c3cb685",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2d10aa1-853f-443b-ac16-d3a6f05c8e30"
        },
        "item": {
          "id": "4dac8e36-d180-4e41-995b-f48d4e3e2a5e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7dccad8-6c15-40fd-ab43-1dc37792f279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32cc524-470f-437a-a28e-dfb5aa027e4d",
        "cursor": {
          "ref": "9b19ecca-d208-411e-a911-b262cefd4d93",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d5aedf8a-6d73-4dae-a7e0-8407694a6655"
        },
        "item": {
          "id": "c32cc524-470f-437a-a28e-dfb5aa027e4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2738fcb1-81dd-4ee2-9876-764915b5c3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdbbe5b-89d4-4c1f-8591-bb0c6c406331",
        "cursor": {
          "ref": "4f9c3869-b694-43c0-ba19-d2c5c8d09cd2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e9b7aa29-ee88-46d1-8ca2-646150dedf91"
        },
        "item": {
          "id": "fcdbbe5b-89d4-4c1f-8591-bb0c6c406331",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0482bbbc-cc38-4dff-84e1-4e4b9923164d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe066fe-b00b-4335-a983-621582e9ed0e",
        "cursor": {
          "ref": "1727239c-1db2-4619-855e-16c5e3d7b902",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "98e70948-cc79-49f5-a2a9-90b6dcc67668"
        },
        "item": {
          "id": "bbe066fe-b00b-4335-a983-621582e9ed0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e99573ac-c666-488a-985a-2575491fbd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f13b43-974e-4a35-a1a1-ecbf4aa77588",
        "cursor": {
          "ref": "cd9ec2b2-e3c3-45a8-af3f-fea2391aea78",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9105cfbf-2582-4617-a4d3-2e5a704b5f5b"
        },
        "item": {
          "id": "a5f13b43-974e-4a35-a1a1-ecbf4aa77588",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1ccd92a4-7da2-45bc-9812-d32f212a8e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d59f22-caad-46b9-9d1d-667c3953250f",
        "cursor": {
          "ref": "6fa4dfbb-049e-4d06-bdf6-dcda62490a03",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "431a380d-44b4-40ec-88e2-714ff825b182"
        },
        "item": {
          "id": "95d59f22-caad-46b9-9d1d-667c3953250f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e9fb16af-b287-42c4-bf72-48a93007f294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0730bafa-1e82-4eca-aafa-8f73c6b43939",
        "cursor": {
          "ref": "fd6f3533-1a91-4cce-9ef9-650729db4eac",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "11e19784-4b67-419f-afc8-2c33e8e187c6"
        },
        "item": {
          "id": "0730bafa-1e82-4eca-aafa-8f73c6b43939",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8b91edf7-1223-4c60-a9cc-c12fbd5638bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235c76e0-3e92-422b-8bce-1b52564200df",
        "cursor": {
          "ref": "1c8efd11-9cbc-48c3-91d1-477c84d2d516",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "98d9ba91-f7c4-447e-9fa4-d411e4ecf042"
        },
        "item": {
          "id": "235c76e0-3e92-422b-8bce-1b52564200df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b1c25e64-1c8e-4cb4-be9b-da1bbbbfb202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2155463f-c144-4fa8-9a1c-fe45b73fdfe8",
        "cursor": {
          "ref": "d38d25f9-2410-4677-9808-5e927179efa8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74158a90-f874-4dd2-a9b1-9b8cd8b4d7b7"
        },
        "item": {
          "id": "2155463f-c144-4fa8-9a1c-fe45b73fdfe8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3e790303-f873-4e12-816e-10c90843ccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374f56e-ba72-484d-86ac-c68dbc136252",
        "cursor": {
          "ref": "ab2863a1-b977-4a7c-a1e9-4c34275886aa",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "98b1f652-3699-4ce6-a9a5-55f1d0a6f853"
        },
        "item": {
          "id": "9374f56e-ba72-484d-86ac-c68dbc136252",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cac09c51-746c-4204-be01-0792623311ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777c96e2-1334-4984-a2e7-96e09730bab0",
        "cursor": {
          "ref": "2b4a94ba-15a1-400a-9178-a868b96476bd",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "76ff18d8-e947-4d8e-9de4-c7f09d9d15d0"
        },
        "item": {
          "id": "777c96e2-1334-4984-a2e7-96e09730bab0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4e8212d1-3cc4-4714-9f93-d17266065f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9115209-fb99-4931-8830-6e94b98193d4",
        "cursor": {
          "ref": "1d404191-881b-44a1-8db2-89ae4ad22eb4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bb0def88-86c3-46b7-9fc3-d8f5f38da141"
        },
        "item": {
          "id": "c9115209-fb99-4931-8830-6e94b98193d4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8193bc2e-923b-47a4-9d71-3dc212d597d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da658c-4d94-48bf-a2bc-6db891bc9dfb",
        "cursor": {
          "ref": "0e41f792-010f-42e6-8028-15bb6c41bbd2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da59b3d1-4b60-4ef7-960b-81f5f17fd746"
        },
        "item": {
          "id": "40da658c-4d94-48bf-a2bc-6db891bc9dfb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a8c32176-2a21-46ab-a67f-022b4266cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae961de9-77dc-4473-a47d-5b1acd706876",
        "cursor": {
          "ref": "4944dbbd-51c6-4ae7-849a-fcac136d70b4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f55f364f-f3ce-4325-8502-7cd29aff2c01"
        },
        "item": {
          "id": "ae961de9-77dc-4473-a47d-5b1acd706876",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "543e212e-d66b-4020-b504-0897f6c67904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353ff53-b3bc-4bec-9383-b049de826287",
        "cursor": {
          "ref": "d1c3325b-4b9b-4578-817d-798eedf93b62",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e1e9d7c7-edae-404b-9de0-0c6499d87af3"
        },
        "item": {
          "id": "0353ff53-b3bc-4bec-9383-b049de826287",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e7fba8b7-17da-404b-b0ab-5cd5c8afac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8f3abc-1c8f-4700-86c6-257038dded02",
        "cursor": {
          "ref": "29e74741-60de-4b9d-8ab3-db9c7bc3b351",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "001980ab-faff-47a0-a39f-6d54955d294f"
        },
        "item": {
          "id": "be8f3abc-1c8f-4700-86c6-257038dded02",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6e14ae1f-1839-483f-9b0f-c0561bb65a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254cca4-9fa5-4f59-b195-76a0bca9403a",
        "cursor": {
          "ref": "b47f4e37-d7ac-435f-a976-4185c6fd9b56",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0fa11398-ef54-478e-8629-3761db420089"
        },
        "item": {
          "id": "a254cca4-9fa5-4f59-b195-76a0bca9403a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f0381206-1b17-47c9-867c-5a9a7bb8cc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916b0d60-a9c3-4c21-ba6c-216ea440a657",
        "cursor": {
          "ref": "0ccb684c-e0e9-446a-928c-eb65b90be56a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2d8f61e2-ee31-4919-b9db-f3de8ac75739"
        },
        "item": {
          "id": "916b0d60-a9c3-4c21-ba6c-216ea440a657",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6c891b9d-072b-47dc-b75f-3ce8cdcb710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a6962d-c882-49a9-82d8-a5fce6abfcde",
        "cursor": {
          "ref": "f01116be-fce9-4e63-a48e-f8a68ad3a337",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9c2aab9b-8b16-4ea7-aaa6-325744800b64"
        },
        "item": {
          "id": "a8a6962d-c882-49a9-82d8-a5fce6abfcde",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6b73fc1b-c17b-4fbe-96b0-b68a82cbbe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a3297-e331-4dd1-bb8e-6a54194ca16d",
        "cursor": {
          "ref": "5e4077ff-089e-4be4-989b-8e8847cf5547",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d20db2ad-0d31-49c9-a589-b23a350edf81"
        },
        "item": {
          "id": "f98a3297-e331-4dd1-bb8e-6a54194ca16d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "00b3bbbf-9448-4f71-97c6-c5fa32e51b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a59be9-9e3b-42e3-b24a-563ac2f9cf9f",
        "cursor": {
          "ref": "5afc61f7-252e-4b85-9310-7f8f03d64a94",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8a4c0dcb-6e4a-46fb-9d4d-74c1fd794169"
        },
        "item": {
          "id": "38a59be9-9e3b-42e3-b24a-563ac2f9cf9f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "56481d07-b37e-45e8-89ca-b5e2531a395f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e87f4d-4927-4aaa-86e9-3d07aebb9f41",
        "cursor": {
          "ref": "deb69415-5507-4644-8fa7-36533c5f31c0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2f98917c-5c0a-46f6-87a5-17d757fdd0c3"
        },
        "item": {
          "id": "c4e87f4d-4927-4aaa-86e9-3d07aebb9f41",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6a962078-a5ce-4b27-b80c-d890413021b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99876018-19d5-46b9-8d57-680bf6d868fd",
        "cursor": {
          "ref": "e918e9a4-4ede-4381-8fe6-8724d96786cb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "92c74e74-fb1b-4ecf-bc84-0a982de27335"
        },
        "item": {
          "id": "99876018-19d5-46b9-8d57-680bf6d868fd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "00d61952-7806-479a-af3d-92d17dd15afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf5e28-71b6-4c18-9d78-d6ee3951a83a",
        "cursor": {
          "ref": "a97fd78f-0045-437d-85c3-0719f8cdf3ca",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ca365402-9433-4d8d-a37f-0dc39ab407f0"
        },
        "item": {
          "id": "acaf5e28-71b6-4c18-9d78-d6ee3951a83a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "097c55a5-fcb0-47ef-931d-88b03932f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988dedcd-dc0c-4896-8b88-8d373249ee94",
        "cursor": {
          "ref": "bcba151b-af83-4313-b32d-9a4089e449b6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "429bddd0-3644-4a74-bc5e-a77e6fcb3406"
        },
        "item": {
          "id": "988dedcd-dc0c-4896-8b88-8d373249ee94",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8f105f6b-898e-4942-afa0-85321fcdca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ca5cf9-e58b-487d-a1f0-877d56c7dcb5",
        "cursor": {
          "ref": "8c0c64ee-9653-4751-b1e9-5b5bf5613c41",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "54778195-538d-499e-967d-af1a30e07527"
        },
        "item": {
          "id": "69ca5cf9-e58b-487d-a1f0-877d56c7dcb5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8081d632-0991-4d4c-a67e-df246765e1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f690a51-8670-4f4d-bb39-1e847684a8c7",
        "cursor": {
          "ref": "5c85fd63-74f1-4d41-aa09-313994c5fe6b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a9c82a1e-f686-4359-8ed7-6ea77a49cd7d"
        },
        "item": {
          "id": "6f690a51-8670-4f4d-bb39-1e847684a8c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c400be48-7260-4b53-b8b4-775b91784711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5515a10-7149-4256-8da6-3c54300fe809",
        "cursor": {
          "ref": "6e359e29-3794-4175-8156-c103e50038fa",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3c047337-e11c-4e4f-a576-8ef28b20946c"
        },
        "item": {
          "id": "d5515a10-7149-4256-8da6-3c54300fe809",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3678dc3a-6900-4c4d-8ecf-756c8e2b7cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c598fae-0009-44c8-8a1a-88adc23c32ac",
        "cursor": {
          "ref": "0fe2301f-0ed5-44e4-9bc2-e179bc998d38",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6726ef65-2588-439a-9c40-ae2f39bf313e"
        },
        "item": {
          "id": "9c598fae-0009-44c8-8a1a-88adc23c32ac",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "82a41a80-0a05-423f-8d89-7647444507b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade39e75-c4d7-4a32-97a7-e05ca80177e5",
        "cursor": {
          "ref": "6222f820-3b4c-4967-9ee9-9a5adc732757",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a059746-d55d-491e-bde1-5686ddafddde"
        },
        "item": {
          "id": "ade39e75-c4d7-4a32-97a7-e05ca80177e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9dd3e395-0033-4d77-961a-fc155ce57629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b318ea-19fd-45c1-9032-f8753a251797",
        "cursor": {
          "ref": "8b98d659-37a9-41db-ad24-1f7c51e4da88",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8a10dd3d-989e-425a-bdad-0154323b5b11"
        },
        "item": {
          "id": "28b318ea-19fd-45c1-9032-f8753a251797",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "059f7144-9020-4a9a-9f09-d254b9b29420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9321b03b-d044-46ee-9359-10dffc284ba0",
        "cursor": {
          "ref": "14dc32c0-4e7f-4d07-9ef1-4bbb410fa3b3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "06d6b8f1-cdae-4e9b-982c-420138948837"
        },
        "item": {
          "id": "9321b03b-d044-46ee-9359-10dffc284ba0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8dbe5ef2-d1b0-4a97-8f70-51d6558eaa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489f2e9b-4fa6-407a-a4cc-91e6ad85e848",
        "cursor": {
          "ref": "72295c85-a660-488a-8a5c-699188575572",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "da5bda76-8f35-4f51-90e2-84f0313cce58"
        },
        "item": {
          "id": "489f2e9b-4fa6-407a-a4cc-91e6ad85e848",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9e7fb11d-1028-4311-8a93-6b39f25260b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f4843-5b7a-4f7c-a00a-13427d777a50",
        "cursor": {
          "ref": "e3ec3d59-8f96-4075-a2c9-459ac96a4445",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "265fd944-8f94-4fa5-b7e9-4dfc2ba772a2"
        },
        "item": {
          "id": "250f4843-5b7a-4f7c-a00a-13427d777a50",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a63232f7-f398-4b63-9201-ae8d08a46356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6f8d79-bc7c-47b9-9046-cc3550cd6e7d",
        "cursor": {
          "ref": "cd2d4822-e0d5-445c-b28c-6c4934d82829",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b6bf11b0-3101-48ae-8c2f-3ff8568c9ecb"
        },
        "item": {
          "id": "9c6f8d79-bc7c-47b9-9046-cc3550cd6e7d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b54b488e-1811-494f-8d91-c2e555a1fe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cea08b1-4813-415e-8e03-d7ba2450f6e2",
        "cursor": {
          "ref": "35553a74-caba-44fa-8513-fc43d538a5f9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "13eba20d-9baf-47b8-b36e-8a4f8ce22e74"
        },
        "item": {
          "id": "5cea08b1-4813-415e-8e03-d7ba2450f6e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "198332fd-772e-4821-bcc5-5333cf719130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1159741-e16a-44ab-8b24-e914ebe4188a",
        "cursor": {
          "ref": "cca8ec71-9692-4476-89b8-51bf1642a009",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d7fa5a48-7086-4cdb-86da-7d75350f725a"
        },
        "item": {
          "id": "a1159741-e16a-44ab-8b24-e914ebe4188a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ace436f3-ed9e-4759-9fb8-2569a23af8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c243fcea-0ee0-46fe-87c7-f088acde6cac",
        "cursor": {
          "ref": "bab2adef-102b-42c5-acbf-e754ab5aabc1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "194bf135-7afb-4437-bcc1-52b7743c9f93"
        },
        "item": {
          "id": "c243fcea-0ee0-46fe-87c7-f088acde6cac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8456d33f-7474-459a-b2e6-00672c514176",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61261ac5-a037-496e-9218-494ace2333ba",
        "cursor": {
          "ref": "06a5ea45-2a74-4b1c-8583-50adece904dd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4fa3888f-748d-4246-aedc-3823fd4beffb"
        },
        "item": {
          "id": "61261ac5-a037-496e-9218-494ace2333ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e0672134-0b0f-44f2-b71e-675bdba71d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "71ced866-ba78-4a26-8f8d-4df31b0dc72c",
        "cursor": {
          "ref": "38d742c9-ddca-437c-ad4f-7c3fad195af2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c462fa50-c2e8-4cf3-8ed7-1355a0ebe966"
        },
        "item": {
          "id": "71ced866-ba78-4a26-8f8d-4df31b0dc72c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a0520ce1-4023-4059-9772-de27a8dbe10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fea31627-3be2-49cb-8003-6175f8a9b634",
        "cursor": {
          "ref": "18789d8f-0b67-4061-b4d7-b23cc75aee36",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6184948a-0a52-44a2-a70c-44d5881ba3f2"
        },
        "item": {
          "id": "fea31627-3be2-49cb-8003-6175f8a9b634",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "76fea2fa-280e-441b-aa9d-a56a1ac04f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "92ad9ae3-8800-4d06-be94-63a3b841a928",
        "cursor": {
          "ref": "162cc92a-4380-4806-ab97-67cab33d71ce",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c2464ebe-5d20-4a79-8a53-8609ede93c85"
        },
        "item": {
          "id": "92ad9ae3-8800-4d06-be94-63a3b841a928",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "780ce8b4-82de-4979-a69f-fd155ba42df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "df9ca55e-27e8-409d-92f7-8ebed5913ed9",
        "cursor": {
          "ref": "2927c421-b322-4f92-bfb7-360e59d5286d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9206689e-c4e1-477b-b34b-88f9094cbcaa"
        },
        "item": {
          "id": "df9ca55e-27e8-409d-92f7-8ebed5913ed9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b13a0226-1759-46ef-be25-c6e909a133fe",
          "status": "Created",
          "code": 201,
          "responseTime": 8097,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "811da555-5e41-48a8-990a-d84ffb9e6ce0",
        "cursor": {
          "ref": "7d302f6f-84a8-485a-a106-b95d46571188",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff0655bd-0d9b-4416-a12e-14e602a97c06"
        },
        "item": {
          "id": "811da555-5e41-48a8-990a-d84ffb9e6ce0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "85cb8615-63cd-4385-882f-407994035be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0325ef0e-e3f6-4762-bbec-08af7853cdd3",
        "cursor": {
          "ref": "16a1a078-feae-4aeb-a50b-9167ba3071f6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c2f83acb-6ff7-492f-a32d-baededf7fcf1"
        },
        "item": {
          "id": "0325ef0e-e3f6-4762-bbec-08af7853cdd3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "928dd97d-463e-4fb8-8950-892e6a2f4490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bc2b14e3-62e9-43d0-93c7-49dd2cc91ed9",
        "cursor": {
          "ref": "006fa106-bb60-48b3-b8a3-eaa1669c25ab",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed1ab425-fadf-46cc-8ef6-38544df96c7a"
        },
        "item": {
          "id": "bc2b14e3-62e9-43d0-93c7-49dd2cc91ed9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "407944db-e308-409d-92a6-f688b3634ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9822f-ba62-45ab-a513-5d6fdc078690",
        "cursor": {
          "ref": "26fa4849-21a7-44fe-88da-0fd215e2c18e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "508333ce-d9b0-4d10-82fc-175e17426e21"
        },
        "item": {
          "id": "d8e9822f-ba62-45ab-a513-5d6fdc078690",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a32c97c-4e92-4f06-8afd-ae4d1b2d9eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdd6a31-6fe9-4279-b836-a4750118919c",
        "cursor": {
          "ref": "adf23aff-5c97-4958-b4bf-e42ca81de2e6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "400a401c-61a5-460f-97f8-f1a063ba0560"
        },
        "item": {
          "id": "fcdd6a31-6fe9-4279-b836-a4750118919c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "28e20b97-88d5-4766-ab23-8dec306c03aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5961cdf-9391-41b9-9319-a73ff8a95265",
        "cursor": {
          "ref": "ac7ea9f9-f9e7-4a51-9710-b60cb9ffc2b9",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ddff88f-1a01-4b77-8934-17c0117c4f50"
        },
        "item": {
          "id": "b5961cdf-9391-41b9-9319-a73ff8a95265",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "806a5e63-5a40-4e09-bf89-355a72069c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b755cc8a-af8a-4932-b56b-181ee99f865c",
        "cursor": {
          "ref": "450ee74d-1df2-44aa-a482-48a6850bd13c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "93d0c20f-4b67-4124-b93f-a621ef2698a4"
        },
        "item": {
          "id": "b755cc8a-af8a-4932-b56b-181ee99f865c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e790614e-afe7-48ad-9122-6f9c8c758773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a82080-4a4f-426d-ba80-c63a67a9116a",
        "cursor": {
          "ref": "d6ce305e-3008-4a54-bae4-656e8fe17159",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64288daa-ad50-4c03-8d16-dda82ed99d9d"
        },
        "item": {
          "id": "06a82080-4a4f-426d-ba80-c63a67a9116a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b16fca33-14a3-43fa-a65e-85b5f6651dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1482cdce-a36e-40c2-a958-f8cabd3293d3",
        "cursor": {
          "ref": "054c535e-c1c5-4926-99df-ab4781a80b0f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "adea2e73-2c95-4757-ac64-450262186890"
        },
        "item": {
          "id": "1482cdce-a36e-40c2-a958-f8cabd3293d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1e164960-0f9f-4203-ac2c-e61180f1d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db93a6f5-8945-4ea5-858f-6f253507ef89",
        "cursor": {
          "ref": "e3d8ade8-18f9-4375-adc8-9fe683b5dce1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd6e8994-133d-40c7-88dd-146d4f802929"
        },
        "item": {
          "id": "db93a6f5-8945-4ea5-858f-6f253507ef89",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "531bede9-ee9b-4ae0-9eea-ae8e03a318de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d57062b-58b1-4c47-974c-54890bd09042",
        "cursor": {
          "ref": "c0433b99-1354-4264-b96c-0ad4b11163bb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d373f75e-6659-4990-ba2b-d6376d42dffd"
        },
        "item": {
          "id": "8d57062b-58b1-4c47-974c-54890bd09042",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bee66b35-0851-4174-a235-77a6f961afe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6997315b-abf4-4f96-903e-614eef32f8a4",
        "cursor": {
          "ref": "58156581-e6b3-4b1f-84fd-7938eba501a8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db2c45d9-9700-4b04-a997-fc0aa4e4f0e3"
        },
        "item": {
          "id": "6997315b-abf4-4f96-903e-614eef32f8a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0341c308-e007-4b89-ac8b-5db80025fcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85c27e3-e255-4cd2-8142-d564d6784e50",
        "cursor": {
          "ref": "7af3439e-2932-4da1-92d3-84c9aeb46dd0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "089bcab9-4ac7-4299-bbc7-dc29d57d7f0c"
        },
        "item": {
          "id": "d85c27e3-e255-4cd2-8142-d564d6784e50",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01bc3ef6-c776-4641-b22b-59297ccde57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e6cfb9-7192-43d2-9b36-ccd624a99067",
        "cursor": {
          "ref": "da37641b-33e0-46ac-bfc7-6d10380644ce",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c94d4869-5601-4895-8156-925bde036847"
        },
        "item": {
          "id": "b3e6cfb9-7192-43d2-9b36-ccd624a99067",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bbed83ba-64e9-4f37-b11a-3f216fa8e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584fd7ba-dc5f-4d6c-a02b-e303d7e7919d",
        "cursor": {
          "ref": "bb74efc6-3301-4cb2-b1cf-0bbccbef42b4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "756a4f29-4fa8-4ec2-b6f0-ac2830afc31a"
        },
        "item": {
          "id": "584fd7ba-dc5f-4d6c-a02b-e303d7e7919d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "654a745c-8f85-4770-aa3e-8f11873ce200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6608a-56e7-409a-b654-e6a3dabc223b",
        "cursor": {
          "ref": "e9430b2a-eead-4f9f-9a4a-c7d70f0d4372",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b191d39c-6a0a-42d9-a0da-d1d7d95a3a20"
        },
        "item": {
          "id": "81f6608a-56e7-409a-b654-e6a3dabc223b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f0e0e71-24ce-4600-a7c5-e9a1b830bab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bee311b-5c09-4c23-afea-bb7476b98f7f",
        "cursor": {
          "ref": "b9e8f2e2-5a95-4b53-90c4-6b8bd5b0530a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d6ad4c1-7473-4295-b1b2-8be64c7d34e8"
        },
        "item": {
          "id": "0bee311b-5c09-4c23-afea-bb7476b98f7f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "920ce791-48aa-44ff-b3c1-b6cd0701901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b071964-526d-4e72-8125-5cc35db630e1",
        "cursor": {
          "ref": "3278b663-1a22-4de3-afcd-b47d3747dd18",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "afcaf6bd-26b0-41fa-ba5d-6c017e4117f6"
        },
        "item": {
          "id": "6b071964-526d-4e72-8125-5cc35db630e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "92acd17c-a233-4eeb-9713-f3aa76f50873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4391066d-9a6a-414f-af82-6d0d4c3c1604",
        "cursor": {
          "ref": "c6e3361c-5ba2-4859-9080-e5aceb312d85",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c14b66a-703d-4bc3-8e1b-4b6426d209e3"
        },
        "item": {
          "id": "4391066d-9a6a-414f-af82-6d0d4c3c1604",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "45b28f07-f8aa-4aa8-9024-c5b2b541daff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c6b0af22-d297-4d07-88cc-7fdb4231f670",
        "cursor": {
          "ref": "896967be-64cc-48d3-84aa-03ff573c0fbb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "653ca960-7cda-4c6e-81b7-f26afa012c9c"
        },
        "item": {
          "id": "c6b0af22-d297-4d07-88cc-7fdb4231f670",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2de58e3-e703-4111-a816-ee1507e02015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc0362-1bab-4213-b1e2-22d339120287",
        "cursor": {
          "ref": "4d934bb1-c2cc-4612-9fb7-d633d16b95ab",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ebb6db89-0309-4f92-87a1-db3f099401c4"
        },
        "item": {
          "id": "6ddc0362-1bab-4213-b1e2-22d339120287",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8b99ffa-f0c2-4de6-a6ae-3c9a9d1eb978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a0111-8e07-4fd6-9461-25d2f3711118",
        "cursor": {
          "ref": "2440610d-369b-41c0-888f-f6c5e5a78bf4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7fff8a2c-80b8-4071-a4a5-a11cc433da34"
        },
        "item": {
          "id": "6e0a0111-8e07-4fd6-9461-25d2f3711118",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6671cf04-dff4-4b86-a7dc-482095e0331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b544faa0-f4d9-43d3-b5b7-a2b00890fcdf",
        "cursor": {
          "ref": "ce5dc30f-8592-483e-9a4f-b4bebdfd6fb8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2199327c-96ec-4aa5-9069-4516b96f93cd"
        },
        "item": {
          "id": "b544faa0-f4d9-43d3-b5b7-a2b00890fcdf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5bff54a7-06f0-4ffb-912a-e28e926c1b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715db7c3-04da-40c5-ad91-0759529ff8b4",
        "cursor": {
          "ref": "98a1adc3-8828-449c-bb7f-f32a097d231a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "71ef6b10-dfdc-43cc-8461-230ba6596aff"
        },
        "item": {
          "id": "715db7c3-04da-40c5-ad91-0759529ff8b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "986085aa-c39b-48b6-a61c-ffdc765e61cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b8cd8a-e351-41a6-9dc1-c22ee7164849",
        "cursor": {
          "ref": "857a0e45-1199-4c5d-9aba-8c62d8f93c5e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "13979911-f30c-44da-8f0b-577250ac9e96"
        },
        "item": {
          "id": "87b8cd8a-e351-41a6-9dc1-c22ee7164849",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "36695277-7e46-487d-ae96-2b074a9460e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa3ba8f-c613-4a78-ab0e-533f0b283e6b",
        "cursor": {
          "ref": "2d98b523-9d09-49fc-a9eb-77575fbf8f62",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "276522ce-c41f-4757-9e43-c4d0e3285334"
        },
        "item": {
          "id": "caa3ba8f-c613-4a78-ab0e-533f0b283e6b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f01a590f-0bbe-4866-b694-7d571f8293b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e025bf4-2c42-4628-bae7-86f99c5c6ae7",
        "cursor": {
          "ref": "4834b4c8-d69e-4d73-aea6-263c70ff0f30",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bc881323-1329-4f24-9d6d-6b672589b344"
        },
        "item": {
          "id": "0e025bf4-2c42-4628-bae7-86f99c5c6ae7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee5466ad-41bf-4cae-9c8c-fc240ef2ef6b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 238,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "12f9ba51-6796-4ac3-9463-ea2a3ed1cef7",
        "cursor": {
          "ref": "c8c72b60-d289-4474-b079-92d8f1c78605",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2c16d91c-f2ae-4f42-b7b1-3cc0d7db9e8f"
        },
        "item": {
          "id": "12f9ba51-6796-4ac3-9463-ea2a3ed1cef7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b13bce61-d689-4936-b5b0-9e8a3ee03541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40d4083-7649-49a8-a821-5c9552d0e5c9",
        "cursor": {
          "ref": "f9431c2f-0176-437d-b95b-6c8f38d55c22",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "216b0b40-2feb-4a2e-86dc-9f0ab3e9b6ca"
        },
        "item": {
          "id": "c40d4083-7649-49a8-a821-5c9552d0e5c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "04c0723d-e7a7-4416-8686-5f7c37dd923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c348eb9-a1f0-46d4-b4b4-0e93daa1cf37",
        "cursor": {
          "ref": "35c75743-63f6-419b-ae51-34a2b76ea11c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "85c39171-4ead-4a75-8627-780aebcf2a6f"
        },
        "item": {
          "id": "7c348eb9-a1f0-46d4-b4b4-0e93daa1cf37",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b26d5fb2-383d-406c-9034-fc427e2477f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19707f06-1c96-496e-a7f2-3270fc37859f",
        "cursor": {
          "ref": "5ddbe7f3-fa06-4961-90c7-e794549cbe13",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3f820b7c-9689-4b10-b6fa-bffe125ccede"
        },
        "item": {
          "id": "19707f06-1c96-496e-a7f2-3270fc37859f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7016130-e937-4a1d-a95d-6471fe9c1539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8835e7ca-d689-4360-a199-5146375b7290",
        "cursor": {
          "ref": "28c1b648-6fa7-473b-8405-e3851a859331",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0afe489e-3dfb-4972-94e4-796c425c6f0d"
        },
        "item": {
          "id": "8835e7ca-d689-4360-a199-5146375b7290",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "09274d85-9da8-4968-a2c5-5ad636bd1d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96b2a6f-b611-4f28-a691-d9f938931431",
        "cursor": {
          "ref": "bf233e77-5bbc-4456-a3a1-84371c909c1a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f762313b-d445-4c5a-9c19-24fbb32960c7"
        },
        "item": {
          "id": "b96b2a6f-b611-4f28-a691-d9f938931431",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3fcc6c07-0251-4f7d-971d-2f5bde8392c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e73b9bd-9015-461a-925b-a984f6e9ae4a",
        "cursor": {
          "ref": "c3288403-9f57-43b3-86e0-664e92435496",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ab9e501-4c12-4dc5-9925-60b4a7b4907c"
        },
        "item": {
          "id": "7e73b9bd-9015-461a-925b-a984f6e9ae4a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e0215c25-1c24-4909-b3bb-19697f246ba2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5129582f-5fff-43cf-8e5a-85d20dfa8aca",
        "cursor": {
          "ref": "176f3045-2574-40dc-8378-5168de336dd7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "79779b49-4275-4291-8e4f-6c18a0ba11b3"
        },
        "item": {
          "id": "5129582f-5fff-43cf-8e5a-85d20dfa8aca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ef46f8a6-6972-4a03-99a0-c209e5eaf95b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6285798-27b6-452d-ab83-952fc230fb5f",
        "cursor": {
          "ref": "95ef1149-5c0b-4f08-a7d5-610413ecd3d1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0adfea6b-5b1a-40dc-b7fd-c53fae149e44"
        },
        "item": {
          "id": "c6285798-27b6-452d-ab83-952fc230fb5f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f288f1e-ccb8-496f-9773-20277a8d90ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6492197-4f1c-4b81-b1fb-9c17acde130e",
        "cursor": {
          "ref": "55c16ac4-d7c1-45b4-a0f4-df14083492a2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "daacc509-8b87-4bdf-9991-31dcfbda1f59"
        },
        "item": {
          "id": "a6492197-4f1c-4b81-b1fb-9c17acde130e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5ea55aae-0797-4360-a265-820479b6ebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466c4774-a62d-430d-87df-e0017c307a5f",
        "cursor": {
          "ref": "36738fd7-439a-4176-8a6a-7bad9486f181",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2bb6e10f-f5fd-40f9-8086-37033ba87c32"
        },
        "item": {
          "id": "466c4774-a62d-430d-87df-e0017c307a5f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d1f9854-84f9-4f0f-99ff-619bc2f06679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee36288-8634-4093-a0b2-15c0256234ea",
        "cursor": {
          "ref": "80c125e9-066b-42ed-8e6f-f0b4cb1415ba",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7f1493f8-9580-4942-831e-71f121adebb6"
        },
        "item": {
          "id": "7ee36288-8634-4093-a0b2-15c0256234ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b823e9a-9939-435b-b910-8e91bd1c3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbbee01-ad39-41d5-b2b7-f68462f356c7",
        "cursor": {
          "ref": "a61a92cd-bc99-49ce-96bb-cb015ab949a8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2888a81f-fe4e-4952-b7a4-9b609d7155e0"
        },
        "item": {
          "id": "bdbbee01-ad39-41d5-b2b7-f68462f356c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c7a8540-8979-460b-a746-d06662ad1ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e53ec1-28ef-416e-a7d8-7b879cb53702",
        "cursor": {
          "ref": "014158ad-4599-4884-aad4-247dbab7a442",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c7612424-a363-40d2-bb16-2e3e6dbb4104"
        },
        "item": {
          "id": "38e53ec1-28ef-416e-a7d8-7b879cb53702",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7c9aa1a-6a52-4f29-b53b-e53db7559f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9355197-d901-45c3-91d1-5d428ff8e03e",
        "cursor": {
          "ref": "6d1fd305-80d5-4002-81a5-6c51b1ec3d3c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fb23358f-94e8-4525-82ec-a53f10828bd7"
        },
        "item": {
          "id": "e9355197-d901-45c3-91d1-5d428ff8e03e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71d44d7a-4c82-4405-9253-ba163344cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c048f71-001d-492f-82ae-97a3b2254cb1",
        "cursor": {
          "ref": "87327b31-39d7-4ec0-a2cf-821c8f09861c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa82c257-9d2b-43e2-9097-da432ab9deeb"
        },
        "item": {
          "id": "5c048f71-001d-492f-82ae-97a3b2254cb1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c28267ca-cd46-4b7e-b079-75e671886f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a3ec63-db71-4920-a8f9-efaa8e93c1ce",
        "cursor": {
          "ref": "521094b4-caee-4594-80f0-d4f0d4e35ed0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2177055a-1ffe-4230-895d-658d3797767d"
        },
        "item": {
          "id": "95a3ec63-db71-4920-a8f9-efaa8e93c1ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de5f0af2-3d13-4ebe-acb7-d8fe8427512d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37c975c-37e7-4b71-b7fd-a0cf1a91182a",
        "cursor": {
          "ref": "c375df61-4209-40df-908d-515a8957b28c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c7e51745-af29-4bcb-8d83-f918d1b94008"
        },
        "item": {
          "id": "b37c975c-37e7-4b71-b7fd-a0cf1a91182a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "12cd3d25-688d-44e4-b788-268ac29d178b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9be1297-c2e2-4f00-aa43-7ce4ce8ce115",
        "cursor": {
          "ref": "287468de-f9a3-46c2-b7ec-e2d78dbcdeb7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f5029bdc-7af3-4588-b463-2599cdc83eb2"
        },
        "item": {
          "id": "c9be1297-c2e2-4f00-aa43-7ce4ce8ce115",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "78f309f6-2616-45d7-92e8-ae271ca03dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d28f27a-a99a-4c87-b6fa-317974469ce4",
        "cursor": {
          "ref": "ff048367-c10c-49c0-ba0d-2234022c2a43",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fca3e9df-f868-4134-bca2-e60e51c3cdb2"
        },
        "item": {
          "id": "2d28f27a-a99a-4c87-b6fa-317974469ce4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0cd476dd-7e81-49b0-979c-93e952624fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10152cfb-5eec-43a7-92f0-ebd639ed057a",
        "cursor": {
          "ref": "bce079e4-3b7e-4bd5-ba39-f0d22f70fff0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7f8f5c28-1d8f-44b8-9b42-aafc67454675"
        },
        "item": {
          "id": "10152cfb-5eec-43a7-92f0-ebd639ed057a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "077c5b91-3aea-48b6-aa0f-0e7f3cd2dd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fd4341-052e-4367-826b-ca5a20c3e58a",
        "cursor": {
          "ref": "617e7f58-a04d-462e-9c43-690091a239eb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6ca91a18-f7be-4869-8f03-cf74cd39b1de"
        },
        "item": {
          "id": "63fd4341-052e-4367-826b-ca5a20c3e58a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4d1620ba-1fae-491b-95fb-7633c5e745da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79313c7-1d09-4fc4-8bcf-f5c1405e342b",
        "cursor": {
          "ref": "c46b2594-053a-4021-82ed-ec33d57c107e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3fb4db2d-184c-45b9-a090-3a1a4f041be7"
        },
        "item": {
          "id": "f79313c7-1d09-4fc4-8bcf-f5c1405e342b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "429159c8-5722-47a9-b4e3-2c1f75d2862b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6283e58-1cba-46e6-8717-34c9fa0d1a13",
        "cursor": {
          "ref": "c36b6707-99e3-4671-bdbf-f1b974dc9c1b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9e0e6585-cf32-4282-8972-68c7b14b67d2"
        },
        "item": {
          "id": "d6283e58-1cba-46e6-8717-34c9fa0d1a13",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f5410b11-2264-44fa-a989-2f0ee8072229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c54776-b24f-48c8-bc67-272350a52530",
        "cursor": {
          "ref": "d38fb7f2-e3c3-482a-9c60-227c4dbedad1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6db42885-5cc7-4718-8b7a-9610c40a51f0"
        },
        "item": {
          "id": "d3c54776-b24f-48c8-bc67-272350a52530",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f7b86aee-6ab1-485c-9511-65a7d81fe96c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "83c039b5-a0aa-47af-bd6d-60b9553608a0",
        "cursor": {
          "ref": "fec87465-ce38-4331-be1b-9e45673c83ad",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7d616901-bae3-4f29-a85a-f439c9c74212"
        },
        "item": {
          "id": "83c039b5-a0aa-47af-bd6d-60b9553608a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fee5afee-3864-492d-84cd-96aff0a24f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a8e15-ed06-4b7b-8104-dd63da882478",
        "cursor": {
          "ref": "88b62410-b69a-4fa6-9c0c-a092d45d0dc8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fa911148-7339-449a-8440-c690b8e90abc"
        },
        "item": {
          "id": "7f5a8e15-ed06-4b7b-8104-dd63da882478",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c582cf9d-d90a-4418-821e-20235517adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ba60f1-2010-43ee-9d63-d3974585e4c5",
        "cursor": {
          "ref": "1449288e-1960-4389-b7f6-05c7aac18f87",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "725b6ceb-8e91-47f6-8f69-ea9b11f8a7e2"
        },
        "item": {
          "id": "49ba60f1-2010-43ee-9d63-d3974585e4c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d0fcea1c-3d85-45aa-ae62-49fccb2ffd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048c1ee2-884e-4edd-a41d-4f88720555c7",
        "cursor": {
          "ref": "dfa78fc9-f30a-4407-87a0-836f8b56c8eb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cba95176-086d-402a-a71b-cda38ea0d11c"
        },
        "item": {
          "id": "048c1ee2-884e-4edd-a41d-4f88720555c7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "06dffd4b-f32f-4683-8559-e3b2f50f163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc8be4-c1f2-4299-8ef2-aa18ccfbd1e5",
        "cursor": {
          "ref": "bd26f3f7-90c0-4efe-9273-5982b086d1a5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e21bd2bf-1804-4cbe-9adc-263365188fe9"
        },
        "item": {
          "id": "a9fc8be4-c1f2-4299-8ef2-aa18ccfbd1e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebbc8058-885b-4086-a331-a3f1d14de5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e8c2a6-0782-4cf5-9ee9-8711fcb49556",
        "cursor": {
          "ref": "278d5a2d-2dba-46f6-a7b6-c9e5a75a94b3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "140f7b54-cce7-499d-a45a-2d229d73007e"
        },
        "item": {
          "id": "84e8c2a6-0782-4cf5-9ee9-8711fcb49556",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c76b6029-7355-4baf-9c3b-841166c38ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb38f178-f96a-452a-adab-d868009b87b2",
        "cursor": {
          "ref": "0db51b68-a770-49ab-818d-a8e1d0f0bd90",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6f68fed-3d78-42ae-901c-32d76c573fef"
        },
        "item": {
          "id": "cb38f178-f96a-452a-adab-d868009b87b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a324cb0a-f2d3-43fd-9395-6f0467c95ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc303b2-90d3-47cc-9cc5-16d7f5b2fae2",
        "cursor": {
          "ref": "350b5c86-706b-44d9-9a8a-c210b7a6d566",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6202e86-e579-493e-ae96-4a925fb724ca"
        },
        "item": {
          "id": "acc303b2-90d3-47cc-9cc5-16d7f5b2fae2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "29e5f65e-9142-42bc-b31d-6fc2d97aa812",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "ec2a4183-19aa-4a70-9151-f12ebd8a5925",
        "cursor": {
          "ref": "15b138aa-c0e8-4a62-89e1-46e827fc39a6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "01babd44-f627-45b5-bcc8-beb02305eab2"
        },
        "item": {
          "id": "ec2a4183-19aa-4a70-9151-f12ebd8a5925",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5569f700-2731-4748-9649-aea2f3ee532c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ee141-7dad-4574-965c-be62981e63f7",
        "cursor": {
          "ref": "dc73e429-90b1-4803-9ea9-bc726f2d5a3b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "66675a65-a920-4adb-ac87-c26bd1e01930"
        },
        "item": {
          "id": "d59ee141-7dad-4574-965c-be62981e63f7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "54315aa3-fc74-472c-aebf-bc6a97290d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6506465a-741f-4de2-9c57-408bd0da002c",
        "cursor": {
          "ref": "5936246c-1d3a-43d1-98b6-37a0cb7aad14",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6be9e174-4301-4e21-a1e8-9dc0c2885739"
        },
        "item": {
          "id": "6506465a-741f-4de2-9c57-408bd0da002c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62e208e9-2107-4573-a771-eea82fed1cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097a2288-a14c-4793-9da4-25498a87de92",
        "cursor": {
          "ref": "17fbc2c6-94ee-4aed-98db-67e4a824c136",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "629e087e-d067-41ce-bc9b-5dc1ccfd88e7"
        },
        "item": {
          "id": "097a2288-a14c-4793-9da4-25498a87de92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b2b07f6-fcad-4919-ba35-5562be817a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f30c30-4e08-4d3e-9f3f-0180a1f0ef0b",
        "cursor": {
          "ref": "bf016e0e-3e5b-4a22-9cb6-7a5eff64fad6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "92326f6c-a3cb-46a9-9429-8f14b7c32b2c"
        },
        "item": {
          "id": "b7f30c30-4e08-4d3e-9f3f-0180a1f0ef0b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "313b3335-6ab6-49db-9e03-59650b36ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc9ca4e-07dd-4f5d-9993-852003eef889",
        "cursor": {
          "ref": "b79a8058-1a3c-48f7-b34b-3d206c0d5e8e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c728a498-ff2e-40bf-9191-894bf5307f73"
        },
        "item": {
          "id": "dcc9ca4e-07dd-4f5d-9993-852003eef889",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc87cb78-b295-4c14-94f9-c299918af68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe5a9f-69c8-4bf8-8d58-2695ff68e6cf",
        "cursor": {
          "ref": "2152e4c6-0187-467b-af4e-4ea86823b5d0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "474e0deb-084e-4d9c-a216-2f8b6b69bb40"
        },
        "item": {
          "id": "8ebe5a9f-69c8-4bf8-8d58-2695ff68e6cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a415a5d7-ba23-42d8-ba6b-c28dd64a57f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "f318d0e7-4277-4f88-8d3e-72af6788b233",
        "cursor": {
          "ref": "26a3caaf-ebce-44b4-844d-7c1bc2b12a2a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d64a8ab7-997e-4fea-9944-ac79d0645942"
        },
        "item": {
          "id": "f318d0e7-4277-4f88-8d3e-72af6788b233",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b72ac641-a299-4d9b-921f-9d36d1553db8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4b762c71-30ae-43c7-a964-aa93c31827fc",
        "cursor": {
          "ref": "bdab608c-b0fa-4d74-bef0-ea678c6a51d4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9ce0416e-d69f-4cc8-8011-f339da433cda"
        },
        "item": {
          "id": "4b762c71-30ae-43c7-a964-aa93c31827fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9225b576-a541-455b-96ce-06905d871489",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "ee1ff8f8-aae4-45c0-b8bf-626ccae9565c",
        "cursor": {
          "ref": "1630952e-daad-410d-992e-f26376ffc84b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9f50404a-0e20-47ee-80dc-46065eddb280"
        },
        "item": {
          "id": "ee1ff8f8-aae4-45c0-b8bf-626ccae9565c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "64cee865-a767-431c-b032-99a94bf8f143",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "69f37e8a-3bc1-4648-b4de-728a0abf3cae",
        "cursor": {
          "ref": "fe5ab471-2c6c-4407-baf2-1cc1c5ba2ecd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b82e12f6-ce93-45f6-8c5f-17c461c75722"
        },
        "item": {
          "id": "69f37e8a-3bc1-4648-b4de-728a0abf3cae",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1036e3a3-b88c-4863-ac3f-69b5ad614d96",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6ca79fe2-de9c-4259-aa4b-1a0b63eb2056",
        "cursor": {
          "ref": "7f31ea6b-0b72-4310-a303-d4a990d1be63",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c48ca9de-5982-4f5c-800e-2fc994246169"
        },
        "item": {
          "id": "6ca79fe2-de9c-4259-aa4b-1a0b63eb2056",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd90e5b6-3636-42b9-90a2-c2fb82effaac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d75ae3ea-eb91-4a8e-bb78-3af933aaabe4",
        "cursor": {
          "ref": "34e267ac-edfd-4511-88ef-5057aa3ffa7e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8678851c-35db-4240-915c-aab3caef0110"
        },
        "item": {
          "id": "d75ae3ea-eb91-4a8e-bb78-3af933aaabe4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "539e29f1-d324-44c4-a028-94d7b08615e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da6c210-ec72-401b-b256-49826d9eb851",
        "cursor": {
          "ref": "e0e01a79-3362-4642-81be-250aca9b4053",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7083c98e-ba6c-41c2-81f2-72cc5b74693d"
        },
        "item": {
          "id": "2da6c210-ec72-401b-b256-49826d9eb851",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f6c50d4e-149c-4357-bee9-cb8109a10e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a3b326-4613-4fbe-b350-dbcb59da32f7",
        "cursor": {
          "ref": "68a19374-3f15-4f66-8b42-d90e3bdeaa91",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "15a11a55-6f7e-434f-b985-0f2d88bc3cba"
        },
        "item": {
          "id": "d6a3b326-4613-4fbe-b350-dbcb59da32f7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "21934466-d22a-43c3-9b9a-b1b200196194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522dcba8-24c7-4620-931b-48907e047c1d",
        "cursor": {
          "ref": "ea5785d8-555b-4838-a092-3fec00707afb",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "560eaaf9-c991-4143-94db-c4f9982debcb"
        },
        "item": {
          "id": "522dcba8-24c7-4620-931b-48907e047c1d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d3136b0c-08de-4b14-805d-dbe14ed9bc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076829db-af34-4171-85f8-1c89c333e693",
        "cursor": {
          "ref": "c749bdb7-54ce-416d-99ef-ce158f446463",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "73a81949-9c4e-457c-b467-800495b59d02"
        },
        "item": {
          "id": "076829db-af34-4171-85f8-1c89c333e693",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b6d37b7-e9a5-4733-8a59-d840ae5af139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21811e4-3b35-41a6-b215-9e5958c26eac",
        "cursor": {
          "ref": "3dc2cb83-e800-49cc-bd16-8302068d1708",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d08fac8-bb8b-412b-96dd-14c52e9b0266"
        },
        "item": {
          "id": "e21811e4-3b35-41a6-b215-9e5958c26eac",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f7b2103-0586-4b06-8eb0-7d699e1efd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4c477c-a002-423c-a2df-3f8cdcb18381",
        "cursor": {
          "ref": "64026e3e-86fe-4d9b-a830-cf107f53aea0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a9f6dc20-386e-4d2e-b71b-8ca76949b3b0"
        },
        "item": {
          "id": "4d4c477c-a002-423c-a2df-3f8cdcb18381",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1117ccc4-bd41-4f87-8dc9-5214655b0260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ce116-8afa-4d1a-8a4c-86ace8d93abf",
        "cursor": {
          "ref": "4a19022d-99d5-481a-a4b3-bdd614ad0f00",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2b35b84a-f5bb-423b-9c7a-333615841dbe"
        },
        "item": {
          "id": "ef3ce116-8afa-4d1a-8a4c-86ace8d93abf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba615c54-6951-4cb7-ac74-81410071970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fb129d-c0c1-4f98-8883-8ab1762cea87",
        "cursor": {
          "ref": "97c767b7-f812-45c1-987c-09bd2ca86381",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5f443f24-61e5-4b2f-8797-3a1f49ee6dcf"
        },
        "item": {
          "id": "13fb129d-c0c1-4f98-8883-8ab1762cea87",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0b72a944-7163-436e-92d9-13c04c1d7d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06c56b1-31ce-46a5-9a15-751e0b28f55e",
        "cursor": {
          "ref": "0179e965-cbf8-4a98-bda6-52ef63dc84db",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8eaa626c-331e-4d4a-b54c-c06015b6611c"
        },
        "item": {
          "id": "e06c56b1-31ce-46a5-9a15-751e0b28f55e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9bc23c9b-3661-4428-a623-c2ef4f5425c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5efb0f6-662f-47ab-b0dc-0f5a5b708829",
        "cursor": {
          "ref": "7cef060c-ec8e-40bc-8039-0da4186bc240",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8b67a0dc-3a6e-499b-99d1-47e61fd8b68e"
        },
        "item": {
          "id": "a5efb0f6-662f-47ab-b0dc-0f5a5b708829",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e0463b4-0d7f-4ac9-be3e-a689dce3fde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeca4dd-f687-488a-8b93-d38ae06813ec",
        "cursor": {
          "ref": "dcf8ab45-3ead-4458-a3b6-3ea5e6ea07a8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb773c43-ed65-46dd-95f5-49c94e3e06c6"
        },
        "item": {
          "id": "6aeca4dd-f687-488a-8b93-d38ae06813ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "567b97f3-dd1f-491a-917f-b741d3f5e816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce46c4f1-f34e-49dc-b961-f98b94f15a92",
        "cursor": {
          "ref": "4234aa43-5828-4d49-8099-53bc93a7d97c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "089d3719-24ed-419a-86a2-56a95c10dbdf"
        },
        "item": {
          "id": "ce46c4f1-f34e-49dc-b961-f98b94f15a92",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89aadb66-c3bb-4011-a5e4-e6cff5a34aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c7b678-8241-4050-a271-659094df3fe6",
        "cursor": {
          "ref": "15ac943a-8f63-4ed9-87ee-8ee27740fb7c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e34ae211-8a05-49ce-ae30-2ab03f5cdcd8"
        },
        "item": {
          "id": "e4c7b678-8241-4050-a271-659094df3fe6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "01853780-d64b-4f9e-9cca-a9f758357a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82da651b-c558-4d77-8cbd-2f7850698b11",
        "cursor": {
          "ref": "998fee18-c17d-47ac-a58b-53cb2b4ebb04",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f43fd56b-4338-4bca-81e4-8f5776afc525"
        },
        "item": {
          "id": "82da651b-c558-4d77-8cbd-2f7850698b11",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "231a95f3-bd24-4b5c-abd3-e54a6275a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a64b11f-9ea0-42e0-9df4-78ba5801215a",
        "cursor": {
          "ref": "fe9a9a11-01a5-473f-8a8a-fa5e843839cd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "91001611-fbcc-4079-b7fa-5d434c700222"
        },
        "item": {
          "id": "7a64b11f-9ea0-42e0-9df4-78ba5801215a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "deb6bf35-e31d-484a-8c90-cae698ef332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701e73d-dcf6-42ec-8bae-e0018a267b2e",
        "cursor": {
          "ref": "4dea3641-2630-44e8-bff7-57092db6b6be",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d4693e69-fd49-4e0c-9c31-fab76aaa9cc4"
        },
        "item": {
          "id": "a701e73d-dcf6-42ec-8bae-e0018a267b2e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1fbf0768-1483-4b40-9c32-698be0b1db3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc812e1c-09df-43cb-8f57-09660043d066",
        "cursor": {
          "ref": "1856541c-1c7a-4df7-936b-f9fc7decf72e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "810a6810-869d-42fc-b52e-f2826c5a7685"
        },
        "item": {
          "id": "cc812e1c-09df-43cb-8f57-09660043d066",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "afdb3a9a-483e-488c-b7c6-8fcb0d0d17e3",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "096dc93c-24a2-4011-95f0-e0e8700ad816",
        "cursor": {
          "ref": "eca4fd49-809f-43ac-892f-f33ff76cd945",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "36c7a6d0-04c1-47ed-af44-9f93b6321bc3"
        },
        "item": {
          "id": "096dc93c-24a2-4011-95f0-e0e8700ad816",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "569b767e-5f60-481f-97fa-25c3bcd733ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba541f4-60c8-486b-b5bf-8ea7ba42b75d",
        "cursor": {
          "ref": "51657bfb-e60e-41b2-ba00-77127ab9a569",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39321042-91ab-4ae8-affe-bd83bc894751"
        },
        "item": {
          "id": "bba541f4-60c8-486b-b5bf-8ea7ba42b75d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8f2a331c-a322-4dc1-9a68-6d23f9c77044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd35986-671b-41a2-9013-7248412764d4",
        "cursor": {
          "ref": "7d910dfe-2b6e-4736-b781-bcf035eff3b5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f2245a89-fd90-4fe0-9cb4-91cc31d6210e"
        },
        "item": {
          "id": "1fd35986-671b-41a2-9013-7248412764d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b0a666b5-3527-4b0b-9d75-46da932c995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c697db-4ab5-42f9-9ddd-c957ed4b7aa3",
        "cursor": {
          "ref": "92b144af-562a-44b3-9af2-5eb7860ea950",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "44757a50-52f8-43d4-9c5b-15c4208724be"
        },
        "item": {
          "id": "21c697db-4ab5-42f9-9ddd-c957ed4b7aa3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "70817a0b-c798-437a-81a0-7136bc9b2be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a21e12-2529-4f01-b54f-59a9d52ca611",
        "cursor": {
          "ref": "e8c7faaf-5e1d-4cb6-b187-a4df4bc29b0d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1920e207-0d8c-4573-b974-4f7131ca693d"
        },
        "item": {
          "id": "79a21e12-2529-4f01-b54f-59a9d52ca611",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "93605c3c-7236-4ba3-bfa6-879a8618ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac64b212-f744-48b8-a423-ff415fdf129e",
        "cursor": {
          "ref": "c82ed03c-3532-4e77-85bc-6ffdf6cdd787",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c380a8ec-5698-470c-a670-485b86c872b8"
        },
        "item": {
          "id": "ac64b212-f744-48b8-a423-ff415fdf129e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "792bde37-7fc1-4267-b751-05ec2e834de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adac956-e89c-4df9-8eab-8636a13fcfe7",
        "cursor": {
          "ref": "42f6661d-d8f9-4953-a2f9-d643e6839e18",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "72eed324-ac2a-48b3-ba4a-cf38434485b8"
        },
        "item": {
          "id": "3adac956-e89c-4df9-8eab-8636a13fcfe7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4b99127-8aff-48e3-8440-384a5c081e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fa8147-72f7-43eb-8f47-a4b05c28434a",
        "cursor": {
          "ref": "23f60aca-bb50-4bf0-b749-68aea0fe9ffd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "224cd723-257b-4019-a8da-9b1013103401"
        },
        "item": {
          "id": "95fa8147-72f7-43eb-8f47-a4b05c28434a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e92bd0a5-a73b-4312-915a-9ea527cb8cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642e1168-bfc2-4c5e-b929-781a7fbc8c91",
        "cursor": {
          "ref": "c56ac9d7-4b95-4feb-8a50-10d6d1f1d5cd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be6da4b0-ad64-451e-8335-02ab2816ef37"
        },
        "item": {
          "id": "642e1168-bfc2-4c5e-b929-781a7fbc8c91",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eea0c675-646c-4b29-8a20-6be94d7586bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8a12c6-b2d7-4d43-9461-367af7af07c1",
        "cursor": {
          "ref": "69758dfd-c736-4eaf-ac3a-40fd5c40a0f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6d4ef815-50a4-42bd-838e-8815eb5bc30e"
        },
        "item": {
          "id": "7d8a12c6-b2d7-4d43-9461-367af7af07c1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "47e93403-f857-406e-b072-5694c3d4daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ab9c4-df6f-44dc-80d0-076bd1a79992",
        "cursor": {
          "ref": "8e43ca4e-60a0-4186-8478-7d880c8c4c44",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d0bb789-2283-4cfb-a8ef-fcde93dd49ec"
        },
        "item": {
          "id": "1a5ab9c4-df6f-44dc-80d0-076bd1a79992",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "af52b645-ac30-4aa0-aa17-a5c6941099f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbed3df-13cd-4680-a5ab-07f702e0e5a2",
        "cursor": {
          "ref": "e8e519de-e1dd-4fbf-9ec3-3003eef459c3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0deaa8dd-a412-4367-be46-6c888f14fda3"
        },
        "item": {
          "id": "afbed3df-13cd-4680-a5ab-07f702e0e5a2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "09f94ede-8ea0-47a9-9381-c592119251e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922ad27d-74e4-4427-bbc0-0f5a493a1100",
        "cursor": {
          "ref": "830276da-bcf8-4f7d-84ef-8f78143f1b56",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62ac9859-9d7a-4db3-a634-a268611b96e5"
        },
        "item": {
          "id": "922ad27d-74e4-4427-bbc0-0f5a493a1100",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e984150c-8134-4813-aa46-8eac07a3b28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecdcdd4-673e-4960-9c12-f0326392b3c9",
        "cursor": {
          "ref": "fbd6df50-bfdd-4c42-a56c-2fe5254a27a8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6eb6c4cf-39f2-43ca-b291-d6647849ff19"
        },
        "item": {
          "id": "aecdcdd4-673e-4960-9c12-f0326392b3c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b9cccdaf-3d6b-4916-9dca-1713189cac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec674a82-f0c7-4b88-a934-1442e0753728",
        "cursor": {
          "ref": "804239db-98ff-4fea-9ce0-b24162354ee5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b83fa873-47ca-4878-94f3-6230503c9f0f"
        },
        "item": {
          "id": "ec674a82-f0c7-4b88-a934-1442e0753728",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e1c22a1a-b8fd-40e0-8976-7b5a7312c23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29bfd0-49d0-4b52-9f43-779b34ffa3de",
        "cursor": {
          "ref": "0e7dcc2e-1ff2-40a7-9a69-4abbac565c56",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5f6cabbe-6e84-41a4-872d-0ffe9d38e93b"
        },
        "item": {
          "id": "9d29bfd0-49d0-4b52-9f43-779b34ffa3de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "419a725a-8d7a-4227-b072-4fc35fc5c61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7673915-758c-40b1-b9b4-9bd459fac3f1",
        "cursor": {
          "ref": "9fdf9910-561b-4b41-93c4-a6586be1adb7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "191b4f21-c597-406c-9fc0-bd02eb893643"
        },
        "item": {
          "id": "d7673915-758c-40b1-b9b4-9bd459fac3f1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1cb7e91f-2490-4348-9cbf-80a8905cf3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9108bf63-0d37-4fe7-aec6-b7f7e1f67df7",
        "cursor": {
          "ref": "0964aa8b-5b0f-4956-9dee-f85331ef0796",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b0f6cbfb-b3d0-40e0-8d55-27db91248ba9"
        },
        "item": {
          "id": "9108bf63-0d37-4fe7-aec6-b7f7e1f67df7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc651312-9545-4384-b67b-1846e4b0be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e6584-944a-4f08-ae29-e8b5a30d0331",
        "cursor": {
          "ref": "b43d1ff5-b777-4c72-9c3a-7bfd58903c14",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c279adba-4012-4885-ab28-c91167b42286"
        },
        "item": {
          "id": "fd5e6584-944a-4f08-ae29-e8b5a30d0331",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "02614d30-77cf-4810-8a62-e0e1264fa24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b118545b-ed50-4630-8771-d9cca141907b",
        "cursor": {
          "ref": "4bc48208-6511-4cc2-ab48-768a45e5db72",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3d951109-0ac9-4c9e-b748-c041324000a1"
        },
        "item": {
          "id": "b118545b-ed50-4630-8771-d9cca141907b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a52fb218-d29b-4abd-aabe-c0cfef63857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b050b47-127f-4d0b-86b4-ccadb51f77ae",
        "cursor": {
          "ref": "9d93a461-0bfc-48b6-a658-ddbea7702eb4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "808112f5-9eef-42bf-8b6b-05799d18f93f"
        },
        "item": {
          "id": "6b050b47-127f-4d0b-86b4-ccadb51f77ae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5c5dc213-f697-489a-afde-493261365d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5cd2b4-5092-408d-9dbc-c2212275c94d",
        "cursor": {
          "ref": "11eedc70-f4ea-48f4-8bee-0eb43e81fe2b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8c08b57-424f-43f8-9700-7fd26a6928b8"
        },
        "item": {
          "id": "2e5cd2b4-5092-408d-9dbc-c2212275c94d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1670e9a8-0f97-4735-a328-241cc509e87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5386210a-c10d-4be1-a895-3805f078e957",
        "cursor": {
          "ref": "a23c9328-407b-4532-ad2e-ba6d027a6cc8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "28ae9e67-a7aa-4163-a098-96e3a8a50cb1"
        },
        "item": {
          "id": "5386210a-c10d-4be1-a895-3805f078e957",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "79850b89-5924-4ec0-b44a-54808ea3fad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c41dc90-fe41-4eee-b635-ee078ab2fe74",
        "cursor": {
          "ref": "9153765b-f23d-4104-9249-4f5e54b9cb07",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3f97933d-bf2d-451a-85b4-380352b90d04"
        },
        "item": {
          "id": "7c41dc90-fe41-4eee-b635-ee078ab2fe74",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b1c9cbd-da1e-427c-9993-0b2e6bcbc255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4109f780-2ff7-4b26-9473-1da35b62d640",
        "cursor": {
          "ref": "eb4c2120-6c45-4d70-98b1-454d0e7acef6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e2fce16-e123-434a-ae3d-95b8773ef256"
        },
        "item": {
          "id": "4109f780-2ff7-4b26-9473-1da35b62d640",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48aceca3-6e59-4fee-aac8-f8d1a606930a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e96d2f-7d2a-4b7c-bd0c-54ce3a36e56e",
        "cursor": {
          "ref": "4feff34d-7137-44c2-8bf0-cb463049a297",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e65a470b-e6d1-4eb5-af14-54ec4198418c"
        },
        "item": {
          "id": "69e96d2f-7d2a-4b7c-bd0c-54ce3a36e56e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "535a49d5-5bba-47c0-afc5-77bf496a1348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3507bd9a-f1c1-4412-b02b-5b43973d1660",
        "cursor": {
          "ref": "bad3d1ba-ccd8-4290-ad30-c9abeb59758b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "949a8fd9-3fd3-48fd-a242-563c489ad183"
        },
        "item": {
          "id": "3507bd9a-f1c1-4412-b02b-5b43973d1660",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a44f3f4f-83d6-4b24-9ca2-fcd32c1e205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7441f122-2368-4db2-b155-32567f212b4f",
        "cursor": {
          "ref": "71fd4514-8b7e-429c-9a92-ec8a9c0d2274",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e245050-e065-46ea-a24d-aeae6fa7803d"
        },
        "item": {
          "id": "7441f122-2368-4db2-b155-32567f212b4f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0eab2e07-2a85-4fb4-9c31-219a4186a059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e258065e-7cbe-4d8c-b8f8-1107c09c1be6",
        "cursor": {
          "ref": "9ffad4ab-2924-4f83-9859-1f0fb4096825",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bb2bbbb6-dc9f-44e1-a6dc-72b4102a4922"
        },
        "item": {
          "id": "e258065e-7cbe-4d8c-b8f8-1107c09c1be6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a8f82813-2b70-4bc6-b4f5-2fe41073bd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2702f3-000f-4cbf-ba62-ad739870670d",
        "cursor": {
          "ref": "e2c856a7-2c20-4562-856b-ce67ea902e9d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14956535-68b2-4db8-a64d-02448c70cd75"
        },
        "item": {
          "id": "8e2702f3-000f-4cbf-ba62-ad739870670d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eab74e79-4332-4c43-b789-3db5be5b20bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43560a83-33b4-4e34-932c-2d84ab80c52b",
        "cursor": {
          "ref": "40dcef2c-42f8-4288-974d-e4ab8fa3d3a5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1a54a8dc-6eef-490b-852b-8a2cfb5d9d8b"
        },
        "item": {
          "id": "43560a83-33b4-4e34-932c-2d84ab80c52b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "406349e9-bdac-4f35-82a9-5fa64df84148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ff9fd-f2a3-4964-ae94-adcfed6d8010",
        "cursor": {
          "ref": "dcee1b45-300c-49ae-8c67-7f7c948990af",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "779a38b8-6a7e-4237-b141-6532e72a3637"
        },
        "item": {
          "id": "341ff9fd-f2a3-4964-ae94-adcfed6d8010",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f481cb9d-3c6b-4525-8019-6edd1cd5788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf31df84-06f8-4680-85b8-61e0001d3812",
        "cursor": {
          "ref": "26bd2294-f140-4fc4-a913-8b418f529c90",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "21336970-5e88-4ad4-88f3-3653e9eb42c7"
        },
        "item": {
          "id": "cf31df84-06f8-4680-85b8-61e0001d3812",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f3f9e9f3-5547-4058-b37d-74493d82d6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ba8509-6992-40c7-b2a7-0b582e666271",
        "cursor": {
          "ref": "ebca735f-d751-4495-bb9a-a1165a57219b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "251d0cc0-d60d-412e-ad94-38ef03c6bbe4"
        },
        "item": {
          "id": "e1ba8509-6992-40c7-b2a7-0b582e666271",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1396e3d5-fa5b-4703-8eed-cc3523dd8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57f1126-0430-4564-9ff6-4560cb87d8e1",
        "cursor": {
          "ref": "f1dbfba9-5b34-44c4-9a53-b00a40a1ab64",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b7019d26-8114-4197-8d39-5e08269e7b72"
        },
        "item": {
          "id": "c57f1126-0430-4564-9ff6-4560cb87d8e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "68914285-aba6-425e-80ee-c6e7da122000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd621236-2dea-493b-aefd-d547835b525c",
        "cursor": {
          "ref": "6e69f05c-08d0-4a80-bd76-ba0e419c74d9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "25542f21-2a39-4ffe-be7b-fcafda0ac1ae"
        },
        "item": {
          "id": "dd621236-2dea-493b-aefd-d547835b525c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c673c3db-f575-47b0-965f-29e5b779dca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5f831a-7e36-408e-add2-8441703ffc31",
        "cursor": {
          "ref": "ab09a5d2-8484-42f4-aeb9-bb30a92af86c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6b2088d1-c4d7-4b74-97f0-ecaf7c117317"
        },
        "item": {
          "id": "ff5f831a-7e36-408e-add2-8441703ffc31",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ce23e19d-646b-4413-8e38-cc53939068a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a30cfff-f280-438e-92ee-72d3a6136ad9",
        "cursor": {
          "ref": "12c120e9-0a52-4bfc-8487-9f347faa5f37",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e6581ec1-40d9-4b3a-b832-41ce6f1b56c0"
        },
        "item": {
          "id": "9a30cfff-f280-438e-92ee-72d3a6136ad9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7a1257de-3e65-4fe8-af08-9036ccc71731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2b3b9-587a-4444-96e1-cd0f6d724127",
        "cursor": {
          "ref": "5d8daf2e-2303-4e54-9fb9-a143de35df71",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "18b35adf-4a3e-4000-b934-4a83ffcc4631"
        },
        "item": {
          "id": "33a2b3b9-587a-4444-96e1-cd0f6d724127",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c0fa124a-abab-49f8-a121-e09460859d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b76369-64a8-4d10-97d2-f3fee345a619",
        "cursor": {
          "ref": "b781f7a4-bad9-4a56-a364-382253e81b1e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5f216d68-43e9-439c-b183-0f9ae72fd1f9"
        },
        "item": {
          "id": "a8b76369-64a8-4d10-97d2-f3fee345a619",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f06c684f-621b-40f1-b576-f609621dbff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513a980b-a69c-4584-833e-440843c67849",
        "cursor": {
          "ref": "8a965213-5254-4ac5-9dec-ffdae71ed173",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d7f23ccc-22a4-4704-b481-a19407ffaed6"
        },
        "item": {
          "id": "513a980b-a69c-4584-833e-440843c67849",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b65884d9-5996-447c-bc4c-cc9d350b7e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f0fc5-0b38-4ce5-a341-9a5c692291aa",
        "cursor": {
          "ref": "bf981c62-00b5-4255-8698-290e152da706",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7fb98a9b-b7d9-43ca-9f90-a16e162bb383"
        },
        "item": {
          "id": "e07f0fc5-0b38-4ce5-a341-9a5c692291aa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b2492793-3192-40a2-bf7a-8c98ed4cbc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249ade3-19dd-4556-806b-20c0880cd0c0",
        "cursor": {
          "ref": "04355090-324d-4c0d-a0be-1d3bdbd8a019",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "074d53bb-76c4-45b5-b5b8-2b96c53ba470"
        },
        "item": {
          "id": "d249ade3-19dd-4556-806b-20c0880cd0c0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6f664fca-b6eb-476e-8c83-5e9f59b8c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11477ca5-203d-4b85-9109-8fef498daab0",
        "cursor": {
          "ref": "74a8a948-e3ae-44a2-b753-537f46d2f93a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a95669a-297c-4407-916d-31b9826e7684"
        },
        "item": {
          "id": "11477ca5-203d-4b85-9109-8fef498daab0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88bda7d1-26e9-4cdc-bb55-5b303f05623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b93c56-d4f1-468f-a0f3-972540ce96af",
        "cursor": {
          "ref": "40aee4c2-f287-4d30-80a6-db839ae9076f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d5a02a3f-9b9c-45cb-9387-e44506d8f09b"
        },
        "item": {
          "id": "52b93c56-d4f1-468f-a0f3-972540ce96af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a9e307a-2c1e-433b-8d3b-9b6feddf1dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0863f-b437-4640-90ad-f94c14d5c832",
        "cursor": {
          "ref": "26a16fe0-6217-4540-b8f6-d6b55092287a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b01f30a8-22ee-4bf4-a0fd-74901a23a1c7"
        },
        "item": {
          "id": "2da0863f-b437-4640-90ad-f94c14d5c832",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c250760-8b6b-4985-bbd3-835d7340c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f7aff-f224-48d6-a084-a5566b424533",
        "cursor": {
          "ref": "39f31519-36e0-4274-83aa-dbb22b270307",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4c13a327-afd4-403b-adcf-de02046db2b1"
        },
        "item": {
          "id": "624f7aff-f224-48d6-a084-a5566b424533",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3fc23de3-c835-45ef-853e-e3ca8d013c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb117bc-c66e-4bd1-ba89-eeb39a572365",
        "cursor": {
          "ref": "c7a592c7-a938-4f82-9988-ec9d6544773b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f9116327-85c3-41f0-9891-2409a9eb473b"
        },
        "item": {
          "id": "feb117bc-c66e-4bd1-ba89-eeb39a572365",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4cebd155-ada6-4e0e-81fc-e9c0a2edc440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea294e-92a0-4df0-9b0e-08afbb942b11",
        "cursor": {
          "ref": "a23326d3-2e3b-4d00-8176-2cfd7f56bae0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c64fc7ca-399d-4a76-856f-68d47e9213ab"
        },
        "item": {
          "id": "e2ea294e-92a0-4df0-9b0e-08afbb942b11",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0025b813-be00-4636-8a7e-bb20db083774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e81dc2-6822-47fa-a3da-7377e53a93da",
        "cursor": {
          "ref": "2740dc56-4684-42f8-a273-c44f96a36835",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af4849aa-11c0-461d-8512-c586e4f7b85b"
        },
        "item": {
          "id": "05e81dc2-6822-47fa-a3da-7377e53a93da",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f41460c8-8983-4dc3-9480-e1a624ffa636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465059af-408c-453d-a69a-f48185aac63b",
        "cursor": {
          "ref": "e1f4b8f0-c244-4e9d-bc87-5b036f5d6317",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "612c992a-3252-4601-8a44-4ef65e269864"
        },
        "item": {
          "id": "465059af-408c-453d-a69a-f48185aac63b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8b266c8e-403b-4e6b-bb88-29ecbb8cb86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf498d-9cb2-4791-9861-e3044c5d18e0",
        "cursor": {
          "ref": "6b6d7d45-c879-46ea-ac78-c31dfc70e023",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "505b6f92-245b-4508-8d68-6c99ba786320"
        },
        "item": {
          "id": "27bf498d-9cb2-4791-9861-e3044c5d18e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2b441ca3-1ec5-4908-ab65-668005a47af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4369d51-6874-496d-810b-436fd286b61f",
        "cursor": {
          "ref": "5d58c259-9168-49f4-82be-f1dd2823c67c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dde47c2d-20f2-43ab-8a3f-dc2492ff4c0c"
        },
        "item": {
          "id": "f4369d51-6874-496d-810b-436fd286b61f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fceac1c3-9075-4fcf-9064-97a7d712cd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd32b7e-030a-4f62-b691-9b41fb310012",
        "cursor": {
          "ref": "42e3116e-5afb-4a20-afaa-478da25153cb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e513ff57-3a80-4e67-b12d-02abdcf24381"
        },
        "item": {
          "id": "4bd32b7e-030a-4f62-b691-9b41fb310012",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c4299277-cb1a-480e-a521-24af5c4664ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643c93f5-d884-405e-834a-feb39e4756d4",
        "cursor": {
          "ref": "ebace91f-4d59-4160-8335-2234c6b1fcf3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c355a80f-744a-4f5c-b754-c3e61c7b8c96"
        },
        "item": {
          "id": "643c93f5-d884-405e-834a-feb39e4756d4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f2d23744-0ee1-4697-b818-9d4a0c505677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c829c3-5d92-4456-a7d5-e374720bf0c5",
        "cursor": {
          "ref": "90afa0aa-031b-4f01-82f7-ef0e7347c76d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ee91d08-9c40-4867-84ee-d80fd0b301e0"
        },
        "item": {
          "id": "84c829c3-5d92-4456-a7d5-e374720bf0c5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "22d93174-065b-4618-b7ed-aa660f604ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd040f0-99af-4eaf-8fc1-a9ff09e5d7be",
        "cursor": {
          "ref": "d73ff825-3713-4e09-b1c7-69870f5317b1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1fe8267b-bfc4-4cfa-b58b-d2a37b43ed79"
        },
        "item": {
          "id": "5bd040f0-99af-4eaf-8fc1-a9ff09e5d7be",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4dd26356-4a2f-41b3-a467-f2e11b7aa04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2730985a-f265-4084-b66b-0c7188d5110b",
        "cursor": {
          "ref": "466b5e5d-9283-4732-8ba4-48aedf14b06e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "058a834d-97c4-4f22-abfb-8025cbf4af78"
        },
        "item": {
          "id": "2730985a-f265-4084-b66b-0c7188d5110b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3eb0b9a5-b86c-473d-a9b4-0a17da51742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd29af9-cd13-4bf1-9098-92e50c5111fd",
        "cursor": {
          "ref": "d2acc72b-b03b-42cb-b43c-1acc6ab90128",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "34e4c964-06df-4e6f-8413-1f37e1608176"
        },
        "item": {
          "id": "2cd29af9-cd13-4bf1-9098-92e50c5111fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "98414da9-a962-4b3d-ae7b-eac932ac5a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f95ce4-e50d-4048-b3ae-7d3badb731ac",
        "cursor": {
          "ref": "8b36cb59-616c-4e08-9bad-2f27ce72bbab",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b95f6ab0-dcf4-4390-985d-bedfaeae2015"
        },
        "item": {
          "id": "23f95ce4-e50d-4048-b3ae-7d3badb731ac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5e6c94f-9304-45e9-9020-7714e62decbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7210bd1a-34a6-4a62-98ef-a14be3345812",
        "cursor": {
          "ref": "dab04350-93c6-4266-959b-e81715c5c568",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "acf11910-d2dd-4659-a758-75aaadb41de2"
        },
        "item": {
          "id": "7210bd1a-34a6-4a62-98ef-a14be3345812",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "50765f07-3169-4344-8ff1-7da278e2a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50929428-5be5-49ba-9497-08f8f58142db",
        "cursor": {
          "ref": "864513e2-90b1-4a61-96d9-80d03e5397e3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7a6ef027-ecea-4213-8ade-300adaad05f3"
        },
        "item": {
          "id": "50929428-5be5-49ba-9497-08f8f58142db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b363fab-9e6f-482f-847b-6de4e9f0e4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc09fa5-37e1-4637-a89a-7cbe7b709e30",
        "cursor": {
          "ref": "95f107ee-3351-49ee-9600-6b9fa8a12518",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cc52f4ac-971c-4d1f-824e-ded64d42c6e1"
        },
        "item": {
          "id": "7bc09fa5-37e1-4637-a89a-7cbe7b709e30",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2162550e-79fe-4e81-ba18-306a122b1fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb2f2b6-38aa-44fd-b1fd-eb7480611330",
        "cursor": {
          "ref": "ae257ee4-92bb-4f91-8dfc-381bce542b32",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c0401409-a832-43f9-8153-2d6685f8ad45"
        },
        "item": {
          "id": "1bb2f2b6-38aa-44fd-b1fd-eb7480611330",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5cda1c3e-80b3-4ba9-93d5-408156526152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e11938-5a92-46d8-ac48-3092a813b61f",
        "cursor": {
          "ref": "047520b0-2393-4370-80ee-6b055da22d7e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0d63805f-83a2-4268-99ed-db8868ec53cf"
        },
        "item": {
          "id": "c0e11938-5a92-46d8-ac48-3092a813b61f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e136e9b4-afdc-4a7e-8408-18159a7fd132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f00560-0a00-4a8d-974c-823d2d5b1634",
        "cursor": {
          "ref": "67e670cb-7987-4a24-ae45-fd6e3b049134",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d1cc4b0d-eb10-40ac-b669-7188ac066a78"
        },
        "item": {
          "id": "d4f00560-0a00-4a8d-974c-823d2d5b1634",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cadb5a62-ac64-4c5e-b651-d3e91cc2f93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815e0029-a025-4900-97a3-c27a3a015de4",
        "cursor": {
          "ref": "3ed38e74-3100-4259-b91a-776cb17ef983",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8495393a-7d53-441e-adfe-4312401e4da5"
        },
        "item": {
          "id": "815e0029-a025-4900-97a3-c27a3a015de4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1856145a-5a21-4228-baa9-0b7b618f1734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418d234-f9be-46d5-afb9-7c0d876bc2d0",
        "cursor": {
          "ref": "16608bae-8d5c-4460-8c8b-5a104746e699",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "394e3b46-cc7b-478b-a76c-143b083dc5b4"
        },
        "item": {
          "id": "d418d234-f9be-46d5-afb9-7c0d876bc2d0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d47b4923-e3f5-46c8-bd68-07cf54e147f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e01481-6e52-4a9b-8f04-0b371a9eaa6c",
        "cursor": {
          "ref": "53ca6bcf-9667-4226-8b5f-f0268e7d5bed",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d456e3ae-3748-49bb-9c4f-b0dcf0296334"
        },
        "item": {
          "id": "02e01481-6e52-4a9b-8f04-0b371a9eaa6c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e77ff293-c7aa-4de7-af58-d10f627cb841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2272fa9b-92a8-44be-b02b-4e6a939c1ed0",
        "cursor": {
          "ref": "f6af2787-5fe0-496e-9cbb-c4ea9a1e5084",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8247ede0-78e9-443a-a572-9f68aedc43ab"
        },
        "item": {
          "id": "2272fa9b-92a8-44be-b02b-4e6a939c1ed0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a9ae1b76-c243-4133-83c6-bc39818cb35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99872ff-bec2-41d0-8988-aab0b7f1891d",
        "cursor": {
          "ref": "fb8e82b6-e90e-4412-9441-c6775ab73fdd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "08962a76-cb1c-4735-af74-998a9def3adc"
        },
        "item": {
          "id": "a99872ff-bec2-41d0-8988-aab0b7f1891d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1c1da365-1179-4a52-a9ec-3c7ca3f9af28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2435989a-50bd-48c2-9d09-12904b3b5be9",
        "cursor": {
          "ref": "c0c5121a-ad7c-4004-9300-bb7a9659fbbd",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "52de145f-2bfb-41dd-85e4-20dc362ccac1"
        },
        "item": {
          "id": "2435989a-50bd-48c2-9d09-12904b3b5be9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5ddf5183-8600-463e-b9df-76ab932843ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323b684-2bb8-47d4-a21e-1c6269734549",
        "cursor": {
          "ref": "b60b1a44-dbc9-42d5-ac40-90e1c0f190d3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dc0d35af-7faf-45cc-b6a4-2655c664287e"
        },
        "item": {
          "id": "4323b684-2bb8-47d4-a21e-1c6269734549",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b7348f5-3d3f-47d6-969d-5481b100f6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8fc65e-1351-427c-a0dc-a825394d06e6",
        "cursor": {
          "ref": "ce708dc9-ea95-4bb9-bbb2-9c197500d652",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eb58c204-ad54-4da4-aebf-b99b12615fdf"
        },
        "item": {
          "id": "db8fc65e-1351-427c-a0dc-a825394d06e6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d48a614b-a09d-4a47-89ab-0cada7fd41f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4a4b46-c762-4d03-a78c-671eb61fac3a",
        "cursor": {
          "ref": "cd648719-6407-40bc-b7e8-e8095bc49b3c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "278b207c-509f-4175-b8f8-edafff292284"
        },
        "item": {
          "id": "5d4a4b46-c762-4d03-a78c-671eb61fac3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e090ad89-07d3-43e3-b586-428f9b142b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896d3e54-0d93-4aef-b0e3-cfd5d384ca46",
        "cursor": {
          "ref": "5b1f7e7f-7d2a-4271-aa79-0c89e541f38b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3f1a4e9c-60ad-4e17-a7b7-cd02185cbf58"
        },
        "item": {
          "id": "896d3e54-0d93-4aef-b0e3-cfd5d384ca46",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7db6b00-5171-4a3b-bf7d-31c45d62658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8629a816-0922-4f24-a7d6-dd0867cba532",
        "cursor": {
          "ref": "88dd3bdc-b63a-47d8-b503-0004173aae8f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "70927147-b4f2-4948-9305-0453c33aeebc"
        },
        "item": {
          "id": "8629a816-0922-4f24-a7d6-dd0867cba532",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "476a0801-aab2-4a3d-aea2-88c204fb96f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecc8f96-3d35-487a-a6e1-22ce59db93ea",
        "cursor": {
          "ref": "70799eca-256e-4e2a-ba80-67db6fb42446",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0dce5780-fe08-41eb-91dd-4f09f090126a"
        },
        "item": {
          "id": "3ecc8f96-3d35-487a-a6e1-22ce59db93ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bb90cace-dbe3-48e3-b946-cfb1ad96dff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbff486-94ef-4fe4-93d1-5fe3574238e1",
        "cursor": {
          "ref": "abf9f33b-6d84-4c05-804d-bd20ce827f18",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b093ff68-af55-4eb6-b244-953439cb2828"
        },
        "item": {
          "id": "7bbff486-94ef-4fe4-93d1-5fe3574238e1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c639bf59-e4f3-4e9b-8e14-d9488e3dffb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a44ffd-8aaf-4ad0-8699-8fcd6b4def27",
        "cursor": {
          "ref": "de83f800-8ada-4308-a27b-e4e9dca31dd4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9654a9d3-bed6-455e-b283-e0d21037314d"
        },
        "item": {
          "id": "d5a44ffd-8aaf-4ad0-8699-8fcd6b4def27",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "14d81e16-aea7-4270-aaa6-6bf765851133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181b121b-de84-47af-8b6d-2df0fb23ebcc",
        "cursor": {
          "ref": "ea35d3f3-5bd7-4a39-88e8-93067439a45e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "388083ad-c65a-455b-a52e-7940e491155f"
        },
        "item": {
          "id": "181b121b-de84-47af-8b6d-2df0fb23ebcc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dc78f436-1178-4523-97fb-f442ad4431df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f8aa51-03b1-412c-a3c1-a617e3ca37b7",
        "cursor": {
          "ref": "ca645f96-eabe-4190-a6fa-a008d0bff455",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4a22ad17-ca44-465f-9109-46342e299e64"
        },
        "item": {
          "id": "33f8aa51-03b1-412c-a3c1-a617e3ca37b7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6bd5a088-bab5-4ab0-baf9-e96c41963b77",
          "status": "OK",
          "code": 200,
          "responseTime": 180,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b758c56-b058-45ea-8e3e-2522b384b5e9",
        "cursor": {
          "ref": "2fcb387d-3a92-4382-8a3e-63707c06d702",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "520f8689-46ab-447c-a9f2-72a392375230"
        },
        "item": {
          "id": "8b758c56-b058-45ea-8e3e-2522b384b5e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e870559e-7a62-4937-88dd-9647a7af4179",
          "status": "OK",
          "code": 200,
          "responseTime": 2512,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd12094-78b5-4e2d-a53b-6747ff568593",
        "cursor": {
          "ref": "058afe13-6339-4644-b861-127c8646ce9d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "80508d8b-efd3-4772-bc5f-5101ec4850d2"
        },
        "item": {
          "id": "ffd12094-78b5-4e2d-a53b-6747ff568593",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0c12a25e-92c3-4257-ae15-e798c08805e2",
          "status": "OK",
          "code": 200,
          "responseTime": 2870,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6447b5-4985-4094-86fa-0f49aff32491",
        "cursor": {
          "ref": "aa659835-1008-4162-b974-545baeb402bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1098f44f-98a5-440e-b22b-c22f87c211c9"
        },
        "item": {
          "id": "4d6447b5-4985-4094-86fa-0f49aff32491",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7b607c2-fbcd-4051-a4f3-427e6f798a24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6447b5-4985-4094-86fa-0f49aff32491",
        "cursor": {
          "ref": "aa659835-1008-4162-b974-545baeb402bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1098f44f-98a5-440e-b22b-c22f87c211c9"
        },
        "item": {
          "id": "4d6447b5-4985-4094-86fa-0f49aff32491",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7b607c2-fbcd-4051-a4f3-427e6f798a24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31783b7-95c7-4792-b492-278c81127616",
        "cursor": {
          "ref": "3c176cd8-3a7f-4198-bc66-dd13907a3307",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "516336a2-0708-4b56-9ae6-814cbcc5fb77"
        },
        "item": {
          "id": "d31783b7-95c7-4792-b492-278c81127616",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e2edd94-c3be-4a4e-a352-0a7b477abe02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30003bf3-04aa-488e-845b-f3137cc5be43",
        "cursor": {
          "ref": "a801f78c-497c-4f1e-a98c-b97f98a35b8a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0aac4697-6b30-4363-aff5-70d655d5ad8a"
        },
        "item": {
          "id": "30003bf3-04aa-488e-845b-f3137cc5be43",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "182d3641-eff7-4262-b07d-a4b3a54864c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}