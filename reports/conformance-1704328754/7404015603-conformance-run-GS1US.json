{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "82a8ee26-f9bc-4f63-b86a-e938127dbaf8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2845bcf8-ba45-453d-866b-de2cce52805f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8de6f208-9299-48c0-8441-1666c52019ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6176adb6-38cc-408f-ae4f-50c6cdd1f31e"
                }
              }
            ]
          },
          {
            "id": "56839af2-586f-4697-a860-bb9654480014",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a40f7f4d-46e6-4889-86fb-d193e0297434",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45d8a14b-777c-43e6-95a9-06dd1ab6e6e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "511b66fb-8b50-4bb3-a4e8-85b36ea956e5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3e0c285f-1319-48c5-9141-f546a6e78804",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1b2b633-f2f7-4f49-91a4-0665012b9352",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d761ea99-97de-4b28-bd2d-c6b5aadba7ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8b85089-dc1c-4d1a-8f90-6f6a8b4cdeb0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a16a4a75-0d33-4f41-b6ba-6932816fc21f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e4a4141-9296-44e2-b3fe-8cd31955eb46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b905857c-c351-4e90-b24e-7d3796b1323c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd5f0c4c-062b-4d4f-8333-68b169458af4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "948cb4e3-80c5-4117-867b-ef314d60f6df",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f849d8e2-f1c0-46f6-9e98-4580a4b9bf5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f80b2fa-f3b1-45eb-a026-93e5b091c06f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89815666-edef-4ad9-8276-e55c48bf0565"
            }
          }
        ]
      },
      {
        "id": "b5441422-1e6a-4ac8-a62f-6b1453280bb1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8f2c723d-eed2-4c99-96e2-aea1b237fd83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d659832a-e763-4b41-91e6-959c0069625b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03db8a80-da8e-4f97-90a8-b5a1b13a1f98",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b798373-a6c3-493c-b6fe-08c9002c81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5983b9d1-fe29-448d-9c9b-b1176bf419fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd78ccc-8100-4b6f-bdd6-59f530a767bc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea32038-4cf0-4ce7-b310-0fbd4a43da54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50670fe7-1520-4864-a7ec-b18ec729f3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267c100c-ab38-4d8b-9828-26505783e4c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94585d4-863e-4726-ba02-d92fbe297ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1d4cbb5-2f18-4114-b1dc-57838a972bff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f6b1d85-f276-4abf-82fa-dccf6da250a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c700e67-2e10-4ddf-8121-27efb2b14c4d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1be1b4-3e60-44b0-8dc1-c531b9e143ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9808b03e-3146-4b7e-b828-4deffc15e4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d586aa5-dfa4-47be-ade5-d7477875d241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a58dd4-0130-46d8-ad72-1a266a0c490a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55f1a8db-aba3-4b32-abc5-2d1c81f3891a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54ab0cf4-91f4-4527-bc0d-17ed64fa655a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4886ee2-289e-42c7-9990-5ed327609f09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "598e4618-764a-43b8-a758-436ff4b70203"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c40eff9-02e9-4003-95c6-f34184cb35b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "084adfd7-4652-436a-93a4-78115b286007"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf4d2b38-f1a7-47c9-aef0-4ef4385f84b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c04e8311-6373-443a-9b71-52ca0c2c5c5d"
            }
          }
        ]
      },
      {
        "id": "ddee9507-845d-4bcf-a4e1-5695d5255d60",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "846f62ff-83b1-4445-826a-2facc3ff9387",
            "name": "Negative Testing",
            "item": [
              {
                "id": "094c1a11-859c-4f46-bc8e-7ee3edb1d417",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc9145ce-b12a-4940-90ff-9cae610db892",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e452c9-e7ee-464c-857c-8a278f8a4b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35f492f-ca73-4d38-b728-19ffc7b15eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a055a6ec-a8ad-4240-b504-e1e37089bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0aa1ec-ba97-4b33-946b-bd6d6d7ad893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d074d4-37dc-44d8-8c63-181d16dd3daf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad817671-b1bd-4e9c-bfc9-e5ccbdb8bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b03ce2a-295f-46ad-b1b2-1e8e88b810c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3f4154-0253-4a97-8c5e-a262ecf7062f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023d25e2-1bf8-4ffc-8939-5bd768559813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b29139-e978-4445-abeb-4b61e7345913",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24093140-db70-4842-a36d-69d5785ae70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b324f1-e69b-407b-af61-a6c127f8316a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de05ccb-8690-4659-ab04-86fdf4d84477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d15a3b9-c1a2-4759-986c-88f6c8efe014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f85356-0d15-4517-92fa-a25fecbef9bc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487f5f5-08b3-4df8-8e36-d16e00cb49e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f3085c-6a29-4a55-bf19-d1cf9d313b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48de9b0f-c3f3-427a-a949-c4c2e166fa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8383cfd2-f267-4f2d-bd80-d381aee02a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be456dd3-fa14-486d-927d-1c82d001af1b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8288ec-6771-4092-b714-186ccdc7349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf260792-0f52-4c1e-9b68-050ab36beb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57b001d-363f-4632-9cf6-442294511d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "817f50ec-9e07-4919-8b4d-8a94fe39be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d437cac-d2c4-4c0e-8539-8125875ac0ee",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda26f94-ac5b-48d1-8614-d7fead45b6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfba52fc-2a8c-4344-a127-25fd3948643e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89157f6-3edc-454d-b08d-83fa12c5cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c80785-24c5-4039-a408-d239ac1abe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dbca31-c778-4866-a108-c9988a5784f2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b885f448-fc2b-4be1-9cd3-42ea22a8e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9b6a5f-489f-43eb-b25c-525d35971f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14615da6-1ff0-40c9-afa2-93c00f8695cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "824e87e5-7601-4304-b9fd-e4fb129ac824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f333f5-f73a-4adb-aa2e-cb3f70459459",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f77bce-a10f-4aa5-b713-3e6d6561ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a284a2f0-118e-49f7-adc6-e5f9c862ead2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb4da42-aebc-4afa-b89c-dcde29478eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e918c77f-5c34-4fda-8fab-84236f0c5bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b9f262-20ca-404d-b45d-c27c00624003",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01216c0c-7c6d-48cc-a523-0bf6fcd88057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5831d4b-e3ed-482a-afe9-44fdeea11dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e71581b-7fbf-42a1-ac9b-e960afb536aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4f91eb7-0f95-4c28-ac5e-6199077f2afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1bdf27-7986-44f1-bc29-2b30138be252",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078c832-ca02-4741-a8bc-08799fd242ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f500c88-0e03-4ee8-b67f-81942335c890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128dc9aa-0d7c-40df-bf4e-1d7bc3a6593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89be39e4-38fb-4693-af1f-8deff9d7171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5631f2-de51-4131-854c-b4c065961958",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749b64ed-8656-4e59-bb7e-b9f4ba2ae51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf281f60-f256-4841-826a-874813938e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e4f270-4352-4d5a-a4d8-70a67f7b84af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a22e7a5-324e-4c2b-a6a3-6e792b02eff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef82ff8d-30ba-4b3a-b346-8b929a6d5e12",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dbe40b-84c4-4fce-9d64-dc06d0a3f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad91327a-e891-4b3a-affa-e17a1d39ff44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ba36b4-c0ab-465c-8db4-f7d56fb78342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c13dca-266e-4a49-9e63-03b80fe1ee05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10af8027-5543-4685-b004-0b55184fda77",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88da79-83f4-46d8-b6d6-c0a76bf1e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9f43c6-e93e-4602-b873-7f8612de5a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098f28be-1d4f-4442-8e61-6b0d48e28a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b779b88f-ac59-4d25-be95-57743f27fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0658bd4-b64a-480d-b372-72a763125261",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cd1fb3-a29d-48d5-be46-ca0b4cf4b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf0934c-72b2-4ce1-8ce5-91003e0d780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c393aa-9602-4a80-97e1-898bf92e8249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b58aeeac-8255-4bb3-9357-79723b41b3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e5691-237c-4efd-8a25-decb0da99bf6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec79510-4ec9-4730-8f09-859208c65471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c9d8f2-e2fb-403d-a5e2-2456d6dba0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b438e11c-bd24-4e0b-b4cc-78de6a89c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "677bd253-edc7-46be-9130-22ccf59c0c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761911eb-40c7-4678-9eca-cab60d3ae848",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f522b590-1841-44f2-ba38-9ebec9a6a17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32e96ac-b65f-4675-8531-721bd5821348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c342485c-e478-4d74-973f-03fd041fe7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62d1fd51-9635-478f-932d-f37c14eb8b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12feb14e-ee9a-4d5a-9480-79a933f22555",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa7ff2-fe7f-487a-9474-f9ab6fd94271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b88bc4-d7cf-4bde-84e4-0cd15fbc4620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e82f3d-6549-47bb-869a-2caf86fcba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2db8372-8c10-47e4-9ed0-eb5b79305076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38728e7a-9eb2-4cef-b89d-caf23824879b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba9351d-7cb3-429f-a3ec-ac3e0aa637dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6640ac8-3a0a-4658-b0b9-dae19022551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9311360b-525f-43ef-8dde-2276b586b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "584d4d7b-0a22-480d-afe1-47b9677c29a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f1fb7-d94a-493a-8f98-c4678f50084f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31518324-e7ca-4989-8671-2388d6fd74da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de2617e-f938-47af-affd-1c7df0a8de24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403aad9b-06b9-4a86-bcc2-cedf4d3e77f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e6d8f9-13e8-4b1b-b28a-a11ecf8fb2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b1a1f-6bec-40f3-a3e2-4376598b21c7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa320f78-c9fb-49e5-b03d-3d6c9eba6a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5d9bc4-1d6f-4206-a88d-9c0af219178f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43d0a0-01b9-4362-9ceb-129aa9ba4e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6a6db8-0698-4a13-b0cd-43639542bc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d179ac-e101-4874-8ebd-d31b49232316",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75f920f-c6c8-4bb2-a6be-8d24aca9f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84d53b7-ca7a-4cb2-a461-3b7bb4d670c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d027489f-c86f-46fd-8024-084e40efb22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "178bec4d-6d5a-413a-a072-aa3462ea5faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70eecc15-3cbf-417e-8f7e-5fb298d6c2ab",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ba5e9-b62c-4e15-821a-206ad331e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f241b998-b963-44ae-8c64-b0e43da7e28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022f5c3c-d1fa-48c4-8526-c4992ca0cc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04b06616-1772-44ac-a092-98c34e2a9e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7b4d23-f46d-40df-adc7-6143f7081a70",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e478e2ce-d6b4-44a5-b189-11b475cdd624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80c6049-6dd9-4706-890d-bdadf77f0809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d449e505-4daf-4208-a59c-082fbf1fcc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfc27b7-b830-4349-9a44-2e0fd57d7e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3929eaed-89fd-449e-948e-70b8f7a21b61",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf960b95-4f2e-4c6a-b87d-fba7cc5d29d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1262c468-addf-4185-b4ae-6faf46ff2066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c00583b-c56d-4bd5-9321-80933ccf4e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c4515d-7c22-4a9b-8c54-1d81374a5f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf99a8a2-6778-4433-a04a-d6f782c2b6fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9954d07-8853-4ed5-ae8e-b6f52d9741ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a746c0dc-6ce3-4c80-aa8c-a7d8b3339369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5ac3ee-e9ce-4f01-8ea6-8c9a5427f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86aa372-5786-41bf-be41-d016313bbca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d44c28b-9e2b-439e-ad45-b8d4afb6bff2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f08b6-15e2-4871-a0c0-d648ce69007a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb892765-a92e-4dc7-be45-be863fff5d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9b1d43-49f7-4d6f-8d7c-d64e65a342c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "616ea3f0-5b48-497d-9452-61397af9553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cec7f03-7a2d-4abe-823c-d41109856779",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0a70ff-35b5-40a7-aef4-20ee161fe4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f76dff3-e4da-467f-97fc-53df36fd6ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e32616a-76ae-49ef-9088-0a0b998a7b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c509926-3f61-46da-a0e0-3d8f052c3da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79374585-8416-450c-bb30-1612a00aa13b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f244a662-ddbe-41d6-afd7-359ef8153074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6f298c-96d1-4f93-9e4c-802129038396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f350ad4b-1851-43e7-96e5-3c28c073b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e16730a-ece5-48d1-ab64-3b0dad9c584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e0c9a-775c-44dc-bfb8-ee2f827c691f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138c07d1-d875-4e60-9811-37f539860029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d8a825-8957-4e54-9d26-9009d45065df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d835a398-c01e-4e98-a771-4179c00ee68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba42f68-7bba-402f-8189-5360bfcbe538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5385e8c-28eb-4bd5-bba3-8f1b4a394f87",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed2f02-331e-449a-8726-d68185388e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca580a70-c41e-4624-be25-cd7674b0a72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed838e7d-f657-46f7-9fab-d538999f2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce40e896-6956-48c0-82a1-aa8de4eeab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d778ac-dcb0-4fbb-bde4-d9f4f3efe306",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb935a6-e66a-4eb4-b72d-06b59f17a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2cb02e-caed-473a-9a36-79c5adbe06fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9943a953-946e-49bb-a708-5fb9139f4ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2a1b47-812a-4f4c-aa5a-f041c5b7d9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002afdf8-4b5d-4763-aa99-b3d649389c1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159eb703-2eeb-4999-bdb0-b218b15b930c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4d0f41-e782-4bba-8054-60631f8f02f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b944e0-121a-4c10-9a3e-9e572dc414f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f57dcfa-bc17-4b58-96c3-762afc655acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff5356-264d-495f-817d-df4cdfdfa42a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de58c599-fb4c-47ae-9caa-7d24a0204b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d2c1dc-49a9-4e56-a334-1170ddcd2775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62a183c-46be-4206-a971-cef5c903bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "793229f1-0e35-46db-8989-79b17cfb1950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265c3795-5004-4733-816f-12820f002978",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9825cf-f5e7-420e-9a97-52a8287973f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425af257-aaab-4ea4-b3d3-227660c53651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e21077a-2b81-48b2-9b9d-98a2a2457eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de4f43f3-d703-4d1a-b00d-66e256ca198e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcea3124-4181-44b3-a131-0cb9fbe407d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd727dbf-41ec-4885-91df-0efc141dcc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a1fe78-af77-4dab-935d-50a176ab159d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda810b6-9cd6-4107-87b6-c70f1db9122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "935d8069-f778-4a47-8cfc-521c1dddf857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed917a-a4f9-40ed-93ac-9691938a5294",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16472cd8-e423-4475-a43e-1f03a01bdb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8055d584-3aa3-475f-a42a-f0c7658be552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e0528d-494b-4784-a712-b5ef287caea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ab26a4-c125-4cf7-9048-a9f8803ca8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2861fe-ea12-41b5-909b-eec3a4d6f18d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8f0168-f4d7-472b-a19c-2a10a5be1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38afb2d2-86b9-487f-8808-115a06be83ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a56893c-32c9-43cd-afd2-ad024a2368f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b86edd-6b0d-4f84-aa19-5d3086aaf28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0976f7da-2086-4ca4-99f2-0227a767d1ac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa63306-eb4a-4d0f-9deb-67b876876014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329cc33b-e414-4211-a516-e792564f5a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b421ee-3fbe-4cd2-aac9-4fe79764a051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bce9b1f-eadd-4869-a063-aea7a0f42d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7734cd-4ca7-4a74-a589-2de3435a2f1e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d390ed-aac4-47ba-af7d-687ddd30448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a5feac-ec4c-4010-a8ba-2d4dd78f7450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616e00d7-b61c-445a-ad96-11a982c3dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a41a1ae2-c305-45e0-9f70-eaccf59993eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebfe9d5-b36f-42f8-993d-1d7a590c3f3e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42b9cb7-1d81-4c41-a8b7-abdbba0cef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90505870-6626-4c49-be3a-0fc95a9eedee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df4ffbd-8e8a-4afc-840c-cf6780209733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef17690-f5e1-487d-bd89-36e76cd217e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412e90df-1c02-47b2-ace3-9267fada7b15",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f859d65-3b59-4667-a188-cd66f79a0b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625c08b9-e00f-4244-ab69-ff414ccf3d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fb5b1e-69a5-4312-a39d-87e86395daa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc49dcb-41b3-4528-8bf2-88a8776d057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3144cab-28b6-476d-9606-24aca57ed00c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095bfb24-a440-4abf-a990-b40a0e86c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d331f7b-22af-444b-9006-229b687a93d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabad5e0-58fa-4eea-a643-34fba26ac0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d460ab99-7578-4035-ab99-6577d423c462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a9b59-86aa-4a5e-ba60-e8564932ab40",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6805dc3-4ea3-4a52-b252-14b76e58ac13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49781a79-4aee-4540-8916-bfb59fd87607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef77b9a-398d-4cb5-85de-1d9ac4f1d880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea31248-c497-4e4c-837d-f12d3c026c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8836f80-586d-4113-98ff-af2144a85d23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffc877e-7d61-49bc-bb12-72675cab16ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89941437-c51c-4984-9eb7-3d225407d39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76012aa-9181-468e-b4bf-7525c2757fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "83dfb453-bd59-40f9-b0da-bc666e650b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec00a0-357b-4386-8666-34ac3bcba42f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6e752c-4e85-41bf-9a67-975a39df2d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b99bdc-ff0e-4014-9921-8d3cf622dbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880e8d68-09e6-474e-bbe2-c56e004fac08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15af2f8d-deb5-409c-a1f9-65cbb3e5b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fc1b6-62e4-4b63-9c16-d371ce67dd98",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9095747d-6c4b-41b0-8745-b4b9a4938f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a925284-73d7-4579-8108-c5c0ea81159a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0c3f92-e423-4894-bb21-965326e8568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a360625-eb31-42bd-a5da-f97f07f10d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e515e-e62b-47bc-a705-f7198c919684",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168dee0e-84e1-4fd8-ad3e-eaefd933f95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec67d51-5a56-4a82-9eba-00c31965044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1226c963-e4a3-49a4-a44a-1eeac67dd3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af52de2-96f9-42e6-adce-ae1c31dfa3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa9b9d2-5d97-41fa-a56e-c2cd8f7614b5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb59e738-d690-420c-b762-a7926f44cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219983ab-7ba2-4cf3-93a9-c5a2d5a0367e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a1ce86-18e9-4f07-9ada-837e29612c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9581122-48d0-4789-af7d-601049257b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538f548d-4837-4f36-bfcb-fbe411f31aed",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6a53cd-d67b-43c4-b3ea-5541620a3939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01991917-a236-4171-8ea9-e157f0ddd2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2735d2-e0dd-4f57-8d5b-165e2803cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef88526-4a8b-4670-b9c6-c2526ca11556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1960a536-04b6-46b6-a7e4-adc6aeefee7e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a0777a-7854-4583-abe1-bf8923bdfa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9986d53d-e602-4385-b091-d43753d26b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2478bf-4fda-41c3-b37b-19ac522cb91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce97eabb-c652-4b5e-8afe-9d9b9bbd8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f874d5bf-0bf8-4708-ba46-45a4718cd256",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba590526-a41c-457d-ab30-61063b354eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8816a77a-d1c2-44c3-bed4-555628248061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cb0e92-c758-4971-bba9-ee8d1d2c5fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b706b318-d4bd-40c8-bd3e-f36428b56443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f10863e-79a0-4291-957d-0a9f63583ea7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167fabf0-3d18-4f6d-87e5-9f9dd1c6a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02bd450-fb1d-440d-9616-66d8183b58f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520a9170-09d2-4edc-b59b-7d88f69e2c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8edd02b-4218-40b5-89d8-5c3401669a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eeadad-a83e-425b-8fd6-a9f38f896fd3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258e381e-668c-412f-bff3-4351a0f13b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c85db8-e816-4e1c-902a-2b1495709d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b990edd5-a742-46b2-b48f-6441c2c8e25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "323662bc-f93e-45ce-8493-bd8f2f7aa9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ac8579-e070-4aed-9084-38122c6733e5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e61b352-3bec-4c41-b2ee-6a4d952b24d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d6eceb-11f2-4fd5-a0bd-d66e6db84013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82663634-fd10-4971-91bf-e96e167f08de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1918e09-3c75-48c6-b545-f1176225f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea91e563-9bec-499a-bcb7-63dbbb9d34d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8e0816-bb34-47bc-af0c-ad952f8fbdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725c0fd6-0f55-43a3-a1a7-517671bf1457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ab1476-af1a-408e-8239-d8988f7f4f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cdc338-5b04-4f8c-b8b0-7a747de8ffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c38a421-332b-4825-a4c1-0ea43c848e1d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11783292-833d-4cda-b24d-93f827dd0e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c67181-8a2a-4d7c-98f4-a4a2f9421e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d75b19c-d178-4989-961c-58596abc4e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "05efcc80-cc8f-49bb-b31b-fcb67a4217bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b932c69-e246-4b40-a06b-873e7990fddd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d079b9-5a30-4537-adfb-08703813c375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6972b9b-4aa8-4289-b48b-87a4e441151a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66ebd38-bd83-43cb-8150-75ca68490f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0aaf9b-0c6f-43da-afcd-9c81d8db41db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f706e9-fabb-42c8-97c1-89c5f84a3ba8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4495d6a1-432e-4d4d-b3bd-8a923842300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0dab93-0515-4390-bd58-a36ad955ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f0ca5b-ebed-4782-9ab7-86ca79b1d2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ee8de8-afd0-4733-ac53-87fe9e4e0a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b32411-6ddd-4b9b-b665-6baa916c16d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a45ae51-7dea-468e-ac10-c4e99c9807d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421a04c7-7ccb-477d-9c5c-851e24f764f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4892b9c8-b09b-4007-a7ab-f158fa825486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88613e97-50dd-403c-85d5-d73905ee6e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15cd254-14d7-45b2-ab3e-2864ba312a22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779e2097-7160-49b0-b045-a020574f20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8569f27-0f3d-4be2-8c47-b987646ba93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7f8e73-ad9c-42e7-b876-5b24386f0a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a175926-f209-4661-a435-4320e4515de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b5de5-29f7-4e81-bc75-9688f5924811",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8154e71c-6276-4ace-a297-030b810164e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287185d0-77a8-4ff1-9a3d-40d2988dc3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91142e83-ecd5-4d26-b646-db29430562fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "573220a7-60d9-45e6-981d-a5800078390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76d8f4f-2f27-48f3-825c-ade414d88b53",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef087002-a14f-43de-b78b-2af62317180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc3774f-10ca-4149-b9c1-b3949254c78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ba115b-cadc-4323-b06f-1fd188322bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2aaa99-431e-47a3-99fe-73dcd19894f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a1e9f2-754a-49c6-a043-58f44ecb5fbc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588136e-0260-483c-a8ed-b611a5ff9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74753832-6308-49b6-911e-51067805c75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bbcd1b-799c-4b25-a5ac-d68dc110d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca7c9a-abf4-4793-bda8-42febb97aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc394a01-ad5a-4384-8eda-84bee2a6cdb3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4340a1b1-f2ff-41f7-938e-785afb00fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15168cdd-0426-4d0b-8a0e-e4b0f85c35d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09cc93c-d18c-48f5-af97-c8a892ddf4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbf8981-6f45-4db9-9912-3d76977d4949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a5a4b8-5fcb-4c14-b46d-22ffa294ac22",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e8f2c-1da9-42d2-af87-b368bc20e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed3dbda-3f5d-42c9-b326-ff8c3b0b5338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005d4db0-33e6-43fc-a489-9b7a35db4b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f630c00f-15bb-4e24-92b4-5cebb550cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bb7239-184f-49e7-9301-464289a6cdfc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e39d3d-574a-4f55-a50d-f37665258d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f509f246-69da-452d-8d85-c9f22b9f4acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7755cf22-4086-432f-925b-c5f4c08ea177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b1a8cf-5ce3-43e1-bd9f-dd51ad2afd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000dac87-6f7c-4145-a387-61e06dd458d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde67073-1965-478d-8bfc-b25eb53f635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3065fcf6-9cf8-4549-9d40-eca77db508f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf8e4cc-ffa9-4a6e-adee-368129c1648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f786e2d-381d-4cc7-8fa8-0e818f82cfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28ae35d-7283-4b04-8ffe-8c32f2982f95",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37404276-f3cd-4ed0-b3df-8154ee1279fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515f0306-3de1-422f-b756-d092bf3dc7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6ed28e-021a-4878-9771-f45b95ad1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f8fc2f-816c-49e8-8d7b-e7d05b08c0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45bb1ae-f231-466d-a657-63ebaf891a0f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d3865-3e2f-48dc-b140-52561835ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f49df8-fc02-46fc-b7bb-155483f6c984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004afe34-79c4-45c0-b67a-c5cb048e6013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8e91bc-161b-44ef-a8de-1afe4ff42bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcab983-47c4-47c3-b5d2-e8ab38a91803",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e2e9a8-dcd5-4575-978c-4adad1e9937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a34d14-5aaf-4b05-9165-30d5098cc096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc4a219-8fad-4687-8a07-0e8cbcb5ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e1f50d-c9b0-4c92-ad77-2fd6439ee9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e640224c-9c2c-4a17-bef9-e2353e7b1aba",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5e791e-47b2-4401-a995-cf9adf65ae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87864796-3eb2-46bb-8cac-bc5a5b33d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34800a85-6598-41bc-90f6-48e444115017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a6a3ee-6f8d-4e20-a9cb-8b621b166344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45016b8e-32b0-444e-b127-57b3cccd530c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a1488d-0c40-4311-9bff-d5eb672fd48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194dee2a-61fb-45d3-b380-d15d3fe8ff30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6d3ca2-f156-424d-8efa-766ce6cb63b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd129e6-9d0d-46f8-a653-3213d7f47353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b48439-536a-44c3-bae7-333f36b9bc0e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e683439-a3a0-45fb-8ea9-6627df954ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719aeea5-0f85-48b6-aab2-a63c63b9125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2759a6-d8fe-496d-a1d9-45c9f8e391ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ad77fe-8b15-406c-8278-df6e0aa23ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847b5c1-7a29-446c-beb1-b262c1f7981b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727756aa-204c-46bf-b5c0-463abd921318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d78c049-8bbb-4e5f-9f03-961325d0642f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6893f0e-33eb-47e7-aa66-d50607ce2d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4719c628-7416-434c-a81a-04e99c48cb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce621c30-8491-414b-a2fb-5d1d91aa487e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377dbb07-04b8-4e87-aec0-2edd7369c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd71d2d7-443f-4a3c-a4c8-c54afe04eaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd23225-af0b-465c-b3e4-0d60068612b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e91e6c-3bff-4804-96c5-cc1a49fc53d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f6194-88c2-4053-95f9-b864406d7765",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa74108f-bd27-4638-8430-2994869e7d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162d56d5-8e42-4cb2-abfa-556c9892db12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d4eb1-27fe-4b00-b33c-ac6562dd1187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a4d855-5f98-4a13-81c9-1d5475eceeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e173e3-18a7-4068-ab0c-f42a660ee277",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd206f2f-2ad0-4ec4-86f3-f8c5a8652501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a759ed-701c-427d-8a11-57162cd5d8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c7e27-d3b5-4962-b7be-fca01a6cba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c575053d-2572-43f8-9ffc-13745059faf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d529b785-0eea-4f04-bac2-f3ae0105fc9f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013cd83c-1cbb-4588-a737-28ca61dc00f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f8b5e5-fd4d-4967-aca0-35b0b6b971bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460ef8d3-59bf-402c-a36a-5c53e9cd9a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4378ed-8129-4d00-b49c-14389c7a7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609548b1-eb8c-4a30-a297-e1ef13c015f4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3302e0-8e36-45a5-89b4-141a41b9b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689bfb22-18a7-4399-a71c-23c2bdcd7d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040ed5b6-3a32-4477-9dee-0f06fd3e6eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59123bd1-c27f-4621-88c5-6b6cf50edf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f6f5af-783d-4fa6-87a2-6a07a7004177",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556bc5b-736d-4b79-9aa0-ba2e7e4bff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322683d5-77da-4922-8422-45faefcc98d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25801bc-fc08-4fd6-8a3e-acdafdad77b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e026ea-19b5-4811-8d3b-c0a96b2ce26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdf5762-ab09-4fa7-99fb-71ded576558b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72462819-485a-4215-aab9-33846c91054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bc775d-88cb-4d59-aa4f-761537716570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9522c1d5-58c2-4a64-81de-98a763ae9ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05f5298-3850-4546-8354-55f21d45d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb322394-6b14-475e-85e8-bd30ac3b2a32",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376c086f-ad97-4fb4-b329-d9cbb9550549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b95782a-b64c-482c-a3b0-6b952c30a107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e86b35c-9d54-42ef-a5b1-dcfc7087f04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb71b9f7-deff-4003-bb66-9ae232005c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562947cd-edee-4fd1-9ef2-a6e51ca48f0b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54465ed8-48dc-4e52-be38-b4e54b0070f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845f0d37-39df-4632-bd99-78c06d3eb30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2341f831-132b-4767-9490-f2215872f3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0195c3-5c4c-40b1-821a-d089f15e3da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27f7030-f341-4e37-ad57-9af07be6ce05",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87ebfc8-1f91-408f-a26d-6f5870e3e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db1e69d-aad6-4b1a-9c11-abc0b71a69bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b147cec-f82d-4800-98a9-27ec7a09ac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51097dd4-b9cf-4add-a2e6-804a794b793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c79ebe-7ab5-4d90-b482-5129d3c1b8b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d798c788-d71c-49fa-b6b6-a67504f414c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b546a01b-f39e-4015-8542-16597d3fffd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed14aa2-8c21-43a2-8bee-a568818c82e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c207870-e13b-476f-9879-fce1d10791a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7283f826-656a-4cda-b9bf-8c1c04b57aec",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b82e8ee-fe61-476e-8201-e1054a5c67f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f32e7e6-ae63-445f-b2d5-f5ed0a9fdece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77c03bc-b6c2-488c-8c50-8858217419cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65499220-369e-44f1-af37-04346ad1af0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee14cac-ec94-4e78-bcf8-be2817a3ff93",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2918d0-0c28-4bf8-8a38-9a6037199839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d7dc26-63c8-4740-bea9-9c18ff17fcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f225512-03ad-446a-af30-bd22f5aabba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39748119-001d-49df-95a9-fad4e268e2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e96c461-5315-4c52-adbf-48e0dba6bc06",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c4e6de-1f9a-4a9f-bd81-4cff7f757618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85af941c-89c3-42ce-a135-cf3e02b287e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425e6349-edea-4339-b859-374ee8cfba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd1b3b6-4cf6-41d7-b842-ffbbbd01f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81106522-a72b-4210-a9b6-92ae61bd6595",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1370ec8b-d8fb-4acd-b590-9a47cf1faf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26908634-c9b2-4c73-86af-df220a722e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203d055c-eadc-4d54-bbaa-0af94036bc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b658e29-226a-4438-ab1e-9819a8527916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b02195-17b8-4d1b-95d8-118409e26ea0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9d067b-1c58-4892-9fde-e32a1076a364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ccf3a2-1caf-4bca-b20f-ba1bdaf9f059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcee536-0282-4615-97c6-12ad5ab99c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "234a2ad7-b108-4a6f-ae15-1567d11495d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1d100d-66c9-44e2-9f8d-8d790b14b048",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d2ba3a-35f1-4716-be4c-aad248677fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c07de15-22f7-4736-bd88-e91f8f28199a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb709b52-a9bf-463f-87da-863b132a2174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4077d7-70c0-41fd-8d5e-2d599c48457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cfb8b6-0340-49be-a22f-1cb05b93db22",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7138a1b-e32b-43b2-8cf9-027345b1c6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "42e287b4-99ad-44a9-af29-e7ba0338d3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3ff867-4191-4b94-aa95-f0767e441f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e128db-7202-443b-b84b-2665d260bf7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5231788-ff8b-45f7-9b4c-911866e6d4de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c5c2c10-a466-45f1-b486-da379b92fd9b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72823140-9e85-4a23-8380-1d5ac6d78f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c41fc4e-18a5-45e1-b2de-e2965f2d8480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b5b6a4-181a-4a7c-802d-a8fab97520fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3da9654-5c5d-4430-bf2a-6bb48a61e062"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6f27ac-de06-48d4-8430-f82afc706991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "262bd98f-bb32-4f19-bd04-38f8bebfac22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a6d1a0-63ff-42b6-ba9a-0eb18898e254",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "767e369d-c526-4539-8a41-b30eea2839fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80159f63-7151-498f-9d85-9d5382f48ad7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c32a495-575b-4c91-b2e6-37a61ea5d20c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07b258bf-482d-4ff1-960b-0d8362d94d80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9433c2e0-5e15-4ce5-8fd3-b1e85ea7c836"
                }
              }
            ]
          },
          {
            "id": "f15669b6-fcb8-4e1e-b7a2-7577442d8fd2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c8f943a-3f1c-42a6-98d9-d849d9e6a9a4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "85666e8a-c759-41d4-b8f0-8feb1bcc4ab4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140f69ee-61a1-4f73-87d8-76fb13659753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2baf20ca-2e64-46d5-a1c4-31bc1cfd9a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37e9ab-df71-46cf-a5cd-e4cd5fe5ca8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a98c308-21c8-4cd4-8462-f690d590303a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff071543-976a-4569-a067-f044362c6f72",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ae5ee54-22fe-469e-8fbb-9a0bc37c913a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb1e62a4-f2ba-4726-bc80-af13a2645123"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b14dcd0-b188-443e-964a-b86cc1654c72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2afb0b76-6ca1-4af5-9516-5404072bdb1e"
                    }
                  }
                ]
              },
              {
                "id": "6e273a81-8b7b-4587-89a3-a72d643323d2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b6a31fb-bf5f-47ca-aa7d-12a3fccd86f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5764ce0f-afaa-4ce0-a0e2-95e5fc878dff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c8532d2-fa40-4af5-a6ac-a5405494e254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7adfa528-37fb-483f-ac5c-e9b9fb5f3af2"
                    }
                  }
                ]
              },
              {
                "id": "1bcb53b7-8269-4c8b-9553-a0c593cd15b3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c578fdd0-d691-4f58-b3b6-f4c43bd39b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b3a026f-221f-4554-90e3-08397b673e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f4db157-413f-4ad7-812d-6a7be141eca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e258dd5a-66bf-4088-bad8-c554ef7900af"
                    }
                  }
                ]
              },
              {
                "id": "a49dbe9c-b3f9-4d88-84b7-6790f7d2ec21",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "268470c5-506d-41b6-8e7f-8af4978d3761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bf1f16f-3a41-4585-8ea0-7efcfcb79023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f45f207f-54ae-4f52-95e8-75d7d6fd321b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dff00d2c-11f2-43fb-8999-6b6aca43a763"
                    }
                  }
                ]
              },
              {
                "id": "e780a1bb-6cb5-40b0-b78e-fbf0ddc36e83",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aad755eb-bbfa-44e3-a7a8-2280a747e03c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "491e7b3a-bef7-41b7-84a1-6a9a4b8617d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c9e957a-2dbb-4313-9ede-24541860f9e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "27016a5e-ef75-4ebb-8f76-0bfadbf525d2"
                    }
                  }
                ]
              },
              {
                "id": "84aff226-e32a-44ac-a5ab-2ec70b1125ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d7dd92a-1203-4fb0-baef-734e128a04b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edd53913-6794-4b3e-a915-fa81bfe72c8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2965ec7-bb46-4ba6-90f3-915e89233ca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24947796-36fe-489d-a751-0bd31167f867"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64f78d5a-132c-4ec7-9a45-0d324de3683d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "849e0cdd-57a8-48e7-988b-94f622ed1b03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d7a61a4d-782b-4a11-bd52-7c467482c74d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a9f5a1e-0776-4147-b560-219cfd4b7210"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4b235c0-b30d-4389-a195-e30dadcf20f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ffd9bd4-f7da-4d1f-984f-d891546062bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0ba2961-b052-4113-acf5-42e127e677bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26fa2f73-1cef-47c4-94cf-efc346aee5dd"
            }
          }
        ]
      },
      {
        "id": "33d16062-f244-4afb-8b19-1438bbb90d1b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "98efb83c-333f-496d-89f6-7bb64c1d2658",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08af44f0-2628-4147-82e1-fcc90dbb2f13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fef254c-194e-4076-b8d5-abe6edda9026",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a2308-8af8-462d-9910-3c9c0e19555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d4d8f2-ec52-497e-86cd-72d6fcd66e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8983e-c3bb-4dab-8cba-8352b84e6895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee84b9f-6f43-4320-8df1-4109be2d6285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae75018-3935-442b-bff8-a777c2f498db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05889fd0-541b-4b0c-97b8-273da44bd7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2b3684-df0a-4367-b1b0-ef01c0a49bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af305e51-509a-4f7f-895c-f0db288bedec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cddb12a4-a89f-439e-818c-98c229347a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b383656-e09d-4f32-8c9f-5aba807900cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d15a311-761a-4a04-9b3c-cf985a96dae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f318a3-2f4d-48e6-ad21-c9eeca333a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c23b8f-0edc-4091-ac21-7bef691f5abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d4c99c-cdcf-4b6f-bd5a-6ab84b3de3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00561315-3873-464d-b3f2-30684ec5a574",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba54e40-7ab9-4da6-80c5-c79197cbd03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dc765a-920b-4d96-9111-947b447d2077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6af71b-4c1a-4414-8320-715c62f9ef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d399810-6734-4a7e-b609-f434134fc584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356dd4e7-df0d-47dd-abbc-ae191f9c9989",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7f4646-75ff-4812-ad65-49ccd762bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7f26ce-db7f-4c21-a8f8-43eb12221090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d067664-35c3-4d43-87bd-8c73b99836f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15470e31-68c9-4327-a9af-ca7b2304fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be668c-2a18-4837-aa57-1b884bdf5892",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f719c2a2-2ce2-4157-aab0-d0c719ff12de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f43ba66-e058-4ace-83b5-25ad982a6c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027c5ee-fee5-48e9-ae7a-7dbb84eaca64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fd1a47-8104-4e54-8ee3-447f1ca33ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142038d7-1840-427b-90f1-ab4000dff1ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59658964-d089-4a2b-85cb-2c4ec4f348df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5e0daf-5a33-4d95-856d-3142ba5d64d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66a3284-abf7-4854-bef0-7aeb91dde110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e4f689-c534-457d-9c78-9683695caf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e415ed-f792-4dc8-9cfb-13c4202fd96d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e81a34d-d68c-4a4b-8484-7272cd2d538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0522d74d-7d43-4a6b-acb6-befed0f997de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc3b02-95fa-48a2-bb71-3c9642053e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f76f41-0880-403b-bf63-b754d6a772f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4324a4-6cfb-471b-9b51-e1b1758288a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bfc2bf-d87a-4456-91e4-9c6bffc6daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2aff62-049a-4d18-bdc9-a4e3b2d251f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb14d5e0-2854-43b8-9433-de0e7b4459d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aef8327-402a-4aa7-924a-2dca249a9cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba84c97-b911-4004-af96-180a445f68b7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ab02d1-901f-4e5b-89b9-a14b52773d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fd5433-28bf-47d6-b54b-c16ba6a9e118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd11bda-2077-433c-a9d7-0999447e8a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb9e3a1-2349-49ca-9eb6-32bbb8d92474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38334ae-e552-4011-92ae-e05d8da07996",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054bf83b-2ff3-49bf-bc71-b481dfbd92e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe18b02-a92a-4374-8e41-1b86544b25ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc8bd3d-ba14-4aa7-b6ed-c87874d2a5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a989b4f-07e8-4ac0-ae78-00301200ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50666b3-2e90-4879-ad18-cd936b4d4c45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5c2d26-ed31-4f99-888a-defeaf2c5323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f6fc23-d446-4f82-b528-3d90dca767cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2881852-5213-420e-878c-79f3d895e664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a812da-a843-4407-8f22-0297128cb3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ea2609-cbd0-4d33-9430-07092c8aedb1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6173dc3c-9651-48c3-8c69-a52f2c17c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f237ec-9375-4b98-a3ab-374eff8ab3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8d0270-2352-495a-b938-128a973bcdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7af801-aad8-4d36-855b-8b9db20d2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f17803-f7e4-4231-a898-611c53d89673",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21efc773-fc84-4bf4-9bfe-c8683f9c52cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e4471f-e03c-423f-9f91-1708be493ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42402abe-0381-490d-a4bc-be48a96009ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "238b62a5-d1d1-4d0a-9880-1d82ad7c14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7968328a-6966-4b02-a853-bede8564a130",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f1c11-840b-4008-93d8-b718b2747e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b032e31e-bd9c-498c-8dcd-44e83193f374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8578be85-9633-41aa-aecc-0467607993ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75e9481-cce5-42a2-ae31-1d4b39598fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd41620-322e-4467-a854-df51c722d137",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bff29b-1c47-4626-9f01-379103fb32be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e590b8-41dc-4388-b027-c93ffc91f3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ac988e-dfe9-4a9a-827b-d4bdf61da2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "211351dc-6426-4bf1-a6cc-1d4709d4ca91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53424bf2-295d-40e7-809f-d645ada6fbb8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92321fa-2b01-4c6c-9d65-edaca93063fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4606c127-f622-42cc-84fa-8bc1ee4b2fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffab220b-4727-4778-8fad-9ccfb3709181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19448ea2-8a41-4e39-85f0-5008d5bf25b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2b4f8f-20d5-418e-a313-54400a5c7c95",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317e1787-5ff7-47ef-b543-84dc3c4a9bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219f261d-e08b-4dff-9ed9-ec1782107d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4536130d-9097-44ff-9355-a112163889cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b5ac41-55bc-4b39-a331-06e0256602f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642a8b30-0d9b-402c-922b-33c00fb32076",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a83d4a-b1d4-4b42-b014-333158d0d15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde53ae-3b1a-445a-bad0-0465b16a4904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801d4494-1d8c-4dbc-b962-06bfe2c7bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3919dde-fdfa-48d8-9f83-20081e2dbab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f6fb0e-9300-46eb-8ccd-24eb3aaebc68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8982fe16-8c2d-46a6-99dd-da1743d3f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5d16cd-eb6c-409c-8373-ede8a9f8e81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408aa25e-3a48-44fd-8e4b-d69e37905360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe62988-4760-4778-98b3-39b7379c1385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbfcbd1-d520-450d-9bfb-c955f1599ddf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e50feab-11c6-42b9-a6b6-74b8bc6eb473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5221634-5114-4847-a803-50050eb3fcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62818f5d-e283-49fc-b05e-467f6163fab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c956654-3725-43a0-aa78-861da456f7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2583458d-ba7a-4371-b1f8-d7c17a775f39",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41709da0-4ec8-4826-bf9b-ddc8e665a68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72493fa2-a605-478c-883f-313275925f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b7b48-34b2-430a-8dba-7bdf8dc15b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc5bd59-80d8-4bac-9ca7-a33d0611da8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418496c5-c254-4508-831f-2463d68d2d32",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c93b2-98bc-40b6-a115-d1509d0bc6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c13502-ea2b-44cb-b99c-22d97e655308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bab7452-aff0-4c72-a049-5b5b9aaa9519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b44ec7-8e74-4b1d-ad04-d80a9ed9de90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9108a75f-5f1d-46c2-a565-915a4bde512d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544febfc-a3b4-4156-8f22-1b075f9e4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef80bad-5d5e-4dbe-8309-dcc02af20fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3a94bd-3d40-48c1-b55b-0617c9b387b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238169f1-a857-4be4-b3e3-3be41863f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b69d36-cdf7-4b01-a650-cbf7b49303cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652ab366-67e6-4ee6-a641-664fc19fa1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dd0d53-dd76-4373-90e5-f41452bd63dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b6f9a4-03bb-406d-b260-3d49905c6725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3265b97a-f8ae-4084-8928-71f7c05f98bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31ea850-36ae-4b69-a3e7-7143ea7fd411",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840eed21-1b3b-4836-9c54-6b56c4957ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a33392-738c-4bdf-8744-450aa7676349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09ef626-e8b8-4a4c-a034-c31210a2956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7651e25-dc0c-4266-b3ca-de4a5c404dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e74098a-476b-498e-a834-82cbee8a0d30",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0393e4df-a0ff-4dfe-ab0c-992b4a8168c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab071bfe-e7c0-4346-94ae-f9e1aacef40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a1c07-4579-4a78-8bc7-3184ca06026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5c2d1f-41b5-450d-9521-65965bbc7635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bf4caa-7e6c-418d-9f04-26d8bd946188",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319ed4c6-5e7d-4bb9-a618-2777014a31ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681908ef-4b59-4b34-9863-147f48197613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c9aa99-bfe5-48ff-b496-36a27d4a8297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a34f7549-2534-44cb-bf4e-94cf3304ff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45fb99-1eec-4db0-bde8-4b0e93095cfb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580f3e6-6950-4170-b399-de0e06c4aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7326d4-fcce-405d-86b8-5a2334b1bd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804fc410-e203-4860-ae96-298e6dbde8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79097b6-ca01-43eb-81de-6ed269d12ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e54874-879c-46d3-bdd5-0a701cda790b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff8d423-54e5-4e36-9016-2eb4188f2d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace1de1c-deac-4da3-b869-e87669bb0437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5b63c4-b0ec-4c50-acad-7bb6c65bc807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "661e8e54-5388-4720-b809-f4672a836ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c75d30-8047-446c-966a-75bda86e2d0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165388aa-3430-4110-b309-b8a6352c1386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15370e8-84d1-455d-9c21-dde5ef199d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86466e6-7003-4046-9f0d-a239ea8463b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ce5356-54ab-4b8c-9723-5a7ada694c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811e9a24-899a-45ff-8ab2-fc2628683147",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe3f3d-7146-4607-b60d-8b386122937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0307b6-b67f-40c8-a9e5-637e4ff79898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff6d2be-2792-4445-936b-e43a15d270cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176e948f-e3c2-409c-9e41-b4897cdf1a4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "537169c3-35e1-4466-995c-c2228c568a46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dde00d44-85c1-4189-a77e-fffd3c80d0d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b4d37-58e0-43b9-bd2f-dc0366948cb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "754c363f-b214-4722-8551-8d7788ef9d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc57b9d-1bba-4fd2-b862-951adb3365c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0fa46b8-909e-45cd-b3d0-4d552ca258f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ca8744f-ead5-46a4-9bd3-b116998cb2e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641ada4b-2116-449a-8266-a64cf73f10b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7d2ce79-7ff3-4f38-9e79-14ca2df07b8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3da0dbae-a653-48bb-beee-16c55d8938bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a4b580-1e8d-48d5-a911-a52216a91a3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d28d85f2-bd79-4e58-8f6d-9eefb97870b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07f2c2a3-ef24-4b52-b474-d07fd47ca646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26178bba-4347-45b4-b359-6bf7b5fd8fa4"
            }
          }
        ]
      },
      {
        "id": "b39983b0-799e-4547-91e6-9a97f7bb05fb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c95ec46b-ed87-4c7e-bb3a-9f3ac4e54a1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "affa51d6-420c-477c-b00e-a506371326c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a96e692-13eb-490c-b353-2df19a31705f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37775788-3083-4f6a-bb9e-4cf258b8b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539be0d0-b74a-4ed0-8b85-bc78f5d6eb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d59e07-e006-407a-93af-e25264a7071a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0530206-443d-4807-975f-2d291c917acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659f69f5-67f7-4cd1-9149-9b51f675c641",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b678fc-588b-4c90-9368-ccf68edc7b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbbcf51-6be0-4744-a686-73426de66f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5574a6-ea39-431e-9439-5eb00225d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c4b8bc-8312-44c7-a519-8865522a1e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e963c9-0497-41ae-b28c-a096336f3566",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278d3b76-58b6-4b1a-9ea2-186eb00edf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31772e0a-fc9b-4898-9de4-aed859d08943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e0f1db-1318-422f-9b2f-21d5e39a394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf9c705-7c3c-46c6-b9f9-766580853914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7ce10-acb5-4ad2-a315-141252f6e4db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff66e6-4893-4151-be0d-2b203c8d3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399ab7e2-d621-4ec2-b539-65e52197edfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bef1cf-2f68-47dd-9564-65e5c7e791d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cf46bf-da8e-4ba3-a951-777b1cdb7c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cdc8a7-f6f8-4dda-9505-6521f396812d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8b7ae8-bd26-4db7-8db1-9b48706acf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6eb21f8-bb04-4593-827a-8e25741ab395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21989edd-9c8a-4fd6-bd20-195a082ee9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1f41f0-ca85-4b4f-8b42-934bfaf22df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b305bad-44b8-4600-8b95-6f9173c525a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1f9e1f-b2fd-4cb0-a18e-77f15dd2f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7421097-2aec-414c-a77e-24377268309c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9458df3f-9f4a-4c62-8ddb-81645522d634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf58c9e4-03df-4969-aed8-e7f0d4a4b6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acd63d8-42cf-468c-bd2f-b1efbd4cff29",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca15c90d-ce05-4511-b0c4-9600de9179f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881a81af-c251-4e82-8fc2-26ea54fb86c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2419a399-ad0f-46ba-bd5c-047bc8f13248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9c8e26-374c-448b-af9d-ebec63a6fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b9a113-9110-4194-a016-d31884ba1f2f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06630b89-39ec-40a8-b8c6-61f013ea4c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabb19ea-7533-4e14-ba5c-d0063aaec898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8cf5c6-9f78-435c-813e-9ea0ff7bcb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80496852-ab1c-41c3-977c-771271f4d56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e97b0e-14c9-432c-bc9f-a1938e1a886d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c669c96-d867-442c-a2b0-4427e871b853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be0104e-8a3e-4a80-b58e-6f6c38286040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc4594f-e157-44cb-b283-258e83a2b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c1a513-b913-4bdf-990b-fe90e9bb05ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a8dc82-a24f-4530-9cd6-d94ec4e220c6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c9232a-5cf6-4947-a94a-83495b665982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831f02df-6f08-4a2a-9ccf-21818b3ffb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb355f7-84fe-4598-8cf7-2a9a07aae869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce5e870-111b-4cee-8c1a-bf3f01aad801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175339a6-00ec-4ccf-9c58-875321a286e4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18a368f-8f6c-4ca7-a5e3-b9593c6cbd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390ffdcb-e7d3-4b46-9ba6-2a08d0a431e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b9e548-aa31-42ee-a422-45ca95ba5bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64cf2113-da36-479c-b123-377e7c6f1901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a28a8a9-faf5-4b3d-a73a-78a70c0321ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce68b39-89cc-4c42-8990-50162cb4339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f5c525-d412-427a-88ed-e2e06ba211c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52353cd9-076a-4f8c-b7c9-a16a806f6cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af9655bc-2ce6-4a68-8cba-50b840c3c622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9cea62-86ea-4e89-b112-3dd49ea7d9ff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a550ce6-3774-47e1-8fd7-a178e388cf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938417e8-0524-422a-b62b-80933f73e997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc7b7da-0e83-4c42-8d20-d23a18935ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "237d58b5-d88b-417c-a93f-c18b7fe6e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5005af39-df8a-48d1-be4b-e701267ae040",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5faa6e4-9c17-49fd-958c-1dd063a71d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18ec5af-04dd-4c1d-888a-0a4d01d1429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53571dbf-c54c-4a08-bebb-7684efe76d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2178e78-60a8-4999-b760-db6d5156ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce316ee9-957c-4b74-a7b3-2fc0f57c51cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1583a9b0-64fe-4033-9248-4f8af251cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a91cd7d-0b53-42ce-9d61-6fd63a7f7602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b6428d-291a-47b2-ab68-8f493ee20158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04fcdf1f-e434-49b6-ab9c-726502794259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7c5e29-c129-41c6-803f-c4e5496ef7aa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d63a5d-bfed-429d-81b5-64b60513c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca007f0c-1e33-40e8-b816-f952c610c7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a94807-9344-4fa1-ab22-3fa84afe4f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e769efa2-f088-4f93-8b9e-f1792ce3ee96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc4ce6-a64f-49c4-86aa-7fa48e9d1e2d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c1101f-ada1-4744-b7d2-9aa665a851ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c484b62a-dcff-409b-998c-bd2c61aa0f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45300fbd-65da-4643-8845-9c45f66a3692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59cfa98-8978-445f-b1c1-5f225ca077e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7914817-6bd7-4c84-97d2-d659b577a067",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca0199d-7e85-4bd2-a339-fbc6aabca7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc5cb1e-d7b5-41de-a24a-ab7f564b6aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b0712-45b6-44d8-9973-45cd6e558e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f4e91b-0af4-457e-9c4c-598ca575ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7df935-9829-49c1-97c5-eefc354a23c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2f8f21-0c14-4a58-8988-15cf0523bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afe7474-a91c-4ee8-bd69-1c5394456dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e96d5a-75e8-4908-893f-75993b64df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab60983e-03c5-4cc6-a1c3-51895762c85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475b7323-f120-4505-a4f2-c26c56c00f4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47533557-ce3d-4103-bf99-7c07c9e04e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8d52fa-f714-4611-99e0-e76b0f2ce171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265b4a3a-2ca1-4e3e-8a1c-af5d623c444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be79b13b-9dce-428d-bf39-22784732b80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c6de86-f55d-40da-a9a3-e26ca799c491",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4090d23-d678-4edf-ada8-1512c5a14cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd931617-b616-436f-ba56-2e2e9070ac35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580a355e-50f5-4c36-99d5-1a85bc5b7098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3acce98-8ae2-47fd-9100-67bb68af328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae56dd37-0e09-4813-8e10-d9f2fe6dafdd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab43b0f1-ad6e-4212-a9af-e6420fe079a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5af9d5-60ad-4a79-83dc-48fb6721bde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da5fc54-824c-44a4-8a71-bff78dd466f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbbe540-bb9b-44dd-8b0c-dbd7f9cc69e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b187c4c-efda-415c-b758-bc4b3cb9c70a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d835e060-12aa-4761-ae73-4dec193f33c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654a857b-c6b2-40b5-a36c-c1b141113643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6145f3-28f1-47c0-b464-46412af2b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb42d9e2-cb14-47ed-9f00-2ef8779c5ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a320528-2b5c-4425-aa0c-61cba72d9fdd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1989b9d-c98a-4e54-9229-917c36a7df5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd68c01-137a-4f28-be1e-3f2606a145c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc64cb1-6f42-47be-b57e-b95e64af651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54633012-89af-44ba-aa97-db649c521418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e906ba75-6f29-4691-98b0-12f03bce2974",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c42868-1df0-487f-a578-c02639f69ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cad5de-4502-4154-84ef-c3710bacb1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26468157-a104-479c-a596-5322f119023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb3d6a6-111f-46de-aa0e-53b90b5c84b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6028260d-0105-40ee-bd28-6bfed0f315b9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99ac7ce-5ecd-42f5-b9cd-320a92cb3557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9fbadc-7bf1-4b99-9e13-1e40ae8690f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e4d3e9-dd7d-421e-974c-c41924b53acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90d479f-c78f-4f2c-bcf6-34014e8e5faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04faeb26-d725-4978-8bc3-cb0f2f423c7d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff2959f-98fb-4c03-a1eb-d273c86f2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eb1ab4-ff7d-4ec0-99c4-5b42d461d526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a389d-1c2f-4fad-8dd3-50c936437a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1095d01b-2bed-4986-ae38-efd8b7cff36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a7539-a038-4644-bae2-aad07485dd34",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a196e-b367-470f-85d7-b9edeb358a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d13b73-2033-4a0e-81ac-2fc0e300f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f332a-6286-49b1-ba3f-b369ad4ead24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2d20fe-2349-4859-a082-bb7ba1338587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6fac59-6695-4339-a724-289d0aab1046",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2175401e-793a-4b6f-86a2-8699c006fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3291fd5-9506-4bc3-b92d-81faa33fbb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449e0489-cb26-45a5-a3a6-11d94e7d56e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d70631-9630-42fb-8658-d01c093c9376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b99f02e-d0be-4637-91ec-576536b08ecb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a8845d-15bc-41d7-8dbf-c51083024ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4026d47d-c87c-40c8-9b5c-343b655c53e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0525234-21d4-4b02-bff9-5b10f190678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42358800-7c98-4c92-add3-1c01838f7c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dceadc-8dbc-4937-ac15-439e0f6f6fd9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3fc23f-6dab-4d53-8516-d814f95ee1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c0dc0b-cd12-4ee5-abb0-466cce153835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a4c6c4-6707-452a-8b89-3c555794188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc90d3a-96a7-4d6a-a9aa-1361b22716a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430c2ca6-e5d5-4597-b6eb-fe7a33e7b51c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ec5ea5-98f0-4b7e-8e8b-ca91d84c8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92cc6b3-0a97-439f-a09c-a9fb22393ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb21ce42-196f-4c53-bfee-f9649d88117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe01388-a1cb-46b7-ae7b-a3226e3b0a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f5af8-d16f-4f75-b1d2-ea0e634cbfd5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0509b62-8623-41f8-8327-e8eda1760fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a0b6f2-5fda-4ea9-9540-c1966c8b1f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa34c069-04bd-4587-990d-750b9be3458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b174093e-1112-43b7-9fda-1f96b6c36be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1a05a-8505-4ac9-9d1c-0955e01f8f39",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd22dfef-7de0-4eeb-8df2-c1fffe32ea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15907681-8f1c-494d-9fd3-f52b3fef1d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26273519-d605-4601-bf62-1a78191e44d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94f9639-ca31-429b-b092-597840a3c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38c26bc-f542-4aca-9c61-9964b958fd7a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a3874b-198d-4db8-a71b-b08323e864bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5661436a-3d2d-4119-9206-9392b198b89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f776efcb-75fc-497f-b9f8-6b1fbc1d1982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b1fbdc-bd35-4f81-b151-99f93b993ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a257394c-d00e-4b9a-8c8e-7521328ffd70",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316df6ac-faf8-4612-b18d-0977275f08fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba070d69-ebf1-4086-98a7-6c61607e84cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8e2ddd-4dad-461f-993d-bb914dc36911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9586690-bf3b-4304-ad4f-90987f4ba68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b93ac8-df28-49a8-9c5a-028fa5f9685c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21089c7-0e12-4423-9d36-61dc78742369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b526b028-0550-43b1-9566-7ba3c82b22f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c865260-a46b-4d45-b61d-04449afdef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "983b9d6b-aa25-4c8b-ad53-de8b5ae09fe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6acabf7-73a5-4257-9bb1-85b09f0a0e02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbe961d3-c038-488a-821e-bede9384d63e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf01a41-cff5-45da-ab42-ad682862c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53940fea-af8b-4ae8-8a5f-c18aca06c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4e72a-a1d5-442c-a310-9182bd0ad7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65f756d5-cc83-4a31-a26b-e4277eabe293"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a659ca31-4489-4e3e-8ae1-a9c83dbdca26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad54ba98-07ab-455f-843b-e1078a0f535a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26a86079-83a5-4729-a459-a9899c1a63ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff5e424-a054-4601-83cc-2cb34db2e79a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b2b5e1f-f3b7-42ea-a8ab-8b5e0676d61c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5a38d70-4f50-4242-81dd-0b82761ee136"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22226b81-20dd-4c5d-b813-055ba9041abc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4624b9b4-0b2b-4b12-af08-23901fd66bdf"
            }
          }
        ]
      },
      {
        "id": "97768e78-8192-46e7-ae20-fb5982260184",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2dccd59d-dd5c-4f96-8565-10e344081b79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76b2b84f-413d-4365-81ad-a44029f6bf75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05acc828-5669-4464-8b0a-18dec1bd8b13",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b283de-d0b8-47c8-99b9-a153eb865454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fcb896-f7f7-43a7-a13e-e1a8cc2fa6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e59c9d9-b20d-478c-80f5-335558032cad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93ece7-e584-43f9-b6e0-604ec1a2aa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e235bda-898d-40d2-97e4-ecafaef7a21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d7664e-1eb5-4375-a7f3-4006edc7452e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c08ce3-1003-400c-9f17-2206dcbf7eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578706bc-9886-4a80-9c84-608a7d2d85d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc03ac58-eed1-434a-9060-cb97e1ce75de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9264d-f1c4-4e65-95ef-0466706fb6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b183d7fe-c9b3-43b6-af61-2498d542d219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da803d0-d763-4aed-bbe6-a48c8a3d5914",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0872d77-eeab-4e03-a948-6a8251cf928e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58815b88-0ff0-4b12-b0b2-e2144122da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b474bec-18c4-481b-9eeb-bb69b3883937",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f0668-bca4-4135-8212-a17b724c6c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a7643a-577b-4716-b0b3-8b247573c1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987f45c7-d2c0-4f71-b275-79dc9958f297",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0c08ca-1511-44d9-a9fd-8282249d4797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771736e7-6922-4a10-bcc0-6184e29ea7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca1c6b5-51de-42cc-bc72-7793e2453a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a40c6af-5cc2-4df2-9a16-1d186f972e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4eecd4-3403-4688-9f3d-3e2539da7e54",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a22017-5129-4728-8786-ac0e2fe56829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714d4cfb-2fde-4972-a23d-069851bd6905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87857bd6-a518-46fc-862e-b5855547925b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5617fb7-b359-497c-87e2-cd3ff2f84b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e24e4c-9ef6-4d3f-9296-61ed9c440bdc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74ba52f-2c5b-4dd8-9120-df83348b0955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641a9157-9fbf-49e8-bd98-54b783949e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a5874f-d21b-425d-b484-7f8ea20c0154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db102d5a-9c05-4004-871a-58603dc95001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc9dfa8-eb20-4cd9-abba-251f727957f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66ac0b5-ccef-4fd3-b289-e98fa79aa94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0005ff-1220-4de0-83a8-2e3ed6a5c84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c9cfcb-6925-4afb-a00f-d2357f7fb1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af7bd60-d756-4aaf-84fb-79562ef5e0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aed0e0d-0916-4c73-ad59-59473d81a627",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7fb926-6bee-4281-8356-7a71c4b64cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9ff1dd-727e-4032-bddd-b2bd3033eae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150276d6-62fd-4e65-9c72-094706dc98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09c55c4-23d1-4a1d-a110-b534e45639a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682571cd-f7b2-4308-8dc9-03fa9fc459ba",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53283032-4a93-4d95-b105-a2453c857bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1fcba1-5042-4d41-9e57-4e15f1b388c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bace93-20fb-431f-bb2b-fcbbae87f109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2e2518-3aa4-4112-961d-c47349b18fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a7d7ab-3036-4e10-897c-f0311550df7b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a8a139-7df4-428a-bea3-54744188e858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842a8e5d-8910-41e6-9193-0b9c2cb36508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fac9e1-2c4e-4a80-a151-094eb9300788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2784d7-92a4-4b8d-8a88-3c096f5c5990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222dd6c1-0f8d-4293-b114-e6be8e15536d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de0a771-66d7-4c81-ba77-21b14bb20e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69debdb7-2b66-423f-bfa8-3cf843180001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1df4066-63cd-4ecb-b454-9c523a593f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e812f47-db9f-4089-b043-8a1d76d0456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a115a51-17cc-4e45-8844-7d260b4c4e06",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26de0ec-d191-4afc-a072-6599d744c3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b58598-2fe7-4f5d-8d28-2413a9281971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8373946-3f91-4a19-bbb2-536d1d5e67bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425a6ed8-05d8-41b5-89a9-861e3d9b2290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a322dd4c-a670-4a1c-ad84-15ad568a1d9b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aa8182-e45e-4dd0-84b0-a70a7ec63912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a369757-f32f-48b9-b1d4-133b15223312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0841d94-ded4-4979-ab58-2224a6038abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243e6cc6-b477-41e5-8dcc-1963e11db8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bef6422-ba14-408c-8ff7-f8d2307a9a0b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eca76a-ef1c-415e-8202-aeee2725a043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fcf7ef-a192-4ca6-af52-6492c28f1984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebd71be-dfca-463b-9b13-a2aff17e9e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09aed89d-668b-4586-b19e-a87a4240dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630511e8-ff22-44fa-88a9-6b8f2db4e4b8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1924c47-e011-441c-a464-396f585b8bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba549fe1-fd58-4395-bae3-a05af35803ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bcc8b6-d4fe-46b1-8264-57c6386f3311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90682c92-e48f-4263-9bdc-6c77df273980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293b913e-e358-4e94-ac68-a57209e863a5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b556e35-47d1-4b6d-b43c-06e48fe5421f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dcbc0d-f253-4438-bce5-e0524569a1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec635cc-a289-4ead-a491-2920e5c45159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcf87a7-4bc6-4a59-ab6a-2da639a865e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00444f4b-5074-4337-9899-c1899ebea52c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c9061-ef3d-4fab-8d90-2d27bcb5d165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8078176-0fd0-44ee-b747-0429639c31dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829bbeb4-d0d6-4503-99cb-4b4dcd306aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac94ac9-8011-4f28-ad35-63ef11fca0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308ca0dc-f8c3-42e1-b340-f975e7c37dd7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a14f5c6-22f8-43f8-95df-943fec78e372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e000fd-4e56-4b69-ae6d-368b0c3975a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b9d608-578b-4a4a-b437-dd59ad8faa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d16027-76f0-47ec-aa29-3759b4a30fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15dbc28-7399-4dc1-8ac6-9e67b8167014",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af22e888-9355-4e94-9fd6-318cd33ab162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae46859-ca4c-46a0-929f-139bf57e1565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535ecbfb-432e-4acf-bca6-b7b0b249df46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c40065-c1fc-4d64-b850-3e15c28b1775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5006e060-560b-4d10-8a8e-8592db17d178",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14faa5b6-fa6c-4108-a71b-98e8a980690c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e70ddf-b0e3-4ad7-ab4b-5bc456cb7be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef2ff27-83da-4a21-bf3c-c1a6c0987bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22abe7ff-979d-42a5-8b70-845e5beeb068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d66b388-9e29-4ad5-a4c4-471ecabb5b25",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00062cc9-75c1-49c8-bae6-a7ece3f3d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6297401e-73d4-4785-8086-cad355d7698b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c4c882-16c9-4678-9575-4fd2d26a4c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8256e6e-b7c9-4b35-93b0-e8e0c8092942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5526d53-1845-4289-a92d-d4ac2c6f6575",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8643c10f-00f3-40e4-8b97-68f258986dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0c391d-da80-418f-aecf-1718456a4965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92384618-a9fa-47b0-b9a4-1ea77f9061a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7342a5-1718-4f73-9d00-e3ce22944594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11e4390-d33c-40b8-afb2-7d307c4b930f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8160f13a-3af3-4a02-8f77-42c51f76f8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcf4f51-31dd-4bca-b506-8ac96d6f78bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e413bd6b-80fd-4273-8cae-32f744a985a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3935ea0e-75ef-4252-ab47-268c9808d11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc7e59-635b-4be7-aadd-0a11cb279c09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e7bc76-8f65-4607-bcf8-16e7c28106c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e076f558-263f-46ee-9f55-2fdf7e8595e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa23f2fb-4ab2-4f4a-9ab1-1af3a50edac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1fcd1c-4f8a-4d2d-bfa1-ee5d64e7d701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae3985b-aeb2-434a-9b4d-27531fd0d5fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663ee1b9-1c4d-4c6d-8f1d-de595dfd7910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050098f2-f190-473d-9997-d64f85844f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c6027d-01b9-48c0-a896-88d5764bbcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025932f7-31c7-43bc-b22e-6e0c0f19be08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090b0ee-950b-444e-874a-ae605c84d492",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9660d0-1678-4652-99e2-b88bba7461da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cbac3f-27ee-428f-82e7-7b53bf6a6332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e220f3fa-1177-4f62-860a-aa893b113109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9310cb-ae13-46bd-995e-6f94b4ee5d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3914f1-8917-4d33-930e-4741216124a9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c67b43c-8d62-44ee-93bb-4ca57dfd2c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7658e799-86ee-4006-a3ac-26aa22d7e124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77cba6d-018a-4e70-8013-d90122643942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41b5340-e53f-4d8d-b82d-c9c466ddbce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb855989-127c-40ad-8a4f-ee6586210f36",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7271ee25-ff65-4ba8-808f-fba6cec43cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39eb0f6-4ee4-4a6a-a8a5-e20c0db8cd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4b2d1-3472-4a8f-a931-380dffba0d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40847b7e-880d-4915-8f71-16b805ad51d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea5923-ac13-4d89-8fdf-90d77ba6b7a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203a153b-aad0-4b5b-b7d8-517a2e9c50b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add6360d-a270-4abf-8bf6-3ac535c02d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e990aa76-de23-420d-bafd-4f29f22bff01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a131d93b-5577-4001-9a3b-54a836fedc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63e604e-646e-45c8-87b4-7dc9050c649a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be11fc5-5942-4791-9d59-da882cd30e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661207af-fe31-4322-aa51-c0bc6cbd18db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf048ea9-dc8f-4bc6-a64a-0941c51e5993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8becbcd3-1ce6-4f3c-aae3-3a2db48efe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca1289-a3ac-42d4-8bed-914b3e4261e0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c74df8-c8ef-4e52-8589-53417e6465c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c676a989-7398-4530-bd70-1936689b25fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7965f971-a052-412b-acec-7fdfd25e6522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad942a45-fbbb-4897-a5c0-7f09bfc82035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6d4b0d-079a-4bad-9aba-1eaf331f6181",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f632ade7-b962-4774-9297-5872f98347b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0fb3d2-485c-4b37-83a0-8b0b166fdf17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57109e43-ac59-4498-893c-07630f359e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa562ee-9c50-499d-9da5-03dd7b8c614a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2459cef0-658a-4cdb-a5a7-be1de5ad5413",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea1668-9980-4843-a2c9-f9bb5153bf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a82736-40d3-4bf9-8713-98338bac226c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796d1e17-0294-4440-bae4-d43e407cc236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26f29fa-5ec7-4ef7-b5a9-2421a2703c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb396fe7-309b-4525-9b62-0dedeb18bef6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b6e4e0-05a3-4dd4-b2e6-a28f99d20393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a5120d-abc2-46e5-98ac-3b6367877e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a1e50-aee2-4488-94cb-8312248927e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10b7d6a-ca7d-43ac-a810-a3d6b106d464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51620b6d-c194-4deb-b1fc-5722169a6cdb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4150d2d7-389d-4dc5-b0bf-78fbf3a92b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387ea458-67e8-4bf3-ba25-33999b77c7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b39d1ad-c6ab-49d6-8cc0-5f30542a0155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d362783-fabe-4812-ae9a-5ee0fdbb6fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6375e99e-f5ce-4b04-91a3-6d8e1982b71e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef1945e-d8b2-4d9e-8746-517024f8b598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9210e78-afe0-4134-b95f-0d6416ff8b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e03aca2-204f-407c-ac98-b12967253059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeb343f-fbd1-4a90-9f2c-0e65f81f4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8a3063-26a2-49e5-abe2-2449e49f8481",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3db3372-9d9e-4667-828a-62c86bfc6a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d1d25c-84e5-4a77-b028-2ef76050ef62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f5ead-dfe5-4958-a530-3cc44703cf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a760d5-e3b7-49ca-9ef5-3a84bf691779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7ffb69-0bbd-41b8-8a9d-90fc5919ad94",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd55c09-8e74-41fa-a9da-b2b61550270c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50780827-26dd-4f34-8932-55473fd08f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b5a2f0-c479-4bd6-9cfc-d5365ec1227f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c071b3-f797-47f1-8192-bc1f8d106b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bad3c9-257e-4f1b-9ac2-b266b6c5f64d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfee449-8610-4849-af00-e087ae62846f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9005c1-6753-4026-a739-d8da3d66e82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bbf513-cd99-4cea-a883-c1550211fdb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3e7e8a-0541-4d80-884c-51717afa0c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874141ad-d367-4603-8bd8-a40583bacab8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae8558e-2631-49bc-81c1-8f77283cd4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39be76aa-2cbb-402c-8631-9150cd8f99ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c3170e-3c45-49d5-9685-316c6c6b1554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f797557-84c6-4c64-a687-360ab4fb8f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfaadee-b88d-4b74-b634-d8c7fe106996",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccef47bd-76f0-4742-a937-3fed309ebea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e20cb7-04df-4635-b904-fa62c181b906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1da1b0-1611-433e-b294-019bda1526b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c8e11d-6d0e-4810-8a77-f16c7f953f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041900b-75e4-41a3-ac6f-8c555f4f39b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f5ade-03af-474e-8d39-a9ac1e991d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d3f2de-c1d6-4f92-b0f9-717fef0e467d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881dbb5-56f5-46f4-9cd8-5fc412421559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81726be-b10b-421b-a49f-e0517a3c1324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f456ce-5329-4f72-a4d4-7d83147dba7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b387f478-0986-4277-8c7f-9c43c8f6516d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68b4ca-2824-4178-b270-f33c093e1040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2b433e-4aa1-4999-93ed-75005ac724a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb699b1e-8fc0-4c21-83a8-ab5751cea6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79221252-ea18-4129-a607-2cd7da88e463",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2564eeac-7e2f-456e-b492-c7c92b9be6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20af66f4-8cad-4090-a635-490f8c595fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af447c73-0977-4919-ba16-afd082a04fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a059285-9ef8-4c33-9e80-43d33adbbfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dbe74a-dadc-4e39-bfca-0ecf83ad1095",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dbfaf7-8752-4dd5-9e73-69cb27a1063e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3334a8d4-1e87-43e2-a2a2-794716d6dcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fe4956-9299-4ad6-8e23-6b263822d4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b829a7a-e327-4316-afe3-19af22ed2288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b72e60a-b0e4-4e61-a48b-2bcaa0197f46",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4f6792-5866-4ac3-8c00-8b87f03ae943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58d314b-475e-43d9-a039-ef631678f593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18893d52-c629-49a9-9933-31c477d68f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eba3e49-ab4a-45cd-8bd3-c2954b1e8ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66f14e-3968-45f7-96bf-f92a7e34895e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d75ba1-1fd7-405e-8a46-a3a87c06e20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3488ee69-b620-4f8e-b6e2-aa3250a6913d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bf14a1-1ca0-4498-b2f0-b8598f90d0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fab3f25-c302-4678-9829-a6c406439b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b278ee5-24d3-46fb-ba68-7e9082d08d41",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c24a39-bcf7-4c86-ac24-a249fcc77483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feaae62-0d1c-4473-8373-66627f4706f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac0c5f8-a18a-45ac-a6db-24913b2082e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92b6b99-7ed5-4877-b74f-92d58b109315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8055c3-e3ba-401d-9c17-9f04fa9566aa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1416b3ce-dc75-41b7-8771-2b5976d02a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f32528e-ed8a-4aa7-bb93-4ed27ba669cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35a33c0-648e-46b7-b812-970044dd438d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c4fc34-8ff6-44de-ac3a-9b09e80313f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76792385-239e-44bf-92cc-f0cac9d4d0d2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48afc95-f67c-477b-9c44-ffab7b884baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a337a329-e49f-4711-b1b1-869086cf7d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba31035-6c50-46cb-abf6-3cb04d3a0046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dd5ded-2da2-4276-a6d8-fbfb2e271d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da6e53d-579e-4484-b0d9-f10fead25710",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef17ce7-3e4f-4c1b-ae04-c1e24b9487b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a73e4ed-3aee-4a02-9bd5-e26dfffaa4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab80fd7-25e0-45a1-8e33-71e7ea6d7ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13348c78-211a-423b-8e1b-324fa3326427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9150a9-6c52-4b9a-ab27-f996f567368e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f97485e-8889-4f54-83f0-40c3c1ded365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44064389-5165-4d45-bc7a-7b2f9d3373b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb75eb11-90a3-4eda-b1fd-48552e3b624f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728c3780-8357-4fe5-8f96-e07f7c36639c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa814a8f-8866-4fc7-ac6f-e2f86764e285",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd132d99-1c3e-4223-9a21-4d99ce3d14cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94f0207-5bfa-4f26-8c9f-3ce26012f285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d8ee09-6f8a-4431-adc7-30cc61e1fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20751d97-cbab-4c35-84f0-7249ac9e49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2113e9-bb95-460e-b96c-7c078ac0e480",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d941380-ca92-4c4e-9d60-054341dc6607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04975dc-4973-439d-8541-44b937dbee55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6555a1-c6a8-4a4c-886a-4c045013953a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef41dcf-6f47-49a9-afc8-cd1e1cde7e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22289cc8-4cad-4ca8-91c8-abf7cde39300",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0d1e0-af1f-4ce4-a982-a0ae3c1e5e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e75287-82af-4165-96b8-944fc85b10c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf5cc3f-37a3-44cd-bade-7a7d89429e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917a7489-b37a-4450-87da-eb6d5c5e3a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053330c2-fdcf-47cf-984c-98bfba74f448",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c150309-507e-4d23-8d01-4f3287d4b19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7d4017-7f61-4e81-a470-f90b34f301a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9d0eef-b449-4252-9c81-414ed5eed0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0409cc-a3f2-402f-a068-a5b02f64486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c8e43-1997-40e2-8774-6f71cf577089",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60fbfee-fe09-439e-8653-7a45490b2556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339792f9-f2ff-4b0e-bda5-48a1569f72b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6d6c99-2e47-4110-8cb4-935558db222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d72e2f-4713-4043-8e55-a6a0d89e877c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346d5d67-b2c5-42af-8f75-024f9d6bd28a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf2591e-ee54-404a-bca2-c8298ec26163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be031c23-9856-4cbf-9697-3a5a986733c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784b6dd-ffc2-404d-afa1-8f268d7d5645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1ebe33-cfd8-48ce-bf9e-183223772f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff0e080-6620-456c-a954-5ecb10ec104e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36afc29-e726-4792-ae30-888792071c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebd24fc-25d2-4440-b5c3-8384ffb8fd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b93938-924b-41d3-8ade-0f66586e6dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0b84e0-cbfc-40f8-a772-bd98ddab99dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e175cb3-cffe-4f4f-a906-bcd1e86bc00f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e4fd1e-293b-4438-a8ab-6abcccab8bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2a2a50-138f-4025-b6e6-ae00ee8c470a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f1d26-05ee-4c1f-8002-193e654b5550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781a813e-1846-4c36-b63d-3a8d88c43798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f64bd7-63f5-4f0a-a62b-72818be69b09",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14acc42d-970f-4452-9c9d-b921f2bbcfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c04a4d6-3da0-4ca9-bf4b-ffa1319dc4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80867718-2b37-479e-a594-8937b92de0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361fb324-cfe5-432c-a6a3-34d1d599b286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0798b8-fbf5-4653-8920-2b780c34afb0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a35ee3-8723-4a09-85a4-6d66d111c3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f125a3fc-ab44-4d7c-a4ad-3edda7f6ec14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc3b35-01c1-4b97-abbe-76a9ac18eb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8307f3-bba3-4741-92de-f4f715b87e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee7e87a-5ca6-46a4-9820-096cba7e9a0f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914ab6c6-c854-4e1d-b300-28776ed7ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b041d3a5-4539-4f4d-befd-db37d5eeb64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1de96f7-1d73-414f-a064-3355448c8765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c6ba6e-b72e-4910-8b40-afcd06aa658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457e7e61-c973-40bc-8bdd-835fd760b6d0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7507b0b-aba6-40f5-be57-e43e37eedebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfca7c4-601e-4cae-8849-5b4246759446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4f3435-fe3e-4780-b893-104be06c624a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e83b29-5177-4044-bb37-e571f109a5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7e65a8-e0aa-4cd3-bf01-378d9dfc0fd5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da045f4-9a8d-4ded-ba56-31df463b2b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30440e50-e836-4bba-bacb-d4b5a9679a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab140c00-2ef2-48bb-b6a3-ea5ecdd77e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15816053-41c1-44dd-b847-790cac2d029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cc7aac-8eb5-4149-9272-e79c24592372",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa69dc-1f98-45b0-85a8-0c6f14c82b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf617196-ab6b-4f42-ab47-e026caed9d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1127103b-715c-49cd-8fc9-6d14ec9a4ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d206d039-0ce1-4c53-8720-cd41538b6e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2510d88-2913-42d8-9b92-422ebbb8481b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e4e8c7-665b-414d-ac05-2ad11eb199ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c39b07-1e64-4c41-9490-1e2b75635d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c189510-9291-4788-bc56-4d9acc8e70f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e995ab68-50d0-4f4d-bb34-2b6d95dbc0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6f9e6-4148-44bf-a450-3b40f4b505ed",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5286f82-779f-43ff-9da2-92430d14be1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29c2e98-7cfb-4f7a-a609-8305f1313953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f457d6-4644-4600-8b86-8e72d8ad4fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb5a0b0-b2d7-4e04-8c6a-58c03249f1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa102a3a-35e8-4a04-8c16-3cc77f8cce6d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b16c26-d532-4970-8f8b-34fa00857a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91983d4-fcf7-46cb-9a61-f06f3bb6f8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57ff325-284d-44d5-8905-385ef8a84b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3ad4ee-3ec3-46f8-a8f8-b3b334a00539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da6a7bb-cda8-4514-9b40-cb2a23873d88",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef7770d-e099-474d-a363-55249ebcf7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84f42de-4002-4981-8fce-c9a8bd247a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d6be44-7d45-4d6e-b7eb-b1885e565f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94711377-7dee-4750-baee-e467bbfc806a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62870bc5-0003-4952-b2ab-20d6f03ba0d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eab8d5-ac85-4eee-80dd-f8e07af570e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa1097c-a71d-4f88-88ac-76405a90c014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5668597f-4988-458c-a566-f5a4bd22d4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaa70cb-2150-4a05-9eb7-da0a7d5010f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a267fc-f6e1-45e5-b4be-d6cb0a356d1a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0118c72-0e7b-4086-8296-dcb93a64c1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e635ce35-8383-4f3b-85bb-c1ffb7bada4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c103d-b35c-47ca-a49a-46e52ad9661c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829d3922-a752-41e5-8584-16a45f08854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c631bc81-acab-4d1b-b6b0-781894344066",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c4f0f1-a8eb-4d6a-a96d-e2113b9a955c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629c4b4c-110e-4922-b840-a63ac2f6b3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf5395b-f5a5-4078-baa1-b5529bf04463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792a0eaa-0421-4236-8c6b-426320ea73f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2143b9b6-05a3-4c01-bfa6-ff08886f4178",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af37d6a-75d0-4ddc-8cbe-908878c9ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc929245-6332-49d8-ba7d-f35431b84892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b51b51-fc89-4df7-8841-b25fe7dc6efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3612c0e2-83c8-4629-bca7-5bb0da7cc78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea84a29d-8916-445e-a68a-fb86d5a047ca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c5918c-b9f9-4b5b-96df-7d6fe4de69d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe0eacb1-becf-4e22-bd5a-aa018ff2d630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b810d8-f4ff-410c-b617-ee684321c14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e93258-dba7-402a-b5dc-e59b71c3ba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd98e21-95b6-4baa-be32-444ee3248c48",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebf68f6-18a2-45e8-b16d-caa80916115e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d19f30-1c07-4c65-b3f6-9ed910053a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a645f058-f7fb-47f1-bcd7-4d93b7488cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411e3cdb-8005-426f-9942-7c43a1503a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4883d90-32c3-4f56-9fc5-eed82ca71809",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a28e5-e7b7-47a3-9e18-7fab771d48ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8b2835-5781-4a71-be63-17ae042f4c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7067d3-996a-4fde-afa4-1fccc4402424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd029aa3-0c22-4bd2-8652-d889c06ca41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a001ed-f9fb-46fd-b0a0-707c891b7d11",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f91962f-035d-4960-996d-0889318ee0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101e472f-a9ec-4d5f-9537-9067d35b689f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca7d402-1fe8-461b-8780-419dedada0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27b0ca4-acbf-4d2a-bff7-fe40f2610baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596530b0-7aed-43ef-84e2-b430a10a99f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3b4218-e877-4c52-bb1c-3790efc1cb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2518c08f-12df-4c11-8a65-669f699f1948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9e1ca4-a500-41fd-91c5-1b9000e2a1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a440f457-bd47-4936-a5fe-ab0bbdd281af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199dbc2-0775-4f87-9001-09a8b5c1bd93",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cda6a5-f00a-4363-9d83-5a1315501c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffda7432-da2c-4f2e-b1ac-f842de01a048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f853e93-9f06-4931-8bb9-d0b0c01f3783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d50945-7359-4af9-bd25-af7d1f80e4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a2a585-2cd1-410c-ab83-19e1cdc8be06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d73d71-5744-4b54-8985-1c2d530585d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9960c35-57fe-4edc-931a-7573b5c055b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26442c83-9446-44b2-a3f0-db6d9cf63c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b737e6b-7d82-4a55-a264-a097f754a483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d1374-fff4-4890-9fe6-0f960d445b2f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10966c7e-d52c-43ce-afb8-52c7806fe464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15843f9-1674-41ef-a3b9-36edc62e92da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b474c019-9e9e-44a9-ac80-88ad541270e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe90da13-cf40-4b11-b5fd-a1877033e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b4b8f7-8be0-4cf8-8549-247dc7c0c708",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6af5f06-dbad-470d-bfa6-348930af8429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383b7374-16f9-4ed8-8d11-c574eb55a9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f03a5b-cdc0-4012-a342-ae1f573b93f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543f7159-1756-4df5-88d8-b17a68a1bd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f4dd7b-178c-4a63-91c6-c9e100d1a8ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5419ae-1054-40b0-88af-9d72c9cdc2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2105635-546b-40de-82a0-384cff3f0078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef27531-3f25-4bc5-8bff-9575f6b5908c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f96a68-793d-47fe-ba29-26a9cc90d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3660f613-fa7c-4153-b3b4-1ea8fe0fe2d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77f41ac-64b7-4655-8ce9-5159db37cea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca96c2fb-ba80-4cf3-9cfb-ef74ac926b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d64352-4b40-4a90-9df3-ac15bf0545da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23cf992-4c37-4b09-ac40-469f8ce41c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb051867-ea5d-4014-b9a0-94ae6073c5f2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea327d72-8ba6-4702-9957-cf2c5647250c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f0b323-ae75-4d2c-bea4-ecec73ed9e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bcae5d-2082-4c1f-a6c0-6600c3be4509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8568419-9d1e-4da5-b18d-ef2768858566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820bafe9-2497-4475-94cb-7e37f3cc6e09",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cec0e38-d568-4436-b93e-2e9ea7c70fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f0d713-7fff-4297-82ad-640358030721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204002b2-900d-4817-a286-00ea2a46573d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17056d82-0a56-40d2-b7c8-69ad3f870779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1111d4c6-7ba3-466f-abf4-904fea99e9cd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9848a288-4775-4777-a9db-3c259075df4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdeaa73a-8859-4353-83d4-5d856b05730e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4426affd-ea24-44a7-babb-16431c016509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f67f918-9e81-4acd-8b01-75a0a06ac62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877396dd-ae35-430d-b9dd-6998d2cf070b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11d738c-24e1-4922-a7ca-7a2e51725ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d244caeb-044e-42cf-a6fc-853782e223f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdd2e4e-1cfd-4c98-94ae-f371ae4b04cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2d620b-f97a-48b3-98ee-fc0e8c849a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed1202a-c11f-443d-af6a-72c5d8369fb2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82550e0c-2ccd-421a-880a-1225866f706b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53825519-27f4-4ead-9f62-934567d71c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace7d7a5-8e5c-4eab-8374-cccd72b34424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef10c793-24d8-437f-9e94-03b30224e037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef136f5-802e-4c42-9418-620921fac6f7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c59c9a6-a1b7-4411-aef5-fe3bc0b39266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6b3bc9-3214-4b32-9f6d-658705216501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d930ba-d93e-45d4-905c-6807e0517f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ef281a-6d59-4821-a7b6-44ef87f19c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222a2714-0518-4cf4-89ef-883d8fc2a03e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476350a0-aee4-45fd-9d7a-a27fab39dde4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8faa7d16-b029-4108-b30f-854aac9d5f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9583bc0f-6c0e-4901-ae5b-bfd9559df7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c63f73a-5afa-4cc0-b510-adce2102fcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7335dff6-30b4-4758-9afd-2d236578f6fa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a841510f-5813-485b-a2b9-862bf356f686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b9c090-6d92-4091-88c4-8fa0c152aa9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e5b855-f72d-4ada-a282-00818e4ac010",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088c9eb7-3a37-4ad0-a443-a72adcfbaf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81341c87-b2f7-4715-856d-402bc96d4f3a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d706b41-7bc7-4ab5-afb2-e7d8ff6f33df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfa2b17-6159-4fda-b3ef-0d2a5dea4a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1139f-bedc-4db7-9d85-0d2e90c6c72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2869af68-419a-44ba-bb1d-f2da3274382e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1e91aa-7ed2-4448-b65b-11e3efa9128d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d008028a-4c16-40c8-8c62-705304278471"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b647d5c7-9c74-4f8b-94bf-941e7d4783c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80dec339-4a47-4833-96d5-a07dc6765886"
                    }
                  }
                ]
              },
              {
                "id": "738cd837-f20f-4888-a894-695a71c59431",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adc244a5-40b6-4687-ae10-0e221728fa4c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc000718-f7bb-44c6-b683-97b780063703",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e9d9989e-9aae-48c0-afaa-efaf4960890d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3686c6-f76c-4bac-affa-931689f73e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acc6be10-d782-4e3b-ad53-c3648bbee22e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b413fb0-5f9e-4266-ab36-cc308ec95508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0253963-b96f-41b8-a0e9-744ae0133c52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf639e76-7c10-414c-ad24-660ff987e970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acaffc94-1986-4281-bd26-d3a33120def9"
                    }
                  }
                ]
              },
              {
                "id": "0c40b953-67e0-4980-b56a-69901f7ae593",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a7e7298c-9b5a-4f79-bb0a-703825fab0e1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6365a9b-3d9d-44d9-b2f9-6aae33d6d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9981c79e-fb89-4be2-b290-97b6b386aeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2e8d1-1aa9-419f-af6c-7263152bfe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85f2788-a5c6-4361-b0d8-e5416c6840b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16dea9ba-5987-47f3-acef-2457844969bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c99138d-9400-4e68-b400-f9a63b670d9c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b884440-7c87-40d1-bf25-7841121b56ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac05754f-cc70-4a46-a1ba-40132fce8c0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4e59ce-6481-4068-9697-56de372ccfc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eefd5978-3056-4aec-ac11-c3bfa90b7153"
                    }
                  }
                ]
              },
              {
                "id": "5a8a1de6-e257-4b08-9bf2-e5b30c32e39c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b86680a-ee93-47f8-a553-0114e4fd7e02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c3fe873-b89c-4f15-9fc2-87a20058e100"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c2428d7-a509-4a29-a2f1-a63df2f003a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03284a50-9e5d-4aa7-9e63-a931d913e834"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "116a3016-8495-4e8d-860d-45a5fb1ddaba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "742f2272-c35b-426e-8ef0-b18c3df04dbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e37f2a63-b5ba-4bfd-a26c-b9aa44a877b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb210567-1780-4d0f-8e70-d61ee7539b6b"
            }
          }
        ]
      },
      {
        "id": "91774d73-ff7b-41ff-a0d5-7e12169c87e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b65ee4fd-ed33-4956-8281-2b1387769d49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d08812c-fb8f-454a-b24c-944220ee155d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a5c81cd-0f50-4884-a212-0321bcbadba9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2d97d7-f50d-496b-90b2-d3d3d4cce0a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "38cbd14d-ae52-4720-98bb-3bb242683095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6663a8d-0e04-4e2c-99ef-b2c03db8f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc5aa638-fbf4-47ff-930b-02c1f1cfdf79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b569bb0b-eadd-46d9-a89c-ac2100be0f25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0d0e1d6-e5dd-45af-8989-57228d9863b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f64cf40-4af2-4939-8b56-e7c3b343255a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4218692f-f2ef-44b1-862e-9dc103fbd57d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17218f2c-fe32-4c88-8be2-1e57c81209c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2252ab9b-e14f-4cdc-b3c6-b11e0776784a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7101fc7-27f2-4851-9654-99d6ff143aeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c61f79d3-b62c-479c-a3fb-cab942f8d24d"
            }
          }
        ]
      },
      {
        "id": "e97d63c4-a0ea-4427-83ef-ac55b730a3e8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d21b448e-42fe-4f03-ab3a-d6318c638f62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fffee708-97d8-4aa3-b932-7437e94c2cb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "916f6894-ce79-4bd9-a400-24b20e3527ab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f40d373-f739-4c12-9932-590bd8a1a677",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1655b4c-dcef-4040-827b-b58e2e62099b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c1ff4-1e06-4b9f-81c3-5697cff730a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4231e23e-c924-4ba1-9b27-314c26a65159"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f07b90ed-15ee-4397-ad60-d3eacf3e3fc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57a306fa-671e-46fd-a5f4-082503f15a32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa159c4-a2e1-4c1e-a610-e608de356389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0f13434-c2d4-4483-a0b3-2f1fe9ac14a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "076ab50b-3b2a-44b8-bed0-bf1d165ed8fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1b8faf1-fa48-4fb2-8efe-5c64f3375626"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d898f48-08c3-4888-b78b-723f8e24461f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e7cb7d8-8d90-4e85-b994-4815654aa59e"
            }
          }
        ]
      },
      {
        "id": "e859a1e9-cc10-444c-8d90-5fa44e0434e2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8dffd70e-f0fd-4eac-b1d3-c517bc1d77c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7b9c77d-3641-4bab-939a-650269c6fdbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf8f7f8-6930-4995-8e88-8ef57d88f731",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a06b4f6-0215-4aa4-b9fa-cd0a720070fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6558d94e-d480-4be3-bf21-c44d143a271f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e735ba50-0f35-4905-b4a3-706a79d3de6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9505fca-d164-4793-b33b-ebcf68c505bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c94515b-2fe9-44dc-a208-379eafee42cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "568fd53f-1f36-4977-a10a-b2fcc0410b96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d62e590-4c3e-4d8d-bb9b-5eab61e83380",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98ba5f4f-26cb-4c11-ac01-191e95481b57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f6e1afd-cf42-4da4-8081-7cf1aa30443b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26091084-3de5-4895-8fd2-60f1e0b35d16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba703084-99c7-4ea0-a09b-c583c988054b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02ead73e-072f-40fc-863a-21d5a9281487"
            }
          }
        ]
      },
      {
        "id": "b8ea2a9d-cfd8-4389-aa82-4ef68737d13b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24befabb-ac8c-4e07-9ffb-69e1e96f384c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0cb40ed-d1f3-466c-881b-5169e8d3f40f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fe42d159-aa36-45f9-aeeb-e9017be6299d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7ebac6c-ba0a-4b32-8986-bd81274bea3e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41288c59-b290-48c7-a8cf-92f282c9f163",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 75.73333333333325,
      "responseMin": 4,
      "responseMax": 8312,
      "responseSd": 546.0559181356742,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704328557262,
      "completed": 1704328587960
    },
    "executions": [
      {
        "id": "2845bcf8-ba45-453d-866b-de2cce52805f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2da4f2b0-12f3-4957-8c69-4472c56145df",
          "httpRequestId": "e6443691-f5c4-4c6e-b655-42f01249bbd8"
        },
        "item": {
          "id": "2845bcf8-ba45-453d-866b-de2cce52805f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2758dbf5-68dd-44f8-b7e6-7f4ea27ee324",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "56839af2-586f-4697-a860-bb9654480014",
        "cursor": {
          "ref": "4cda768e-49c4-4c10-832e-69cfea32ec35",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e1f3dbe8-287a-4e38-b5e5-6afdfb326d82"
        },
        "item": {
          "id": "56839af2-586f-4697-a860-bb9654480014",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c3e3f396-a990-49af-ba65-77e55ee86770",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a1b2b633-f2f7-4f49-91a4-0665012b9352",
        "cursor": {
          "ref": "3b366f31-bd97-426a-b8e2-1f4aab8ab118",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "590e0134-5702-4dbe-b492-763fc1a364e8"
        },
        "item": {
          "id": "a1b2b633-f2f7-4f49-91a4-0665012b9352",
          "name": "did_json"
        },
        "response": {
          "id": "32afb533-0e02-4157-aa94-73d7064e1545",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db8a80-da8e-4f97-90a8-b5a1b13a1f98",
        "cursor": {
          "ref": "a6e7c73b-4e29-4e31-9170-d480eab85a14",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9d7f78b-d360-48cd-a1be-625c22b4574d"
        },
        "item": {
          "id": "03db8a80-da8e-4f97-90a8-b5a1b13a1f98",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d9f0a3e-ab73-422a-aedf-642ed8e682e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 803,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db8a80-da8e-4f97-90a8-b5a1b13a1f98",
        "cursor": {
          "ref": "a6e7c73b-4e29-4e31-9170-d480eab85a14",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9d7f78b-d360-48cd-a1be-625c22b4574d"
        },
        "item": {
          "id": "03db8a80-da8e-4f97-90a8-b5a1b13a1f98",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d9f0a3e-ab73-422a-aedf-642ed8e682e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 803,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd78ccc-8100-4b6f-bdd6-59f530a767bc",
        "cursor": {
          "ref": "c9679b93-50cd-4816-b5a3-b63249b4438c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8949123c-e22f-4e86-a975-171553589804"
        },
        "item": {
          "id": "8dd78ccc-8100-4b6f-bdd6-59f530a767bc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "92736ef8-1759-4011-9791-60b32ae17a44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267c100c-ab38-4d8b-9828-26505783e4c9",
        "cursor": {
          "ref": "4ce15342-c539-44f5-82f2-4c542f05c734",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "acce7881-18e6-4a42-ab41-674fda9fe576"
        },
        "item": {
          "id": "267c100c-ab38-4d8b-9828-26505783e4c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0d337357-0779-4f22-9891-83ce1e65117c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c700e67-2e10-4ddf-8121-27efb2b14c4d",
        "cursor": {
          "ref": "67380637-9141-4bbf-9374-b7c715bdbf40",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "860c1830-c626-4870-9fa6-0a7b4f19b8ae"
        },
        "item": {
          "id": "2c700e67-2e10-4ddf-8121-27efb2b14c4d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6817414f-a21d-4acb-854e-3a8a94d5881f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab0cf4-91f4-4527-bc0d-17ed64fa655a",
        "cursor": {
          "ref": "e4f21a1f-6bdc-46e1-97a7-900b90de4f8d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b9562d98-58bd-4ebb-9dcd-c66491af1580"
        },
        "item": {
          "id": "54ab0cf4-91f4-4527-bc0d-17ed64fa655a",
          "name": "identifiers"
        },
        "response": {
          "id": "dcc43e0e-3ade-486b-8b3d-9becb264bc80",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9145ce-b12a-4940-90ff-9cae610db892",
        "cursor": {
          "ref": "7c76b258-367c-4033-806b-42986bced8fc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d1fc9f2b-0581-41a7-81e7-e944542daada"
        },
        "item": {
          "id": "bc9145ce-b12a-4940-90ff-9cae610db892",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3a861f15-634e-460d-ae16-4725bd54f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d074d4-37dc-44d8-8c63-181d16dd3daf",
        "cursor": {
          "ref": "8511f9a4-55be-4893-81b1-29fd67947164",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f375c82f-d208-4bd7-a730-5b643d92b30a"
        },
        "item": {
          "id": "15d074d4-37dc-44d8-8c63-181d16dd3daf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "20a2b7e5-bb33-491d-927c-7052a0a3ccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b29139-e978-4445-abeb-4b61e7345913",
        "cursor": {
          "ref": "be2c5e78-9912-4ed8-974f-73c76455bb37",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "71d98f5f-bb13-4ae3-a56c-93bb9e6fb6c6"
        },
        "item": {
          "id": "29b29139-e978-4445-abeb-4b61e7345913",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cd8b0e15-72d6-4395-aad8-a06ef33d0ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f85356-0d15-4517-92fa-a25fecbef9bc",
        "cursor": {
          "ref": "f8d34a5a-496a-4f25-966e-74679bd564b2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4cbd4595-7598-4586-bcd3-7a370efeaa43"
        },
        "item": {
          "id": "41f85356-0d15-4517-92fa-a25fecbef9bc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ddc3090e-d01a-4cc2-bdec-0b13cf267e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be456dd3-fa14-486d-927d-1c82d001af1b",
        "cursor": {
          "ref": "c6da48e6-ed23-45a8-8820-770545ac184a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ed97f9d4-2b30-40ae-a01b-64976fcb8bac"
        },
        "item": {
          "id": "be456dd3-fa14-486d-927d-1c82d001af1b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ca5d29b0-1bab-4a24-9320-fc36383009ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d437cac-d2c4-4c0e-8539-8125875ac0ee",
        "cursor": {
          "ref": "a0b8d22a-5c4f-4c69-a915-00647e0b370a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5b832cbe-563c-4a86-aeaa-ecd1efe90c80"
        },
        "item": {
          "id": "4d437cac-d2c4-4c0e-8539-8125875ac0ee",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb751b06-99d5-482a-aa1c-cdf648975c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dbca31-c778-4866-a108-c9988a5784f2",
        "cursor": {
          "ref": "538019cd-c05b-4e09-8028-5a03643f86dc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "216eb093-8f19-43f5-bfd7-69d95bb757ca"
        },
        "item": {
          "id": "28dbca31-c778-4866-a108-c9988a5784f2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7823366e-604e-4a5e-af7f-e2dc89eb2ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f333f5-f73a-4adb-aa2e-cb3f70459459",
        "cursor": {
          "ref": "6624bd96-1cf9-4d2d-801d-f797ed4aebc1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cfcab75c-934b-4472-892e-b6ac34793fdb"
        },
        "item": {
          "id": "d9f333f5-f73a-4adb-aa2e-cb3f70459459",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0b402f39-89ee-4d31-8276-a749ca91c89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b9f262-20ca-404d-b45d-c27c00624003",
        "cursor": {
          "ref": "6ec3e16e-392c-4b19-af5a-11e4ff8f6c40",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8eaf34a2-f270-4b7e-9d9c-107b53a5b2df"
        },
        "item": {
          "id": "24b9f262-20ca-404d-b45d-c27c00624003",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "12b6b602-6ace-49aa-a1f0-3c89f607be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1bdf27-7986-44f1-bc29-2b30138be252",
        "cursor": {
          "ref": "f72ccaa1-ea0f-4286-aba2-9295d2ab1c9d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6d3649a1-0bc9-452d-855a-3dd4d658b56b"
        },
        "item": {
          "id": "bf1bdf27-7986-44f1-bc29-2b30138be252",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "87f6a6b1-e238-4b09-bb2e-63dd9ccba707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5631f2-de51-4131-854c-b4c065961958",
        "cursor": {
          "ref": "f29e095f-8094-4d4e-94fd-c9c5135d2080",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d98c903b-1536-4539-8633-393c521eb4ad"
        },
        "item": {
          "id": "8d5631f2-de51-4131-854c-b4c065961958",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "adf341e8-0ed1-44ee-9b09-ddf21fe50b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef82ff8d-30ba-4b3a-b346-8b929a6d5e12",
        "cursor": {
          "ref": "c2616f19-b7d3-4d14-8c97-13992f62a7e6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3c3de95d-8862-4a10-80dd-f14a3c0a8287"
        },
        "item": {
          "id": "ef82ff8d-30ba-4b3a-b346-8b929a6d5e12",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a47581a5-6739-42de-9156-f0934c4d5858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10af8027-5543-4685-b004-0b55184fda77",
        "cursor": {
          "ref": "441d29cd-e8b4-4195-84ac-1d92088df8fa",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cde370a4-f742-4a58-bb7e-2934784cef5c"
        },
        "item": {
          "id": "10af8027-5543-4685-b004-0b55184fda77",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a2b1132f-a532-4626-9e13-13f23cfb08eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0658bd4-b64a-480d-b372-72a763125261",
        "cursor": {
          "ref": "d4979bdc-0861-4ef8-81fc-d18e8ba0a347",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3e17bc0d-6bca-4bb4-870b-a1d7c62645ae"
        },
        "item": {
          "id": "d0658bd4-b64a-480d-b372-72a763125261",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "077978db-8027-4fbb-b11e-3c16b4fb3763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e5691-237c-4efd-8a25-decb0da99bf6",
        "cursor": {
          "ref": "ddbaf656-4470-42d0-94f6-b9159cf0bfeb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "15115bf3-33db-4cc2-9e00-43e6133be3e1"
        },
        "item": {
          "id": "8b9e5691-237c-4efd-8a25-decb0da99bf6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d560ac03-da6e-40d8-8b2b-51bc2630a5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761911eb-40c7-4678-9eca-cab60d3ae848",
        "cursor": {
          "ref": "fffb042d-cf4a-4abe-80f1-9eb6f6afc862",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "56f4ae8e-8508-40b5-baa8-f4b6b0eb5b18"
        },
        "item": {
          "id": "761911eb-40c7-4678-9eca-cab60d3ae848",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9ac50550-30ef-49c0-b387-66b61e1514f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12feb14e-ee9a-4d5a-9480-79a933f22555",
        "cursor": {
          "ref": "ee140285-a2b8-4e99-b4eb-3a83d788e40d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4936fe84-0ceb-465a-a880-4da795280c0a"
        },
        "item": {
          "id": "12feb14e-ee9a-4d5a-9480-79a933f22555",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a4af008b-726f-4c40-a401-edf12e0c39c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38728e7a-9eb2-4cef-b89d-caf23824879b",
        "cursor": {
          "ref": "99466b10-cac5-41d5-80ab-80048b8a8eaa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fa54e5e6-7a92-4901-9d84-926afede25bf"
        },
        "item": {
          "id": "38728e7a-9eb2-4cef-b89d-caf23824879b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ab175d70-2de5-4380-b136-4c5cce4ad81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f1fb7-d94a-493a-8f98-c4678f50084f",
        "cursor": {
          "ref": "5d1b122a-c68c-4cfc-bedd-1a44421af5b4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "332be4a8-4201-4e3a-9e47-b5bdde8b0ea2"
        },
        "item": {
          "id": "ec0f1fb7-d94a-493a-8f98-c4678f50084f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f3826384-2f23-44bf-82a1-6967d5763f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b1a1f-6bec-40f3-a3e2-4376598b21c7",
        "cursor": {
          "ref": "1b38aea4-aac2-4906-a885-d972b54da418",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "53dce3fc-71f1-483c-8220-68217ab3828b"
        },
        "item": {
          "id": "473b1a1f-6bec-40f3-a3e2-4376598b21c7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7f6a7db4-1d8e-4054-be07-07cc89c8cdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d179ac-e101-4874-8ebd-d31b49232316",
        "cursor": {
          "ref": "6bae7128-360c-437a-88d0-f2cddb37bf21",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d6715fc2-fe50-49a6-88ea-4583f18fa2a2"
        },
        "item": {
          "id": "76d179ac-e101-4874-8ebd-d31b49232316",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ee2c1c7-17a7-4581-bfa5-7a87ba2a28c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eecc15-3cbf-417e-8f7e-5fb298d6c2ab",
        "cursor": {
          "ref": "efd97407-c8a0-4859-89e6-98a71998a19e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "46671232-c30d-4739-b930-b015a0520a65"
        },
        "item": {
          "id": "70eecc15-3cbf-417e-8f7e-5fb298d6c2ab",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "77268cf4-eb63-412e-bda4-c87c31755bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7b4d23-f46d-40df-adc7-6143f7081a70",
        "cursor": {
          "ref": "65ccc087-7952-4b9a-8612-e9ed36df5330",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5cea5cc2-5cbc-4134-b200-ca4e2af0728a"
        },
        "item": {
          "id": "7b7b4d23-f46d-40df-adc7-6143f7081a70",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "64a6b87b-cf28-4d33-9410-0aa4c0e5a44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3929eaed-89fd-449e-948e-70b8f7a21b61",
        "cursor": {
          "ref": "03ae546d-4dff-4255-a774-63059221aaa3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "15f44267-6537-4a49-93dd-2c2ac7c6fde1"
        },
        "item": {
          "id": "3929eaed-89fd-449e-948e-70b8f7a21b61",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0ecd93ba-1a7b-4311-b659-7aaebbc5a1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf99a8a2-6778-4433-a04a-d6f782c2b6fe",
        "cursor": {
          "ref": "af04603d-4aab-40f9-b906-285d9a34732e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "edfd89fc-2fb0-4933-b34e-2e208d882302"
        },
        "item": {
          "id": "bf99a8a2-6778-4433-a04a-d6f782c2b6fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2fd20e90-1853-464b-a2c1-e27ebf39a873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d44c28b-9e2b-439e-ad45-b8d4afb6bff2",
        "cursor": {
          "ref": "d9e7b981-fcc7-497c-bd79-a72233339c94",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ed43778c-342b-4cc7-962e-d2ba8ea80996"
        },
        "item": {
          "id": "9d44c28b-9e2b-439e-ad45-b8d4afb6bff2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "95db6699-81dd-4f0c-b2d5-4183c07202d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cec7f03-7a2d-4abe-823c-d41109856779",
        "cursor": {
          "ref": "d321d8af-70d9-47be-9881-89a5180c87ce",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1bfacf36-b57e-4a43-9a31-baaae30ff25a"
        },
        "item": {
          "id": "0cec7f03-7a2d-4abe-823c-d41109856779",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cea70f99-62db-44d9-b8e7-d43b833bacd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79374585-8416-450c-bb30-1612a00aa13b",
        "cursor": {
          "ref": "4eb47a8c-584c-4f84-88be-f70a8b5fdbc4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "59369116-5571-4418-aea3-60813e53c716"
        },
        "item": {
          "id": "79374585-8416-450c-bb30-1612a00aa13b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1cdf1e5a-8aed-405c-85e2-8fc08074b58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e0c9a-775c-44dc-bfb8-ee2f827c691f",
        "cursor": {
          "ref": "0ef430dc-ac13-4b68-a971-a86462943bac",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "84b18728-56bf-4ed3-bed1-8885d976563f"
        },
        "item": {
          "id": "f71e0c9a-775c-44dc-bfb8-ee2f827c691f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e0e3c085-5352-47e4-a183-c27289ee0829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5385e8c-28eb-4bd5-bba3-8f1b4a394f87",
        "cursor": {
          "ref": "9000c3bc-8006-418c-bee6-7ef4d3923460",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb8227d9-855e-4852-bd68-f5bb3d9c12bc"
        },
        "item": {
          "id": "c5385e8c-28eb-4bd5-bba3-8f1b4a394f87",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4aa2016e-a374-40c3-8358-e7be3aa1e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d778ac-dcb0-4fbb-bde4-d9f4f3efe306",
        "cursor": {
          "ref": "5f1393f8-ea5c-4726-9c0b-b4ebb3ba02d1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "36e56e23-855e-475b-a258-42facefb2eb6"
        },
        "item": {
          "id": "22d778ac-dcb0-4fbb-bde4-d9f4f3efe306",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6df87287-733f-46e3-90e8-e9cf12acd254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002afdf8-4b5d-4763-aa99-b3d649389c1a",
        "cursor": {
          "ref": "980920a3-f8b8-47f3-a723-9a4aff5e3307",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f0142875-41c1-440a-83f2-eba53a7b88f4"
        },
        "item": {
          "id": "002afdf8-4b5d-4763-aa99-b3d649389c1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "66ee5cc7-4ee6-405a-b5db-9e48c9c99491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff5356-264d-495f-817d-df4cdfdfa42a",
        "cursor": {
          "ref": "043d951c-2b20-42b1-84e8-e1860af41510",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "539cf858-521a-4aea-bac8-220be68b7e12"
        },
        "item": {
          "id": "40ff5356-264d-495f-817d-df4cdfdfa42a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe5a1b79-a8d0-4754-a987-f60b03fd013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265c3795-5004-4733-816f-12820f002978",
        "cursor": {
          "ref": "675ccf86-a589-4771-973a-b7af70d029db",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b50ee9e6-4f9d-45a1-856e-15e32bf056b4"
        },
        "item": {
          "id": "265c3795-5004-4733-816f-12820f002978",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "783e5c3c-cacb-4856-ad19-f5e823134a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcea3124-4181-44b3-a131-0cb9fbe407d2",
        "cursor": {
          "ref": "8610fdd0-f2ed-47fd-9173-b16bef596c4c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "96683dd5-908a-4102-99ef-68da52cee346"
        },
        "item": {
          "id": "bcea3124-4181-44b3-a131-0cb9fbe407d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "67b9920c-59d6-42ed-b866-aae4768ad9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed917a-a4f9-40ed-93ac-9691938a5294",
        "cursor": {
          "ref": "184adc00-1c3d-4c04-a7a2-bb350ce8569a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6c6e1a2d-2fe7-4bc5-a8bb-930ecda641e0"
        },
        "item": {
          "id": "97ed917a-a4f9-40ed-93ac-9691938a5294",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "631c2a7e-9628-42c3-9147-b9bb59061cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2861fe-ea12-41b5-909b-eec3a4d6f18d",
        "cursor": {
          "ref": "20a0ff78-6b10-49c2-85a8-32eb2a07e1aa",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14319fbd-e1aa-46ea-87b8-8030009a48cb"
        },
        "item": {
          "id": "9f2861fe-ea12-41b5-909b-eec3a4d6f18d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "78d72aca-2890-451d-aeda-cf60ddf5bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0976f7da-2086-4ca4-99f2-0227a767d1ac",
        "cursor": {
          "ref": "8c803190-7460-4de1-8413-5c32305b9fd1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "940c678d-3623-42cc-829d-1d18931f4fbc"
        },
        "item": {
          "id": "0976f7da-2086-4ca4-99f2-0227a767d1ac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "857f64e5-ae6d-4eac-8a99-4cdfcec162d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7734cd-4ca7-4a74-a589-2de3435a2f1e",
        "cursor": {
          "ref": "5cb2150d-6440-4346-b7d0-e4c3326f5cfd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b2ba1294-ce0e-46c4-ac61-48047840e64a"
        },
        "item": {
          "id": "eb7734cd-4ca7-4a74-a589-2de3435a2f1e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a0841856-d1e4-442b-bdf4-d7a2a4014116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebfe9d5-b36f-42f8-993d-1d7a590c3f3e",
        "cursor": {
          "ref": "70832690-8fc6-4747-b3f2-e7fd608b8d86",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "90381294-6043-4cc6-979d-1034666b146b"
        },
        "item": {
          "id": "aebfe9d5-b36f-42f8-993d-1d7a590c3f3e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "69ab3999-3a4e-4c78-a2d8-cf2f61e21815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412e90df-1c02-47b2-ace3-9267fada7b15",
        "cursor": {
          "ref": "9ec2b73e-5d50-46e7-9ff2-cb891b1bcb20",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe41aba7-1f61-4a47-9a77-3bf2a78965f5"
        },
        "item": {
          "id": "412e90df-1c02-47b2-ace3-9267fada7b15",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b487346d-d8ae-4822-af57-e9636d549aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3144cab-28b6-476d-9606-24aca57ed00c",
        "cursor": {
          "ref": "26cb8bb0-7590-4485-a334-029b8230ce03",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9e61c056-7c5e-4dc9-9b27-29df0a1cbf42"
        },
        "item": {
          "id": "c3144cab-28b6-476d-9606-24aca57ed00c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5e50de9e-6cad-4eb7-b5aa-4fc97c496a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a9b59-86aa-4a5e-ba60-e8564932ab40",
        "cursor": {
          "ref": "7e6f025c-3696-4582-806b-40a7471149ca",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98fd3de2-706b-4970-8427-c10291377de0"
        },
        "item": {
          "id": "247a9b59-86aa-4a5e-ba60-e8564932ab40",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e6409fa4-0e7e-48e8-a58e-67d9778c17f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8836f80-586d-4113-98ff-af2144a85d23",
        "cursor": {
          "ref": "3d0b436e-94d7-4be4-8410-bf9b00b05e50",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cebc54a6-9056-42ef-8217-70adc029b6c5"
        },
        "item": {
          "id": "c8836f80-586d-4113-98ff-af2144a85d23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "97a0f066-4dff-44b4-9675-3bdd2b3b7e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec00a0-357b-4386-8666-34ac3bcba42f",
        "cursor": {
          "ref": "ec88f29d-19b5-44da-bae0-5290bebdfe7f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "715edd77-1f64-4343-8409-3767ee554639"
        },
        "item": {
          "id": "6cec00a0-357b-4386-8666-34ac3bcba42f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0f1c467a-8d1b-444b-8f72-102a172ab9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fc1b6-62e4-4b63-9c16-d371ce67dd98",
        "cursor": {
          "ref": "e16f298b-1471-4082-aa9a-108afc446435",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7aacd3aa-8c8a-4905-8817-2422fb1254d2"
        },
        "item": {
          "id": "393fc1b6-62e4-4b63-9c16-d371ce67dd98",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e16d2cf6-4013-4687-bc72-85a18dd38411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e515e-e62b-47bc-a705-f7198c919684",
        "cursor": {
          "ref": "dbfab1c8-2442-4103-9747-17e4e7a2e4a9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "13bfd426-0b26-4ce9-af93-6f9f1c2acdb7"
        },
        "item": {
          "id": "905e515e-e62b-47bc-a705-f7198c919684",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "13aeae36-41ab-4717-b9ab-d42992c374c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa9b9d2-5d97-41fa-a56e-c2cd8f7614b5",
        "cursor": {
          "ref": "7f0b344f-59a3-45d3-9b0c-c8b452740aec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "883c2fca-11bf-4643-bea1-fa86c11604d4"
        },
        "item": {
          "id": "3aa9b9d2-5d97-41fa-a56e-c2cd8f7614b5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "886bcac2-6ed3-4fdc-bbbb-22a90fe640f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538f548d-4837-4f36-bfcb-fbe411f31aed",
        "cursor": {
          "ref": "b8bbaa38-b818-4e4f-8dd4-0107744d5de5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "54e19994-cdbd-41fc-a390-39ccf626a99c"
        },
        "item": {
          "id": "538f548d-4837-4f36-bfcb-fbe411f31aed",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "424736e9-a07a-4fff-884f-79bfe584cd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1960a536-04b6-46b6-a7e4-adc6aeefee7e",
        "cursor": {
          "ref": "9dedc8de-3f4f-4f16-9441-43614c2bb9e0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f2d705b1-7f39-47f1-ada3-ebba28df34c5"
        },
        "item": {
          "id": "1960a536-04b6-46b6-a7e4-adc6aeefee7e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d8e826d-5fc9-4dd8-a358-60b922a3b62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f874d5bf-0bf8-4708-ba46-45a4718cd256",
        "cursor": {
          "ref": "158d1d7c-4051-48a9-8842-83f41462a562",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "55125cdf-6f3b-43a6-9a5a-b492807ce79e"
        },
        "item": {
          "id": "f874d5bf-0bf8-4708-ba46-45a4718cd256",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52f30452-fc94-4889-a0fd-21551b86a00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f10863e-79a0-4291-957d-0a9f63583ea7",
        "cursor": {
          "ref": "aacf5c92-df3d-41ce-af24-b3094d3f55c7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "047ad730-fecd-42f7-8962-e42d303ceabf"
        },
        "item": {
          "id": "4f10863e-79a0-4291-957d-0a9f63583ea7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d5091cbd-8689-433d-8379-7517a818d4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eeadad-a83e-425b-8fd6-a9f38f896fd3",
        "cursor": {
          "ref": "8cf5e418-f176-4481-93db-86566dcb3946",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "44b72f77-54db-4d59-9f89-88c0954c7447"
        },
        "item": {
          "id": "37eeadad-a83e-425b-8fd6-a9f38f896fd3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "feaa0779-5d54-42cb-a4ff-3e6719a1e5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac8579-e070-4aed-9084-38122c6733e5",
        "cursor": {
          "ref": "155fde4b-e42c-4575-854e-0f1df5e69e49",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ed9a684e-e88a-4307-86bd-91ef72fc3da3"
        },
        "item": {
          "id": "84ac8579-e070-4aed-9084-38122c6733e5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7aeae85d-ad5c-49b2-97ae-f5a5b0bbbee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea91e563-9bec-499a-bcb7-63dbbb9d34d9",
        "cursor": {
          "ref": "9fd0e2a5-ddfa-4af6-9ce8-13a4668cdfbf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4943f035-9a69-4006-9f12-63833ea64016"
        },
        "item": {
          "id": "ea91e563-9bec-499a-bcb7-63dbbb9d34d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1260ec65-c3b5-4dc9-ad71-e96bb42178d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38a421-332b-4825-a4c1-0ea43c848e1d",
        "cursor": {
          "ref": "a6729c17-fd4c-42f4-b3c2-a599f72cfe75",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "224b9220-e2bd-40f3-abe1-a635bfe8cbba"
        },
        "item": {
          "id": "7c38a421-332b-4825-a4c1-0ea43c848e1d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8865bc65-5370-4001-9220-1b2c9d691f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b932c69-e246-4b40-a06b-873e7990fddd",
        "cursor": {
          "ref": "f81c5d08-bba5-4d97-a5c7-a5bd55629e9d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1ee6f91f-8077-47bf-b244-2ff36465e92f"
        },
        "item": {
          "id": "1b932c69-e246-4b40-a06b-873e7990fddd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f5548447-2733-4141-af75-c8363c4729f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f706e9-fabb-42c8-97c1-89c5f84a3ba8",
        "cursor": {
          "ref": "ba925ced-13ec-4410-8e33-2cb550d893a8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "518f2fc3-a36b-4635-865e-3d785041b5cb"
        },
        "item": {
          "id": "56f706e9-fabb-42c8-97c1-89c5f84a3ba8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "23d9a748-345a-4d2f-866e-fc136fb6a283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b32411-6ddd-4b9b-b665-6baa916c16d5",
        "cursor": {
          "ref": "2b6a0349-b724-467f-9e0d-0dc56afb2ed9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f1a6ba8-823a-4af8-b252-b94e34135f98"
        },
        "item": {
          "id": "d0b32411-6ddd-4b9b-b665-6baa916c16d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "086a12e6-9cc1-4151-8d26-f400c688a5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15cd254-14d7-45b2-ab3e-2864ba312a22",
        "cursor": {
          "ref": "93abefcf-53bd-4664-ac39-63c585f27adf",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "794b3c5d-1cb2-4e77-907e-a8ef4863d671"
        },
        "item": {
          "id": "a15cd254-14d7-45b2-ab3e-2864ba312a22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "368f4d17-2da6-441d-a82f-f24b9652f6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b5de5-29f7-4e81-bc75-9688f5924811",
        "cursor": {
          "ref": "e9f34e69-5b30-4829-b17a-3d55ac852f49",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d05076de-d121-4d53-acc9-d1b89f09e90b"
        },
        "item": {
          "id": "0e3b5de5-29f7-4e81-bc75-9688f5924811",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c4408913-747f-40f1-ac53-374742e0ad1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76d8f4f-2f27-48f3-825c-ade414d88b53",
        "cursor": {
          "ref": "4b4e27d4-9e03-4efb-88e7-2020a45d99a7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eec3cfc0-4ac7-43f5-88af-28c013ca46e3"
        },
        "item": {
          "id": "d76d8f4f-2f27-48f3-825c-ade414d88b53",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f2018b3d-cb74-4afa-bc7f-e21402f8cc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a1e9f2-754a-49c6-a043-58f44ecb5fbc",
        "cursor": {
          "ref": "1289ff59-d942-457f-b9c5-0dee7f64ea1f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5c8c80a0-01cf-462c-8be2-5f73b857eee4"
        },
        "item": {
          "id": "95a1e9f2-754a-49c6-a043-58f44ecb5fbc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8725b6bf-77d4-457b-95b1-530485d97b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc394a01-ad5a-4384-8eda-84bee2a6cdb3",
        "cursor": {
          "ref": "26a3baa3-732a-47fc-9817-93a351e044e1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3faa0b68-6d61-4bb0-a464-d8da0705c625"
        },
        "item": {
          "id": "fc394a01-ad5a-4384-8eda-84bee2a6cdb3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2396d597-8a66-4cce-a018-3af9adac49f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a5a4b8-5fcb-4c14-b46d-22ffa294ac22",
        "cursor": {
          "ref": "354d7493-4a4d-4434-bad6-e420b3ed9569",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ebd28151-38f4-4760-a5c1-984d0d011788"
        },
        "item": {
          "id": "23a5a4b8-5fcb-4c14-b46d-22ffa294ac22",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe25aed4-05c5-4de7-b314-cd436f643bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bb7239-184f-49e7-9301-464289a6cdfc",
        "cursor": {
          "ref": "4b7355be-72d6-45f3-94d3-7ae05f3f31c6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9944ea32-ca8d-4351-aa70-9f06148a1866"
        },
        "item": {
          "id": "b5bb7239-184f-49e7-9301-464289a6cdfc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a01037c8-7108-4b7b-ac35-8dac742d1664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000dac87-6f7c-4145-a387-61e06dd458d8",
        "cursor": {
          "ref": "2d54cbbd-f7d1-4685-8f7c-38ad749b46f1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59e5303e-0a73-4ed2-8748-384aa329e012"
        },
        "item": {
          "id": "000dac87-6f7c-4145-a387-61e06dd458d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0660b6a3-d90a-4ed5-8108-164390fbacce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28ae35d-7283-4b04-8ffe-8c32f2982f95",
        "cursor": {
          "ref": "74955e3f-5d17-45dd-8c1c-f4974d5eb0bd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "48953169-5d88-4a1d-aeee-ba335ad98a43"
        },
        "item": {
          "id": "b28ae35d-7283-4b04-8ffe-8c32f2982f95",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f4c7c44e-7e24-498c-a419-d4d8ad9bb7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45bb1ae-f231-466d-a657-63ebaf891a0f",
        "cursor": {
          "ref": "2c1f9282-f772-4ff1-99d4-96842bc422c7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d1bcd780-0988-418b-bea4-940ff6705885"
        },
        "item": {
          "id": "d45bb1ae-f231-466d-a657-63ebaf891a0f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ed38b1fd-43c0-4a74-ada2-a9f20d914a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcab983-47c4-47c3-b5d2-e8ab38a91803",
        "cursor": {
          "ref": "04190fb5-3c30-4cf4-a477-bcb12bd873d9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2b230a90-1d60-4dfc-a18d-7d586ff48904"
        },
        "item": {
          "id": "1dcab983-47c4-47c3-b5d2-e8ab38a91803",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "39b8bb72-5bbb-48f9-b3fa-b457d5ee520a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e640224c-9c2c-4a17-bef9-e2353e7b1aba",
        "cursor": {
          "ref": "82d6b5e8-637e-4ed1-8611-3d103436b994",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b2b21ff2-3185-4fc6-bb7d-dca56829cc15"
        },
        "item": {
          "id": "e640224c-9c2c-4a17-bef9-e2353e7b1aba",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2537b20d-2500-45bd-9865-5ca7e3cb75f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45016b8e-32b0-444e-b127-57b3cccd530c",
        "cursor": {
          "ref": "a04652a1-75f9-43b3-9248-636a065ab290",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "05565fc3-f89e-4ee8-a613-14c1ef833823"
        },
        "item": {
          "id": "45016b8e-32b0-444e-b127-57b3cccd530c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ebad8c87-8742-4e79-bd0e-5f029051e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b48439-536a-44c3-bae7-333f36b9bc0e",
        "cursor": {
          "ref": "3b30f2f4-8c9c-48dd-ad3c-74e4ca6c4ccd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9fb8d71d-47fb-4d93-8e3c-c66ea2cf5c3f"
        },
        "item": {
          "id": "94b48439-536a-44c3-bae7-333f36b9bc0e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b19fab5c-4407-4468-9ef0-912c0f99e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847b5c1-7a29-446c-beb1-b262c1f7981b",
        "cursor": {
          "ref": "95073b9e-50b0-4e5e-ad91-302618d6f084",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "587a4ff3-81df-4cfc-b641-b8a632105f05"
        },
        "item": {
          "id": "c847b5c1-7a29-446c-beb1-b262c1f7981b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f9bda41-92b6-4a7d-855f-e3fa977c66d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce621c30-8491-414b-a2fb-5d1d91aa487e",
        "cursor": {
          "ref": "df83e3f4-9f19-4588-8d65-2c0b7a33e1f3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d0546ed4-84e4-4a55-a4e8-a64964ea3d80"
        },
        "item": {
          "id": "ce621c30-8491-414b-a2fb-5d1d91aa487e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6987cbbd-bc3b-437a-b4f8-be78ea00a59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f6194-88c2-4053-95f9-b864406d7765",
        "cursor": {
          "ref": "9b7ae9d3-965d-4e91-8a70-8f97fedaa99f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7016e919-3a28-41be-9dfa-b62f7f730c6e"
        },
        "item": {
          "id": "fa0f6194-88c2-4053-95f9-b864406d7765",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4ebbb1ca-2d9e-496a-88e4-0c9a4ced5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e173e3-18a7-4068-ab0c-f42a660ee277",
        "cursor": {
          "ref": "b6709692-b86c-45c8-bfe8-4f22c67bf6ef",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3b138882-5e7e-4182-93ae-e6f78514cc1b"
        },
        "item": {
          "id": "c0e173e3-18a7-4068-ab0c-f42a660ee277",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d5a6b7ee-aa62-4dbb-b310-4425a132732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d529b785-0eea-4f04-bac2-f3ae0105fc9f",
        "cursor": {
          "ref": "6792df4f-fd70-455e-86ac-42a02a8a2f34",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4364340d-40db-4eb1-814f-9a8f62b32f89"
        },
        "item": {
          "id": "d529b785-0eea-4f04-bac2-f3ae0105fc9f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a3374f33-ded2-4459-bb90-9151df5e5fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609548b1-eb8c-4a30-a297-e1ef13c015f4",
        "cursor": {
          "ref": "ef7b93c9-c08d-4396-b9f0-2fae02d1bebe",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fb31ca68-1337-4487-9f45-14f7f81f157c"
        },
        "item": {
          "id": "609548b1-eb8c-4a30-a297-e1ef13c015f4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b128a54-a8b7-48b4-9f40-7572f6fe70ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f6f5af-783d-4fa6-87a2-6a07a7004177",
        "cursor": {
          "ref": "ca9b2c5a-da8d-46f1-a2c5-bdf1459b910a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d8f6a90a-09d0-4f55-bfa3-044dd17cdf92"
        },
        "item": {
          "id": "d4f6f5af-783d-4fa6-87a2-6a07a7004177",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0fdef4de-56e7-493f-8a8d-c043e378e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdf5762-ab09-4fa7-99fb-71ded576558b",
        "cursor": {
          "ref": "4e925a6e-b71a-4284-8bd3-af6fcc93ad9d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9d3ade37-fe82-4e9b-8c6a-30fc819e8a59"
        },
        "item": {
          "id": "0bdf5762-ab09-4fa7-99fb-71ded576558b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a0b4734f-ddf3-46a3-8f5e-63102845d870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb322394-6b14-475e-85e8-bd30ac3b2a32",
        "cursor": {
          "ref": "74fa235f-5a27-4129-ba8f-55f082f59e5e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0f5c727a-cce1-4c0c-aac7-e5103fd2fa7b"
        },
        "item": {
          "id": "cb322394-6b14-475e-85e8-bd30ac3b2a32",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d89b98cc-2cf3-4341-95ee-139ff4944d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562947cd-edee-4fd1-9ef2-a6e51ca48f0b",
        "cursor": {
          "ref": "8c2e5b22-2c0e-4585-9760-6356b8e14114",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "305a44f9-7771-4415-8d60-8ed891511bab"
        },
        "item": {
          "id": "562947cd-edee-4fd1-9ef2-a6e51ca48f0b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44e90a35-57d1-4fac-a66a-c3b7a38e9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f7030-f341-4e37-ad57-9af07be6ce05",
        "cursor": {
          "ref": "c0a697f4-0d82-4712-8ba4-3395d1ffce9b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f1ddfa6d-c273-4760-91a0-0aac0738c739"
        },
        "item": {
          "id": "e27f7030-f341-4e37-ad57-9af07be6ce05",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5d61d88c-41fb-4099-8a3f-7a04bcfc1652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c79ebe-7ab5-4d90-b482-5129d3c1b8b3",
        "cursor": {
          "ref": "5a19304d-6e56-49d5-aaa9-19d86c46c8b4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5b71f9b-bd4c-4571-810e-d0a260fa0df4"
        },
        "item": {
          "id": "05c79ebe-7ab5-4d90-b482-5129d3c1b8b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ca534cf-0d96-40af-8bb5-ccac7cccbe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7283f826-656a-4cda-b9bf-8c1c04b57aec",
        "cursor": {
          "ref": "50bcf89b-1d1e-4897-a7c5-ee0dbb619b56",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c7cfa0d7-cf83-4ea7-b619-3186f3736edc"
        },
        "item": {
          "id": "7283f826-656a-4cda-b9bf-8c1c04b57aec",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "62708fe7-cdfb-4c13-9768-795655a43e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee14cac-ec94-4e78-bcf8-be2817a3ff93",
        "cursor": {
          "ref": "e7d341ed-4eec-4976-9640-503c0c0bfb3a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7594b28-2794-4060-b1e0-f2fec14e874b"
        },
        "item": {
          "id": "4ee14cac-ec94-4e78-bcf8-be2817a3ff93",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f59ae619-703e-48b8-a40c-f1e71dbfe943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e96c461-5315-4c52-adbf-48e0dba6bc06",
        "cursor": {
          "ref": "11c42863-bbad-4fa1-875c-5a83a633d22a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b6e35d7a-3f1b-4f86-9d98-db4837442074"
        },
        "item": {
          "id": "8e96c461-5315-4c52-adbf-48e0dba6bc06",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b988a177-26f8-4a29-92c4-b41fc3952971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81106522-a72b-4210-a9b6-92ae61bd6595",
        "cursor": {
          "ref": "3ff2e6a3-f544-439d-8ee5-2db3bb47d195",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "443e44b1-edc4-420f-a89c-59f0908b23d2"
        },
        "item": {
          "id": "81106522-a72b-4210-a9b6-92ae61bd6595",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad32d212-9a52-415f-bbac-d212f1879d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b02195-17b8-4d1b-95d8-118409e26ea0",
        "cursor": {
          "ref": "b494e2dc-35f3-4d6f-81bf-cfa362f563d5",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f58b65b7-15ff-4cc5-82e5-c500e20969ca"
        },
        "item": {
          "id": "41b02195-17b8-4d1b-95d8-118409e26ea0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e4a7687-78a5-4fe6-ac6a-9b243e187746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1d100d-66c9-44e2-9f8d-8d790b14b048",
        "cursor": {
          "ref": "8222193e-16ee-4e39-9aac-368be4645ddc",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ecdaf1fa-eace-426b-bf3a-e71ad684b114"
        },
        "item": {
          "id": "7e1d100d-66c9-44e2-9f8d-8d790b14b048",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd8d60ca-7aa5-42f1-8120-9f2f242666d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cfb8b6-0340-49be-a22f-1cb05b93db22",
        "cursor": {
          "ref": "267f4bf9-05fd-4dd2-b351-211f46c659ab",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "46bab5db-c497-467a-b3af-31f9e8b1a8b7"
        },
        "item": {
          "id": "18cfb8b6-0340-49be-a22f-1cb05b93db22",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d45a2db2-8500-4e96-b728-9ccabe1a6bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c2c10-a466-45f1-b486-da379b92fd9b",
        "cursor": {
          "ref": "f134fffe-c253-4506-b5b9-40588191e6cc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1be8616d-a62c-43eb-b59a-6af661a3d783"
        },
        "item": {
          "id": "4c5c2c10-a466-45f1-b486-da379b92fd9b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c5d6bf83-3762-4eee-9bd2-35de1acce9a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85666e8a-c759-41d4-b8f0-8feb1bcc4ab4",
        "cursor": {
          "ref": "9cdc0e11-a7b6-429c-b0c7-f659fe0a9d4e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6cdbdd25-0592-4779-9568-baf1e2878d8d"
        },
        "item": {
          "id": "85666e8a-c759-41d4-b8f0-8feb1bcc4ab4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3b966b4a-704d-4e8c-a9a6-0f60346c86d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ff071543-976a-4569-a067-f044362c6f72",
        "cursor": {
          "ref": "39a37f42-b87b-4e30-b843-ccc9d1807119",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ed3442e9-f6de-4f30-a786-50ffb18da833"
        },
        "item": {
          "id": "ff071543-976a-4569-a067-f044362c6f72",
          "name": "credentials_issue"
        },
        "response": {
          "id": "49afbc37-4307-4b06-8eea-95e5d3cfec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6e273a81-8b7b-4587-89a3-a72d643323d2",
        "cursor": {
          "ref": "804206a9-2d6f-4737-a47b-e02b55d124d6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ec5f4236-3662-4877-8855-3f52c47b862a"
        },
        "item": {
          "id": "6e273a81-8b7b-4587-89a3-a72d643323d2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "326b3df0-9f5e-4ab1-9e66-cac6067d2c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1bcb53b7-8269-4c8b-9553-a0c593cd15b3",
        "cursor": {
          "ref": "1f881216-4769-492c-8b8c-7daaa975ee1a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42afc990-aef9-49fb-ac9f-070e64e9f4f3"
        },
        "item": {
          "id": "1bcb53b7-8269-4c8b-9553-a0c593cd15b3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "67190f37-3d16-4e99-ac19-aa47f54d90fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a49dbe9c-b3f9-4d88-84b7-6790f7d2ec21",
        "cursor": {
          "ref": "409bee9a-cb74-4da7-b6d7-ede7f347f16e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e4a20b1-16b8-47f6-b5c9-d04f22220b64"
        },
        "item": {
          "id": "a49dbe9c-b3f9-4d88-84b7-6790f7d2ec21",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "44250b91-e02f-4c8a-b55c-1b4131dfa37e",
          "status": "Created",
          "code": 201,
          "responseTime": 8312,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e780a1bb-6cb5-40b0-b78e-fbf0ddc36e83",
        "cursor": {
          "ref": "40f76f57-255e-4045-8230-fbf37c18157d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d011e5b4-21f3-4587-9276-55b5b032634f"
        },
        "item": {
          "id": "e780a1bb-6cb5-40b0-b78e-fbf0ddc36e83",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e37795c1-592a-419c-a407-dec1e65ba7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "84aff226-e32a-44ac-a5ab-2ec70b1125ce",
        "cursor": {
          "ref": "222cb787-5963-4896-a7e1-91186ac85a63",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "45afec8c-b3ed-4691-891f-b790ffc23778"
        },
        "item": {
          "id": "84aff226-e32a-44ac-a5ab-2ec70b1125ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8d1f2e6b-8ccd-44bf-ac01-7152f746ba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0fef254c-194e-4076-b8d5-abe6edda9026",
        "cursor": {
          "ref": "63789006-852b-429a-8221-271a1434aa1c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f4d13688-1456-4b5d-8400-160035f8b6ed"
        },
        "item": {
          "id": "0fef254c-194e-4076-b8d5-abe6edda9026",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a1a32f1-63ee-43f7-a266-7ab041a2ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae75018-3935-442b-bff8-a777c2f498db",
        "cursor": {
          "ref": "7f703838-f6e1-4bf4-8ae3-4f2dae353b05",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5d9c6660-ecfe-44b6-8b2a-af7b17a4ae02"
        },
        "item": {
          "id": "9ae75018-3935-442b-bff8-a777c2f498db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "916d06e0-441e-4d0a-82b7-58fac21c7445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b383656-e09d-4f32-8c9f-5aba807900cf",
        "cursor": {
          "ref": "aa549560-4ca7-469b-9843-6e6d0044e97d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3508755f-8752-449a-8d69-4ed52066e8c0"
        },
        "item": {
          "id": "7b383656-e09d-4f32-8c9f-5aba807900cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4f8196f2-ea4c-401c-baa2-5fbe77e70628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00561315-3873-464d-b3f2-30684ec5a574",
        "cursor": {
          "ref": "ff2c92b9-00d8-41fc-b3be-918ec03a01f4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f1031b15-038a-4363-b91d-37e2aac07889"
        },
        "item": {
          "id": "00561315-3873-464d-b3f2-30684ec5a574",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f1e06b04-81fc-4b26-be7e-fca7fe912b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356dd4e7-df0d-47dd-abbc-ae191f9c9989",
        "cursor": {
          "ref": "9f547fc5-31bc-45a1-bc13-466a386e0162",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6a18daf5-9d44-4ef2-b97c-67d87fb2ae98"
        },
        "item": {
          "id": "356dd4e7-df0d-47dd-abbc-ae191f9c9989",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7392e9d-7b8e-4e20-82f5-8f05f13fb350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be668c-2a18-4837-aa57-1b884bdf5892",
        "cursor": {
          "ref": "00700cbc-2199-4b4b-9838-47626c76d786",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "97c51a8d-d38d-4c24-b6ad-9e0a7bedec2a"
        },
        "item": {
          "id": "67be668c-2a18-4837-aa57-1b884bdf5892",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d5974a6-cba8-4aac-bc2b-86ea5d969ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142038d7-1840-427b-90f1-ab4000dff1ce",
        "cursor": {
          "ref": "c2363de6-b843-404f-87d1-4359720c82e6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5d4ab77e-380f-4110-bca3-6376643af26d"
        },
        "item": {
          "id": "142038d7-1840-427b-90f1-ab4000dff1ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d2a3548-0540-43fc-8051-7efa293417d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e415ed-f792-4dc8-9cfb-13c4202fd96d",
        "cursor": {
          "ref": "3a62c723-161b-41b0-8ef8-b8e90ddb9cd5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9adeba8f-7c7b-4821-80b5-f6c96d8e86fd"
        },
        "item": {
          "id": "86e415ed-f792-4dc8-9cfb-13c4202fd96d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a7c8ce2-7a2c-477f-8ec3-3fa8488dfb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4324a4-6cfb-471b-9b51-e1b1758288a5",
        "cursor": {
          "ref": "98f40d67-4477-4afe-b0a6-dd52cfc63b5e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2a022aea-dc22-4336-886e-1c90e1463158"
        },
        "item": {
          "id": "ba4324a4-6cfb-471b-9b51-e1b1758288a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d82ef5f6-814c-4e01-84ed-a22efb817ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba84c97-b911-4004-af96-180a445f68b7",
        "cursor": {
          "ref": "3797d934-471b-4703-8c76-3e50b8cc57fb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a73f1e19-4958-47d3-9bc8-49ce37054001"
        },
        "item": {
          "id": "fba84c97-b911-4004-af96-180a445f68b7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e28b8b89-69fa-462e-821f-edb9839ba7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38334ae-e552-4011-92ae-e05d8da07996",
        "cursor": {
          "ref": "ff4f90e4-8e25-47cd-8821-4d3e9d355718",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7f4e766d-2ba0-42db-9359-1c8a20fec923"
        },
        "item": {
          "id": "f38334ae-e552-4011-92ae-e05d8da07996",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "42003954-9276-4d7f-be78-d2efd4d6fc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50666b3-2e90-4879-ad18-cd936b4d4c45",
        "cursor": {
          "ref": "6c4bfa4b-09a2-4415-9df4-6fc213872ae5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2ad952e-7e68-4c75-8aac-e2f8bba1f419"
        },
        "item": {
          "id": "c50666b3-2e90-4879-ad18-cd936b4d4c45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a889f47f-694c-4a78-bcf9-df1ae22951f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ea2609-cbd0-4d33-9430-07092c8aedb1",
        "cursor": {
          "ref": "d2fd1426-e909-46dd-8eb4-53478461df6e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "58bfff1a-de36-47df-b74b-662df9efb568"
        },
        "item": {
          "id": "47ea2609-cbd0-4d33-9430-07092c8aedb1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b46a4304-0661-4585-a624-b9b5907d4728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f17803-f7e4-4231-a898-611c53d89673",
        "cursor": {
          "ref": "c62592f6-f8e3-4440-89ab-735a7ece88be",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b55bdb80-4ddb-4177-bd30-9c5730778a80"
        },
        "item": {
          "id": "83f17803-f7e4-4231-a898-611c53d89673",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0d9dfe08-97bc-48d2-94d0-68a0aa47245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7968328a-6966-4b02-a853-bede8564a130",
        "cursor": {
          "ref": "74d6ad29-2e42-4144-8671-4d6ce8f1ebc7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "75b1aa80-20f5-4431-9a02-5ba88a456eaa"
        },
        "item": {
          "id": "7968328a-6966-4b02-a853-bede8564a130",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43436c9f-d514-4942-99a8-d2cc170d3fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd41620-322e-4467-a854-df51c722d137",
        "cursor": {
          "ref": "4063a59b-5f34-4b27-8450-c3d47f307119",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "df04544a-2839-4619-ba02-18fe2ed2fc8a"
        },
        "item": {
          "id": "4cd41620-322e-4467-a854-df51c722d137",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6827f3b-df0b-4568-ba60-06e23918d449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53424bf2-295d-40e7-809f-d645ada6fbb8",
        "cursor": {
          "ref": "ba4f2995-1701-4f46-b1b1-030f84d4205f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "84e1e983-ca99-4711-aa80-d797353a38f8"
        },
        "item": {
          "id": "53424bf2-295d-40e7-809f-d645ada6fbb8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65165d97-5fd7-4146-857e-136401013d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b4f8f-20d5-418e-a313-54400a5c7c95",
        "cursor": {
          "ref": "1d1f3fa4-f3a3-4951-9395-6dc970922db2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a64129df-525f-42f2-b173-532c9743c382"
        },
        "item": {
          "id": "be2b4f8f-20d5-418e-a313-54400a5c7c95",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4094d89d-6da7-406d-a0c4-c8f26965419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642a8b30-0d9b-402c-922b-33c00fb32076",
        "cursor": {
          "ref": "ba0b0f18-e7b0-4b36-8c1e-726519031d4d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "51f71751-5084-48a9-8ce4-a45d5af553c8"
        },
        "item": {
          "id": "642a8b30-0d9b-402c-922b-33c00fb32076",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c532aad-dc70-422e-8737-5e684d209035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f6fb0e-9300-46eb-8ccd-24eb3aaebc68",
        "cursor": {
          "ref": "11952438-6a3e-4b9a-8328-fda388f4e1ff",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "30487ef6-9b59-461e-a612-f5f0a77c07b1"
        },
        "item": {
          "id": "d9f6fb0e-9300-46eb-8ccd-24eb3aaebc68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c446d2bf-67d3-48f2-a6d1-a4b6402c2d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbfcbd1-d520-450d-9bfb-c955f1599ddf",
        "cursor": {
          "ref": "dfb4221e-a300-4af2-956f-c11aef80a3fa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aea8712b-5195-44cc-a1e2-e1f0764f1339"
        },
        "item": {
          "id": "bfbfcbd1-d520-450d-9bfb-c955f1599ddf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8920ff11-e0b0-4787-8bee-27257ba6b3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2583458d-ba7a-4371-b1f8-d7c17a775f39",
        "cursor": {
          "ref": "50402208-1a64-426b-9581-a8f29a1f3521",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "94bc2234-b411-4979-ab53-a56a72fef5de"
        },
        "item": {
          "id": "2583458d-ba7a-4371-b1f8-d7c17a775f39",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9911fa9e-5057-4440-980e-17e68a43757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418496c5-c254-4508-831f-2463d68d2d32",
        "cursor": {
          "ref": "ec556a7c-d065-4a5f-b818-0af06dd9ea56",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f0c08a7-67cb-40db-8e2d-ed1de27c3edd"
        },
        "item": {
          "id": "418496c5-c254-4508-831f-2463d68d2d32",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8a3b7720-7ad5-45fe-9b91-a1ee0ad5bd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9108a75f-5f1d-46c2-a565-915a4bde512d",
        "cursor": {
          "ref": "d25cb02e-35f0-45bf-a992-d2aca9085f84",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f62adc73-c7a3-4d05-bc38-1502c703fd49"
        },
        "item": {
          "id": "9108a75f-5f1d-46c2-a565-915a4bde512d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5aa6cdf0-435e-46e0-9a5b-21a228a9e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b69d36-cdf7-4b01-a650-cbf7b49303cf",
        "cursor": {
          "ref": "13311edb-075c-45b7-9318-d015a86308f8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3534f543-0330-453c-afb3-b96f838640ba"
        },
        "item": {
          "id": "70b69d36-cdf7-4b01-a650-cbf7b49303cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3425a5e3-37f4-4d32-b7ba-6600de4355f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31ea850-36ae-4b69-a3e7-7143ea7fd411",
        "cursor": {
          "ref": "5413c59d-f188-4f8a-8ec7-13744990d1e7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3038f68c-f37a-4325-8a6a-a09f59a337ad"
        },
        "item": {
          "id": "e31ea850-36ae-4b69-a3e7-7143ea7fd411",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9f9d92f-9e85-437f-b290-2cc0e2a7b736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e74098a-476b-498e-a834-82cbee8a0d30",
        "cursor": {
          "ref": "b8a0e62b-a0fd-413d-b0e3-627e550e3504",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "30657307-6178-40e0-a803-4d68f774f839"
        },
        "item": {
          "id": "7e74098a-476b-498e-a834-82cbee8a0d30",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "24576f68-f003-4c41-903a-e7f6a018c0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bf4caa-7e6c-418d-9f04-26d8bd946188",
        "cursor": {
          "ref": "d3011a73-0a99-41d7-89da-d845fd160788",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "696011bf-9118-4254-8565-ab0b16adca11"
        },
        "item": {
          "id": "e4bf4caa-7e6c-418d-9f04-26d8bd946188",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c5c1c1ac-b5f0-4c47-b22e-f70d55c83977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45fb99-1eec-4db0-bde8-4b0e93095cfb",
        "cursor": {
          "ref": "69311b9f-e779-4f11-8a59-55cae2b06dac",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2a13f550-fa10-4267-9947-472f2ac89b69"
        },
        "item": {
          "id": "7d45fb99-1eec-4db0-bde8-4b0e93095cfb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b37b1503-e9b2-4010-b029-7cf4971631f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e54874-879c-46d3-bdd5-0a701cda790b",
        "cursor": {
          "ref": "5f18f22b-6f42-470a-a349-68504a8022e0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "97dc4c9f-0eeb-4fd4-8ebb-77df6b16d8c6"
        },
        "item": {
          "id": "67e54874-879c-46d3-bdd5-0a701cda790b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "858459f7-7010-4315-b310-9ae0597d242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c75d30-8047-446c-966a-75bda86e2d0d",
        "cursor": {
          "ref": "130e6232-e244-4075-8347-d300cf88f8c9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3cce94f6-8c26-407c-bfa8-38f1d99cd5bf"
        },
        "item": {
          "id": "91c75d30-8047-446c-966a-75bda86e2d0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9fdd5136-79a4-40e3-bc2a-e506120a597b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811e9a24-899a-45ff-8ab2-fc2628683147",
        "cursor": {
          "ref": "7d3b8999-d596-4e4c-a770-a0daed607780",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b6f69b67-61d4-4dd7-a042-1b37478844f1"
        },
        "item": {
          "id": "811e9a24-899a-45ff-8ab2-fc2628683147",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dcbf0df0-8e8d-4760-86c0-dc71834378a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde00d44-85c1-4189-a77e-fffd3c80d0d8",
        "cursor": {
          "ref": "7d352fda-3655-4d0f-9785-d8a23a514caa",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d4463cbb-5a10-49a5-aa2b-1710e54860a4"
        },
        "item": {
          "id": "dde00d44-85c1-4189-a77e-fffd3c80d0d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5b53f543-4f76-4899-9660-36a65dbdad78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96e692-13eb-490c-b353-2df19a31705f",
        "cursor": {
          "ref": "0f68ee2d-1743-4bf9-85c7-381b684c4914",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7bbba473-6623-4b9d-adac-d0fe4bb43910"
        },
        "item": {
          "id": "1a96e692-13eb-490c-b353-2df19a31705f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4dbc864c-4184-49aa-a236-ad477723ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659f69f5-67f7-4cd1-9149-9b51f675c641",
        "cursor": {
          "ref": "89d611f0-0f34-4be0-b502-22d94f6fd1c9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3cf61bae-0285-4e16-b00d-7c69b27cd5e8"
        },
        "item": {
          "id": "659f69f5-67f7-4cd1-9149-9b51f675c641",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1d7c269c-0080-46c7-84a8-7cfe58a021e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e963c9-0497-41ae-b28c-a096336f3566",
        "cursor": {
          "ref": "292dd06f-ac7b-488a-b66b-fa613674f034",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43117415-6acb-453e-8d8e-8d71c3eb3ab1"
        },
        "item": {
          "id": "89e963c9-0497-41ae-b28c-a096336f3566",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f376a732-2d63-43d4-ab0d-420c61a4f2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7ce10-acb5-4ad2-a315-141252f6e4db",
        "cursor": {
          "ref": "a04a9dfb-7a40-47c4-bf64-364f4341f57c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "728dd76c-b6e9-4df9-84a2-0c82ece7a8c4"
        },
        "item": {
          "id": "12b7ce10-acb5-4ad2-a315-141252f6e4db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9777b8f8-7a86-497e-b2b7-d10676faab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cdc8a7-f6f8-4dda-9505-6521f396812d",
        "cursor": {
          "ref": "59e75d43-b226-40ec-aa9b-61373a2dde2e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3060b97c-7d50-4ad7-b3e6-64330a44d13b"
        },
        "item": {
          "id": "f4cdc8a7-f6f8-4dda-9505-6521f396812d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4a57ff8-6ff5-4884-aa8d-b9e6d8a3f31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b305bad-44b8-4600-8b95-6f9173c525a2",
        "cursor": {
          "ref": "24e61c63-67ab-4861-9327-ce9b3e0686a5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "683ae9d7-710d-4a1c-83ec-d293737ddadd"
        },
        "item": {
          "id": "8b305bad-44b8-4600-8b95-6f9173c525a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5829128-3415-49e2-84db-8a267cc19ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd63d8-42cf-468c-bd2f-b1efbd4cff29",
        "cursor": {
          "ref": "8e90f9bb-c0b5-4c6f-9bc6-a51f0ef62de1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5b92873d-15b2-41a9-ba24-24701b9809e0"
        },
        "item": {
          "id": "0acd63d8-42cf-468c-bd2f-b1efbd4cff29",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8be22954-e457-411d-af2f-617577d7adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b9a113-9110-4194-a016-d31884ba1f2f",
        "cursor": {
          "ref": "576e072d-5744-41de-a4b8-64a7da889b88",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "99f14568-3e24-4cc4-a84d-74a622e05db2"
        },
        "item": {
          "id": "03b9a113-9110-4194-a016-d31884ba1f2f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be4fedc1-353f-407a-8894-0caba5e47bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e97b0e-14c9-432c-bc9f-a1938e1a886d",
        "cursor": {
          "ref": "19a4002d-11ac-4a59-8b29-46097546e3af",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fa23bd65-87a1-4616-ae35-459b1221a0a3"
        },
        "item": {
          "id": "e0e97b0e-14c9-432c-bc9f-a1938e1a886d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40c111e1-cb0c-4f29-91a6-6dc94f9ab76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a8dc82-a24f-4530-9cd6-d94ec4e220c6",
        "cursor": {
          "ref": "99e08f86-e387-42c7-9e20-9e1d59ead88b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "47c54161-bdfa-493a-9e59-ae4355fc25c5"
        },
        "item": {
          "id": "35a8dc82-a24f-4530-9cd6-d94ec4e220c6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "903986e1-5f5a-4b31-b67c-c5712e748a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175339a6-00ec-4ccf-9c58-875321a286e4",
        "cursor": {
          "ref": "4c573ea2-8ea2-4f07-a078-6f80cc05e6fa",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7bd52568-6ff7-4e0f-abff-9a2938756aaf"
        },
        "item": {
          "id": "175339a6-00ec-4ccf-9c58-875321a286e4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c248726e-3748-4475-96cc-24ad477d4e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a28a8a9-faf5-4b3d-a73a-78a70c0321ae",
        "cursor": {
          "ref": "956bb57b-fb0c-4146-beea-c5f8d8a22e11",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "73c2b8a9-3de0-46a0-8ed1-b8d14028ab39"
        },
        "item": {
          "id": "4a28a8a9-faf5-4b3d-a73a-78a70c0321ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31aff8e7-1dd3-40ac-b7f6-ee9fd9eb5486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9cea62-86ea-4e89-b112-3dd49ea7d9ff",
        "cursor": {
          "ref": "5b80fa4b-b474-41a5-a29a-afe83c32f55e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "acd335ed-349d-46fa-ba6f-3dd119fd4b05"
        },
        "item": {
          "id": "cf9cea62-86ea-4e89-b112-3dd49ea7d9ff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "80455b74-7cd1-41f1-ab8b-f6bc22713b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5005af39-df8a-48d1-be4b-e701267ae040",
        "cursor": {
          "ref": "50a87024-78e2-478c-a674-81fe3fb20444",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7c28e4b1-b3be-4440-b98d-dfe7842582db"
        },
        "item": {
          "id": "5005af39-df8a-48d1-be4b-e701267ae040",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "126468c4-3295-4e27-85f9-8a307f167492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce316ee9-957c-4b74-a7b3-2fc0f57c51cf",
        "cursor": {
          "ref": "60f02aa3-3c26-4a61-a9e0-67a4d805f628",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c7d79b78-0489-478a-b412-a33f9e7a9267"
        },
        "item": {
          "id": "ce316ee9-957c-4b74-a7b3-2fc0f57c51cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51c73b2b-6b77-46bc-a640-f17024f5ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7c5e29-c129-41c6-803f-c4e5496ef7aa",
        "cursor": {
          "ref": "560a7235-49aa-4952-b355-f2e4909c48e0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b9119ad8-ad1f-43ac-9354-827f6e8b2218"
        },
        "item": {
          "id": "ad7c5e29-c129-41c6-803f-c4e5496ef7aa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dab8340a-aa78-4a9d-a2bc-b41abf2e7ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc4ce6-a64f-49c4-86aa-7fa48e9d1e2d",
        "cursor": {
          "ref": "9b94fdf1-e3c1-497d-a835-e25020c6ef60",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f82e8db-b8f7-4a97-b9e3-a3600b17725a"
        },
        "item": {
          "id": "d0dc4ce6-a64f-49c4-86aa-7fa48e9d1e2d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "661ae1ba-dfce-4477-9773-a98dd0df7b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7914817-6bd7-4c84-97d2-d659b577a067",
        "cursor": {
          "ref": "24d4a86c-e326-4869-81dc-bd11abcdc537",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6c952d08-f73c-48c1-b095-1df3e2bc1803"
        },
        "item": {
          "id": "d7914817-6bd7-4c84-97d2-d659b577a067",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "39eb25f0-8e78-49ff-8c07-aab4459287b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7df935-9829-49c1-97c5-eefc354a23c0",
        "cursor": {
          "ref": "8af259db-5ea8-4d95-8e78-d54e2a9c1d47",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2b12347-f601-4884-ab9e-e65ee1ac9db7"
        },
        "item": {
          "id": "ea7df935-9829-49c1-97c5-eefc354a23c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61804945-16c4-4480-8627-5eb45d1d8af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475b7323-f120-4505-a4f2-c26c56c00f4b",
        "cursor": {
          "ref": "b1630bc9-0691-4a9d-9013-69e0801a6e19",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d8c81a6b-9cb7-4dd5-8d56-dc665b03ba0c"
        },
        "item": {
          "id": "475b7323-f120-4505-a4f2-c26c56c00f4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7a4cc10e-7414-4486-a805-686fecfffe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c6de86-f55d-40da-a9a3-e26ca799c491",
        "cursor": {
          "ref": "fb3c89d6-33ea-4199-a173-4bd89793735c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f718e1b5-96e7-4c92-8a4c-3d95cf15d7ce"
        },
        "item": {
          "id": "70c6de86-f55d-40da-a9a3-e26ca799c491",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "43f9cc67-173a-4d95-99ee-ec197d713106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae56dd37-0e09-4813-8e10-d9f2fe6dafdd",
        "cursor": {
          "ref": "cd30dccd-dc55-43fb-8e6a-44cbc33bdd05",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7fbbfdaa-117a-4a00-9c35-000abf260b63"
        },
        "item": {
          "id": "ae56dd37-0e09-4813-8e10-d9f2fe6dafdd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1a8113e7-fdbd-423e-bed5-04c4131ad671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b187c4c-efda-415c-b758-bc4b3cb9c70a",
        "cursor": {
          "ref": "b625e3f6-d031-40ec-8dd8-be35c02668f1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0caeceb6-9e32-4f74-9e4f-7397427582a7"
        },
        "item": {
          "id": "1b187c4c-efda-415c-b758-bc4b3cb9c70a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "749da3a0-ba65-4c4a-a036-c480b9577092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a320528-2b5c-4425-aa0c-61cba72d9fdd",
        "cursor": {
          "ref": "8777aa38-0693-4a8f-a798-759914b74e3c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "03262b01-4e8b-4351-884d-226fe085ee25"
        },
        "item": {
          "id": "1a320528-2b5c-4425-aa0c-61cba72d9fdd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "360d7b10-54a0-4ca0-bfb8-fb2baa835fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e906ba75-6f29-4691-98b0-12f03bce2974",
        "cursor": {
          "ref": "5724f442-4cfe-401c-bb18-db1f1a9953e9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a3a77f1e-f5bb-4b81-8a6f-a61838742eeb"
        },
        "item": {
          "id": "e906ba75-6f29-4691-98b0-12f03bce2974",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aece04a6-c22f-40ca-995a-e4a138308327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6028260d-0105-40ee-bd28-6bfed0f315b9",
        "cursor": {
          "ref": "cea6f628-df3e-4d44-8d06-36692b60d9a0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b202e24c-27b7-4368-b6c9-74e796dc8f37"
        },
        "item": {
          "id": "6028260d-0105-40ee-bd28-6bfed0f315b9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "691ebb85-e0ef-4254-9991-a45d996bcacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04faeb26-d725-4978-8bc3-cb0f2f423c7d",
        "cursor": {
          "ref": "8da05ac9-eb9d-4c9b-ba54-c48272ad317f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5713dfad-9ed2-4628-b1d2-5d8af9b0c94c"
        },
        "item": {
          "id": "04faeb26-d725-4978-8bc3-cb0f2f423c7d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdb74919-94d7-45c2-a037-83e8880802b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a7539-a038-4644-bae2-aad07485dd34",
        "cursor": {
          "ref": "48f8c608-62ef-4013-b510-c14e6cfb1c63",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2cd8cce3-6d49-4403-817c-972787d13829"
        },
        "item": {
          "id": "472a7539-a038-4644-bae2-aad07485dd34",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f0fd990-5b11-4fd8-95f4-39d8e61a16ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6fac59-6695-4339-a724-289d0aab1046",
        "cursor": {
          "ref": "395da3e8-e393-4a54-b24e-9f80fd95cc66",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "23c97b12-27ef-402b-9d35-3469f847c4eb"
        },
        "item": {
          "id": "6c6fac59-6695-4339-a724-289d0aab1046",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3890c57b-9a64-4443-9637-f72edc848858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b99f02e-d0be-4637-91ec-576536b08ecb",
        "cursor": {
          "ref": "4bdd10af-7ff5-40ad-b005-a1c48e118dc3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ccd4cdff-8800-4f5a-9594-92e3bf4ebe90"
        },
        "item": {
          "id": "5b99f02e-d0be-4637-91ec-576536b08ecb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f8007bd3-c979-4ce2-9f34-6cc8613245ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dceadc-8dbc-4937-ac15-439e0f6f6fd9",
        "cursor": {
          "ref": "ae3014c0-5319-490a-8ed3-482a746d624b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5a12f515-b5b2-4264-b8c0-f91f6cca9091"
        },
        "item": {
          "id": "a4dceadc-8dbc-4937-ac15-439e0f6f6fd9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb84ccc7-8981-49c2-919e-02fcaff20845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430c2ca6-e5d5-4597-b6eb-fe7a33e7b51c",
        "cursor": {
          "ref": "d89fb231-f260-44d1-af6e-c52babfdb2c9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "efd97388-a3f9-486f-8643-1724c713ac19"
        },
        "item": {
          "id": "430c2ca6-e5d5-4597-b6eb-fe7a33e7b51c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cd777524-cce8-4ca8-917b-00f4fa87684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f5af8-d16f-4f75-b1d2-ea0e634cbfd5",
        "cursor": {
          "ref": "e318b1c6-0c2f-4200-b944-6adf729d8ecf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6e19fdbd-f6f7-4ff2-8899-d2cabef10bd6"
        },
        "item": {
          "id": "bd9f5af8-d16f-4f75-b1d2-ea0e634cbfd5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f5e34935-1641-43f3-b5bc-252f647cb7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1a05a-8505-4ac9-9d1c-0955e01f8f39",
        "cursor": {
          "ref": "7698c2d0-c4c8-491f-92bb-ccf959b44365",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a9214a68-c945-487e-b5da-5b85e5e059d3"
        },
        "item": {
          "id": "f1f1a05a-8505-4ac9-9d1c-0955e01f8f39",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04c6fdd1-6413-4ab3-9c15-4270250b7d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38c26bc-f542-4aca-9c61-9964b958fd7a",
        "cursor": {
          "ref": "24183689-0207-4ea5-921b-5460b6724038",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "befbaf67-42e5-4066-9786-d112a7ab9060"
        },
        "item": {
          "id": "b38c26bc-f542-4aca-9c61-9964b958fd7a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f6d62b41-83ea-41f6-a218-a652df9caf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a257394c-d00e-4b9a-8c8e-7521328ffd70",
        "cursor": {
          "ref": "2f866fd4-72f0-4ad5-99fb-0145054320cd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "aaaa1998-73c1-43af-9c85-2d18a7762df9"
        },
        "item": {
          "id": "a257394c-d00e-4b9a-8c8e-7521328ffd70",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f977a158-6c6e-43ce-8373-70770cdda077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b93ac8-df28-49a8-9c5a-028fa5f9685c",
        "cursor": {
          "ref": "932912bf-365d-4804-948c-af86cc5ff2a9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6b24222-4e7d-4f72-ab4e-c4d12d1314e5"
        },
        "item": {
          "id": "90b93ac8-df28-49a8-9c5a-028fa5f9685c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bda8b9ba-92b4-4702-9484-0b992b317f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe961d3-c038-488a-821e-bede9384d63e",
        "cursor": {
          "ref": "d9f4f250-97d2-4516-b199-e4c1c0fcae96",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "82888c84-4e60-42a6-90da-483a8384b20d"
        },
        "item": {
          "id": "dbe961d3-c038-488a-821e-bede9384d63e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "315fe1f5-1681-4199-a3ea-ec962960975d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05acc828-5669-4464-8b0a-18dec1bd8b13",
        "cursor": {
          "ref": "31778bde-9580-463f-913f-106e53a2f3b0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2527f028-29f8-4b8a-83ee-87e22c629c2d"
        },
        "item": {
          "id": "05acc828-5669-4464-8b0a-18dec1bd8b13",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72541642-2e1e-4013-8c4b-b3726ba2e523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e59c9d9-b20d-478c-80f5-335558032cad",
        "cursor": {
          "ref": "b400888a-8f4d-4037-b1e7-fcaf8312bc96",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0165ebda-fe3e-4224-a22d-37826892b8f7"
        },
        "item": {
          "id": "4e59c9d9-b20d-478c-80f5-335558032cad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "24639f4c-068f-471f-abe6-4854863e2910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d7664e-1eb5-4375-a7f3-4006edc7452e",
        "cursor": {
          "ref": "7ac807e1-a120-4c29-9db4-60d1fda5b3d8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "15e54d66-e110-4605-b87f-4ec8fac79769"
        },
        "item": {
          "id": "67d7664e-1eb5-4375-a7f3-4006edc7452e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f002b53b-e127-47f2-8b95-68bd18f61f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc03ac58-eed1-434a-9060-cb97e1ce75de",
        "cursor": {
          "ref": "94231c3a-760f-4676-95cb-0b0eb0952c3e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9f147be2-7d35-4329-ae2a-6d90db1ee193"
        },
        "item": {
          "id": "cc03ac58-eed1-434a-9060-cb97e1ce75de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "615a9625-6e94-4f7c-9874-be2789e813d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da803d0-d763-4aed-bbe6-a48c8a3d5914",
        "cursor": {
          "ref": "87e6fd39-5b1a-47d2-93b3-fb37555665b1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "800eb783-8e6d-4c0b-b370-b9cad885d8d7"
        },
        "item": {
          "id": "4da803d0-d763-4aed-bbe6-a48c8a3d5914",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a048ee06-d9fc-4bbe-b645-5cde9fe0d225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b474bec-18c4-481b-9eeb-bb69b3883937",
        "cursor": {
          "ref": "1c6b149a-eaa6-4c8f-9511-5a4d91f12269",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70019675-463f-429b-ac5f-3727cefbbcc7"
        },
        "item": {
          "id": "5b474bec-18c4-481b-9eeb-bb69b3883937",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ff7a51f0-47a3-4a90-b0e1-62b461a853ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987f45c7-d2c0-4f71-b275-79dc9958f297",
        "cursor": {
          "ref": "8891b60c-0693-433c-95b4-4af406b77d63",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3a541248-2e4f-4280-af0b-de10f82e4baa"
        },
        "item": {
          "id": "987f45c7-d2c0-4f71-b275-79dc9958f297",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cb961285-89b1-43ea-b793-c2d3ff790000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4eecd4-3403-4688-9f3d-3e2539da7e54",
        "cursor": {
          "ref": "28b4e6e9-2469-48dd-980a-3aa6d8e155dc",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "05f187d2-40e8-410a-bb44-53e6d536190e"
        },
        "item": {
          "id": "2b4eecd4-3403-4688-9f3d-3e2539da7e54",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3b5ff423-bd21-458b-aa37-1d43de61cb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e24e4c-9ef6-4d3f-9296-61ed9c440bdc",
        "cursor": {
          "ref": "f463178c-2c15-41b8-b3ba-2f21aaa003b1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "53376705-068b-4004-8987-a45365d717e1"
        },
        "item": {
          "id": "71e24e4c-9ef6-4d3f-9296-61ed9c440bdc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f85e6026-bb64-43ee-b28b-576ff8095650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc9dfa8-eb20-4cd9-abba-251f727957f8",
        "cursor": {
          "ref": "e3eacff1-c7c5-4174-8b38-b160d77d65f4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d329121c-f7bc-4020-8ebb-7d8baf26ef2d"
        },
        "item": {
          "id": "ffc9dfa8-eb20-4cd9-abba-251f727957f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54b2137f-cff9-48da-944f-25330c2470e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aed0e0d-0916-4c73-ad59-59473d81a627",
        "cursor": {
          "ref": "233e16a1-0679-4b82-9bb3-92641df04ad4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b52e1158-bc44-4722-b605-c7e6274bb4d2"
        },
        "item": {
          "id": "2aed0e0d-0916-4c73-ad59-59473d81a627",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "09d09d01-a527-4eed-ac70-e4788d75f21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682571cd-f7b2-4308-8dc9-03fa9fc459ba",
        "cursor": {
          "ref": "54de2c83-592b-46e8-a661-63db98680ff4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76ee9fb6-1dc7-4324-a7dd-578704455c77"
        },
        "item": {
          "id": "682571cd-f7b2-4308-8dc9-03fa9fc459ba",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0418bca6-d573-4d9c-be17-4d088f71423f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a7d7ab-3036-4e10-897c-f0311550df7b",
        "cursor": {
          "ref": "d86ba69d-88a6-4dbe-b148-aecc6da99a8f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eeb0d68b-1cda-444e-9574-cf7e0d6da4a1"
        },
        "item": {
          "id": "c3a7d7ab-3036-4e10-897c-f0311550df7b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba7edbcf-20a5-441d-bef9-1d86cc3f2c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222dd6c1-0f8d-4293-b114-e6be8e15536d",
        "cursor": {
          "ref": "ac81da58-a921-4740-b8d3-d5b5820f0604",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e23f09fb-214f-49f5-a14b-e1e3a6a56c49"
        },
        "item": {
          "id": "222dd6c1-0f8d-4293-b114-e6be8e15536d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f8b7bdd9-166e-4c45-8d39-da5aef7e8ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a115a51-17cc-4e45-8844-7d260b4c4e06",
        "cursor": {
          "ref": "6881231f-4757-4ea2-a7d3-4f37ec58e522",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cf3c635d-c5fd-44eb-97f3-68281aa0e1ee"
        },
        "item": {
          "id": "3a115a51-17cc-4e45-8844-7d260b4c4e06",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32cc3491-9f13-4641-a1c9-1b9077f8306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a322dd4c-a670-4a1c-ad84-15ad568a1d9b",
        "cursor": {
          "ref": "8d3244c2-7e70-4065-bd31-20df82847743",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35db9bec-ed2f-4738-88d1-377e17978957"
        },
        "item": {
          "id": "a322dd4c-a670-4a1c-ad84-15ad568a1d9b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "76072c2a-8426-4271-a904-ce86e878394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bef6422-ba14-408c-8ff7-f8d2307a9a0b",
        "cursor": {
          "ref": "089fcaa8-34f1-4396-a47c-ad3f0c43031d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "589c2613-e981-415a-b43a-7a420de026a6"
        },
        "item": {
          "id": "4bef6422-ba14-408c-8ff7-f8d2307a9a0b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d1113b0-ba05-42d2-baa3-f455bd169f12",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "630511e8-ff22-44fa-88a9-6b8f2db4e4b8",
        "cursor": {
          "ref": "c9a9451a-92d7-4b42-baa0-ce53f5d9fa4d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d8c3215-111d-47f0-a945-765469e23643"
        },
        "item": {
          "id": "630511e8-ff22-44fa-88a9-6b8f2db4e4b8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0872eb74-b4a7-4527-9def-66428adaaddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b913e-e358-4e94-ac68-a57209e863a5",
        "cursor": {
          "ref": "cf32dd75-b623-4e21-aff2-eaf1947cc563",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6884ba0-f8f0-4464-a205-9d85f4e9e61f"
        },
        "item": {
          "id": "293b913e-e358-4e94-ac68-a57209e863a5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8806fe3e-e823-4af3-8ab1-e55ef88c3338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00444f4b-5074-4337-9899-c1899ebea52c",
        "cursor": {
          "ref": "a6fb146f-161d-4e9d-8d5b-d4950752d141",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d73cc541-2f2b-4538-9d83-062666030a45"
        },
        "item": {
          "id": "00444f4b-5074-4337-9899-c1899ebea52c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f47eada6-4d40-40c9-8916-a3f9713812b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308ca0dc-f8c3-42e1-b340-f975e7c37dd7",
        "cursor": {
          "ref": "c6c7ba3a-07a5-4ee1-8ee0-10197b6b6ef6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "71e982a3-fcad-431d-b5d8-4e5f5675d4c9"
        },
        "item": {
          "id": "308ca0dc-f8c3-42e1-b340-f975e7c37dd7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79966322-4b9a-4299-993a-5938c72736b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15dbc28-7399-4dc1-8ac6-9e67b8167014",
        "cursor": {
          "ref": "ec56642b-f25a-4804-8683-eb9366790950",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f5c20283-2620-4b37-b9c9-2f2571c1f6c9"
        },
        "item": {
          "id": "d15dbc28-7399-4dc1-8ac6-9e67b8167014",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a88211bf-d723-4013-94ef-0e57be0d1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5006e060-560b-4d10-8a8e-8592db17d178",
        "cursor": {
          "ref": "f997932d-8bec-41b1-a060-2b71214cb0db",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a46defd1-b593-4223-9c98-6b73294d2448"
        },
        "item": {
          "id": "5006e060-560b-4d10-8a8e-8592db17d178",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "44b678cc-fbb7-4d33-81c7-9643cf197654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d66b388-9e29-4ad5-a4c4-471ecabb5b25",
        "cursor": {
          "ref": "29098009-d2c4-4455-8e06-e65682b10ad8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "259ed953-e4a7-4a96-8439-cab6a19ff8e8"
        },
        "item": {
          "id": "2d66b388-9e29-4ad5-a4c4-471ecabb5b25",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1713db4a-90b0-4c48-afc6-e712eac12394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5526d53-1845-4289-a92d-d4ac2c6f6575",
        "cursor": {
          "ref": "06352818-9d24-43ed-892f-4a41fdfcce21",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2e3c5324-ccff-4bb6-8003-ea8fbf1ac8f3"
        },
        "item": {
          "id": "f5526d53-1845-4289-a92d-d4ac2c6f6575",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "199cf9ee-a087-4da6-b236-5cbb473f8776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11e4390-d33c-40b8-afb2-7d307c4b930f",
        "cursor": {
          "ref": "59c9df9c-a103-416a-baea-b2b170d2bd0b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8495d33f-6ab0-4fcb-afc4-b1f958b8a6e0"
        },
        "item": {
          "id": "a11e4390-d33c-40b8-afb2-7d307c4b930f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4a6a06c2-584e-43f9-bf40-5376d246a197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc7e59-635b-4be7-aadd-0a11cb279c09",
        "cursor": {
          "ref": "c7157897-b551-4486-b6f3-8653b6baa605",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c61032c0-0d02-4eb3-8312-534fd8c722ef"
        },
        "item": {
          "id": "09fc7e59-635b-4be7-aadd-0a11cb279c09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e02437e0-1787-4c64-85bb-6e0744e0bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae3985b-aeb2-434a-9b4d-27531fd0d5fd",
        "cursor": {
          "ref": "d2cfefa6-b0bf-422e-ab0c-e65593cf3e0f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2117e071-1148-4b6a-8e72-9be35ebbcfaa"
        },
        "item": {
          "id": "cae3985b-aeb2-434a-9b4d-27531fd0d5fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b3f3c6d0-cf08-4238-a1fc-d585e6daa2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090b0ee-950b-444e-874a-ae605c84d492",
        "cursor": {
          "ref": "5b5e32af-5b0d-47f0-9afa-b0df2e8c07e7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dff53535-8435-406f-a41c-fc31da9e097a"
        },
        "item": {
          "id": "2090b0ee-950b-444e-874a-ae605c84d492",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e0622b54-9b20-47f1-9ec9-c5fa008206fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3914f1-8917-4d33-930e-4741216124a9",
        "cursor": {
          "ref": "ded576b4-8481-4d6f-bed4-cb067c7a95dd",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5090e4e8-3177-417e-9c78-0683de8f9130"
        },
        "item": {
          "id": "df3914f1-8917-4d33-930e-4741216124a9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a3873de-dd19-47e7-a900-3ffadc8702e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb855989-127c-40ad-8a4f-ee6586210f36",
        "cursor": {
          "ref": "a4e32957-ff54-42d1-a11e-6e0bf6c973ef",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "182556e4-ec40-421b-9e20-237c7ce042b1"
        },
        "item": {
          "id": "fb855989-127c-40ad-8a4f-ee6586210f36",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4f4c791b-c818-46fe-a658-b99b93ccaff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea5923-ac13-4d89-8fdf-90d77ba6b7a5",
        "cursor": {
          "ref": "cdd27fe4-33e0-494a-88c8-87198d2bf80a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b4230c1-c1c2-4aca-8b20-ac1cba1496f3"
        },
        "item": {
          "id": "53ea5923-ac13-4d89-8fdf-90d77ba6b7a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "70bfd5d0-0b4f-4ff1-b6ec-3cbe7988d07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63e604e-646e-45c8-87b4-7dc9050c649a",
        "cursor": {
          "ref": "674ee3cf-89ec-4127-a979-358075622f83",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80319283-800f-4038-bdf2-dc563ac1161f"
        },
        "item": {
          "id": "a63e604e-646e-45c8-87b4-7dc9050c649a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cd0c99d3-3d4c-47b5-9e40-afbf1985a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca1289-a3ac-42d4-8bed-914b3e4261e0",
        "cursor": {
          "ref": "08bce50c-804d-4ae8-be60-6c6f8879150e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4fcdaabe-5876-44b3-8e16-98eacfbc72d4"
        },
        "item": {
          "id": "84ca1289-a3ac-42d4-8bed-914b3e4261e0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "65ad75b2-0a60-4134-88ca-135d3c00b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6d4b0d-079a-4bad-9aba-1eaf331f6181",
        "cursor": {
          "ref": "1daad993-9133-48ea-920d-48677d9257a4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "78cb76c7-5102-48cb-8569-69b47d0c9062"
        },
        "item": {
          "id": "1d6d4b0d-079a-4bad-9aba-1eaf331f6181",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "50cb405d-8df2-42ee-aca9-486f152cf310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2459cef0-658a-4cdb-a5a7-be1de5ad5413",
        "cursor": {
          "ref": "6497e99d-34cb-4cef-a1d5-61ffb1401f83",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a8ce30c7-7e85-414b-9aff-ae273f0fcca2"
        },
        "item": {
          "id": "2459cef0-658a-4cdb-a5a7-be1de5ad5413",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "00a79a86-5f9e-4bf9-bf8e-b8b53dbf3b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb396fe7-309b-4525-9b62-0dedeb18bef6",
        "cursor": {
          "ref": "d33993b6-fec1-4501-a18e-5b0b2738a58f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4de1c744-1398-4aa8-b2c1-63b2e1a80a23"
        },
        "item": {
          "id": "cb396fe7-309b-4525-9b62-0dedeb18bef6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b03b56a0-4b4c-44a3-9055-a5d4a14c8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51620b6d-c194-4deb-b1fc-5722169a6cdb",
        "cursor": {
          "ref": "b875fcc1-1a15-406a-bc73-42f7d12ee90e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4a1ae6ce-a78e-4a32-b254-5f2b5bc92a50"
        },
        "item": {
          "id": "51620b6d-c194-4deb-b1fc-5722169a6cdb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a32d12de-de92-4815-864d-0b78ac1ab57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6375e99e-f5ce-4b04-91a3-6d8e1982b71e",
        "cursor": {
          "ref": "ebf87358-e221-45b9-b788-2640006178e8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d5d12328-8f23-4753-abd6-4f22d986f12b"
        },
        "item": {
          "id": "6375e99e-f5ce-4b04-91a3-6d8e1982b71e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5fc4f0f8-4f52-4df8-8371-54890ef8498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8a3063-26a2-49e5-abe2-2449e49f8481",
        "cursor": {
          "ref": "f696e9d0-28eb-4ff6-939a-f8a56788cc42",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "36699962-0445-471b-90c9-89678dfc439f"
        },
        "item": {
          "id": "0e8a3063-26a2-49e5-abe2-2449e49f8481",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "262160de-be7a-4d54-9991-1b61ee654e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7ffb69-0bbd-41b8-8a9d-90fc5919ad94",
        "cursor": {
          "ref": "3ce136ed-a3f6-49ac-967e-6c47b047c038",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "591eb48a-af6c-4bfd-8325-e7aaca4b2027"
        },
        "item": {
          "id": "2c7ffb69-0bbd-41b8-8a9d-90fc5919ad94",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "378dbb84-0c46-4f9d-bc0b-3a1ba7e6e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bad3c9-257e-4f1b-9ac2-b266b6c5f64d",
        "cursor": {
          "ref": "bee94db0-b1bb-4fd9-9563-0e04082cf920",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a45bda0-f93a-486f-a628-b59335b3718e"
        },
        "item": {
          "id": "e4bad3c9-257e-4f1b-9ac2-b266b6c5f64d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9123b269-9054-4b97-8d31-7aeb73cd85d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874141ad-d367-4603-8bd8-a40583bacab8",
        "cursor": {
          "ref": "c46a2d90-a60c-4008-a35f-86fbcb464d0e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ed3c369a-dffd-4c55-9233-cbe16a6c2b7c"
        },
        "item": {
          "id": "874141ad-d367-4603-8bd8-a40583bacab8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f1c12d9-e287-4a65-afa5-5d71ba5e7a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfaadee-b88d-4b74-b634-d8c7fe106996",
        "cursor": {
          "ref": "4aea06a0-5282-41cd-a823-a0bff100df9a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5a3b9358-e15c-4e11-a5ad-462c8aced3a3"
        },
        "item": {
          "id": "dbfaadee-b88d-4b74-b634-d8c7fe106996",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6e9ee7b1-f235-4e76-9f70-798bb0697240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041900b-75e4-41a3-ac6f-8c555f4f39b9",
        "cursor": {
          "ref": "7bb1c125-574d-4b95-b55d-a24f85e83869",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "99495317-e07d-4653-9427-f74784052cb0"
        },
        "item": {
          "id": "8041900b-75e4-41a3-ac6f-8c555f4f39b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4be70047-15b3-4345-9a7b-86c0e0ae313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f456ce-5329-4f72-a4d4-7d83147dba7c",
        "cursor": {
          "ref": "8699c7ce-1601-4606-a6ba-b9b12b6528a7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d8422a07-2d03-46b2-b174-81a24bca8786"
        },
        "item": {
          "id": "59f456ce-5329-4f72-a4d4-7d83147dba7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9cb43852-9d4f-4e50-83e2-d1a48e184ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79221252-ea18-4129-a607-2cd7da88e463",
        "cursor": {
          "ref": "2323c784-25f8-473d-bbee-ca4be5546c45",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "22a87dd9-085a-441b-930f-7d4d6d20b045"
        },
        "item": {
          "id": "79221252-ea18-4129-a607-2cd7da88e463",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "47f1864b-50cb-43a4-a550-66cbd87b9a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dbe74a-dadc-4e39-bfca-0ecf83ad1095",
        "cursor": {
          "ref": "0ba4aa42-d6dc-40f4-8fcc-6a015fcaf71d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d703e6c5-4282-4803-ad3e-de4f066ac754"
        },
        "item": {
          "id": "16dbe74a-dadc-4e39-bfca-0ecf83ad1095",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f81bb7ef-3b36-4254-a042-54bb95d8e40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b72e60a-b0e4-4e61-a48b-2bcaa0197f46",
        "cursor": {
          "ref": "ffbf9292-f3ce-445d-8162-f4c42746ac2b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "986a736d-def7-4b85-b9a7-0854a0fd5b46"
        },
        "item": {
          "id": "5b72e60a-b0e4-4e61-a48b-2bcaa0197f46",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d12d8fdc-5994-41c5-be00-2b59550332e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66f14e-3968-45f7-96bf-f92a7e34895e",
        "cursor": {
          "ref": "9d22e323-b063-461f-b712-5549699f8a93",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d4857d71-8a76-41dc-9d56-a7f7d01cbe79"
        },
        "item": {
          "id": "be66f14e-3968-45f7-96bf-f92a7e34895e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8dd504a-1a27-4105-ad98-9e23a168c993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b278ee5-24d3-46fb-ba68-7e9082d08d41",
        "cursor": {
          "ref": "9af38c9d-4719-4dc2-8385-08aa795ed27b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab8ca266-03a3-4d98-b5ab-748206cd1fb5"
        },
        "item": {
          "id": "5b278ee5-24d3-46fb-ba68-7e9082d08d41",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "170cfab7-f65e-4c8a-9e38-4a78a349859c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8055c3-e3ba-401d-9c17-9f04fa9566aa",
        "cursor": {
          "ref": "adf70c8e-560c-45d6-8e3b-4efe3e4e6ec8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2fe6c36c-10f2-4621-91ab-726a3df65dd3"
        },
        "item": {
          "id": "ff8055c3-e3ba-401d-9c17-9f04fa9566aa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2b1e5572-aea2-4ce0-a43f-002ebc73dab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76792385-239e-44bf-92cc-f0cac9d4d0d2",
        "cursor": {
          "ref": "4d902ffb-af55-4164-9a2c-b41a1b85f4da",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e5f8268c-c07e-4d69-a603-8bf77cef68cb"
        },
        "item": {
          "id": "76792385-239e-44bf-92cc-f0cac9d4d0d2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3982b094-9367-40d7-b705-82f229e8b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da6e53d-579e-4484-b0d9-f10fead25710",
        "cursor": {
          "ref": "16adbd97-74fd-4fb8-bc05-4fcad139220d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "af57a0c2-5c68-44d4-8787-16ae1d7a49e4"
        },
        "item": {
          "id": "6da6e53d-579e-4484-b0d9-f10fead25710",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c98483d3-5336-478e-a52b-59ef77d35002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9150a9-6c52-4b9a-ab27-f996f567368e",
        "cursor": {
          "ref": "e797a256-9954-4d4d-8813-b4e2a3a03f97",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91852b70-f264-4615-98ea-f078c13c20cd"
        },
        "item": {
          "id": "ac9150a9-6c52-4b9a-ab27-f996f567368e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb880ec1-722e-425b-85d8-84ef9b9fd49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa814a8f-8866-4fc7-ac6f-e2f86764e285",
        "cursor": {
          "ref": "291dbab3-43a2-4431-91a6-6badcbb223eb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "46832e58-d07c-4b84-ae27-d6ef5e0a91ab"
        },
        "item": {
          "id": "aa814a8f-8866-4fc7-ac6f-e2f86764e285",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "041429a3-d35c-4fbd-9315-aa0797fac692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2113e9-bb95-460e-b96c-7c078ac0e480",
        "cursor": {
          "ref": "49eef54f-edc1-4fae-8d49-69fc213b96de",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "877270c8-93e7-4481-8287-1da027ff97a9"
        },
        "item": {
          "id": "fd2113e9-bb95-460e-b96c-7c078ac0e480",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "49cb0794-0171-4735-a8a2-f7231fbaa4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22289cc8-4cad-4ca8-91c8-abf7cde39300",
        "cursor": {
          "ref": "eb009d84-9d27-4628-8847-d01f63f0a93a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5584743-4066-47d6-9405-fdb59320e7eb"
        },
        "item": {
          "id": "22289cc8-4cad-4ca8-91c8-abf7cde39300",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7e6ff249-4e1c-4b1c-9dd9-b1142463cf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053330c2-fdcf-47cf-984c-98bfba74f448",
        "cursor": {
          "ref": "338a1955-94b8-4261-b985-03675d241b93",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f047aab6-647a-4a6e-ac0e-52fe3ba355d2"
        },
        "item": {
          "id": "053330c2-fdcf-47cf-984c-98bfba74f448",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3704d12c-e986-401f-b935-dfd4d6e9d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c8e43-1997-40e2-8774-6f71cf577089",
        "cursor": {
          "ref": "9065d7d6-c1b3-4503-8dae-63a6f20ff66c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2ab5bffb-0ec7-4635-8e03-862896678f4f"
        },
        "item": {
          "id": "490c8e43-1997-40e2-8774-6f71cf577089",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "967c50a3-3cb5-486d-a013-74b76a941691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346d5d67-b2c5-42af-8f75-024f9d6bd28a",
        "cursor": {
          "ref": "233a5e5b-e7dc-481e-a24f-d32a3c8b1c9c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "308e4c0a-325f-414b-b64f-e029c2284ef1"
        },
        "item": {
          "id": "346d5d67-b2c5-42af-8f75-024f9d6bd28a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "da624bc2-5417-4314-be91-df07573a4ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff0e080-6620-456c-a954-5ecb10ec104e",
        "cursor": {
          "ref": "baf886f4-064d-4fd9-a358-b365104557ee",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ceb4fb92-8ee2-4d78-8dd9-f8944bdb51fd"
        },
        "item": {
          "id": "5ff0e080-6620-456c-a954-5ecb10ec104e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd59ff00-9af3-4a4b-a14d-391ddc4c4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e175cb3-cffe-4f4f-a906-bcd1e86bc00f",
        "cursor": {
          "ref": "0f5e075f-4def-41f8-a6d0-275cee928edf",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0e6b3667-6c0a-49f0-bda2-8315932301b9"
        },
        "item": {
          "id": "9e175cb3-cffe-4f4f-a906-bcd1e86bc00f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "40c7090a-5218-4197-8527-3df0729b8f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f64bd7-63f5-4f0a-a62b-72818be69b09",
        "cursor": {
          "ref": "cbaf3432-2642-4cd3-a601-a58d0fed799f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8554dfdd-8f5d-4eee-89da-2e779e29fccf"
        },
        "item": {
          "id": "c1f64bd7-63f5-4f0a-a62b-72818be69b09",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eb124e90-238f-4fbb-9c88-0168385b9b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0798b8-fbf5-4653-8920-2b780c34afb0",
        "cursor": {
          "ref": "957177e0-7527-4966-a459-69fa0bf637d6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa4cb8b7-9d71-4b2d-9174-6afbb29827bf"
        },
        "item": {
          "id": "be0798b8-fbf5-4653-8920-2b780c34afb0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41011696-aac1-41c2-ae74-a46e46934191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee7e87a-5ca6-46a4-9820-096cba7e9a0f",
        "cursor": {
          "ref": "68bdd807-2bf4-43b9-b1bf-39977f765915",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aab2ef13-5d3a-4951-a63b-f590d482e855"
        },
        "item": {
          "id": "fee7e87a-5ca6-46a4-9820-096cba7e9a0f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5c9b4a41-fe97-4929-b3d2-0dc11849aa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e7e61-c973-40bc-8bdd-835fd760b6d0",
        "cursor": {
          "ref": "def5761d-13e9-43b7-8bee-1fe49623a429",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ac3454dd-53ea-454a-a775-5f615e7a2c1f"
        },
        "item": {
          "id": "457e7e61-c973-40bc-8bdd-835fd760b6d0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9b97de72-bb1f-4e59-8def-19c428248bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7e65a8-e0aa-4cd3-bf01-378d9dfc0fd5",
        "cursor": {
          "ref": "34efa1bb-36b2-4de3-a693-35456ffb8df0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5024be19-d2dc-4697-a1f0-3a8c1dd1820d"
        },
        "item": {
          "id": "dd7e65a8-e0aa-4cd3-bf01-378d9dfc0fd5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58f6b446-99f4-4736-8ec3-629cb71cf9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cc7aac-8eb5-4149-9272-e79c24592372",
        "cursor": {
          "ref": "793d1d02-6143-49f7-af97-e463371a5761",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "37830352-83c5-46b4-9c06-e7a90c0ce54f"
        },
        "item": {
          "id": "e3cc7aac-8eb5-4149-9272-e79c24592372",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7160b7e4-33a8-4bbe-9cae-3c53d20f2281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2510d88-2913-42d8-9b92-422ebbb8481b",
        "cursor": {
          "ref": "5243edb6-4737-45d4-9e32-7ad704628576",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "99d14bb8-70f2-4f4e-a407-4517273605ab"
        },
        "item": {
          "id": "f2510d88-2913-42d8-9b92-422ebbb8481b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7ab55e1a-76bf-4733-948b-3667b2e3bde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6f9e6-4148-44bf-a450-3b40f4b505ed",
        "cursor": {
          "ref": "d21c0598-70dd-425b-a75a-3e90af042ee4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "750ecc0d-d67a-41de-829d-66f8e1231bb4"
        },
        "item": {
          "id": "b9b6f9e6-4148-44bf-a450-3b40f4b505ed",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bb12f95c-3013-4096-8eb9-d1efdcdf2289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa102a3a-35e8-4a04-8c16-3cc77f8cce6d",
        "cursor": {
          "ref": "dda67fd5-807f-4e53-b6e4-bce510f72b83",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b40cda3a-7c44-4380-9e62-7f9e74edc0e4"
        },
        "item": {
          "id": "fa102a3a-35e8-4a04-8c16-3cc77f8cce6d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a2371ad8-662f-4f50-a710-51d43efff25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da6a7bb-cda8-4514-9b40-cb2a23873d88",
        "cursor": {
          "ref": "d3ebed14-ba5f-4f3d-a6f8-d8ce2ccb02d3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "03e4dac9-69a5-4d69-a751-81213cdcfc9d"
        },
        "item": {
          "id": "5da6a7bb-cda8-4514-9b40-cb2a23873d88",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "645ad4f7-95b4-4068-bc34-49d2a03f1ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62870bc5-0003-4952-b2ab-20d6f03ba0d0",
        "cursor": {
          "ref": "db0e0ea2-0f87-40d5-b1a6-aaca40bc1f1c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "25626e77-1884-41b0-a40c-e07301773306"
        },
        "item": {
          "id": "62870bc5-0003-4952-b2ab-20d6f03ba0d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5bd54cc1-c9e5-4717-82cf-647f0eae4daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a267fc-f6e1-45e5-b4be-d6cb0a356d1a",
        "cursor": {
          "ref": "d8bb04fb-0369-4cbb-8e8b-6fdefd0c8a2a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "689013f2-ad9c-47f3-adea-78c0009d6d87"
        },
        "item": {
          "id": "09a267fc-f6e1-45e5-b4be-d6cb0a356d1a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7cc56505-6303-4155-893b-f064d47a376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c631bc81-acab-4d1b-b6b0-781894344066",
        "cursor": {
          "ref": "55c84164-6371-4bde-a02e-2c759978828c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e8736b18-4ec4-471d-8ff7-34bc01c92556"
        },
        "item": {
          "id": "c631bc81-acab-4d1b-b6b0-781894344066",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7c03af93-292c-437b-99ec-f2ae57d1e5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2143b9b6-05a3-4c01-bfa6-ff08886f4178",
        "cursor": {
          "ref": "5e0daa69-7047-42b2-ac39-a18638e76763",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "15bcd659-bb9d-4a99-a4ef-7a600a0fbe13"
        },
        "item": {
          "id": "2143b9b6-05a3-4c01-bfa6-ff08886f4178",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0d1686a4-9767-4e17-9694-86fe0c20d3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea84a29d-8916-445e-a68a-fb86d5a047ca",
        "cursor": {
          "ref": "15e578b1-893a-4a21-816a-893829c3a50f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7ef94775-f4e8-4b95-bc99-7e9cb8008c6e"
        },
        "item": {
          "id": "ea84a29d-8916-445e-a68a-fb86d5a047ca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "72118c65-d8e0-410a-a7d6-b1edad4e9c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd98e21-95b6-4baa-be32-444ee3248c48",
        "cursor": {
          "ref": "fc97d337-815a-491c-91a4-7731ecd07f87",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5a0abe91-9073-4b98-83da-1a8a0a9dbc75"
        },
        "item": {
          "id": "1dd98e21-95b6-4baa-be32-444ee3248c48",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1ec81b0b-df8a-49b8-913f-004763e2dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4883d90-32c3-4f56-9fc5-eed82ca71809",
        "cursor": {
          "ref": "5a67b439-2f04-4958-b42a-7d9bffef359e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fe5a2c89-abc7-442d-84c5-74d1d8ea4ba9"
        },
        "item": {
          "id": "c4883d90-32c3-4f56-9fc5-eed82ca71809",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c0fc7198-f801-43f4-b719-ec0ac4c53ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a001ed-f9fb-46fd-b0a0-707c891b7d11",
        "cursor": {
          "ref": "98182db0-f773-4f96-a6c5-9f6e61280e5f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e1f54ea8-5f85-4f71-bd02-352faa33cb7a"
        },
        "item": {
          "id": "b4a001ed-f9fb-46fd-b0a0-707c891b7d11",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "afc11637-cb2c-40ec-98f5-8dcbcfaa6d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596530b0-7aed-43ef-84e2-b430a10a99f6",
        "cursor": {
          "ref": "763e81ec-16f3-4198-9b17-517ded2a7eda",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a8c4f926-088c-4df9-8261-0f820ef5e9f0"
        },
        "item": {
          "id": "596530b0-7aed-43ef-84e2-b430a10a99f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb57c8bd-9a44-4491-ae19-601ba5ece742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199dbc2-0775-4f87-9001-09a8b5c1bd93",
        "cursor": {
          "ref": "d086df56-1852-42a1-aa11-6e78a10f8878",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c001d984-1183-42a0-8938-ef25ee24792c"
        },
        "item": {
          "id": "7199dbc2-0775-4f87-9001-09a8b5c1bd93",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54aa1dd0-3c22-467b-b750-479c93163072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a2a585-2cd1-410c-ab83-19e1cdc8be06",
        "cursor": {
          "ref": "458a7d11-8bcc-4a27-906f-61053f2310be",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3411be1d-0d57-46d8-ac9f-4a3fa38fc5eb"
        },
        "item": {
          "id": "88a2a585-2cd1-410c-ab83-19e1cdc8be06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0cf23275-7892-49a8-baf7-51a20e5972d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d1374-fff4-4890-9fe6-0f960d445b2f",
        "cursor": {
          "ref": "e943039a-46a2-46e6-b5c8-89e2408a067d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "463e74f7-89dc-4fa6-b1fc-f3a416678e3c"
        },
        "item": {
          "id": "c10d1374-fff4-4890-9fe6-0f960d445b2f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "266d488d-c797-4775-bdcf-ab905703a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b4b8f7-8be0-4cf8-8549-247dc7c0c708",
        "cursor": {
          "ref": "cf0f5850-fc2c-4aff-a281-086bf08d715a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c26d146c-e602-482e-8b80-138bd1f137e5"
        },
        "item": {
          "id": "f5b4b8f7-8be0-4cf8-8549-247dc7c0c708",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7f4ca1cc-611e-402d-9ad3-8b372520cce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f4dd7b-178c-4a63-91c6-c9e100d1a8ae",
        "cursor": {
          "ref": "19bc1ada-103e-441e-a3bc-af08e860e899",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9e93b181-4e28-4cb1-a129-3aae5ca99b50"
        },
        "item": {
          "id": "99f4dd7b-178c-4a63-91c6-c9e100d1a8ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "160e5d2a-c8a1-4226-8b51-11cadcde5b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3660f613-fa7c-4153-b3b4-1ea8fe0fe2d2",
        "cursor": {
          "ref": "e225f4ac-36d6-4e1e-b75a-3c8af5b6f419",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1e1c9601-d529-4f70-9676-c8cdafb90ca9"
        },
        "item": {
          "id": "3660f613-fa7c-4153-b3b4-1ea8fe0fe2d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cda44a27-f6b7-4d45-ab80-9ff9b41fe10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb051867-ea5d-4014-b9a0-94ae6073c5f2",
        "cursor": {
          "ref": "16219001-4ff7-4aa5-8ae7-10918ea7a6fb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "13b91970-da59-44c6-8f69-8e63e369fd5e"
        },
        "item": {
          "id": "cb051867-ea5d-4014-b9a0-94ae6073c5f2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a1ccbe00-04c1-4594-ac7d-1e9115b0b45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820bafe9-2497-4475-94cb-7e37f3cc6e09",
        "cursor": {
          "ref": "77709beb-4e78-45bf-b00f-217b7f831fb9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "51294efa-275d-4af8-b61b-07311b41d8f8"
        },
        "item": {
          "id": "820bafe9-2497-4475-94cb-7e37f3cc6e09",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c3a55d50-78f2-4066-b6d5-c6c7c953c4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1111d4c6-7ba3-466f-abf4-904fea99e9cd",
        "cursor": {
          "ref": "a96dc659-8324-460c-949d-bdf171bdf11e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ee89f02c-0da6-4966-90ae-4f7a1b2f91cf"
        },
        "item": {
          "id": "1111d4c6-7ba3-466f-abf4-904fea99e9cd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "063a1f6c-dacf-416f-b4b9-369ea916c1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877396dd-ae35-430d-b9dd-6998d2cf070b",
        "cursor": {
          "ref": "43ebd10d-639d-415c-93ea-1d9bd26f541d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e9d862f0-1d83-4b95-af8e-0fafa80436c5"
        },
        "item": {
          "id": "877396dd-ae35-430d-b9dd-6998d2cf070b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4227b6a5-5500-4d4e-a484-39ba47fad281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed1202a-c11f-443d-af6a-72c5d8369fb2",
        "cursor": {
          "ref": "84aa1a88-38c8-461d-b67d-76dfa9e9fb33",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9bf0584a-b289-42e8-bec4-e426868435f1"
        },
        "item": {
          "id": "5ed1202a-c11f-443d-af6a-72c5d8369fb2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "36e6db23-0418-4933-a90f-b4b6ce9a8bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef136f5-802e-4c42-9418-620921fac6f7",
        "cursor": {
          "ref": "cff3ed84-c2fa-42e7-8113-29e939a5539d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "57cc71ed-fa1f-4966-accc-841ee89300cd"
        },
        "item": {
          "id": "6ef136f5-802e-4c42-9418-620921fac6f7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "90b4ff89-290a-4952-8537-fc7bc75c1eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222a2714-0518-4cf4-89ef-883d8fc2a03e",
        "cursor": {
          "ref": "7e749eeb-bb6b-42ca-8eb6-16bc77c6efc8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c7b36eff-d827-4e85-8177-bf30e8f2bbb4"
        },
        "item": {
          "id": "222a2714-0518-4cf4-89ef-883d8fc2a03e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "64ff5f0e-ceae-4131-bbe2-31355506e7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7335dff6-30b4-4758-9afd-2d236578f6fa",
        "cursor": {
          "ref": "ebf6d7a7-604a-4f72-824c-96667b75084c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "357f01ec-9a08-4455-9554-e8329823f237"
        },
        "item": {
          "id": "7335dff6-30b4-4758-9afd-2d236578f6fa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "978d6c68-d44d-4a0d-9820-24083403b52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81341c87-b2f7-4715-856d-402bc96d4f3a",
        "cursor": {
          "ref": "ebf83bb9-8745-4bc1-bfea-df8a38dc9e4d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2d946e0c-cd4b-40c6-bb1a-f8aeb34da1ac"
        },
        "item": {
          "id": "81341c87-b2f7-4715-856d-402bc96d4f3a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3dd42a0c-0b1e-4edb-bff9-2734422b8fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc244a5-40b6-4687-ae10-0e221728fa4c",
        "cursor": {
          "ref": "c7064764-f6f6-4796-9402-35ddf3f03e4c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9d58a139-ad2b-4435-8a80-e1e9a253d158"
        },
        "item": {
          "id": "adc244a5-40b6-4687-ae10-0e221728fa4c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "57a4ce14-34ad-46a4-bc70-3beb9d6ec40d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e7298c-9b5a-4f79-bb0a-703825fab0e1",
        "cursor": {
          "ref": "83c23fc4-b973-469b-81fb-41c66e38e3f4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7a169847-fd8f-4695-9afb-a01683f92e8d"
        },
        "item": {
          "id": "a7e7298c-9b5a-4f79-bb0a-703825fab0e1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2860897a-54fb-43c6-a5b7-2c2ccea0a623",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c99138d-9400-4e68-b400-f9a63b670d9c",
        "cursor": {
          "ref": "5e347137-d63e-47cc-a646-5dd86e18aa36",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "315a22ac-5f55-41d1-90dd-99c7c2b8bf49"
        },
        "item": {
          "id": "0c99138d-9400-4e68-b400-f9a63b670d9c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "00e5b17c-5dac-4f87-a9a5-118844fd87f8",
          "status": "OK",
          "code": 200,
          "responseTime": 3190,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8a1de6-e257-4b08-9bf2-e5b30c32e39c",
        "cursor": {
          "ref": "cf20e0f4-e632-433a-abcf-d7c29809ae0e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0bbc9984-f0af-4eca-9686-a904fb4ed122"
        },
        "item": {
          "id": "5a8a1de6-e257-4b08-9bf2-e5b30c32e39c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "176eb54d-b509-4b4e-9fc0-b53bf56b2ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 2139,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5c81cd-0f50-4884-a212-0321bcbadba9",
        "cursor": {
          "ref": "8ebf33fc-5c64-45bc-bd32-2a8020da63d2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c93c70ce-0214-49d0-a429-7e99637da7dc"
        },
        "item": {
          "id": "5a5c81cd-0f50-4884-a212-0321bcbadba9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a06ddfc-571e-4839-bccc-2da8003b26d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5c81cd-0f50-4884-a212-0321bcbadba9",
        "cursor": {
          "ref": "8ebf33fc-5c64-45bc-bd32-2a8020da63d2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c93c70ce-0214-49d0-a429-7e99637da7dc"
        },
        "item": {
          "id": "5a5c81cd-0f50-4884-a212-0321bcbadba9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a06ddfc-571e-4839-bccc-2da8003b26d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916f6894-ce79-4bd9-a400-24b20e3527ab",
        "cursor": {
          "ref": "7e205024-051d-4455-a744-92665773b4fd",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "83e05ba8-c3e9-4845-a98a-d5102b7bfe14"
        },
        "item": {
          "id": "916f6894-ce79-4bd9-a400-24b20e3527ab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fc5e4b26-95c5-4a9f-b058-7ab0bc6b397e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf8f7f8-6930-4995-8e88-8ef57d88f731",
        "cursor": {
          "ref": "140180c5-f73b-4317-be76-7c96881fbfad",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2a34ad6d-70e5-4efc-8fac-4bf9045167b0"
        },
        "item": {
          "id": "ccf8f7f8-6930-4995-8e88-8ef57d88f731",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1ab356ae-b73c-4964-afe0-97073fa5b811",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}