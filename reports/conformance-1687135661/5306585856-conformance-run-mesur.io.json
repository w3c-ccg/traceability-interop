{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01e89644-3f1e-4a35-bdbf-ed08582d9cd5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "724a8dca-8c7a-48ba-89e7-336b22a36689",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "471c8a7f-7d25-40c0-a39b-d7f85414797b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9fab0fb-b306-48b8-bdf5-986858a05cd5"
                }
              }
            ]
          },
          {
            "id": "36b31258-6457-4ad9-b1f7-fc5cf98b256b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13f79ff2-d29d-473e-9c2a-348e40ec3333",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b806e6e-0d00-47af-b206-676c0b62f934"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c249c6ed-ec81-4c6b-bb81-b0ce625117df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66e6d4ad-6232-496e-8b12-b0b757150d21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d57304d4-1948-48ab-854a-7d4e44d82905",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "092c2878-b78b-48d5-986b-869133f0cd43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20763e18-2d0a-4cd6-9c11-04ce88030f6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "476ab604-48ac-44a3-95ff-7565878cc3c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94fde93d-60b7-4362-a485-17eac1532360"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f222878b-f123-49e5-97b2-08692345ccec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "370203df-686a-4466-8ce2-a01a0723a27c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79748d2a-2a7f-4649-932d-18a107a33dc4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60968163-ec1b-45e7-afd1-8e86f9a0297d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec97825d-3141-4023-b5c2-9689f41de7a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "996d8bb0-3f28-4c52-81b0-0d86e8b006ed"
            }
          }
        ]
      },
      {
        "id": "920ef1cc-9393-475e-85e7-6261be0724b2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a5434968-9aec-4d6f-a5b4-eb1396cc1251",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e982ff3d-6dbf-47e3-a366-d230e162bb54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35aaed80-b652-4e71-b3f2-b9c30637026d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aefb121-7268-4998-b7ff-d03b4900e92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb64aaac-c8e6-446e-a60f-419b4f3b7f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0759a88a-39cf-46eb-be4b-655520fd6837",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d687dd3-797c-4b5a-9685-a8476c8f45b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90adcfc9-bc44-4f5d-921a-9e9e55da00a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68a7be6-57ce-4b02-8fe5-f5454c57405b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd12516d-5f44-4152-87fa-3502347f80e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69c40ad2-d798-4f90-b106-e245c2252e08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2be5df8a-f4ee-46ba-be8a-daeae36ea792",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cae615c-319c-4fc0-8d01-1c17bf7c81be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ea1b8f-381b-49f1-b7bc-c96d86c888c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71075091-0fd0-4535-a91d-7442b352d01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0ecc0b-1a2b-412e-ae60-1153824e73b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ae1064-5d32-464c-be32-6db289d9a020"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "786155af-ada6-4a05-bd76-7be549c04814",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a397bec-5df2-4bb7-9e2e-362fc6d06ce2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ecdc65e-8387-4747-b725-79bb385061d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23f9cf0e-b305-4e34-a1fa-ad9872b2fcf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06e3faa7-f619-4bde-91eb-ae2f40cd1fe8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "de8bade4-504a-49f0-9607-cd36467e7f60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a47c6cf3-c28c-48cd-a3e5-28262c053ece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bda2d41-bb1f-40cf-97fc-0c9a292f432f"
            }
          }
        ]
      },
      {
        "id": "2bcbf3f9-fc4b-4d2d-99ad-56cbf3e6ae49",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71d3d3d1-857b-4634-8bad-075e752a14c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "666931a1-bea2-4ba0-8af6-300c37ed971d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae8b4339-5231-470d-8a7a-ebf0eb0352ec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad3f433-e26c-444d-8036-df52e19735f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f9fb9-012e-41ae-8fd6-bdd52f35f6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9641a1ad-6f50-4970-8e11-5f60b79f7b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64158996-5285-4403-bada-72b08cc369d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d309c57b-f447-4466-821c-403cd5ed9877",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d672f6-c00b-469b-86ee-d3af8f1eabe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8f0d13-437b-42d0-a784-bd171c822baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0eca9c-8ca9-4595-a71b-cd4405aa80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f3cadb-e6d3-4961-9f4e-fe5dd3ba59a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c8729-f057-4b7f-914c-6cdb336d001d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9357635b-f578-4c4b-8bda-f50b5560a915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8651f1-7176-4fce-9ef0-252af22afb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1375133a-21f7-4630-877f-d4f0c132fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e39fa6c-0323-4203-ad83-592b0505e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d754b492-efe7-474c-9063-0a3922086478",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a25e3-938b-4232-97a4-1f37e98792eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd91f8f-c0d2-4642-87fc-8334194988db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058dfc97-294b-47ea-babb-ba10d1e3435a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e237028-989d-4ec9-a505-f7d75ec99d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed432a-8026-4371-8740-3bdd21114994",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0576649d-b30b-4758-90f6-899da2f8dda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0f3e9e-c79c-4001-b8ca-ccb1f4ca98e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd9c32d-89cf-462a-9a1a-a57611cdd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5f248f9-f4c8-42fa-ab93-a0b404dceb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1bf542-da79-407d-a47d-7377f41e7278",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f828c-a5e0-44e7-bc3f-c837e8a9bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220b4b2e-6397-4a03-bdd9-cb766eca2a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302aa1d7-be15-46e0-9f18-a40dbd5eab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd5df36-42bd-4520-91b1-fad6dbf0ca9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c6c65d-274a-4356-856b-757c7437b877",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33698c5-889d-464e-b0a0-340fe50abff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb62e3e4-1bb7-4516-bec3-91035853507d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb37718-b217-4668-9990-34887cc23bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e2a645-2315-445e-a080-fc082bf1d46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e3101-e3f1-44cb-9c6b-ddda720e6fac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc0c58d-e5e7-4e25-a51f-0dd1f579c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcbe4c7-a4ea-4963-ad07-babd6e9b37ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e168d83-94a1-4b63-a828-8eed4d092ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f673101-bc84-424d-b02f-90f661beb014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1da8f05-f794-44c4-9465-df9f119207fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bfaa9e-e589-4e0a-b881-8cf78988e225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b72cc1-6cb2-4ba6-9470-06612d4ec8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee06735c-93bc-418f-bd6d-5b207287fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f33e6362-d6fb-4a64-8587-33a3e3f750f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8632d17c-20e3-4a72-b797-d2c43e679773",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b435f-24e4-4e67-bd57-39504b9b48d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cbc5b8-8083-4549-ab88-9b11c66a56a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d525d6f7-e094-4948-8b2f-c391986bce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "120bba98-2e4c-4b8d-857b-43083ec9bf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ed4e3-4c90-43ed-bec8-db62b92f181e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadf8d4b-24c0-4b84-964c-40646326b573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3afc14-21f4-4a8f-af9c-511f55406b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a52f7e6-54ff-46b2-8b23-7300c6b8ec06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09def9db-de39-4d81-a060-28835578f9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea25f3-5dfc-41db-9ea7-7b44afbbd288",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3059947-e99e-4533-8ac0-e4cfd9c16944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44153918-df29-4780-a773-345ef665fe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cd6d1e-191a-4154-bb80-d0fd9608f8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "340b7177-da33-4894-b8de-f63dcf975111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403e8749-36b2-4131-a2d2-643033cffb00",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb1b134-1a0b-4692-889c-8cf38446c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d3ab58-cdc9-4478-a0c3-a079b10841fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7170a72-f4f7-45e8-93c1-366868ae0a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eecd4847-6e85-41c2-bc80-7f6083e33760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde37f6-78ba-4a53-bd0c-dcb8a1e362da",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69724ccf-bacd-49cb-a5ca-ee2b3d470ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673eb19b-541a-4edb-abd1-368d3cae1bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c65fa-7353-4879-96b9-8cde4b106afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe7ca278-4f7d-4832-beee-0b26c3aace78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b15a2a-95e6-46ea-821d-b8fa47e1685e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2ea05b-754a-4f1d-baba-3098b1a755fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d995f6a-981f-4db0-9712-b1fc2a2d995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3707c-07c9-4a8f-b643-687b6c87064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f9008b8-fc6e-4d7a-9e03-2dec241804e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602bdd2e-c9ee-4f69-a235-1a7aa153a56a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee028926-d07d-458b-938d-229a65f768c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a16bb8-166d-443b-a380-f23a57dcd095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8418d28c-2ed9-4752-9e9e-ecb5041591fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82ba7227-ee5f-4b22-92e6-5d3bfc6d7ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a5abe-eff7-4a97-98dc-4092c56c5240",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7f1605-9bbc-42c1-896b-aa65a646f56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7717cae-6cec-40e8-9505-4bcace80fbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dbd3da-8f26-4c69-9e75-824c54f5755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d437fc-65c6-4ad8-9f69-7679a03aabf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eaad83-5d94-4b7e-8e1c-bd18dadf60f6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5a718e-0886-4c17-bb4d-81c5f15763b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec3fa6f-7a2f-4583-a277-fd83ace9309c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3037fe2a-e3da-46a6-8cab-1cf4457a22ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "913f46ee-c526-4456-b941-cb29e91879b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a532b6-2145-40b4-8a7f-74df39375914",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376d2bf3-bb21-46d9-9333-b6bf82b8bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7611cb86-9cd0-4400-a1da-0bb5ab6c88f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2282a40a-3d0d-4e00-9bd4-fa60c5865a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74c681b-4b37-4763-848a-5eca75e22486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b0aaf2-d856-4c30-9bb4-6a7f2f691329",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2140f90-5b2d-42eb-9a20-ebd414f5647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ff168-0dac-4fed-ac24-20000db64f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5771a656-0287-461e-a558-9a23dfb19a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "991e43a0-a01a-4f1d-abe1-5791cb4ce86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e667a1-9ccc-4ab2-a814-6f3b76316c13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1017275-49db-48e7-a0ba-cfa74cfbb483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18203ef9-6dde-4806-90ef-f62a61c1300d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5826e3-7f1c-4800-831e-3a9bfeccfd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aefbf8da-fe70-47e1-a116-a8eae8307390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9686de-baee-40c2-bbc9-25ba2d85abba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e21372-5b64-41c9-aa3f-e63d6bf2fef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a06ad58-e326-4f87-bf8b-917c29d8cab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b735257-09a2-4f57-a652-bb3e51289e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a49fd806-6051-4877-b73b-b365ef8518a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a845a74d-e644-4e4a-97bb-347839f200fa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b8e39f-5697-4e7b-b972-7f6893d73977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631cb98e-9da7-4a20-af4f-33e0d3b192b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b86310-c3f7-4d67-b260-b837c1ec033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae7300d-bf49-4097-bf52-fe56e8a7c0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d338db8a-d9c2-4c87-b6e4-d2ecb9d82125",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865e13b-67b5-4c94-a7ae-afe2b23ff4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed916aa-7f05-4b76-b37e-a562cea77020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c812a65-3b49-4ae7-b386-ac6fee19bd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ad6635-2a25-4cb3-90ef-0162b57c962d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e55d21-a443-4b59-9f31-c38df55ae8ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89424d01-c48b-4682-bdeb-8f04b837e11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67877fd6-163a-4759-a12c-c213158d085e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd405f-e8c8-4b9f-b161-9f7a1b0211e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f3b73a-663c-44b8-b026-10dc97c154d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278366f5-116c-4ccc-99e7-6a079930bad0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cb7c0f-2103-4092-a127-e5eff51ac54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f3ccc1-9448-4157-97e4-a3cd05e74f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b6b65c-6c5b-4c99-b0d2-258707c87c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecec81d-18b6-48aa-a4b6-b141bff94286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82759748-0ff1-4867-a9ff-f452e50665e7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d7e575-c329-4b5b-9d9d-8ffbd1206dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a274fed6-7be3-4aca-96c4-2e6d52b5c4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb997be0-c6f0-4008-aea6-8296054e2717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21010a8-96bc-4162-9df7-fe0b6be39d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d18144-0b25-4645-a1d7-6a45968f3c48",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2312188a-0914-4756-8f4b-ddad629e7020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed604105-ca87-4d39-a593-0761566260e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ea590-29da-42a5-98c8-1ba7061bf79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e59778-6ae3-401e-86a9-2a869288b7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef8d66-13ef-410c-b2f5-6b180d511351",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cef0f6-71a5-4648-b0bf-f822ba4c3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5e66c9-8fca-4c4c-8389-3f9ad8cc5d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a72357-2c03-4f2f-bd32-5067de4df6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "161f8836-950d-4373-a7c3-14ccda30dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac6ec38-51a7-4462-b1f1-bc80e03ca3b4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1209558-4114-493c-b5b1-56d0ead91fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606f246c-805b-4d55-8560-4ccda55e3e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e1e8e-8677-4175-9098-d1a0ff455d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e51c26a-7f0f-426d-88ae-14b46ac8550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0d4c4b-7466-43b7-99c8-d29738c10f70",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5e79c8-aff8-47a4-9d78-18c2e6c167a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e081f123-ad34-4ab9-a058-35ba549bfe6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eaed96-4628-4340-842b-2e6867c02360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "661d6b98-be8b-4dfb-8cd1-0ae88e55012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a6e553-1e85-4140-b00f-24c7faa5978f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d1586e-3d1d-41cb-b5a2-2324dfc58634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635d645f-dd93-4a26-9d91-53a8657f8ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd526838-cdd6-4b74-9d80-c35d7d263d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7e1825-f0dd-4efa-8c1b-75a78c104d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49f48c1-dabb-4a89-bcf0-0eb9cf070a8d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04936c46-33cb-414c-a753-d9cfe3c04670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1418f071-4ab0-4d15-9a5c-dcb6ef2bff7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e98480-b8f2-4334-9c35-2b803cf77c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e5a0c5-7b2e-4dfd-820a-166f25a7ddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2573899-c8b7-4ba5-a23e-3a2b7a3d7a94",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372e726-a4ab-445a-9bc8-d983fad01fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4455975-daf8-4d69-906a-35179c939a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a517a19e-3508-4e85-9733-e00c6ac35d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a16880-339e-41db-903b-51dfe3bda48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78faebbd-829b-440a-8c5b-915112e42b18",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92c201f-6114-4ea3-8907-98eea59439a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a978848-f93b-4689-8aa4-890a8f8e9a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b54723c-7e23-4778-86b9-576809666754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9cca4e-4bb7-4fe9-9084-fcb6d688c7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf188ee3-393b-4f20-8c7d-0d9781b6b797",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfcfef7-2e3a-4b9e-b277-dcce5c588e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52852ce0-d519-46aa-bdd5-cff789070b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e21d11-821c-42ed-b9cc-339d252da686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1efb2fa2-9190-4d5f-9807-7769dbe966cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0f54b5-4ec3-4534-a979-3172842e8322",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a8761-ae44-4c00-9f71-a6ecf985a73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653ff54a-2fec-485c-ac4b-4753c2386cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfa6e55-14f4-42d6-bcd8-f05ddd257a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6c2157-1b2b-457f-bb96-55b199d9a3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d3027c-6380-4e02-8a5b-b4707cdb8b26",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224d8a96-4717-4b52-a347-00f2eb91cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5037b2-1508-49af-b6b7-9c60ce05c79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527b0caf-78fd-4ffe-841e-c068c1884145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "829e3082-6525-4a3e-aea5-3f44eaca23da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e212a6a-2bc2-4f4b-91ff-cdd3a9aa12bf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a0395-5849-4e84-ba0d-282f9a0a38ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d757a-e9fb-495f-b365-a84c7ab993c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819e3c68-ef20-468e-b065-795218a2b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89a923c9-c275-4000-870f-e314314bc7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9bc944-2085-4a07-8009-3f4b4b651597",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc29530f-bcc9-4ab3-b114-f4e3a77b0d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf27a47-ae76-4fa9-9002-e19f2c9ad3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b557ed-5783-44a8-be85-2a6c149bc549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c39c9833-0c9d-447a-bde4-cede5ac9308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb01fc79-d8e9-4a88-ab29-bf41d144dccd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599e8429-8b76-44a3-b3b1-ac4f1e2b6cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1226ac69-4633-4dc6-b12a-ed1fb2430074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb15ea8-ff60-4368-a74a-18a44574d7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4187fb4-bc2a-4400-adfc-a1ffa7e4c8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0b3e60-913f-4b2c-a339-bf33b8c4bfc9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e124a-c702-44af-a2d9-f97cf7cf7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ca4215-e269-4b23-8f33-cd7782cae648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac769d8-359d-48f3-8f2f-d2ed456e695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "00b2674d-4841-4b01-9875-e22bbee7d141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18efc2bb-d1ac-484e-bb1e-dc861590f208",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1020078-6f4c-4666-9ccd-1ad3093a210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b5cf5d-0395-4f85-afb9-a0870857e4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a4285-0f34-4268-a04f-89950d5d1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c86ff37-eb6e-40f9-b25f-31d93f18be6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5a286-d204-4529-8b3c-cb6303839d2b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8f9a7f-b8d1-4b2b-a181-a20c8670fdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88ccf3c-49f0-47d8-8da5-de2f98999875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8586fcd6-3b11-46e9-baf2-11f2ef193ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e873f5-ff2f-43d5-aa08-39f63f59bc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3880821b-b2cd-4bdd-9c33-99cff8cef9e6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fb61f8-6d8a-485b-9253-02008c46f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d5e6b8-4979-41ae-aae4-251654855250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f368be99-2445-4519-b9c7-5494badbcadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb7f011-9cd4-4550-a053-1ce3498bdb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2c0a24-2f1a-4796-92ba-f851dbdafa95",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e7bc4-0de8-485b-ac01-4f34c87a1713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e894b8ea-4906-417f-b973-11ea8d07d306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837fcb94-8893-4870-84a6-841c25436ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5ad3da-5c36-4426-958c-1447b88153f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdee681-740c-4a8d-bd6e-c6f840beb1b5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458b5945-3816-4a9d-9688-5638b8372dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7040957-8c86-4177-9c19-1c7199cca2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3723ae87-715d-43fe-8a31-d9d5609825a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c153af-75e4-46f2-babd-5c6de7740102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6311e02c-dfb9-43ce-9e97-1c0d5e431bcb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2158a6-3344-41f8-9b6b-365aafd473f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5390a965-88f7-40c9-9aea-8b3f8295dd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482b845c-f407-4158-b9ad-88d405dd45ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ffcba7-8805-42e6-a09a-6d9d566754bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4a6814-0a4c-470c-ae6c-9c45dfea542e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec5334c-fb9a-43d0-a86c-fa31d0b1e47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52027ccc-b409-4291-b3a6-e0fa339bb8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e967ca-6daa-438c-9207-0ce0c63ef93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52452f76-23b0-4691-b97e-fb6cf087c403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff38f4fd-f556-46ca-b83f-8493f8e53bcb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b39ac10-e63d-4ca3-879c-c8ac557712d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041a18f3-be7d-409a-b92e-734c5683ef72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373d1db5-7504-45b1-a96d-eda99fa80cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b58947c-8fe6-461b-831d-52771c090ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fcc079-c7c6-4ea9-aff2-a824f76e9da7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc89b787-1ac5-4ed4-b82a-139aedd508bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b4df70-82a6-4170-82d9-c6706400197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d9e9f2-01d3-4a6f-886d-68fe55da9f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8b7510-2362-4694-802d-da25ecef2882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc50a14-eaff-4f8c-a609-48309fb57daf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80aa5dc-2140-4ee4-b953-ec69b9b254d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe53c6b-ca70-4637-bab8-a13cfe1921c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc8f5a-917e-42b1-b95d-497560fee9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e58eec-8b31-48eb-a83a-9f0c4c5ddf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900a35b-ade6-407c-b388-e5deea2d0e97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ce033b-0e67-4e54-a998-520df142012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8e19cc-6ddc-4863-95f4-90a6d4c68d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a1a638-65ce-4882-b380-7a364b93753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "169cb1ed-8070-4bc2-bb6e-421a10158efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94454ee3-c7b6-4e82-9a42-c4ff0c4982ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b921843-b934-4361-8688-fc8dd627fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67363f64-0de8-45bf-b89e-dcd01c0169e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da48396c-a0d8-4309-93b1-a55c075b4d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68066d4-6ea2-4c44-95ea-55cf939f4b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c248b5-a696-49e4-bb2e-f1c7eaeb1af6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bb3ad0-f0b0-4efd-af36-d5c8d8114471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713b9259-aeee-4396-bb5e-d9327150833b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8219f89a-04b2-4212-b730-64be72aee659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "151fd87d-6843-4e48-9ace-784c8f55881a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0638e55-147f-4848-9b9a-215c78ffcafb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64993002-b5b9-4692-835a-2b5cf8c3b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f173f63b-b1b8-4079-9d58-1f011699d6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ca3b63-2117-446d-9a43-241bfc24bbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "32052ad3-47a0-40bc-b743-ac6a1001223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311df4f9-7b1e-4649-9c06-77b38eae54aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853bf555-f111-4f10-8ea9-e0606626bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096cc2e9-2648-438a-ac94-b2d0870b023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7bd8b9-b57c-4f95-aba2-5001b4e95197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f68a1fc6-e33b-498b-9b53-396c51165c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44b2752-2342-4519-855c-adce7faf7ad5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28592cc-7639-4ab7-a057-97f49bc15d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e560ecf8-09e6-473f-b340-91acd76522cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2862f-ea1d-4976-b5d5-6dee8784af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64830f55-6baa-4454-a44d-5b572cba4b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c82e03-2d6e-403c-98cf-45dcc8b3ec2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42533c4d-9675-4fdd-8b41-e3a3446692fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b0b7a5-0950-44c6-8ee2-48430fca5a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7b44c4-01a5-4dc6-b99d-35bcfc40870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4c4d63-9228-4aa7-8949-ecbff8dcef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ffc3b9-9699-4773-b986-98035024fe28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11cdccd-e898-4a14-a805-9b15c04dd244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb597a84-5679-4013-a1c2-4c50eae45d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b110f86-4eb7-4d49-82fd-ca62d69c93cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02869a7e-37a5-487b-ba3b-49f8bf3947e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca9e3d0-89bf-4b0d-9caa-cdff14acbdd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6048b-da8f-4246-b670-a5d3ecb99846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603b87c8-c529-4e14-b5d5-f6036d653ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c50683b-98b8-4b55-848c-31f1ebd5c923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "150cccb1-9cd5-40ab-ac43-4c43c87c55c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ab8fa4-f9f7-4121-b6f5-e4cec2808692",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cbd6c9-d20c-44ce-bec6-e5119370f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664a0352-2a3e-427f-a11a-f663f06b5b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f249f88-9c99-4e43-97ac-4d4cee35061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d274e2b9-742d-457f-9a11-97dea82734e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa6dc2-8390-4ec4-9590-761fcba05a7c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf19d6fd-e437-4e18-8b0f-b8b92ee35bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573bce04-84b4-43c9-b06d-de8638f95372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c86a7eb-3eae-4a0c-b48e-b02e1e20feb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca85c35e-9a26-4a48-810b-a26dd55c6459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c31d4d3-7154-4590-a4ee-43b3b9a52268",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf2a085-62a2-4149-ad82-86d991b40aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29329aea-4145-4b40-8179-23e8df85e012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d93898f-376a-4aec-944f-8fdbcfda0eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20081c87-8c69-4c6c-9e44-f0fa1bc6ee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6de2a9-0e65-4910-bbe3-54be907fd48c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb567796-53da-46dc-afed-206fba303ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d351b2b-d814-4019-953a-0a32b0b0c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97efd905-8f5d-4e10-8c12-81c487f12bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91251ce8-2513-4771-959b-398e8ca2ed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b1e709-521b-4f31-97b8-36aa8c85d402",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a256b65b-fc03-46fa-b694-0c658c16fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbe7c43-038d-4abf-8dda-0d0b64fa97aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa7a10e-075d-4e0a-96b5-a19d221b3bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01335317-b067-414c-9e41-9e8c2e0d565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b88ae1-4ecf-48de-9690-ceec8e7a72be",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd65bc1-1eaa-463e-81bc-51a5d6c3850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2706b4-9925-4165-8721-acb5e42e0211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea975223-4644-4d01-90f7-7a32495881e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb1dd41-0ef5-4b86-a4b8-0f182a1fb782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742015d3-9e98-4f37-ae70-fbf841690b6f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f740630a-cf52-4f94-80f9-b7483156f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245dab56-2309-4cf8-8cbd-aff29df0bc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62034597-5391-4814-a6a7-359c9dec3b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6f63e6-7086-4a0c-93ac-7ce96eb29e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130df746-66d0-4d50-8db5-0661fac4319b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3558cd-e14d-4851-8ed9-391fa2354799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511db650-f10c-4ddc-97f3-c989f4a37530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042a4bc7-4e65-4555-a079-5499ce9c90aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a10cbe0f-4122-4c78-a2cd-d116261a551e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ae7b45-876f-4fd9-b8bd-ea18935d4364",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890d53e1-9c84-4391-8543-a07fa823e3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd779f7-f86f-4a9b-afc8-68df3abe410e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e79eb0-0049-4527-b3e3-2dbd4210d31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "134c209d-034e-4394-8397-4a5ceb3b4779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260e3e62-168a-4403-a8c3-7beebdc2d924",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd01c3e6-b677-488c-a188-f643c9dab4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98e5314-ab9b-43c3-8320-aa561a05d4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60f0b83-29d8-46b0-ab3a-74877b5b664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f68ff5-c14e-46ac-98a8-f12a12c8c342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21055b4b-f576-4271-9156-d681b7697519",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9976ae6-932d-425c-8474-4cc272acb481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f997621-83d2-4c1a-b4fe-1a5f7b79f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4bae6c-f29c-448d-ac10-67a9ce5fd966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b845b6-449b-4af9-8079-c51eb09ffd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6620f53-9208-4983-b564-8269395f363f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3477ba-6edc-49cf-af47-6cb287fe7a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b3a014-708d-4e52-add8-cae0f962ba28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcff108-2e34-4707-82ad-e5fb903f9eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6afe462b-3a0e-47de-9540-a5b8ac3fde60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a62e496-d4e1-41aa-adbb-f9447dd82879",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d6772f-6123-4f0f-a13c-3a608f2a26f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99ae451-7117-4960-8249-57adad33caf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f42c52-7bd2-4865-9185-4d853a5c1fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65f1e3e8-9180-428d-ab10-3bcd50b6d548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b84c31-648c-4703-bf52-108357e4f839",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293ffc8e-6d0a-4827-977d-89eccd2aa9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade495e6-65c5-416a-b33e-54a59556a59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4978b11-c779-4f14-b303-da428e849888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe6a7a5-3703-41c4-82f4-8545b65629da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5ce0e7-97bc-4f02-9fe6-5e1391ddef3d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdad76e-08d6-4b0c-821c-7c19d8b8752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee1d17b-9d98-49a4-9130-80bbc1abc154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695705e9-e5ed-4224-a1eb-28af9f3fd69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bba7420-5459-4984-b848-66b4b1bdc064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907ef608-3649-4a82-b392-2ad2f34e4554",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48aa510-7628-4b55-bbde-c8a940988ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291544cc-75ec-421e-be16-97a26e46349f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295196f9-1018-4e38-8695-ccd269202128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e8a16c-4e11-45ee-bf25-dc65cd1624e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a630ef16-bc3c-48c0-90d0-c71761dbf6df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8660a83f-413a-48b9-a8fe-226ec457d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a526c4e-081d-4430-b66b-cf7d8a3a3e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b74fe6b-90ef-4634-adf2-500fda6cd2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e197ff16-4322-48f7-be4e-cefaca44b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb11b811-5708-4b96-a6b8-97987ffcce0a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa141b-c26b-433e-8bac-122d8ee739b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817de38b-80c1-44da-9774-2a8f60e5a0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f493644c-d6d5-4efd-a1bc-18d3137b7d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "905d4eb3-09da-4431-ae51-8ef37e662758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa566b9-8d9c-42a1-b544-86c980f1e4e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd783113-f8f9-45b4-b492-b89dcc29bf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ba6e0e-b7e4-40b3-b77c-dfb8265addf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5877a8-8110-4be3-9570-c97f4758a1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8914e0-dd64-44e9-b548-cdc1ae78a9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d9849e-1673-4066-8e36-170d37719e8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70efed3-ef58-4863-b183-f997d6c538a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369fc342-0add-473b-9991-3c54d09664f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a208dc-6500-4fdc-90d4-cde38a1c4a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cd369d-ad07-4cf6-bff4-8f6ac4d8f7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7714044d-4e29-46bc-b2d7-c3cd680fa541",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d028e-e705-4664-842f-36e02e37db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f18a85-3b06-447e-8728-ca43b015261d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f829e897-76b4-4d29-95a4-41b9db76a539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddeb35f-4668-49d7-a9fe-db9beca9bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5410ad3b-f11d-4d49-9a96-c64f83cdebd0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23985c26-ec35-47df-9ec3-8456f0308c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879b8cb6-5c53-4a88-ba2b-8df9f1ad91d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7389898-ae6b-4a54-b600-e8c9cc4c6d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70820227-f9c9-4d1d-9656-ca716d4c4b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28e61bd-8a15-4c00-9762-ba470023dfb1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8a26b3-51b3-4d21-a01c-63d17424f1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252833e1-4093-441b-b81d-8569d4939aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beb2577-8fea-4fa1-bf44-93b720a3d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca03659-8426-4faf-8ebc-51d35eefee31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47e0b0-24a1-4285-bd41-3a3c1e8fcb83",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4933de0d-ef1c-4e70-a5b5-75419113d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b0cbd-68b0-46ba-85ce-8963f8234fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b99711e-b6b0-4149-b8be-a12cdb6ae2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adada151-acf8-417e-b67c-d7a0ab7836de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff737c81-d593-4cbd-800b-fa7fdc1a2a35",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537da996-c2f1-44a1-8e50-b7ab2f1d1fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913ad142-0d6e-48fb-825f-8548da04d6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d036c-5fda-4f66-b96f-8b1c87b17b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4659fa92-0396-4e76-b86d-ed08af648138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc37043a-35c0-4257-bc45-2d8d3a641314",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205327ed-21b0-4ac5-aed3-1fe258442d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1bc029-4fe8-4ae9-b0f8-f73c7d7d87d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d3e787-e70b-4fa3-a946-af97282eb88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad9d95c-577b-4f76-8802-5d157dde8270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3ad60b-0ab1-4049-9046-746494156d26",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1da5db-4118-4523-bbdc-9af1059b8dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4523abfd-bbf6-4a5f-bfeb-4dfbd24b2183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de5bb9-007b-43b1-b019-05e1f89e4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f318dc3-3dd2-42d0-857a-a0d150122218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2c4d91-295c-4a8f-815f-a44a376efa29",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2487ba5d-ffff-439b-bac2-52793e7db1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3990d2ad-0790-413a-a5c6-352494d3d8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a1217-845a-423e-84f0-cc0143586da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdf9046-d604-4baa-8edc-57779d65ca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49753a8e-8df0-4a34-9d08-c12db6f39dbe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9b4a9f-0e41-49be-a79a-845b0690849c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52199f3-882b-4bc0-bc21-53a3fd98a3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106e185-5b9f-4169-a7f1-3fe24bbe2c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7986c662-bcd2-4d57-af8d-0419950f780d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e564f15a-d0e4-4f54-801c-e04ee635548d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d4db5e-d9d0-4873-9347-3526dd6f9f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41be8273-e80b-480d-9925-7eb4d3cded72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8dbbdc-bce1-4499-a1ac-d0654f5f16af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "192d9cd2-c418-4416-9349-0f5a8da3aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fec88ae-db08-451a-a6f1-ea3ee3d82c98",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443d8f73-05fc-44a4-b5a1-7b592ba4fd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "791db4db-8531-4b53-bde9-8447525e94b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8e8de-a000-48b6-b36d-88d7f050b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e88f5df-7088-4127-b1c1-c3977b373c3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfb26aaa-4d70-48eb-899a-78f464fd51e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb0d6bd7-97df-41fb-b522-bd2fc6275a12",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbf65d9-0b89-4762-921e-fd87d6f62b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07597376-213c-4e3a-8424-998744228a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f060584-0c8f-4c07-b10f-3c1aeb330fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0ff1844-6e62-4d83-8fd6-7a06887bc076"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91f31a7a-ba32-4192-90ba-67ddc012e961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc5f183-9df0-4ed9-8c79-1c83c46a016d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa2ea4c0-6c6a-4615-9104-8102529412de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2118bce-f4b7-429d-a1da-530402e5185f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6696c71-37c6-49a0-8023-bdb235846da0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c01440f-46a5-44e2-81f5-1fab0a27cbe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0acdc75d-a528-45da-8dad-940ff6cfa7ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8873571b-9969-484e-823c-292868e3c532"
                }
              }
            ]
          },
          {
            "id": "4744d296-89b5-445e-ab46-40e66e05c8d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed75ae0a-f82e-402a-9e9b-2258e45f1737",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a18c115-a04e-4613-b141-69da9ca24647",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38dd07a9-1d8f-4839-a8f8-66b8cd4e44cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f08c646d-cdae-49e7-9abd-0cbb1517b082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dca214d8-5b7c-4260-a99d-82d556a1c83d"
                    }
                  }
                ]
              },
              {
                "id": "df351ea0-8539-47d9-aa56-b59cbb198e7a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e755c2-36b9-4d98-9d1a-63505bbf6179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bea0230-1948-412b-a19a-3c1dfb88f230"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45db32c9-4381-46ff-9ef8-d6ba321246ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4eacf8a-b47f-4775-893b-02429673ab09"
                    }
                  }
                ]
              },
              {
                "id": "532c951d-de54-4e89-a8fd-cb140bdafdd4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b3e7a57-0e6c-4924-a1c1-e66a1b99aa6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12cc496f-a3d6-4d86-8e48-a60f9e5ade80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fef110c-3310-4963-aa31-f36279535c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c72615d8-b27b-4186-8b85-7aeaa94a2faa"
                    }
                  }
                ]
              },
              {
                "id": "5086e311-60ff-4be0-aadd-488a4dd4d4a0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a28bc0c9-be2e-4a54-9c29-442eb50b3d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcbaeb33-6e27-467e-8e5e-236e905286c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e379638-5980-4d24-8c7b-59d7dd6922fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2522cef-32a4-490a-9298-8f0e02c6be9c"
                    }
                  }
                ]
              },
              {
                "id": "307287b2-8ca1-406d-9199-dc4da97c7a6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55856abe-d4e1-448a-8400-49880cf7d183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f417c6ce-f9bf-44ff-a80c-1e9844fad893"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9764f8da-b6e2-4052-bb17-5806bdaaac25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29e03d2c-a44b-4305-8675-65722d34b81d"
                    }
                  }
                ]
              },
              {
                "id": "f3250255-49e6-47bd-bfae-e27e4291c02c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b8d702-90cd-4d93-9f97-9f5fb6b10eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19346803-4037-4a22-8445-ef0d3231a876"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db5b32a7-acb4-4f06-938b-7f6eae9756bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42a72d40-11b2-4dae-bb80-52c26ce1fa9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "818c5843-aadd-4670-89bc-a69023d82a02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8dc4614f-4bfe-4e0b-9428-fec545144f2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "256832ba-a6b9-4fce-ab11-93808fc9ab22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3213d29-6855-459f-9dce-ead1fbce57cf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be17b2bb-0108-4fdb-a323-86783d3b7579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d21936e4-a805-4a7c-b524-b38dbb665018"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7da1d6cf-59f7-416e-85e8-d7bd29944e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ac5d07f-1f2a-4a72-96e4-2984c37261d7"
            }
          }
        ]
      },
      {
        "id": "d55c7a25-6d58-4fae-8389-86de17b95d77",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "67dc4b36-8521-428c-9365-f7ca6c9fb26b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e32209d7-6234-4525-8ccb-580a351799d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0914f3b3-0a57-462c-93a4-85c0c2ed5369",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2081f-55a1-4fc5-882a-6eecc6912c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c61f08e-c5ae-48b7-8a9e-0a4b1c44a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72ac43a-2401-4f18-9cb6-7a90fc1ec04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2df19f-038f-46ec-b18d-cdc627b2397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f74225d-2168-44b9-86b9-faabf9f79866",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a260299b-bf98-4569-92fe-486ee315c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3a4e2d-e150-4bb1-9c3e-a75f10aa8bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd81aa6-3878-4719-9337-3db1e5281c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5d59d8-2f99-43b4-8b47-fd876860ecbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38421646-d26c-4047-a7e9-eb295afe3ffb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964baa95-2391-4957-85c5-d397ad5cf4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85560c1d-f940-4b1f-a389-0d1447d926b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49c82d8-1920-477e-920c-79df4a6f5874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458c53e8-cb03-4243-9798-51c2e2b3363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bc849c-c830-47f7-98db-1e98c883c24a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8201d4-2f9a-4f57-9b99-fd2f2f0f479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f64d69-ca71-4c7c-b082-3e986d514a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8231a4e-b6d9-473b-a9b9-d83d263c305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abc23346-eb05-49dd-aac5-4af60904fdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7ba37e-6421-4ab0-bce2-f7af3ad93b65",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d29761-4b28-4b06-819e-b9bcf1bd42e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee680984-5613-4dc7-ab11-6d777a7a9e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73c7a69-a2fd-40c6-964d-3bf81859f091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41edf83f-9f2c-4da4-9624-d80168328e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb25c8-d399-47bb-919b-49ae9a997e93",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ea14d9-c957-4bfb-a131-9c3e2a123cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38e8ce2-9043-449e-9249-52cafd9ba70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ce2682-843a-4970-880c-1932b9430738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e902a26-2d2a-47b6-be73-b943d8039a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3849c7-3e6c-4238-a273-8de5a4fe7057",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a869f31c-e4f9-4082-bf0e-45cad6b3e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15821c1-cf68-4fa3-a8c1-9c16e8e69cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4e77a-bfaf-4657-8d9d-81129e61af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd11abe6-4732-4078-b2ce-c09d8e707caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c9afbf-ae63-492b-8025-e03e80276f70",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a15a3f1-b91c-4ffc-a977-a9f89e9a2d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd2fe5-328a-4793-b838-6aee41b76acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38f0013-07e3-45b8-95e7-9337250bb43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a973a26b-5f85-4e3f-b815-b40fca316d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea480c60-9db0-46a2-803f-818497bdc58f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055d1779-0c4a-4586-8209-e0478b668602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b519e59-c263-4b59-a6aa-e44589b03050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b8f65e-ffd8-43d0-8d18-7dbba386b4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acac05c5-7d0e-4d2b-aa9f-a35d1e456037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8303233a-2649-4a86-9343-6231123a7d8a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc791e5-4938-419e-b1ac-5cbbffbae8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145b1c6e-0dab-4436-98b8-8f8a45d538e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6225666-b26e-407a-960e-8a6d48c1aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e57c9f-53cb-42cc-857b-d1278ef7b848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f4097-896e-414f-bdc5-010549890627",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d841c580-b7f3-4a39-8849-5808473f479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd5ce8-c522-4f4c-b6d8-7a2f34db3e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67693c6d-026f-409f-8786-cb7981d417dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e41539ee-ca62-45dd-8ef9-2a94fd4411d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bf209d-c0d1-434e-95b1-f2b30028d92e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b0de5-087d-4ec3-a137-cb011caf05cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87144601-ea9e-4693-93d4-aaa8375dc933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d11a49-1c4e-44b0-a087-2fe091401c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc2ccbb-e692-498f-b930-f3a620277485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaca9f3-0f7f-4d5d-8d53-239ce6ed0640",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bfda0c-af06-4f06-b4f4-5adb06d53ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d2ff58-8353-4ffc-95da-54f3ab486d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ad56f-ed5e-478f-ac66-7c4571c52311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3baba0f0-8f74-49a7-b0c9-607409a0abdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aaa587-3290-44ba-a997-2e2d85108efe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a639a4f-7d8b-4417-9237-38c1da5a199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1e30ee-21c8-4df5-a8ea-7de3eb73480f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aef5cf-5322-45b1-a517-44b8c0d93d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5c8215-de11-4b2b-acd3-af30bafc0c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136565c7-79db-474c-aaf4-aebf4e6f595b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d50fe6-8b4d-4a20-bd9c-b6787a6220c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ea2d91-d6a3-45d4-895e-f5c35a185144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef2c7c5-7252-49ad-885d-788f43c302ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2004f34f-cf15-486a-b896-aad6132907d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5570a00-08be-407d-911c-3bd5c593d92b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebbc04-814a-41f2-80f5-c58b6764f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7988cc1a-cd6a-4284-aec5-4e23b6e207d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f149086d-84bf-4318-a87d-e4a7ced8ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1ce883-20d4-4c92-882b-467584a0afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abc7e2e-a917-4d02-9ebd-c5db136643a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ca48d7-90d6-4d93-b1fa-7f9898f9788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5271506b-4216-4d10-8aeb-9155f2a701e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a8cdf4-fb4c-4aff-997f-647be9bb6cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69949d96-7fa3-4fae-8ee3-86ed80b37659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f56e0e-0c90-4bde-8fd3-70e9010fe726",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fca913-edbe-4486-b132-6508843a3ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c159287f-2c0c-42e7-93d4-05d0d92aa8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6333e1ba-1c1d-4e20-b593-e03ffe35b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "160bedc8-1558-4461-8770-d63bf7f6ad1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e4bbc9-acde-437b-b1bb-123282169f09",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74757ce6-1ce2-47f5-9a71-e42253267174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eafd04-b145-4cbc-a29a-a43446463f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cd360d-d732-49d3-b4d2-12912672827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda2a251-3be7-47b1-a939-fc85482defe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3475f0-74ed-48e0-9d3f-dbbc5b64b45f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1bd6b3-4d7f-4600-aa19-5043d8ceaa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5cd8e0-4941-4477-ba96-345a2c4cbb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c8b9e1-6de8-475c-9c29-67ce8717abac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a121470-a55f-4fc4-a335-f5b0de123f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2e5055-b1a6-466d-bb25-56fd1e45b5eb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4892b054-3c10-4926-b4f9-2711687b3adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca689400-ef34-477e-a775-f4dd7370ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33fa7dd-25a9-4938-9c79-04de4db0fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40268c5-cdb9-4536-8121-4fe846c167c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183c17c-084a-4300-83ac-68107b55df9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e594d49-88e2-421a-8977-d5d14419d3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0201b1c6-8552-4a1f-9a86-3009ef32d25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8801015d-52ef-4b7f-bf60-aca9733b5f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851eef02-5444-40ff-8425-de30c7c703cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78b8a09-f949-4b23-8bef-a9b6bf2a9315",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd0a1d4-73a6-425c-9841-70551831a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413cd9db-52ae-47d8-97f4-674eee17c3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda807d4-f0e0-46f2-a7d6-9937e7ecfa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d192d140-199b-408c-93ec-8f26eb12009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5809d-1ea5-46e8-b764-4dacf7c27bbf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e846e9-dbab-4190-acf6-9bdb8ebc9b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2e3d26-65b4-4483-b288-df0a91e0db07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f69778-3184-42cd-a050-cb34bac019f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f2e879-a0f7-4ec6-9ff2-cb26798d6a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88000a54-6a99-4a48-9c6c-2f1b6f2606d6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012c08d1-5876-47ed-9183-8a3aa06f7236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c266c1-982c-4d4c-bc48-69604182f105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f565c4-a101-4026-a7a3-501f24233ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a71df1-ccf5-4f4e-9e38-35b81602a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fd477d-3366-412f-9756-53a7f658ca40",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2ca1b5-0f71-4857-a8db-f3afcd1ef598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c435a34-31cc-4de9-bd2a-432c4b17e03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f2e3ca-e9da-4bee-b3eb-9b23732b2109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d755bdb0-5c1b-45f5-93a0-dd5b5c62bfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f3b52-1ac4-4880-aa6f-4ecf21019713",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747072fa-c83d-4190-a9f4-a22cc3673c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0483d9f7-e28c-43a2-a288-9bfc519ae432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e18908-7f41-4680-af41-0ffa8d60432d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3af5a3b-281a-441d-943d-2fd073c8ed7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f9b09b-737c-4d08-9ca0-389a157f81bf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab807821-cdfb-4ed3-adbe-306fb18fe0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b54755-3090-47dd-b2b2-7d116dc6d97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732d19e2-5932-46ae-bb72-9204529c440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e65f9d-a099-421f-857e-6bafc442a068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d175400-a09b-4215-9df3-353ba8cac942",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b3d53-1852-435d-9959-76f6cadfa091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103aabf7-e5ca-4bc9-928a-18e6f8113ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea617b0-a058-4f87-82d2-c5d838df2d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d8417d-9960-4421-9020-b946f54c422c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db907b16-6eee-4c2e-b35f-38f4948f9254",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1e0b9e-2595-4f99-84ed-84505479e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fe5b89-1416-4369-beb6-7c93a3e41faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d6241a-62dc-4f81-9e8b-383521fcc59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdfce24-581b-4b53-8136-877028270d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884d782a-453b-466c-b185-4a1bf86eda24",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af65c6d-727d-463e-9bb1-d58ba2ccf455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0197ee-4563-4327-bcc5-473f85567d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7ff935-f5fc-4121-8872-36d50324778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4679532f-ab49-449b-9ae0-64449acfdff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55eddc1-b959-4703-bf86-1a112d05d87b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3dd983-effb-4b5f-a27c-49e51b33aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404ad1c6-006a-4737-80a0-81b7c6b445d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd4562-79ac-4f88-8b52-c6aa1dde7918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ae082f-ce7c-409e-9e8e-dc168287a8fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3b531e2-a2d3-4191-8913-70f32f0e384e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c2ed46b-8ae2-425b-9cb2-a9a075bca7a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e717927-73b4-49d7-8391-fbbcb8a65212",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e887ef1-18e1-478e-90df-73da1989539d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b942d8e-b65f-4290-92ac-6d4a09d4a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69a760f5-1d3e-45bd-b861-b72d0cdbcbf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58bb24f9-d48e-438e-85e5-976cb6a73c86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "454ed434-2606-4bfe-836a-695e82ac99d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2298d0fd-eb7d-4f95-9d62-e98a3dde4620",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45d82ca0-8c76-41d7-bae7-62a2ed325ed1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d1c5e15-4691-4bc3-baa4-73befbf6061d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c313b9dd-b049-49b5-b553-397a0709689a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8248c6f-2616-4d39-8fe8-42bf39ccf743",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a16f4ca8-8a48-42b4-b4e4-0423c4fbce0f"
            }
          }
        ]
      },
      {
        "id": "8240ffa4-8aea-4783-b045-65b9e7a4c9fb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f630e735-6148-4dd1-b0e3-07384a1b5657",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffd7101b-4deb-40d1-abbc-e212bd5fb591",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96dde326-e8e6-43ac-9457-77d534159337",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db311684-cab1-41bb-80b1-66de5bc66b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b800831e-d034-403e-a82c-d3a2a2f24bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86436e8-0174-437a-8d71-40e6922c2aad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0535bb63-f164-474b-b5c2-154d9d0f3f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c046fa7-4bc5-4ce8-b411-39a5447cb587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ba86d-35d3-4f3b-bd62-5e15e594d78b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532d5471-e68a-4b63-87dd-c6c093b63e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088ee8c5-5051-4eb6-8505-d1444e1213dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d45b10-b016-45bb-98e4-2cb9216b1bb9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224aa379-8e44-487c-bbbc-f5f901bb4354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1b8e04-9b8d-447b-a15d-ee85760dbc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597ad780-eb95-4ceb-87ce-3323392f11e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cffd9c-a382-4aaf-8a8f-c159ad84483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dd061a-542e-4666-a5cd-ffd904edbb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20a890-8439-4bcd-acf1-d23393d8208d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ab4c41-7053-456b-983e-95d761eb61cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4f9fa2-85bc-483a-9d8b-e8fbcfbddb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b98b7a-bf30-44a8-b66d-c9671727d95c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777bf742-edaa-46f8-98bf-2cefff8a6b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c1e15a-2aed-441b-9d18-66ba9d8d8784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f6ad8f-e2be-40be-93f8-dc4d0d954783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b0b0df-0b7c-4f3d-a01a-0a8f5bf06187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a0e6e-f60b-474c-a3c1-cdeebe9c0b1f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f7374-b33c-4882-9ceb-b5c925c759fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887f85d1-24fe-4741-b0a1-f1308af9b86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e5c4c-cfae-4eb1-934a-21a9155e0804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b567280-0424-4316-8334-58c3ae8fa347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ed5fd6-7cfc-4b3c-8c0d-8f86ca2fae06",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f042233-2c3b-4c15-86b3-1b3569c6218b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07172e7d-169c-48ca-ac56-102dc8ba1bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3245da-a0ad-400b-8a25-e9d496ca56d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fec5837-b1f6-43f8-8645-04dd38d13907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a6fd71-4b4f-4b56-a707-d21783d3e293",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa4be78-5a2e-4ffd-aa3e-6b05e6aca89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa796c5-22e8-481d-90eb-3acb8d683040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc210ca7-8fd8-4e0b-8160-e2dcffb617bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281e7331-2537-4ebb-995e-d2964829da3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0f56fa-f569-4601-b95d-9ab1ac86acb4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f185e6f-10a9-44e4-8ea3-4dc8cd8512f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4dd438-98b0-42b6-9561-bca9354e5e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e6084-eb76-4307-984a-ecd3af900e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20850830-876e-432a-81ae-1fd71002f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55f0e4-5d63-47bc-b534-c60642131064",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b30818-9020-4fd5-bce9-16a1db4833c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b854b4b-e016-4995-aeea-1474f010d64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7a1ec4-00c0-4117-943c-a487823dad8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be811ad4-2df9-42ca-a2f4-ebc414d7bdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926e9891-f655-4892-944e-de42756b9619",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0da134-9880-4c66-b907-f21f604e23b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c3dfe2-8635-4d28-a0d9-5356da3640f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e92bb-34cb-4d9e-b00b-ec8547ad9e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44325e5-4523-4820-9474-cdfb6926d72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca21f0ee-bb39-4284-be4f-ea3b8713f825",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179b8155-09a8-49a7-b627-b7c790565b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c81edf-c781-40d2-b02c-6ab156d5ba7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776131d-8f3e-40ce-bae8-7d196d3f3da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c4a36b-bd14-4d61-aaef-59e55662422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a9289e-5ab2-45bc-9128-3706499a4239",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d13477-ab24-4f5b-abbd-261e6b536853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b12fa7c-fce1-4870-b515-b4f6209391a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6108839-7fab-4b33-821f-d374d2aef3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9d9ef4-8d7d-4be8-ae3c-572bc6bb657c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1179c8ef-d534-4d52-a411-e79504f34841",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841985f7-04b2-4109-bb5a-530def0ffd34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ef40e2-f811-4120-92c2-cfb094c37ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f2ac5d-0530-4c50-aa2e-b9236dee86ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b891913-f2d6-4a03-a9fe-3aa38fa08bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e1e086-6b37-4526-85fb-55bc1ecf5b1d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744c374d-e7d0-4822-9243-0123b311b435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f74f14-b6d1-4f8d-85ad-b30abff6dcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1e2a9b-56c7-4a1b-ab5e-8ca616edce7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844800ce-5c85-46cc-a648-cdbf4d0d88db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443ff252-ddf0-47e2-86fd-ff18df437d2e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8238b3bc-d02c-43ac-8043-bb2bcd492afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a254c6cc-2877-4094-bfce-892c16dddf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd477f4f-aed8-4baa-a698-f0d233a49271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682eca4b-22d0-49be-827c-5f82b176dc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14d837f-4baa-4cbf-a63a-cb7f99bae03d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48f777-165e-42d3-8e9d-942b8e2d6873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef00e84f-e6d8-4884-9f6b-6cf31115a546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c04157-c4b1-4226-a719-37f6bf775eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690d0633-815e-4184-a3f4-5b3bf721c8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06da1655-c25f-49fa-a05f-dd96a65226c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f055b44-04bc-4409-8593-e2f06ecefa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8401bee7-aa19-403e-9be5-43dd08b22788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b4478d-604a-45a2-94ed-09b0d8cc510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1579ae77-2bd1-4451-8f43-f0e57f27deac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c2010-f8af-4412-b8bb-c386b9c3bc30",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3d101-a44e-4ffd-9dbd-f3633c189a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049d5de2-3e4f-481e-9467-7198eaddf563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8685ef9a-9161-497c-9d9e-4b66857a2467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa0ad53-70c0-43c3-b591-fdf5cb445dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c84769-d3f4-4002-b115-fa61f9627ccb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5ce652-07b3-489d-9524-8efaab44da9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf978f72-18ec-49ea-ac7e-b86004806d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19c9e7f-bc2a-4330-9109-e97d9605c448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394ebc5b-3a65-4d0a-82d2-941d46ea8a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9bdedf-7fd9-4f4e-b83c-31a9159ea990",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38b5758-48df-4364-9626-67f53a756faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41933005-a47b-4d09-9823-db57090c49d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e19bd89-3b67-438e-b83f-2730012f2bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197f0c96-28cb-415f-a871-6ef468fdc34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab4c2e6-03af-416d-b0d2-92b5479feb20",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c7b2d-49a5-4f9b-8370-ef40d470988f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b34fba-5af4-4806-b6e4-28b9a7e63f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd151e9a-f0be-4a6b-bed5-7ee17a1f0796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a1382f-dbc8-454b-82d5-db7c5327f810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b966bd-2ca1-4293-956d-b9656dd140c7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4535da3d-6c11-451b-8557-ed009d6790e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323fd7e7-fc9f-4bb4-b6e4-f4d168996799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4a818-a8c2-4e2b-9167-7a6c14993dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef1ea83-5c56-4af9-a4ed-39711e19a851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59690ac6-5178-459f-9cac-0756bc2c0833",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65872ecc-a23c-46ea-bcc5-2b6b8e8addb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659dc0c5-270d-400f-a6b1-12796ae0658d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786fc559-6d12-4799-ba65-5714ebddafaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef599239-3691-45c9-b85b-33c1e310445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd1f541-1f6b-4438-b177-9eed0e5450b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739c41b9-45f9-4412-8709-1482f550dde4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011512e0-fcff-4382-870e-c1047a9be898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236eef16-58c8-44e2-9921-69ebaf94b5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16397ff6-13a5-4884-8f27-6af9018e7869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08b7c91-6606-483a-ab4c-381a848720f4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eff6644-7122-4e3d-a237-9b1880b42660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24105084-b4f7-4f20-8640-3a1dd54f30aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10550c7-790b-473e-a98b-bb81b0805366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26318a00-6090-4686-b746-9692fd4cf617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84286f8e-082c-4f14-947b-251d8b5f1715",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17958f7c-7406-4538-b4df-1bb11eb3341b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387cc177-86c4-48c9-86b0-b2a43f84f790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6508a19-a4db-4338-8bff-5d35c78b78f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5d22db-c4a1-47f5-a73c-4200926019f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce590e3-ab68-4709-b843-e98a426fadd7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52bf2f-b00a-4896-84bc-6d510b4988cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85f7164-fb82-4f9b-9912-53f35842d818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e9d21d-b440-46ea-821b-6db2bc9ccc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67baba5f-0274-4082-94a3-7ab64add5e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28076536-d772-48c0-8704-422a541c53f3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7b086-cdad-4cde-9655-01ce0935c663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d6ae58-77c7-40f5-ade4-98a4ccc53e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e1590f-579a-4777-bb84-429d4823dff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65319898-c6fc-44b3-8a9e-e980aaacc11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c7900b-9adc-4ccd-a486-7b229707125a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a1da5-fd27-4b35-b4ad-f015773f02c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29eac233-c018-42bb-8b40-ed954fb67edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b617fc46-ad01-43c3-ae9b-9f6b19d9c053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43020c22-b9f2-4a94-be90-61124d954fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab45bbf1-408f-481c-bd48-9ca21a108a22",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3eee80-7e6d-4c57-a804-3ffa3392192f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60486e6-d91e-4591-a6c8-d9df1d039afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374fcd60-5628-4715-bb33-ef80865164eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541c77a5-719a-48ee-ae38-a7d55f9597e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e895f5-4a34-4557-9c05-bad26c746dea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c5566a-82f5-4abe-a23d-add80bbc1dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47be0cb4-68a9-4b2f-9215-1781181d4665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12282e43-12c2-4236-8924-ee8070b37306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfab0a6-be6b-4dd2-8da5-65669d37cc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c5ccb1-ac46-453c-8960-e6c7ac193391",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c9fe7c-a389-412e-bfad-a04f1f3ff01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995a9f5c-2e18-4e17-b5d6-66c351e312a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ac57d4-7c97-401b-8935-64cb8338a72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5460a4-5d77-4324-aeea-82edb3cdcc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50733538-0af4-46db-9141-a327c6901647",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce4fb1-5ce6-487f-8c8f-c25f42ff39f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d66286-4ba8-44cf-b657-d08af3847230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f95db3-e990-4a39-b081-b150db3b6129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7697726-52ba-40bd-89f8-4cc573cf4db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2a98e3-caaa-4cbc-a0ae-20f1c507f83b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021a045c-1586-4a53-ba92-503300bf6b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a07b327-f852-40f1-98f0-f850619c1f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4976e3-b90d-4d73-9e8a-7b0cfabe7bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6cf8bd-ef06-4d2b-9545-f3a37dcdefa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f41cb7a-5526-4976-9df1-027a6eb89131",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5e77f8-121e-4c87-aeac-6d6e82ddcdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b029c850-7688-4ddd-beab-aa9fe4fed5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbbcb56-90bb-459e-adeb-3b219d618c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a975f18-87e7-4004-b455-3ef0d7181b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38578adf-4974-44fe-828c-170e30f4432c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7742aaa2-2f20-4825-94fa-08da4b82e67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489d200c-bac5-4d93-aa62-15c335a5be93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae4111-09b3-440f-b915-f704eae53bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78370a7c-3249-4a1c-bbab-9eeaa5417f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb054f-92f5-4199-8568-3c06a5a8a8d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a0769-9b7a-4405-9f03-c938d1765fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab5922c-33ff-4754-8840-07ba605055c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7febfba7-02b3-424f-b7a2-bd765935777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b12aea-7c35-4bba-b721-1033e8ced0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510a70f1-0154-49aa-bcc9-dcd4e540a4e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408146d5-7d0e-481b-a9ac-af1012086b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c82165a-e75c-495a-aa34-fda95801cd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08d11c-c61b-49c5-a609-f4cb84b15390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb7c6ba-7566-452f-adc8-0b461d789d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4246096e-081d-41da-b70e-2c6b376ca454",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6159e3fe-7789-4dca-9fcc-05f47c612d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac76b54f-41c4-4083-a1ac-05d445e7dc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb01c119-0de9-48ab-ae50-d7d145a1c6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1336c50b-7112-4f3c-9a6f-561e0ee50217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43ac968-64f5-4c6e-bec4-646cf6cbebb0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94378a5-3050-404a-b4d4-14bfba6e7b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0651a2-b8bf-4371-88e5-fc7e5e227ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61acc56d-1a92-48cd-a200-dc3ec5a811e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ea8e8c-5661-47a5-a359-2691baf01633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772bc2b9-3b65-40e1-9f73-ac1a252c2cc5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53535aa-1a99-46ae-a9c7-489396d30961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c07bc7-2de4-4edf-90b2-783586cb1549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac2c743-7beb-4082-a29d-9aef7fae0ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcf1985-faa6-4f23-9b7d-ed19f352573e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff7842-2b19-424c-8cef-f5b4b8369a68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3785034b-73aa-4a66-9f6c-8519d3ccf419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a0843c-00c2-4566-baa1-d8d1070a74d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953cbd23-5159-48fe-8426-dd0725a32550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ee4c46-abd4-45a2-8e97-8a2f1f9ac86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346002b8-e037-46e9-8a03-8bab3194ad86",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81494f53-fe82-422a-9fad-ec97149e9988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7233ff58-7a8c-4a7e-8bfb-130e9515f7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371c4b18-be85-4eca-abdb-4a1f031969d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f3da5c-1cb4-4014-9423-b68578f327a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016f858c-14ff-4b0b-b958-b0f76273a728",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd7f31e-5d49-4fff-870d-5c0522eb7813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a03bc13-f001-4ab1-8f63-a23fed784f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfc3d58-d172-4a4a-87f6-92b29b38d41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6f643a-0e7d-4fa8-9658-ca42be215e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6e5263-af7e-446b-ad15-dcc1b0fd1109",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88a5e87-2ade-47fd-81a9-35da32d7c659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0de581-c7b8-4fd1-ae9c-9583cfff5a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7276a5de-e1e1-4ca8-844c-a75a3cb0c06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24163cf8-bf70-419e-acf3-356e97a69044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5296ffef-bc95-40a5-8649-fc647959fbc1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831fd71e-a9c1-4bbd-b501-c8f5fe4cc6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553bb88d-b13e-4bf7-ae77-5d68d8314186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af29e2-597c-47b3-b116-0e302cbde75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d865644-a5b3-48aa-b8e1-7a00c66d7780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfd6673-58c9-4966-a4f3-8116a97c2ce8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eab094-28a1-46f8-8792-30df22277066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7c618d-e8f9-4e97-ab49-27bf5896d09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29faf74f-7546-4437-95a1-eb297fb13b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6028393-a5bd-46dd-a77b-9b1086d21bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec3d5ac-4ff3-4c68-84b7-0eaec1586f7a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febf0b1f-dd9a-4cbc-9673-df6e11b9477a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4f6e2c-bd28-45d8-890b-5c4a2f2ac047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c18b22-687c-414c-9fcb-744e48938efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761146a2-17fa-487e-95de-338fc1b1c528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517b57f3-2b05-45b8-ba78-7972262961dc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d1dab3-6f0e-4336-a1a1-09a57d4f30ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d7abf3-d8ef-4982-8ad3-4fb66b7228d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadf25f7-73d4-4cbf-a8ac-6d77cc9ac6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f48465-4859-4c36-8714-c5b33ffbdd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba8025d-3606-4087-a242-a738ff4fdb46",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297bac25-df3b-4357-9b19-b171fb29870b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9829d6ff-fade-4bfb-9315-64dbf2c3d57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c39d94a-c963-4d3a-902f-8626e76c4b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6c600e-33fe-4f5e-8eb4-5845ff3a5e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c848ddf1-09b0-4aea-b600-9a5853ed5743",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b5d537-f9e8-4d66-9524-3b6f8246f10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fadc741-d857-4d0b-be99-e853fa80d2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2937975-72a6-4cf7-89ef-9f2292bc80d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaf59b2-82df-4ebb-b66c-406e31e9044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fb4a04-0203-409d-9286-fab9c861b50d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044aad27-50d8-4da0-9b1d-2f14151da119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf16c5c-f303-4a08-9ff2-6a579ca24135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf2f53c-884f-4a56-ae1a-b4b961912fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76234cb-5476-4794-9b2b-33652cddaeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b24dc4-d404-4d3b-877c-cc97eb9d6191",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f1b8e0-5617-42d6-9e02-de5aa678de7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42978e41-3f6b-476f-9f73-6524b651e5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ead92b-ee93-40e5-8dd2-9fcc7a428a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fceb3c-4f5c-48ec-980f-a9d60c863a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733e99cd-c044-4a81-b146-5e2968ffc98c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332ca0cf-f108-4daf-b010-3574aebd2d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8950f3e3-2921-4115-92ab-5accf675c4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cad8ba-d5ad-4188-8f85-0db9217361ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03f18eb-bf26-45aa-8105-5a68f10686a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c3c47f-b1d7-4ac8-8b39-b85e938bc96f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fcd801-eae4-4a3a-a130-77c314732a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2e422c-4275-4001-b484-8a6d81c1b3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26af836-00a2-49c0-b298-c70181ec73aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3355953b-24e2-46b7-bcd4-44050d178812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81782915-915f-45fe-8708-7d6b8b9a97e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9910d3b-3074-47be-a6fe-c11006f334e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9177966-1400-447b-97cd-825604f3422f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c648de-535d-4333-86f4-4f7f0d070753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf895534-716a-40b9-bd54-c246426c2ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ede820-fdbf-4304-a982-db6c99dd2106",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bb49dc-f15d-4e37-a9de-c483bbaf324e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc8726-7de9-43c5-bd38-e96478f5f033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f786039f-ad8a-45ae-a9f6-177f45689c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea39230-44b8-4bbd-8b8f-e2d4e327c76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ab2c0-a2f2-4799-8a5e-eaecd94cc314",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92ca15a-2e83-45e6-ad17-db9ad53f98b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4b6acd-9168-48f2-831a-ec9a89793078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd366e20-02ea-40ba-afb4-66e55b5eb9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4fd408-a1a4-4051-a9ff-633ef5ae737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c8eec4-9efd-4774-8b93-68a8aef2f776",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814c3ecf-f82e-4dea-b673-7a49a2cdd57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbae420-e63f-4ea9-b556-158bf3e9b570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e5cd1-3ad8-43f8-8bf2-1e7465b7372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bdf6ef-79ec-4f6d-bdf1-7c363e491771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57196928-cd0c-4497-876d-d37914826beb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55749d45-07f8-4c40-84f6-d82e954c660d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d08a9bf-cbeb-465a-a185-cafb39baae87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee87c32-436a-4e1d-aad6-f0f194be4721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5fb2bc-5186-47d9-9e2f-ae7da304a8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb107a-af1b-41ed-b92f-c8818831499d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37740f-733f-45d3-9bf3-9a7ddc795176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9635f485-93a2-43e6-aa61-a48aaca3f864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f264891-016e-4f9c-a092-8b1221fa0a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f93b30c-f587-44bf-a1c5-3eeb5275cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d48874d-e909-4418-9091-fea9f73975d6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0842d3-3669-4a79-ae35-cc590667c58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9d50da-4910-4955-ab9d-6615a5d8c684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27a7086-1270-4035-b71e-9ccc052f07ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d867fe-61dc-49b3-a0b2-3a4a3a081f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40394126-0cea-401c-a30c-9dc58af4f388",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f6ca9-e136-4b08-91c3-ae516377a120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f8ace7-b2f8-4ae7-8841-c7366d5ea016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6716face-a5f0-4fef-8989-4e7eefed88b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce48c2ec-0b2b-4a4a-9fd3-28fb16171e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644c80f5-0b03-4852-8ab9-aeb6e882fa13",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a38c3e-ba23-4458-82f7-a41daa938862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32423851-f5cd-4d89-ae89-a81fe82a4fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa00886-3f99-4f1c-9d1c-63642dc1e15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6490b2d4-d354-41b4-a5f4-a7e0301060da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ccfa31-efe0-4de3-8fc5-77e9ea3f89e7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92df9ed-5652-4c70-842c-ddec750428b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90694ff0-8480-4d62-a21d-6d16087d2d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1e75ff-6dd5-4c78-bfdc-e5717726eaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d11b99-7baa-4435-afbc-56ba6ca3c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f5b52b-524f-4cca-bf7e-a7146b16b259",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d03336e-97a9-4811-bcb9-9436f58cadae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2bd3fa6-c6ba-4bb8-bff8-c5dbb27490c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d8c1a3-d717-4827-b77c-6871b2a1b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b1de34-0330-4ac2-9a19-426362235f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1c3ad1-f8d8-477d-b1c4-e9550cf23cf0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c241577-878e-4f4b-9913-92c36b40d943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16bbc61-1123-47c2-b853-48929b1289bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc1d3a2-4163-4d1b-8ac0-9fc0f1942a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5aa30dc-57a7-417d-9545-7503e7e0a243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77180feb-15f4-470c-8be3-7d75eabd54d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3474e6d7-de41-4773-83ef-fc97099780e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f95e786-77b5-45b1-a6f6-75ef38565699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f20a7df-b9ef-4780-b886-68d1f296a808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b556892-b25b-4ce5-a416-b6149a7e4913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1bf1b9-aa1b-447e-9a57-f4e00857b553",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602cf6c7-543b-4dd5-84c7-6cf15babf5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f126f660-95ce-4c09-966e-65c5b5e9c89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53836e5-eaf5-4c95-b148-79f519da59be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34add5d6-bd53-4d6b-a7e6-54c300e7c132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7327dfc-2e35-4e05-aea1-e479762874e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a92f7-afdd-4529-a502-b63153cf0ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3708a0-cc29-4b67-91e2-83b9a6bf5a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf5a72-dca8-4135-ace0-afa989643a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245bd48c-42ea-472e-b120-c8f5d292a3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6ec1c5-d04e-4eea-9f07-3ba209b89c4c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f500744a-ad12-47f6-98e7-3f6587b8081a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52bb2a9-1a51-4471-8864-da6b339c5c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15474b36-8216-438b-85bd-cd9a4f105e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8d86c8-4f72-486b-adf1-672642b96b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad877447-ad0c-47ba-a0f1-6f3bd311ae87",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba17ff20-40a3-4e7d-983a-02f30c84375c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef24d0a3-95e6-4d83-8015-cccbf136b3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee633cb-7e67-404a-9a8f-a06a65bf08c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb95923-ccfe-4f37-89ee-95dd5d76070d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24396cea-a763-493f-9745-4ef4959535be",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573ff96c-40be-4a22-b0a8-231335609f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b047494-a6ea-44dc-ae8c-2937783f222e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e45f1fe-263b-497e-8377-0efb23cd27eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddfe164-98d2-46c8-a7b3-598f2fc1cf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350e837f-ba03-44ea-9d57-ddcaa1196808",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d492b4-6945-41ea-95d3-582d062b9999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96c95e8-ba76-4cdb-b9cd-bb596c4f36b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdcda8c-859d-4145-b4e9-e9e05e11dab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af01ec7-7b8f-44fa-b697-469012751fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6787a37b-83ac-453a-9666-a95df87786ee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf678db-4a55-4648-99ce-c012eccf3cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f1cc306-71e5-4377-9e01-c7cf8eae5788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32c4a65-e339-4f96-9acd-5bd5f6a575c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76aa6752-ca20-4cfc-97b3-ca29a08165dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e635402b-87a1-4d8d-bea5-fba04a6adac2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bddfebb-448e-4957-b4b3-269f4eff926c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a088758c-4cfd-476a-8d8b-c7405bb17c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78bfcd6-39fd-499a-9a17-c3ab800650c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164b4952-079f-4257-8c04-d3b69482a797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2099fe36-f486-44b8-ad00-b172369fa47b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0f27c4-4af5-4f79-bf1c-4a4e7f77a779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d699072-2216-43f7-9c94-98ef2a5762f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77098723-c550-4be3-ac19-836708b74349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646c68c4-9a22-472e-8e1c-59aa5a4f29a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24450446-c711-441c-bf42-b91b22a17c42",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3206945-da02-41de-b77d-9eeb488e407a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e1b381-842a-4a17-9a88-427ac43d243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bd19d9-4370-48b9-896e-bfef9fc65408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89c5cef-98fc-45ad-9e65-9232c09d7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e9491a-2715-4003-bc7c-b366b1deb90c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569adf00-d722-4d44-b423-860cd45b17ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8461f1-b858-4738-b159-4bb64f5b3b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36c97c-e78a-4ce7-a49e-abe5b957ee1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adf31be-5e57-4f34-9c25-7330a27011a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e92f23-bb8f-4281-8342-9c5d0b0d4fcd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a138bd5-4cba-4cdd-8b50-e377115f5b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b664329-0f9f-4aae-8426-870bc14bd56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c5de4c-505a-4761-9884-ccc0b495f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7849d9-5c6f-4d9d-8484-88bc30b24331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72efbf6-05b1-4a33-a7e1-b5bb036977b6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c337e0-25ee-4be3-98c2-267eb8c68d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74865f8a-e9df-4f3b-b4ab-2e1fd63a3b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb8373f-5350-4d86-a491-1bd5b426ff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4e7330-b083-43bb-bc24-9d9f46b18f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1b6d76-3533-46b7-a978-01b937eaf1f1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db81b2a-0f80-4aba-b6d5-2ce63cd68a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636e7d59-631c-45a3-9cab-6186ec1fa202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e38152-8a16-44bc-b8fc-e732bca58f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2beba7ba-7379-49f0-bdc1-6850dbe8cf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60daba56-07a4-4e1f-907a-2e8e9c2a9efb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5bafe1-9019-4118-a2e6-6e329987adbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d677643-9d51-4310-a16d-c90bf908157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc94562-98c4-45db-b66f-110e76d8e2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae7c830-a5b7-489a-b271-536a20ed2673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d856e6c-6c6c-4a87-a440-7efb8d2b34da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454e4b45-aff5-487e-8a36-a337ce128de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00226fb2-7729-474f-9115-dd1be96c40e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68428b58-3db7-47ae-9d48-04918265079e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230a66c5-8859-446a-bc83-8332b94865c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb8e7a6-47ff-4ff9-8478-6dcb02f5eddd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b560e5-5e8a-45cb-b084-5f789fef7962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0028606-2401-4fe2-abbc-39f02123dcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bc8073-a2f1-4876-a246-7c2605fb63bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5a2693-102f-4ca9-9184-73ff8fd094cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b402eb-437a-47af-9428-cde1de16c84c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4d81e9-a93c-48da-a797-1e20a52b211d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683d8e90-5b5d-4661-9092-e5daa1925d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959ac7b3-449d-4310-9ba0-628ee63c3c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f23750-d974-44e9-8e28-7b5e49742995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67f4b68-195b-4c91-800c-2ece6c1e8eae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6748c6cb-7bf9-449a-9d9b-eb8a9a957eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beda7bf6-cf64-441f-a4ca-755a73c5a092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648218da-57e5-4f10-8718-233f883187d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2352f57-0e18-4fbf-ba3d-78727f368543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2ebc2a-11ab-4097-b73b-6311acac4dd1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc47c53-bfd7-42d2-8ff6-5f4a817e8cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd2ff6f-1017-468a-9420-6a42281badf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb11059-f58b-4519-97bb-e4d15e7f655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b223268-a1c5-4c5e-9b8e-50919417c798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e470e86-d89c-4334-bfd4-8e3c064bf0f9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab8b8f-2114-4d41-b32d-5991e576d384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f656bc07-a27a-4851-ab9d-d5a21285d916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f3f1b6-bb5d-4bc0-b725-6ff1d81a6f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de768010-0771-43d5-90a2-cc50b105b0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cf3709-4cb8-4f0b-ba2e-5826021abe4a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8914c55b-95f4-4025-87e4-546eb5626292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1a24a8-01b4-4990-8eab-eea5ace1c59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f702c444-2ec3-41dd-baf1-4e1d8b79a152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01290a08-51d4-4dda-86f9-7ccb5356671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f980dd69-636d-48f2-80e9-9ddae99e3ff5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462be6ac-d07b-4339-94ad-dcb6a978a254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37896d6e-3171-4aa5-99b6-efb3fbd58fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59135c3-bfc7-4ad0-a776-7b23e68c0b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cd363e-4447-480b-a14b-3d5d4c9235ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46495e15-f9f8-4db6-a92b-0cc86ad9bfab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e1abb0-ec9b-408d-96a5-aa7871e63975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f8b594-753e-4f2d-84c8-8564255ba453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e291d7-150d-4110-a3df-501f87fdd560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260b3e15-716a-4ba9-932b-06b46acc19b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5a6096-4450-4654-9fb0-970e18fae38b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ad5388-295a-42ef-8a2e-ed27bbb38005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cba0ed-dece-453f-94e3-9f0aab8ed3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c6a58-03cc-44c9-a287-ba7d347b3559",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bf1b24-c9f7-42ff-bbf7-d23f4a999c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c67f3cd-e0bf-4e26-b26c-bf4035023b5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d5acbe-f44e-4b37-95db-9b29b4440c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7350f1ac-470e-40e3-b32a-963f7e6704de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774c3d3a-6875-470e-b015-0a12e2a49b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3c52fc-4e8a-407e-bfce-7fbff12d8045"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "974fff19-0b92-4d03-8915-48897ba89ddc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f15eeda3-5d8a-4de9-81c3-61c2978b72c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d582f0-7cc6-4173-b20c-6263dbf1e72a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d66bd32d-932f-492e-9ea7-6383ebd49938"
                    }
                  }
                ]
              },
              {
                "id": "5310090c-cc8e-43a5-9e42-704cd68ff17b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53b29781-5997-4224-a611-a3c0a3377b92",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0608eb-ab5d-4052-b780-14201f48de56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a576b719-bfb3-49ac-84c7-9da7fe8ad30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634072b-49cd-432c-82b4-cdabc90a5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa634544-c3d8-404c-a844-ed5128e73e3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f2c4624-1f51-49fe-bfd5-dd4723ed2213",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6abdaf08-633f-4402-ae26-f29624150f1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "119a3d84-cf25-4986-a9eb-f72f26825322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad223c9b-e18a-433d-867c-54fb36476126"
                    }
                  }
                ]
              },
              {
                "id": "7172e115-cbee-4a7e-b1c5-2da47be82ead",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23a36f38-b3f5-4473-96c5-3f10271add71",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af393451-de0f-4645-9fa5-0ada2cbc0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20311f26-1812-469d-826c-f2db51a1cba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4498fc-6969-47da-9029-316a4876ca2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e855fc6-6aee-4f99-a35f-9c90a7d55c92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1af6ebd-33b5-4739-bb2a-02b8bb9398ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8fdc1d7d-46bb-4eac-a58b-e29f4b0f2ee1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d76d12f-86ac-43a8-9042-491e96ac2993",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61652011-1c01-4a4f-b3c3-5d5f58045e21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d4fcb35-6c45-4844-8ce6-d811d1b05084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49ac65cb-991e-4c51-9963-06c24703ac0a"
                    }
                  }
                ]
              },
              {
                "id": "6bdd88a3-eb7e-4762-b053-2a492d6b4335",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68f3470f-3dc7-4a07-a0fd-c695c1fa02ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08145b5e-64dc-4e53-8ba7-f7fbddc03b3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b10f18-5412-4785-ab24-147191e15186",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81e1df3a-5c03-427c-a281-b5038ba05cf9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d2342d7-7d21-4a4a-91b2-15753adecc48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd18238b-ef9f-4b90-b97a-90e7b24ec95d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e5ff848-6eed-496e-9dc5-6f98cd462a16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "079d6274-eb0b-4c9f-972a-6a102d8c0f2d"
            }
          }
        ]
      },
      {
        "id": "47950cfc-5f5a-4390-a392-8780f2bfb7d4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7730fe97-51ba-40c1-9039-ab50dadd18c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05b2da54-2989-4366-aef4-39c708912780",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92c87fed-bef1-4d21-94bd-8f959bd61fe6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db59a6-e058-4521-8fa2-20bf9143d164",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1281fa49-0db6-400f-9d8b-3f52ea095ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f64b2-7095-45c4-bf4d-6ccbda050c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90c533b6-7246-4dbc-86c6-dd83fdd2285d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4981886d-69df-4a7d-8f82-5c95b3953581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbc7ef57-60ad-413a-af6c-d89cb6167ac0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7efd83c9-9250-4d80-bfdd-f48ee1175397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42133738-52ba-4046-ac77-ed82db965f7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01d14f32-0731-427e-877a-b085c0749178",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3bcfe5a4-4ceb-4876-847e-e65b98f9a51a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90e7166f-338d-4dea-bf76-9383426b45a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f61a844b-cbbc-4947-8949-b114c5e67f47"
            }
          }
        ]
      },
      {
        "id": "5c915ea6-d85e-4770-87a9-0058670eabaf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4b00c6e5-6c03-49be-91b6-2a7a612e0821",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1152c983-6e95-48b9-808b-ac4eac77ce8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "389e82af-e4e1-4a70-8537-0ff2c009bbd6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2a1021-d362-41b1-9fd4-2a2aeaf78e1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3607109-21a2-4205-b490-9640c2528d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46501ab1-27b6-4b9c-9533-54d9729c3a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e0c855-5e26-4c18-a83f-9207dec08807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e61a852-6846-402d-bcec-1b0bcf96d98f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88f9b9d7-decc-476a-aa0b-2e2bbdb980ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2fa3b4-b121-4900-89e6-620b5dcb48b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad2b7f65-1df5-440e-8564-6308a56e3e2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16273968-88f8-49a2-b5ed-1ec601384513",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a305ce56-b88d-486d-bbe6-655cc9ee4230"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9acc6f1f-c48f-4636-976e-5e0603c85d52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c22e6153-b26b-4e8d-bbbd-8227463bcb62"
            }
          }
        ]
      },
      {
        "id": "5bfe4d8d-6150-41c2-8e3d-f74db6cb9247",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9c604912-008e-41fb-a303-ea1c3586b8de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45798bc3-07c6-4d15-8622-6ebe2980dbb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cf8d893-270e-411a-a050-cbbb49611e20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a3f0a1-e305-4bf8-884d-1bf5f74a9bd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ae3d13-4aba-431f-b6cc-00fe8c50db99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeed0e9-dcfa-4c37-9bd4-dfd234b99bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee1fc255-a458-4419-b37f-fab4eccb4091"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7aaafe27-6412-4f38-9fbb-6465c2afd833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa9337aa-469c-4bf8-9c7f-5374555d1fc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca45c7c-7507-4a14-8ed0-a2a6eb78d1cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37864c1c-165d-41cc-9cc0-2d3d14e803d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d093853-5df2-4cd5-af00-be8b945e024f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "141755f9-5bbd-4d11-98c4-95e9f29e2a83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c789b2cb-c91a-454a-845d-ed7288c05688",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61596d81-0c80-44a5-8119-caf6b0b336c8"
            }
          }
        ]
      },
      {
        "id": "96ec8824-053c-4597-a4d5-055024ef9bdb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57607956-7c1d-4012-9279-6b4ea289d2a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9603285e-7d39-49c3-a5e2-ab064c78ab5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e907f123-0f6a-41db-ac53-eac12af06142",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfaa154d-9518-4fca-9e08-68ff87dec83e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fc29d14-1166-4a25-803f-4a714b348db4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.235772357723576,
      "responseMin": 4,
      "responseMax": 334,
      "responseSd": 32.797873543208695,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687135321539,
      "completed": 1687135335356
    },
    "executions": [
      {
        "id": "724a8dca-8c7a-48ba-89e7-336b22a36689",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c7085cd1-34f8-4896-a203-953f6a939f7c",
          "httpRequestId": "40695bc8-1842-4893-98f7-ee43c90e89b0"
        },
        "item": {
          "id": "724a8dca-8c7a-48ba-89e7-336b22a36689",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e774412b-e08b-4c64-88e8-b4eaee779af6",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "36b31258-6457-4ad9-b1f7-fc5cf98b256b",
        "cursor": {
          "ref": "afddd636-f04d-4899-ad4b-99448cb231b4",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ffbd9a42-5e8b-4726-8550-888e2cd3ad6d"
        },
        "item": {
          "id": "36b31258-6457-4ad9-b1f7-fc5cf98b256b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "86454624-a535-4a51-bb7e-8fc969c87e1d",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "d57304d4-1948-48ab-854a-7d4e44d82905",
        "cursor": {
          "ref": "65a6839a-ed67-4971-9160-84ff5e2b2b6c",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84daf21a-069b-4f40-89f9-23e66a84b1fb"
        },
        "item": {
          "id": "d57304d4-1948-48ab-854a-7d4e44d82905",
          "name": "did_json"
        },
        "response": {
          "id": "cc9be5a8-bc5f-4855-a571-19c4e023bea1",
          "status": "OK",
          "code": 200,
          "responseTime": 334,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aaed80-b652-4e71-b3f2-b9c30637026d",
        "cursor": {
          "ref": "d37ea4d6-2740-4a39-9f66-2c32953bd50a",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cab03a26-7157-4251-898d-99d02de4b2a9"
        },
        "item": {
          "id": "35aaed80-b652-4e71-b3f2-b9c30637026d",
          "name": "did:invalid"
        },
        "response": {
          "id": "61b694bf-3ce0-42a2-b53b-0fcdab6d3655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aaed80-b652-4e71-b3f2-b9c30637026d",
        "cursor": {
          "ref": "d37ea4d6-2740-4a39-9f66-2c32953bd50a",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cab03a26-7157-4251-898d-99d02de4b2a9"
        },
        "item": {
          "id": "35aaed80-b652-4e71-b3f2-b9c30637026d",
          "name": "did:invalid"
        },
        "response": {
          "id": "61b694bf-3ce0-42a2-b53b-0fcdab6d3655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0759a88a-39cf-46eb-be4b-655520fd6837",
        "cursor": {
          "ref": "a8ebb998-0a14-45fc-a00b-d727cc8a0b5a",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d0443fa3-0ab4-4467-b03e-7a7e946c68ec"
        },
        "item": {
          "id": "0759a88a-39cf-46eb-be4b-655520fd6837",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8b2cb56-f499-447e-98d8-e8cb81782a15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 313,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68a7be6-57ce-4b02-8fe5-f5454c57405b",
        "cursor": {
          "ref": "54a33c8b-c12d-4ad3-84fb-b3c31a40c85e",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5ba960d9-21e9-466f-a3bb-70372bacd7f2"
        },
        "item": {
          "id": "d68a7be6-57ce-4b02-8fe5-f5454c57405b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8347b549-1e37-4acd-ab02-062ae3204cc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cae615c-319c-4fc0-8d01-1c17bf7c81be",
        "cursor": {
          "ref": "e12e2623-981f-4874-aa82-cde50bff1e15",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "21ab46a0-e171-4ca6-95e9-ee754c8bc851"
        },
        "item": {
          "id": "9cae615c-319c-4fc0-8d01-1c17bf7c81be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e38649ed-ccf1-4d59-aa97-7dc492775697",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a397bec-5df2-4bb7-9e2e-362fc6d06ce2",
        "cursor": {
          "ref": "d444b1ec-660d-4f45-bd1b-67cdb2656ab0",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a8b36fc-283d-4811-9784-45c1d88f48d6"
        },
        "item": {
          "id": "6a397bec-5df2-4bb7-9e2e-362fc6d06ce2",
          "name": "identifiers"
        },
        "response": {
          "id": "2cb1f499-b0f9-4e33-9221-a03c8baac90c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8b4339-5231-470d-8a7a-ebf0eb0352ec",
        "cursor": {
          "ref": "95a14b92-d424-4a63-a640-c30943c4c23d",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8af1af8b-2057-4ac9-9476-fe1be19d0f9f"
        },
        "item": {
          "id": "ae8b4339-5231-470d-8a7a-ebf0eb0352ec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eb08a166-9a56-45e4-9c6a-b323cac2ae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d309c57b-f447-4466-821c-403cd5ed9877",
        "cursor": {
          "ref": "f8a72a9e-61d4-48db-9e17-65a6ba596744",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c670a334-753c-489a-822c-310f548456f7"
        },
        "item": {
          "id": "d309c57b-f447-4466-821c-403cd5ed9877",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5129bcd9-9287-4086-944f-14aab9d80267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c8729-f057-4b7f-914c-6cdb336d001d",
        "cursor": {
          "ref": "e77057d1-1912-42cb-86df-74366d2406d6",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2714d066-1e8c-4b92-92f3-9b6b3532c573"
        },
        "item": {
          "id": "619c8729-f057-4b7f-914c-6cdb336d001d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a4b1f06a-8aab-4330-9dc4-285ee4f23848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d754b492-efe7-474c-9063-0a3922086478",
        "cursor": {
          "ref": "c87febaa-a64c-4bdf-8020-29b828acd5c2",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "25ee568b-5018-474c-9c2f-ce691cc168e5"
        },
        "item": {
          "id": "d754b492-efe7-474c-9063-0a3922086478",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cc00d503-05f6-4708-a60f-a6805a1c1762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed432a-8026-4371-8740-3bdd21114994",
        "cursor": {
          "ref": "573f2820-dfe1-4b19-aedd-9d56f01033ae",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7b36912b-7a75-4fef-ace1-59bef834a5b7"
        },
        "item": {
          "id": "4fed432a-8026-4371-8740-3bdd21114994",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "97fca1f2-1c20-4ede-acb7-2ffcb1065e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1bf542-da79-407d-a47d-7377f41e7278",
        "cursor": {
          "ref": "4343f425-fea6-43ae-90ac-578f060ff8e2",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3bf1e67-dfe1-4ec8-a64a-dc9b3311d617"
        },
        "item": {
          "id": "4e1bf542-da79-407d-a47d-7377f41e7278",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "03e0c98c-783f-4ee1-a947-9e96ceada434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c6c65d-274a-4356-856b-757c7437b877",
        "cursor": {
          "ref": "3042928f-b285-4cab-8283-1815ddad8aba",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4106c072-ee52-4465-9848-abafed2975e6"
        },
        "item": {
          "id": "77c6c65d-274a-4356-856b-757c7437b877",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eb6c26ef-ed36-489b-bcb1-fe0be14c6f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e3101-e3f1-44cb-9c6b-ddda720e6fac",
        "cursor": {
          "ref": "137fe096-58b6-46fb-9183-06230d4a9971",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "34470ec0-bcb5-431b-98de-c33c05d3d561"
        },
        "item": {
          "id": "ae9e3101-e3f1-44cb-9c6b-ddda720e6fac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7da7e926-8f58-4b29-8a5c-06c652b7be0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1da8f05-f794-44c4-9465-df9f119207fd",
        "cursor": {
          "ref": "5116683f-5c24-4eb7-ae50-822a584c39e2",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1042fa1d-9c47-4702-bfa9-fcd23db11290"
        },
        "item": {
          "id": "f1da8f05-f794-44c4-9465-df9f119207fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7e41761e-949d-44a0-82f5-3b499cc57561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8632d17c-20e3-4a72-b797-d2c43e679773",
        "cursor": {
          "ref": "caa81b16-c19e-4322-928e-6bcf60bc16b4",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44ecc6b0-572c-4da9-ae30-c74d75cbc3d2"
        },
        "item": {
          "id": "8632d17c-20e3-4a72-b797-d2c43e679773",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13741ab4-05e2-4e80-8a54-dd4ea4f48ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ed4e3-4c90-43ed-bec8-db62b92f181e",
        "cursor": {
          "ref": "231b0508-257d-4317-95d8-946f63f1ffbb",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "29501ebb-0724-459f-a743-d6a71092a972"
        },
        "item": {
          "id": "b30ed4e3-4c90-43ed-bec8-db62b92f181e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dc91dd7b-5bea-42bd-82c4-a9a655ff5f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea25f3-5dfc-41db-9ea7-7b44afbbd288",
        "cursor": {
          "ref": "4b4bb0cb-f892-45a1-b942-25a021c70e45",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f2e74a16-290d-471e-b874-6e9a364fb283"
        },
        "item": {
          "id": "67ea25f3-5dfc-41db-9ea7-7b44afbbd288",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f7d3ed34-2018-4d4b-9838-19c660a62556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403e8749-36b2-4131-a2d2-643033cffb00",
        "cursor": {
          "ref": "297d5688-a8e4-4d22-9de9-3378b2556fa7",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66e4af31-620f-4211-92ad-bb082bafc156"
        },
        "item": {
          "id": "403e8749-36b2-4131-a2d2-643033cffb00",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a689bbe0-a9d9-4ced-99db-1ca324616b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde37f6-78ba-4a53-bd0c-dcb8a1e362da",
        "cursor": {
          "ref": "3b5525bd-413b-4158-9d1f-35c307b8f71a",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fdae7037-67f3-42d6-a414-ba48bd1b9ced"
        },
        "item": {
          "id": "4dde37f6-78ba-4a53-bd0c-dcb8a1e362da",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f959a328-0e1a-4024-84dd-f347d1b314b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b15a2a-95e6-46ea-821d-b8fa47e1685e",
        "cursor": {
          "ref": "61b0981f-a1a9-40f6-976c-dbeb4983c925",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "510bbfba-0c08-4283-bee4-78f5dea6d2bd"
        },
        "item": {
          "id": "b8b15a2a-95e6-46ea-821d-b8fa47e1685e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a2628acb-8c2a-4abf-b634-1dd5c87ef9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602bdd2e-c9ee-4f69-a235-1a7aa153a56a",
        "cursor": {
          "ref": "08befe30-7f64-4a45-a011-f8e2ce7c9213",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6b5069dd-b657-4610-8da8-a59bde83ef71"
        },
        "item": {
          "id": "602bdd2e-c9ee-4f69-a235-1a7aa153a56a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a53951f8-35a3-411b-b3e6-73718344d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a5abe-eff7-4a97-98dc-4092c56c5240",
        "cursor": {
          "ref": "03a06085-a7b3-4f28-8281-8939999f926e",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ab4f9a80-cdcf-4c96-b9a7-9240a50a8f83"
        },
        "item": {
          "id": "ec6a5abe-eff7-4a97-98dc-4092c56c5240",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "65249e6a-1df3-43b5-a35d-068ff783214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eaad83-5d94-4b7e-8e1c-bd18dadf60f6",
        "cursor": {
          "ref": "63ecf929-7149-4146-8d93-7ff7baff29d4",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b429bd55-69e5-445d-add2-38efd20a29a7"
        },
        "item": {
          "id": "00eaad83-5d94-4b7e-8e1c-bd18dadf60f6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32901a35-d11d-4080-899a-8ad4d061c2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a532b6-2145-40b4-8a7f-74df39375914",
        "cursor": {
          "ref": "21027505-f972-4cf0-b9cf-e7ccf4d2c35c",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36524e27-1541-4d84-b7a5-27ef3cae1c69"
        },
        "item": {
          "id": "b4a532b6-2145-40b4-8a7f-74df39375914",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d832d418-ce13-4f05-9f6b-345cd6398777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b0aaf2-d856-4c30-9bb4-6a7f2f691329",
        "cursor": {
          "ref": "e6671447-d147-4994-a055-db3112432edc",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07f4fdba-e6d3-4a27-b83e-ba5f3d80c22e"
        },
        "item": {
          "id": "d3b0aaf2-d856-4c30-9bb4-6a7f2f691329",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7d55835c-35dc-4dad-976a-9a8bb5c6d066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e667a1-9ccc-4ab2-a814-6f3b76316c13",
        "cursor": {
          "ref": "09c15e05-23f6-4590-aa8d-b448d6af9f68",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2c9c1a51-77af-40da-a74a-405823b0b0e8"
        },
        "item": {
          "id": "a2e667a1-9ccc-4ab2-a814-6f3b76316c13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c5ea746-55dd-4f0e-8728-2077fc1daa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9686de-baee-40c2-bbc9-25ba2d85abba",
        "cursor": {
          "ref": "91e47525-e662-4671-b883-efd4f0f4d09b",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eb7b28a4-f8ff-4903-9e88-a937b59871d6"
        },
        "item": {
          "id": "6a9686de-baee-40c2-bbc9-25ba2d85abba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4fc5a342-fcb1-4ed5-8be5-f8800eab4fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a845a74d-e644-4e4a-97bb-347839f200fa",
        "cursor": {
          "ref": "dc04c904-9a15-45eb-8c06-6125a64f9cc1",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f27b96b-ad21-48ef-ac60-9866de8c2790"
        },
        "item": {
          "id": "a845a74d-e644-4e4a-97bb-347839f200fa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de18cce3-d8f2-4098-a2af-9172c3620f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d338db8a-d9c2-4c87-b6e4-d2ecb9d82125",
        "cursor": {
          "ref": "8f8cd31c-5315-4ad2-a683-ab56c7a67eb6",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0e94d9f0-9e7b-4111-833d-dcffcb7ac906"
        },
        "item": {
          "id": "d338db8a-d9c2-4c87-b6e4-d2ecb9d82125",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b9cd1286-da75-4c31-9eb2-eb8db1ac44f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e55d21-a443-4b59-9f31-c38df55ae8ce",
        "cursor": {
          "ref": "e693aab8-f201-4e25-a2e6-82e4fdca6a24",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5fd5b817-bd91-4bec-897f-547f2a6a2047"
        },
        "item": {
          "id": "29e55d21-a443-4b59-9f31-c38df55ae8ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7e1a21ed-00cd-4dde-87bd-bad30d891f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278366f5-116c-4ccc-99e7-6a079930bad0",
        "cursor": {
          "ref": "7cdff4f0-11d1-4fc8-893c-fc7c074ee14c",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0b98fc92-9b31-4da4-b155-715ade179e66"
        },
        "item": {
          "id": "278366f5-116c-4ccc-99e7-6a079930bad0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "21e6c68d-13ae-4ce8-9547-6bd7160adb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82759748-0ff1-4867-a9ff-f452e50665e7",
        "cursor": {
          "ref": "9ef116bc-33ef-4138-8c6b-697d577d7323",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d0b65926-c862-43dd-8a91-5b0e28aca4d3"
        },
        "item": {
          "id": "82759748-0ff1-4867-a9ff-f452e50665e7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee9bf8ab-0930-4072-92c1-9661cdf85ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d18144-0b25-4645-a1d7-6a45968f3c48",
        "cursor": {
          "ref": "88a1481e-b4af-494e-a7ed-4719390e1110",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df869b47-8504-4b8a-bf62-805b292e971a"
        },
        "item": {
          "id": "a2d18144-0b25-4645-a1d7-6a45968f3c48",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd585d4c-dac5-43aa-9b82-2fee79b648f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef8d66-13ef-410c-b2f5-6b180d511351",
        "cursor": {
          "ref": "efbf0532-193c-41ff-acf3-0df6f3c4ff84",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "70130f46-510c-457a-abcf-7ec97cda413e"
        },
        "item": {
          "id": "eaef8d66-13ef-410c-b2f5-6b180d511351",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dda667c9-c48b-420b-aa14-e5394a4c904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac6ec38-51a7-4462-b1f1-bc80e03ca3b4",
        "cursor": {
          "ref": "264dc8b3-4dcd-4a82-a057-1a0e78c57231",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2cd5dbc5-9701-486f-9e48-9f5ecb027156"
        },
        "item": {
          "id": "0ac6ec38-51a7-4462-b1f1-bc80e03ca3b4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e403f009-8b51-4c37-9937-7e5ea4323f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0d4c4b-7466-43b7-99c8-d29738c10f70",
        "cursor": {
          "ref": "5af418f5-7578-4982-be2c-f42e2e1cb3f5",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1226079b-55ed-4cf2-81ce-4f10775ada92"
        },
        "item": {
          "id": "8c0d4c4b-7466-43b7-99c8-d29738c10f70",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "11fb28f5-da18-4468-bdbb-6ad9e57303c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a6e553-1e85-4140-b00f-24c7faa5978f",
        "cursor": {
          "ref": "d57d0cb4-7fbb-4bde-b929-abc26359351f",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b808c5aa-9f93-426e-8381-00cd89b5a8ab"
        },
        "item": {
          "id": "03a6e553-1e85-4140-b00f-24c7faa5978f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "26b4eed2-2221-472a-9715-1d7ddddcf84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49f48c1-dabb-4a89-bcf0-0eb9cf070a8d",
        "cursor": {
          "ref": "63a51d15-246d-4f12-90eb-294dd1b263e9",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a07d151b-a0b8-4fcb-9d26-dd54c8ddea6d"
        },
        "item": {
          "id": "d49f48c1-dabb-4a89-bcf0-0eb9cf070a8d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1dcf427c-2cc4-4ee2-8a85-243ffc7cbdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2573899-c8b7-4ba5-a23e-3a2b7a3d7a94",
        "cursor": {
          "ref": "c879bee6-e5c1-473e-aa36-7a5df3ef4b76",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ae5fe1fc-09c7-4924-bf27-75c8ef08bb87"
        },
        "item": {
          "id": "f2573899-c8b7-4ba5-a23e-3a2b7a3d7a94",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "076cc567-9f82-49e9-a531-c17d700773f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78faebbd-829b-440a-8c5b-915112e42b18",
        "cursor": {
          "ref": "cbab15b3-5c93-4341-a131-41ddc47e97d6",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea5b9482-566c-42bb-bc16-7a0a5724f449"
        },
        "item": {
          "id": "78faebbd-829b-440a-8c5b-915112e42b18",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4c2c9bd2-8e03-4388-881b-2b003e67f8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf188ee3-393b-4f20-8c7d-0d9781b6b797",
        "cursor": {
          "ref": "933f454c-bc03-43da-9e90-d5b9cf8c5eea",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b05b87cb-2993-4595-97b9-dc4efbcdb20a"
        },
        "item": {
          "id": "cf188ee3-393b-4f20-8c7d-0d9781b6b797",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "769fd744-c35e-4277-90a0-1ea6670dfda8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0f54b5-4ec3-4534-a979-3172842e8322",
        "cursor": {
          "ref": "093db459-6394-4da2-9696-cbf8b3366fc1",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dbc9576c-b5b5-41ce-833a-4192a154b77d"
        },
        "item": {
          "id": "7a0f54b5-4ec3-4534-a979-3172842e8322",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d20eca9-de8c-48ac-b775-f9584c5143e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d3027c-6380-4e02-8a5b-b4707cdb8b26",
        "cursor": {
          "ref": "e387c64c-2a00-4e3a-a83b-5ae9fce59b25",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "741f7f23-b46b-427e-94f9-29cbfe5c8807"
        },
        "item": {
          "id": "a4d3027c-6380-4e02-8a5b-b4707cdb8b26",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "46adc495-af41-4ce5-bf04-9b4c7a6b0b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e212a6a-2bc2-4f4b-91ff-cdd3a9aa12bf",
        "cursor": {
          "ref": "5cfa046b-5e89-4c8b-bb4a-e26c12562084",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "931f941c-a2b1-4395-93fc-6d3dfd2218b6"
        },
        "item": {
          "id": "8e212a6a-2bc2-4f4b-91ff-cdd3a9aa12bf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "732d776c-7219-4728-afc5-68cebf025e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9bc944-2085-4a07-8009-3f4b4b651597",
        "cursor": {
          "ref": "31ecbdfd-dee6-41fe-982d-51d8190d38c4",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d34972e-a83e-4fe2-b738-ddb60ac0e5d6"
        },
        "item": {
          "id": "bd9bc944-2085-4a07-8009-3f4b4b651597",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b59f897f-0237-4694-aa18-cb6be867eebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb01fc79-d8e9-4a88-ab29-bf41d144dccd",
        "cursor": {
          "ref": "bfde654b-9f97-4883-bd56-fa6dc32b8ebd",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e8c480e9-2134-4e84-8287-21b983dfd1ac"
        },
        "item": {
          "id": "cb01fc79-d8e9-4a88-ab29-bf41d144dccd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ac16169a-8438-4b69-9fdf-878bda5b4653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0b3e60-913f-4b2c-a339-bf33b8c4bfc9",
        "cursor": {
          "ref": "964e91cf-8cc4-4cb6-9c54-2649a7fd0258",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d37d0c84-c11a-4e46-9413-0421cb3a4957"
        },
        "item": {
          "id": "3c0b3e60-913f-4b2c-a339-bf33b8c4bfc9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4d0a062a-06dd-4f39-a2ff-cb3f4c84768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18efc2bb-d1ac-484e-bb1e-dc861590f208",
        "cursor": {
          "ref": "3dca47fd-557d-4335-a1b5-7a691edcf715",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ebc6d034-1cfc-4e91-a0ef-0a144d7fcdcd"
        },
        "item": {
          "id": "18efc2bb-d1ac-484e-bb1e-dc861590f208",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3fa61b79-a485-4cfc-8df4-9de2d881455f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5a286-d204-4529-8b3c-cb6303839d2b",
        "cursor": {
          "ref": "4e7e98ec-c843-41b0-bb44-67d8c3668588",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8737f14-fc8c-48e3-a601-6cffd624ef33"
        },
        "item": {
          "id": "92f5a286-d204-4529-8b3c-cb6303839d2b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4c646640-0ed9-4690-865d-d45866d1e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3880821b-b2cd-4bdd-9c33-99cff8cef9e6",
        "cursor": {
          "ref": "28a30e5c-acb7-447a-8de9-13580337c5e5",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a5689f85-df01-4669-a049-e49266d793f7"
        },
        "item": {
          "id": "3880821b-b2cd-4bdd-9c33-99cff8cef9e6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "44ddb2c7-71a6-465d-9f36-d5e97ec0b0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2c0a24-2f1a-4796-92ba-f851dbdafa95",
        "cursor": {
          "ref": "ba822f4e-eac2-4160-aef0-a200ee80e0aa",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e3faa344-3959-442c-9762-6689de9900b1"
        },
        "item": {
          "id": "9d2c0a24-2f1a-4796-92ba-f851dbdafa95",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1f6f9390-b65a-4d45-9345-8902bb40540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdee681-740c-4a8d-bd6e-c6f840beb1b5",
        "cursor": {
          "ref": "9e020a8e-3365-4476-bd80-02c54eede681",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "567f86dd-78bd-4dcb-9072-0d87b0d78761"
        },
        "item": {
          "id": "1bdee681-740c-4a8d-bd6e-c6f840beb1b5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e1683f3-250f-4d17-b0c5-3138f0236a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6311e02c-dfb9-43ce-9e97-1c0d5e431bcb",
        "cursor": {
          "ref": "98d7dfef-1c4a-43b2-83c0-8f7dfedac6ba",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "855834ad-2230-4c58-9613-1cffd07a5ff3"
        },
        "item": {
          "id": "6311e02c-dfb9-43ce-9e97-1c0d5e431bcb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9e44505b-5a4a-43fb-8f29-294646dc33b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4a6814-0a4c-470c-ae6c-9c45dfea542e",
        "cursor": {
          "ref": "8c1864f4-84f1-4eb1-b493-0e6fea9f66cf",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40b21057-a119-4fd4-bb19-da561617d9d1"
        },
        "item": {
          "id": "5b4a6814-0a4c-470c-ae6c-9c45dfea542e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a5bad649-56fb-4087-a8fc-1b6706463c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff38f4fd-f556-46ca-b83f-8493f8e53bcb",
        "cursor": {
          "ref": "005f6927-43e6-4270-b387-9302b8865134",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "77789f2f-f2b3-4561-ab29-c419b37e88fd"
        },
        "item": {
          "id": "ff38f4fd-f556-46ca-b83f-8493f8e53bcb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "83651d84-2167-4e01-94f3-2cdf54d5d6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fcc079-c7c6-4ea9-aff2-a824f76e9da7",
        "cursor": {
          "ref": "930403b3-9ce5-40e1-a0f9-3e91821c124e",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "945b5559-009a-4fcd-889a-84456286f1d8"
        },
        "item": {
          "id": "42fcc079-c7c6-4ea9-aff2-a824f76e9da7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cbf7c313-729f-47cc-8799-6548ae4489c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc50a14-eaff-4f8c-a609-48309fb57daf",
        "cursor": {
          "ref": "271852fd-d766-4533-958f-475b3ecb8a98",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "edd358d3-d5af-438b-b90d-3123a5a3e23e"
        },
        "item": {
          "id": "1dc50a14-eaff-4f8c-a609-48309fb57daf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "07a042f2-1232-4c06-a7a4-be7c1756c05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900a35b-ade6-407c-b388-e5deea2d0e97",
        "cursor": {
          "ref": "03782382-492c-4005-a9e8-308064a18775",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "23a0d49f-fb6f-4d5b-944b-7b62d225703e"
        },
        "item": {
          "id": "c900a35b-ade6-407c-b388-e5deea2d0e97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5981a508-d791-4032-a75e-c1bf9f6b0ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94454ee3-c7b6-4e82-9a42-c4ff0c4982ef",
        "cursor": {
          "ref": "4f514efc-2ace-4a9c-9cf6-76c9336c4d41",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3c0e01c5-172b-4d27-96c2-0d29adf00534"
        },
        "item": {
          "id": "94454ee3-c7b6-4e82-9a42-c4ff0c4982ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "763bc09d-80a4-407a-abd6-7aa4aee88a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c248b5-a696-49e4-bb2e-f1c7eaeb1af6",
        "cursor": {
          "ref": "773d3590-b6e6-4973-9bbf-32b916ef74d4",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "68c6074e-91b8-4d5b-b237-4f6a8972110c"
        },
        "item": {
          "id": "10c248b5-a696-49e4-bb2e-f1c7eaeb1af6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "749c2985-0dce-4066-a505-4f6eae5128cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0638e55-147f-4848-9b9a-215c78ffcafb",
        "cursor": {
          "ref": "5ff2f0cd-b565-4df9-b30e-8c7352c3dffb",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ee161133-3ddb-429a-8bf6-876f527ead38"
        },
        "item": {
          "id": "e0638e55-147f-4848-9b9a-215c78ffcafb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1ed55a74-66f5-45d9-bc41-7e907c25b08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311df4f9-7b1e-4649-9c06-77b38eae54aa",
        "cursor": {
          "ref": "24c44b41-a44a-4f32-aff0-8c75e8773693",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0f2c162f-31ac-4234-84a0-97856603fdd1"
        },
        "item": {
          "id": "311df4f9-7b1e-4649-9c06-77b38eae54aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6169e784-aaf4-4cdf-9d9f-e13f3d686d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44b2752-2342-4519-855c-adce7faf7ad5",
        "cursor": {
          "ref": "f4aa09fb-fda4-4c5a-bb55-f995df8614eb",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3790bde0-6d11-4b10-8eec-2e632905b2e6"
        },
        "item": {
          "id": "f44b2752-2342-4519-855c-adce7faf7ad5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9ac60e02-200d-4daa-9791-4856b92c9273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c82e03-2d6e-403c-98cf-45dcc8b3ec2d",
        "cursor": {
          "ref": "14afda92-2379-46cc-b74b-1866ecd41290",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "59f0a2f3-768a-44d6-8ea5-fcea6d979179"
        },
        "item": {
          "id": "78c82e03-2d6e-403c-98cf-45dcc8b3ec2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6e8bca3d-dcee-48f8-83c2-7fb7cf93fd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ffc3b9-9699-4773-b986-98035024fe28",
        "cursor": {
          "ref": "94e6c8e0-35e3-4eba-bbe5-08c6720502b4",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6d1b8dd8-412c-4262-a269-749af25106a1"
        },
        "item": {
          "id": "43ffc3b9-9699-4773-b986-98035024fe28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "26c558e3-8908-404c-86a4-397577a378e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca9e3d0-89bf-4b0d-9caa-cdff14acbdd5",
        "cursor": {
          "ref": "c241d28f-28c2-406d-8afe-c9fd111c175a",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a7984c0e-9a25-47e8-b523-2581642bbfd4"
        },
        "item": {
          "id": "5ca9e3d0-89bf-4b0d-9caa-cdff14acbdd5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "679ab0ed-e267-47df-a804-63c508ae66d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ab8fa4-f9f7-4121-b6f5-e4cec2808692",
        "cursor": {
          "ref": "042a3d9b-9d2d-48cc-a307-3bff3469be4e",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "22d12bef-24a0-413b-8267-0ad33c836a06"
        },
        "item": {
          "id": "d7ab8fa4-f9f7-4121-b6f5-e4cec2808692",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "abadb50c-27be-4030-86cb-bbb7f8f2bf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa6dc2-8390-4ec4-9590-761fcba05a7c",
        "cursor": {
          "ref": "a059497f-ca96-4b9b-9c31-5c11d2940d6c",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b6f0c0bd-95b1-4dbb-946f-205a4d6e11ba"
        },
        "item": {
          "id": "dbaa6dc2-8390-4ec4-9590-761fcba05a7c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "374a7495-3329-44f9-a206-6f7971dfc344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c31d4d3-7154-4590-a4ee-43b3b9a52268",
        "cursor": {
          "ref": "13264976-dce6-4382-bbd2-5ca81161cf6e",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2088de33-b4b9-4136-a6f0-47d41e78477c"
        },
        "item": {
          "id": "0c31d4d3-7154-4590-a4ee-43b3b9a52268",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c2e71e6b-5779-4da9-b1cf-3c138ce6adc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6de2a9-0e65-4910-bbe3-54be907fd48c",
        "cursor": {
          "ref": "f3746133-f146-4497-8333-78c584d3da73",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4759721d-7bfe-4940-92b7-b20fba8763b6"
        },
        "item": {
          "id": "8c6de2a9-0e65-4910-bbe3-54be907fd48c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e76c597b-adf4-4870-9393-a076bf0159ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b1e709-521b-4f31-97b8-36aa8c85d402",
        "cursor": {
          "ref": "6b29b47a-fe7a-4237-bae8-3fdb8193d4eb",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "39fa020f-4752-46c1-b9f1-d44d6d798763"
        },
        "item": {
          "id": "65b1e709-521b-4f31-97b8-36aa8c85d402",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3a770836-c746-4e76-9a95-8ecf3fb49f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b88ae1-4ecf-48de-9690-ceec8e7a72be",
        "cursor": {
          "ref": "361440bc-5a66-428a-8ef1-2db417eae512",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59e61165-bceb-435a-8dce-63950d90b01c"
        },
        "item": {
          "id": "d3b88ae1-4ecf-48de-9690-ceec8e7a72be",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "07b6fec4-7c45-4ffe-8a3b-fd6150da26c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742015d3-9e98-4f37-ae70-fbf841690b6f",
        "cursor": {
          "ref": "01721734-161d-42c7-9611-e223b8653bdc",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fc2302ae-a799-4ed4-bf6d-803b32d881c3"
        },
        "item": {
          "id": "742015d3-9e98-4f37-ae70-fbf841690b6f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "850aa02c-38b5-42ea-8743-8e0a71f74414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130df746-66d0-4d50-8db5-0661fac4319b",
        "cursor": {
          "ref": "a00dc2f1-70fb-4ece-bf75-08f7a5957148",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c5725cfb-4fda-4c66-801f-cd05029220cd"
        },
        "item": {
          "id": "130df746-66d0-4d50-8db5-0661fac4319b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9eaebfc2-c726-4f23-bc57-90e9678cd013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ae7b45-876f-4fd9-b8bd-ea18935d4364",
        "cursor": {
          "ref": "20f6ecf0-9498-4ec5-8eab-cd4d8624ea15",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77f825dc-2308-454e-8d8f-ec2e3902b046"
        },
        "item": {
          "id": "03ae7b45-876f-4fd9-b8bd-ea18935d4364",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "25a4bf34-2d06-40d5-8b0e-2e98749cc9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260e3e62-168a-4403-a8c3-7beebdc2d924",
        "cursor": {
          "ref": "fd11d1b9-0e17-42d3-baeb-219b2896d3f5",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "50f8e16e-6faa-48ab-90a6-461842815a5d"
        },
        "item": {
          "id": "260e3e62-168a-4403-a8c3-7beebdc2d924",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a05b3a9c-b208-447f-9047-c5aa02cca248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21055b4b-f576-4271-9156-d681b7697519",
        "cursor": {
          "ref": "4df366dd-f67a-40f2-8d9d-778f89c2d950",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "835a56da-8fb8-4587-b6b8-dd61136d7249"
        },
        "item": {
          "id": "21055b4b-f576-4271-9156-d681b7697519",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "646b652e-913c-4c72-a0e4-cb37fea16ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6620f53-9208-4983-b564-8269395f363f",
        "cursor": {
          "ref": "89184289-0ae7-47e3-9227-21721d62e206",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "83e4bec9-ed8f-4c38-b1f7-d9497273b3c0"
        },
        "item": {
          "id": "b6620f53-9208-4983-b564-8269395f363f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "151a7bcc-64a7-4c3a-abb1-4924dbaf82da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a62e496-d4e1-41aa-adbb-f9447dd82879",
        "cursor": {
          "ref": "0b0f963a-10de-454c-9814-7755636cc04d",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "72605eac-3b10-45b2-bceb-a6db69f1cfe4"
        },
        "item": {
          "id": "6a62e496-d4e1-41aa-adbb-f9447dd82879",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d81ed969-e62f-4d20-bb02-d6813043fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b84c31-648c-4703-bf52-108357e4f839",
        "cursor": {
          "ref": "5129db0a-37f9-4d18-8c17-1d14898b2f21",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "179c1e14-7516-484e-9f87-20bbf266ed6f"
        },
        "item": {
          "id": "05b84c31-648c-4703-bf52-108357e4f839",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "27c37f69-b94c-424e-a4fe-5e54247925fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5ce0e7-97bc-4f02-9fe6-5e1391ddef3d",
        "cursor": {
          "ref": "5d365cce-a4dd-4c9a-99df-91e3c1839b55",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6813f4a3-7530-49fb-9c1a-b6c3e2ad7487"
        },
        "item": {
          "id": "da5ce0e7-97bc-4f02-9fe6-5e1391ddef3d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b7c4d3a3-0216-425e-a3be-86ca171340d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ef608-3649-4a82-b392-2ad2f34e4554",
        "cursor": {
          "ref": "cfdf7b90-5ecb-43ec-a47e-a48baad6f718",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "815782a0-2d2d-4f8b-87c3-468b7918e08f"
        },
        "item": {
          "id": "907ef608-3649-4a82-b392-2ad2f34e4554",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5c79e768-0ce3-41b0-8991-d3ec0d424d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a630ef16-bc3c-48c0-90d0-c71761dbf6df",
        "cursor": {
          "ref": "5763b310-0fd7-4ceb-9dad-a0c68c278bc3",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "88cf5611-07dd-4846-9436-ff711500ba6d"
        },
        "item": {
          "id": "a630ef16-bc3c-48c0-90d0-c71761dbf6df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2235f14f-8faf-4a3e-b8c5-6a440cf54596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb11b811-5708-4b96-a6b8-97987ffcce0a",
        "cursor": {
          "ref": "76c58c6d-1bf9-4fd2-a252-8adef42576b0",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45f1594a-5426-4b00-87ce-e5ce340ea6ea"
        },
        "item": {
          "id": "eb11b811-5708-4b96-a6b8-97987ffcce0a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5d402f64-639a-42cb-9445-bb3fea49cece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa566b9-8d9c-42a1-b544-86c980f1e4e3",
        "cursor": {
          "ref": "4410f5e4-337e-4606-94c5-378266b78540",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e6f06a71-2d60-41b9-a723-089e51568cc5"
        },
        "item": {
          "id": "cfa566b9-8d9c-42a1-b544-86c980f1e4e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "05dda5ee-ab1e-41a5-a193-d72820e30174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d9849e-1673-4066-8e36-170d37719e8a",
        "cursor": {
          "ref": "ee749933-9dbc-4a1f-84ee-4032aa311015",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bec92233-723c-480f-a9dd-4ab8a6c0c098"
        },
        "item": {
          "id": "a5d9849e-1673-4066-8e36-170d37719e8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "30a2904a-2942-4a0a-8cea-90a11ff9e641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7714044d-4e29-46bc-b2d7-c3cd680fa541",
        "cursor": {
          "ref": "c4c49a36-8f4d-42b9-9185-37abbc5ac311",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "374484a9-f183-4283-8836-1624a2a64916"
        },
        "item": {
          "id": "7714044d-4e29-46bc-b2d7-c3cd680fa541",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4e10d687-7769-42e8-b7fa-d8e7b66e36e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5410ad3b-f11d-4d49-9a96-c64f83cdebd0",
        "cursor": {
          "ref": "ec1a40c4-d66b-425b-b175-6791ce6cf118",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "44240d87-02e7-4686-a8e7-1942d11d3d90"
        },
        "item": {
          "id": "5410ad3b-f11d-4d49-9a96-c64f83cdebd0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "65a0d678-d908-417c-ba5f-08dee47d56e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28e61bd-8a15-4c00-9762-ba470023dfb1",
        "cursor": {
          "ref": "48319b8a-6137-41bb-8dad-12064b5a1b86",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5469b343-aad9-4740-b09a-2bd909889f00"
        },
        "item": {
          "id": "c28e61bd-8a15-4c00-9762-ba470023dfb1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "72ed5990-59e5-4fd9-b51b-a1c945a6d0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47e0b0-24a1-4285-bd41-3a3c1e8fcb83",
        "cursor": {
          "ref": "814a0c23-17d4-4a3e-bbf2-45ede389d2d6",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d00d6a03-17b3-4055-9636-ba06a4ce9ead"
        },
        "item": {
          "id": "ce47e0b0-24a1-4285-bd41-3a3c1e8fcb83",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cbcf1971-882a-4214-a0f7-cf6facb188e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff737c81-d593-4cbd-800b-fa7fdc1a2a35",
        "cursor": {
          "ref": "7a225f35-51d6-4715-8f8d-13dcab6e06bd",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3087bb8-de9e-4888-b7a8-a1072748fc32"
        },
        "item": {
          "id": "ff737c81-d593-4cbd-800b-fa7fdc1a2a35",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0cb4f7b5-9097-45c9-af19-25ee15892b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc37043a-35c0-4257-bc45-2d8d3a641314",
        "cursor": {
          "ref": "57f6aaba-6f4c-436f-a01c-1939ced03f69",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cde2d5d3-2990-4a70-b102-962edb129421"
        },
        "item": {
          "id": "cc37043a-35c0-4257-bc45-2d8d3a641314",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bffa5aec-4496-41cc-a851-34b2bf319219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3ad60b-0ab1-4049-9046-746494156d26",
        "cursor": {
          "ref": "0a52307f-8d85-4831-8553-16b441582c69",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98da1f2b-f8b6-4fd5-ad8b-917690d41592"
        },
        "item": {
          "id": "2e3ad60b-0ab1-4049-9046-746494156d26",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "51404b72-6477-4049-bd0c-cc88e10f14b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2c4d91-295c-4a8f-815f-a44a376efa29",
        "cursor": {
          "ref": "4e986285-a10c-4c1e-b635-f4bf851313b6",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2421fb66-8c10-47d8-91b9-0a0569280a2a"
        },
        "item": {
          "id": "7e2c4d91-295c-4a8f-815f-a44a376efa29",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6c6a5c8-52c8-4f6b-8fed-defff4bc3d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49753a8e-8df0-4a34-9d08-c12db6f39dbe",
        "cursor": {
          "ref": "fc236898-3148-4f92-9e79-67310dd8cb13",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5d5513d9-5119-46ec-84d1-51c0e4b3686e"
        },
        "item": {
          "id": "49753a8e-8df0-4a34-9d08-c12db6f39dbe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d327402c-b1d5-4434-a87e-8967044f558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e564f15a-d0e4-4f54-801c-e04ee635548d",
        "cursor": {
          "ref": "a467d71f-01d3-4ff4-81bf-8a1db1dcdb0f",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d02eed8b-c5e9-4d03-96a6-f9b25c5cc72b"
        },
        "item": {
          "id": "e564f15a-d0e4-4f54-801c-e04ee635548d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "992068ac-14e9-4b0c-9a3d-9c40db347465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fec88ae-db08-451a-a6f1-ea3ee3d82c98",
        "cursor": {
          "ref": "3878b2c1-6694-4634-a481-58062af513f3",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25286ea2-ec7e-4d0e-8bee-ca66df0fbf9d"
        },
        "item": {
          "id": "2fec88ae-db08-451a-a6f1-ea3ee3d82c98",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9703549c-8442-4049-bbaa-ef3c6d4de0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0d6bd7-97df-41fb-b522-bd2fc6275a12",
        "cursor": {
          "ref": "2f728824-e644-496b-a83a-a276b598161b",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "453b2016-3700-4d42-855e-1ae4e5f8ea81"
        },
        "item": {
          "id": "fb0d6bd7-97df-41fb-b522-bd2fc6275a12",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc640a1a-da63-47e9-804a-32c36cd3534a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed75ae0a-f82e-402a-9e9b-2258e45f1737",
        "cursor": {
          "ref": "50211a6e-f5aa-4c6c-9bc8-8b8787209ea6",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "803bc6a0-1ea5-4dbe-94e6-05482f7e2960"
        },
        "item": {
          "id": "ed75ae0a-f82e-402a-9e9b-2258e45f1737",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4c721020-02da-477a-9ce8-38bae8b63cff",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "df351ea0-8539-47d9-aa56-b59cbb198e7a",
        "cursor": {
          "ref": "525b3796-d142-43fa-a6af-90bc05a888bf",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2385adc3-e958-43aa-ae86-06c375f672d0"
        },
        "item": {
          "id": "df351ea0-8539-47d9-aa56-b59cbb198e7a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4dee7734-d0cd-4377-a5a5-1bb4d82cabd3",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c951d-de54-4e89-a8fd-cb140bdafdd4",
        "cursor": {
          "ref": "3259e14b-5e02-43f7-a039-8b3e848ee637",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2a11d653-0a2e-48ff-9bdf-eaef6302a069"
        },
        "item": {
          "id": "532c951d-de54-4e89-a8fd-cb140bdafdd4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae63cea3-881b-478a-9504-f5988e02a12f",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5086e311-60ff-4be0-aadd-488a4dd4d4a0",
        "cursor": {
          "ref": "0ee48f52-1c5c-4e87-b5fc-526e3fd5a10f",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6a9302a5-ea6e-4a83-92f7-83aed139b2a9"
        },
        "item": {
          "id": "5086e311-60ff-4be0-aadd-488a4dd4d4a0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "05d6f566-67f3-4d40-b533-d8f7e59b1d49",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "307287b2-8ca1-406d-9199-dc4da97c7a6f",
        "cursor": {
          "ref": "95ea220c-8c92-4bc5-9790-0f5bdb1c1d1d",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b82dbf4d-caf8-431c-9a65-46d86f9ae5f8"
        },
        "item": {
          "id": "307287b2-8ca1-406d-9199-dc4da97c7a6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "95a77a5d-2671-47c9-9c7f-4d4eb82c8959",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3250255-49e6-47bd-bfae-e27e4291c02c",
        "cursor": {
          "ref": "b8193b5d-66a5-40d8-89b1-5cabe06beba6",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d1d0fad6-0c77-4376-8d2c-dc88bc64823f"
        },
        "item": {
          "id": "f3250255-49e6-47bd-bfae-e27e4291c02c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "66e561b2-659b-4648-b5fe-65bc5a140ea1",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914f3b3-0a57-462c-93a4-85c0c2ed5369",
        "cursor": {
          "ref": "27686b04-bce9-430a-a2eb-ad370a5ff347",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3ff83189-c221-4b58-b5d7-af9b7f1fbb7e"
        },
        "item": {
          "id": "0914f3b3-0a57-462c-93a4-85c0c2ed5369",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "077c349b-8a7a-4cce-aa44-1d5ec83987d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f74225d-2168-44b9-86b9-faabf9f79866",
        "cursor": {
          "ref": "ff27a375-579d-4a0c-ac14-45fb81d3d4ee",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cfdc4e91-530f-45ba-b6e2-28d377825235"
        },
        "item": {
          "id": "6f74225d-2168-44b9-86b9-faabf9f79866",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "353a51f4-3c03-4487-9940-ca20790873c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38421646-d26c-4047-a7e9-eb295afe3ffb",
        "cursor": {
          "ref": "ea8126c0-5abb-4ee9-8288-c17b2f644feb",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1731989e-a39a-47fa-ae22-b4e95e675402"
        },
        "item": {
          "id": "38421646-d26c-4047-a7e9-eb295afe3ffb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "404879a0-9308-4be6-82b6-44afa6b4c5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bc849c-c830-47f7-98db-1e98c883c24a",
        "cursor": {
          "ref": "7c4c45bf-0780-4dec-98a3-1eb52a3f8fd6",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d89a1d4a-5206-48d6-a4d4-1aa97d2ad1df"
        },
        "item": {
          "id": "76bc849c-c830-47f7-98db-1e98c883c24a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3440040c-7216-4cfd-b238-85dea5980b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7ba37e-6421-4ab0-bce2-f7af3ad93b65",
        "cursor": {
          "ref": "70c185fd-325d-4486-b7c3-323b58e4afe5",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "59b39f21-b541-4d35-8b52-04d40e7fe990"
        },
        "item": {
          "id": "ae7ba37e-6421-4ab0-bce2-f7af3ad93b65",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "47107763-50d5-44eb-8a04-c8183a4dd396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fb25c8-d399-47bb-919b-49ae9a997e93",
        "cursor": {
          "ref": "1649822d-3f04-48b7-8518-3636d46fc0e9",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e34c8e1f-060f-4fc5-9e97-49aeee3932fc"
        },
        "item": {
          "id": "d7fb25c8-d399-47bb-919b-49ae9a997e93",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5e30658-aadd-4c92-afb5-0ff447133416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3849c7-3e6c-4238-a273-8de5a4fe7057",
        "cursor": {
          "ref": "c4f3f684-7eeb-481c-a002-ebeb814534ea",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d6a7f96-8668-4bcf-a24e-8c0c94064788"
        },
        "item": {
          "id": "3d3849c7-3e6c-4238-a273-8de5a4fe7057",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2b870fba-8530-4d2a-a903-c78cc0a4a7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c9afbf-ae63-492b-8025-e03e80276f70",
        "cursor": {
          "ref": "62a3d542-66e2-4fe4-be5c-54f5df234a65",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a4e0a930-b5ed-402f-b638-cf68a9225f34"
        },
        "item": {
          "id": "e1c9afbf-ae63-492b-8025-e03e80276f70",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6692307-9d97-47d2-a71c-02c0aa24c370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea480c60-9db0-46a2-803f-818497bdc58f",
        "cursor": {
          "ref": "a476e965-711c-420b-b14e-fb9e0b5b8c72",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab65ad0f-623a-4812-b746-32b236ef962c"
        },
        "item": {
          "id": "ea480c60-9db0-46a2-803f-818497bdc58f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "09f6773e-cf0b-46f8-95db-9d1e772747f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8303233a-2649-4a86-9343-6231123a7d8a",
        "cursor": {
          "ref": "534c646b-a7ef-4475-a008-2bbaa3700b5f",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "36602305-dbe4-4c58-9fb9-30685d544cb6"
        },
        "item": {
          "id": "8303233a-2649-4a86-9343-6231123a7d8a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "80b07a42-e554-4aaf-82e6-7886bb747a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f4097-896e-414f-bdc5-010549890627",
        "cursor": {
          "ref": "dffe810d-0b80-436b-bc00-808a46d91274",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e0c99cd-1d11-4ec0-b770-5d79eb9bc4b7"
        },
        "item": {
          "id": "045f4097-896e-414f-bdc5-010549890627",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d7959f3-33be-42b9-9fc7-5eb401f976e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bf209d-c0d1-434e-95b1-f2b30028d92e",
        "cursor": {
          "ref": "c16febfc-2d01-4229-87f2-b721b2e37fae",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4663023c-9555-4bf7-9065-b716ba208c48"
        },
        "item": {
          "id": "86bf209d-c0d1-434e-95b1-f2b30028d92e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db906aca-53a3-43a7-8dff-ebd9ecc1b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaca9f3-0f7f-4d5d-8d53-239ce6ed0640",
        "cursor": {
          "ref": "78c0bfe5-c367-4feb-94b6-86f0886df91a",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5101e2dc-5b2e-4cc2-8d82-49073b2b64f0"
        },
        "item": {
          "id": "ddaca9f3-0f7f-4d5d-8d53-239ce6ed0640",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ab2334d4-805f-4dac-9306-461fd6c96fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aaa587-3290-44ba-a997-2e2d85108efe",
        "cursor": {
          "ref": "ef210283-cac3-4b09-8f38-f6fe361e6a8d",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "52510f33-c73f-4a71-b2dd-f974dc33a813"
        },
        "item": {
          "id": "75aaa587-3290-44ba-a997-2e2d85108efe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "06d10616-d524-4377-8fa5-463ec044f7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136565c7-79db-474c-aaf4-aebf4e6f595b",
        "cursor": {
          "ref": "04ea8a90-d6cd-461c-be6c-527d30ecfe33",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5500564a-ff72-4174-b946-007828a6be2d"
        },
        "item": {
          "id": "136565c7-79db-474c-aaf4-aebf4e6f595b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e58e2ff9-2a33-423f-8239-7af10e707321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5570a00-08be-407d-911c-3bd5c593d92b",
        "cursor": {
          "ref": "c7e26ef1-e45f-49ff-aa12-d094d899d913",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "de6ecd4e-9baa-4522-897c-0abfe4616999"
        },
        "item": {
          "id": "e5570a00-08be-407d-911c-3bd5c593d92b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af263ecc-8bd3-44a7-9c1f-9cb6106d633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abc7e2e-a917-4d02-9ebd-c5db136643a7",
        "cursor": {
          "ref": "e3582e03-6a92-4c3d-981d-d3849ceadf73",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "647ad106-b133-48fd-90fc-6810699fcd9c"
        },
        "item": {
          "id": "5abc7e2e-a917-4d02-9ebd-c5db136643a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95028ae5-befb-4ce0-8d1d-7ced4ede9017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f56e0e-0c90-4bde-8fd3-70e9010fe726",
        "cursor": {
          "ref": "b0c294a0-0428-4140-9325-b54f10e17458",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "30840e87-ea8f-4188-b2b8-b7eda98e9159"
        },
        "item": {
          "id": "90f56e0e-0c90-4bde-8fd3-70e9010fe726",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "178c7b83-8a2c-4742-baef-0cef25926a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e4bbc9-acde-437b-b1bb-123282169f09",
        "cursor": {
          "ref": "a00f99e5-f176-40ee-a155-71b350171c86",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "580a850f-99c6-49df-8174-187b33da9a8f"
        },
        "item": {
          "id": "70e4bbc9-acde-437b-b1bb-123282169f09",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d9338ebb-90ae-4a48-ba60-3ad2a832a095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3475f0-74ed-48e0-9d3f-dbbc5b64b45f",
        "cursor": {
          "ref": "d2541e47-b24b-4ba3-a562-bb28e950d97a",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "835fd143-fc1f-4d95-bdc7-7216775953c3"
        },
        "item": {
          "id": "ad3475f0-74ed-48e0-9d3f-dbbc5b64b45f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "139ba547-5737-44eb-97d6-7dc6d1f91447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2e5055-b1a6-466d-bb25-56fd1e45b5eb",
        "cursor": {
          "ref": "8be44cbb-c42a-4be4-9608-d1d4141780d6",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e95f9f2-3bce-489e-9f41-faab41cd793d"
        },
        "item": {
          "id": "3b2e5055-b1a6-466d-bb25-56fd1e45b5eb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b79f45c-e3bc-4515-ab68-d424f9b9f11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183c17c-084a-4300-83ac-68107b55df9c",
        "cursor": {
          "ref": "02d8cf3f-1cf8-417c-989b-96e4efe5915d",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a0538e15-091f-4a15-996a-235a52171364"
        },
        "item": {
          "id": "5183c17c-084a-4300-83ac-68107b55df9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1bd4c7bc-5525-4dfd-82d8-672ba2dbe90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78b8a09-f949-4b23-8bef-a9b6bf2a9315",
        "cursor": {
          "ref": "cac27896-f572-4ceb-8100-6d1b1d5d4bf5",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0c362c69-60a7-48a3-a3e1-d9dcd2acd5c3"
        },
        "item": {
          "id": "a78b8a09-f949-4b23-8bef-a9b6bf2a9315",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c663ea8-244f-4f59-8fcf-9eaa7c7d533b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5809d-1ea5-46e8-b764-4dacf7c27bbf",
        "cursor": {
          "ref": "2a25abf4-a45b-4c5f-9a95-f827ae611504",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a113f98d-c58e-41bf-bbd1-3132cb2a1743"
        },
        "item": {
          "id": "46e5809d-1ea5-46e8-b764-4dacf7c27bbf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55b61d7f-1536-4baf-9711-0420dff77a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88000a54-6a99-4a48-9c6c-2f1b6f2606d6",
        "cursor": {
          "ref": "494b8fb0-8be3-4492-bf68-86c5afd8a6e9",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f553c0e3-65dd-4874-88dc-e1b584140437"
        },
        "item": {
          "id": "88000a54-6a99-4a48-9c6c-2f1b6f2606d6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f00b490a-f4ea-42a8-8660-12aaeb24ca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd477d-3366-412f-9756-53a7f658ca40",
        "cursor": {
          "ref": "d172a5ae-98a6-4d5a-8585-8a135a0cbe8b",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d59a298b-0ad1-4c58-9446-e88873587b9f"
        },
        "item": {
          "id": "c8fd477d-3366-412f-9756-53a7f658ca40",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0c956151-77af-4f60-83c0-0672047b21e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f3b52-1ac4-4880-aa6f-4ecf21019713",
        "cursor": {
          "ref": "3775d4af-63f3-4d20-b6aa-8dc9403acfe7",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "94efbdc7-e5bc-471f-9c90-df78bd5ad778"
        },
        "item": {
          "id": "c65f3b52-1ac4-4880-aa6f-4ecf21019713",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e7181a2-d902-4e40-b7b4-6bce1aeab984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f9b09b-737c-4d08-9ca0-389a157f81bf",
        "cursor": {
          "ref": "dabe4092-b47f-4c6b-9eae-66fb557f64c3",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2abcd4eb-f25b-42f7-aa6a-a2b3ca0e370c"
        },
        "item": {
          "id": "62f9b09b-737c-4d08-9ca0-389a157f81bf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b9c4a7ff-e991-4a47-977e-5b6d901b6ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d175400-a09b-4215-9df3-353ba8cac942",
        "cursor": {
          "ref": "d8ef6d65-1b87-4feb-b1b6-38cfe200b782",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "51e6d5f2-b7c5-4a14-b950-68072185becf"
        },
        "item": {
          "id": "9d175400-a09b-4215-9df3-353ba8cac942",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0d74b3d-2558-4a0d-a763-62d97099ee6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db907b16-6eee-4c2e-b35f-38f4948f9254",
        "cursor": {
          "ref": "61764d38-b33e-4ed6-aa38-4c1d96530577",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "930dcf18-0ef8-4e3b-9102-6eaef0b4778d"
        },
        "item": {
          "id": "db907b16-6eee-4c2e-b35f-38f4948f9254",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6026f6d-ecdf-4861-af11-75f37efc8cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884d782a-453b-466c-b185-4a1bf86eda24",
        "cursor": {
          "ref": "df6ef4c8-7858-4868-b859-2ddef7fd3272",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fe1c142b-8f36-4b73-aabb-a26bb8501e1b"
        },
        "item": {
          "id": "884d782a-453b-466c-b185-4a1bf86eda24",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2b6fe43-a353-4dc5-9e0b-f9b7f47a1eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55eddc1-b959-4703-bf86-1a112d05d87b",
        "cursor": {
          "ref": "04f0b3e6-c9f2-48e1-8e28-5622e36b6804",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a5e90e9b-7927-4e35-9b3d-009979814f3f"
        },
        "item": {
          "id": "a55eddc1-b959-4703-bf86-1a112d05d87b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f66b265c-0ac9-450f-94b1-85db2c599c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ed46b-8ae2-425b-9cb2-a9a075bca7a9",
        "cursor": {
          "ref": "873d3694-86ca-4199-ba07-3674d962944a",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d617f8af-30fc-4b60-aace-e2839b815483"
        },
        "item": {
          "id": "1c2ed46b-8ae2-425b-9cb2-a9a075bca7a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b6bc5581-84f7-4302-a673-ab2916c3da8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dde326-e8e6-43ac-9457-77d534159337",
        "cursor": {
          "ref": "e1704c9d-168f-482c-85ad-a6b996abe986",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "150fc8bc-8035-4c49-bc4b-e88201b0da5f"
        },
        "item": {
          "id": "96dde326-e8e6-43ac-9457-77d534159337",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0fd40284-8f64-430f-85a2-d940df018638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86436e8-0174-437a-8d71-40e6922c2aad",
        "cursor": {
          "ref": "51b3cde3-da6e-4723-a905-cac4a2bc74b8",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a3d40149-1040-401c-a873-f88bf69c58d7"
        },
        "item": {
          "id": "f86436e8-0174-437a-8d71-40e6922c2aad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c59afea8-6cc2-4fef-8cda-f33e5c0b0a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ba86d-35d3-4f3b-bd62-5e15e594d78b",
        "cursor": {
          "ref": "ad9b3e3d-b603-4838-b7e8-9c2292b74452",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fcecac97-b495-4a12-8cf3-c83c55ee1b63"
        },
        "item": {
          "id": "cd0ba86d-35d3-4f3b-bd62-5e15e594d78b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cdd4814d-e12c-4f5a-8420-105c65f7223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d45b10-b016-45bb-98e4-2cb9216b1bb9",
        "cursor": {
          "ref": "d1c4e3f4-e0b5-40fa-abf5-c9bb9ea79fdf",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d3de84a-774d-4b0b-bb47-ab7da5ad78ee"
        },
        "item": {
          "id": "f4d45b10-b016-45bb-98e4-2cb9216b1bb9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "692ede2d-f223-4ec0-b70f-deefd9700213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597ad780-eb95-4ceb-87ce-3323392f11e8",
        "cursor": {
          "ref": "c39943a0-c25c-4d61-9852-3f0fec1d8927",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3505d33c-b791-4319-a1a8-2851cfe9f598"
        },
        "item": {
          "id": "597ad780-eb95-4ceb-87ce-3323392f11e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfc94a91-82a8-4e2c-aa8b-89fcefe0834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20a890-8439-4bcd-acf1-d23393d8208d",
        "cursor": {
          "ref": "a81c3a00-e7f0-4b56-9095-cc963b9a10f3",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "17d7fd39-0739-4bc2-b988-d0d9ed9b09f8"
        },
        "item": {
          "id": "8d20a890-8439-4bcd-acf1-d23393d8208d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "487a28de-15d1-4620-b7f8-ac656401d31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b98b7a-bf30-44a8-b66d-c9671727d95c",
        "cursor": {
          "ref": "51e0f60a-f921-49da-b928-7e013a507167",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "44d24051-046c-473c-9655-02776327f00b"
        },
        "item": {
          "id": "75b98b7a-bf30-44a8-b66d-c9671727d95c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "75354a9a-43aa-499b-937e-d1a0b811c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a0e6e-f60b-474c-a3c1-cdeebe9c0b1f",
        "cursor": {
          "ref": "e36df13a-dbcb-478a-bafb-96eac321b0e5",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7c9f7495-16b9-4fc1-ab78-e828b36758fb"
        },
        "item": {
          "id": "596a0e6e-f60b-474c-a3c1-cdeebe9c0b1f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d00161a1-7a4f-4cc7-adb3-ccc400161c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ed5fd6-7cfc-4b3c-8c0d-8f86ca2fae06",
        "cursor": {
          "ref": "3aec8f7b-86e0-40c9-a4f1-9f3da6a0a696",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "87b7e6c3-70a4-45c8-a046-9e127ef07818"
        },
        "item": {
          "id": "96ed5fd6-7cfc-4b3c-8c0d-8f86ca2fae06",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c1a6a5d4-f8fa-407d-927c-b751ed65a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a6fd71-4b4f-4b56-a707-d21783d3e293",
        "cursor": {
          "ref": "a5a7378a-b5a3-438a-aee7-2d62fbfdb851",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "daa1ceb9-4442-4dfe-b611-a7f299a0d2f5"
        },
        "item": {
          "id": "51a6fd71-4b4f-4b56-a707-d21783d3e293",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "647c8ad8-d974-4793-870b-b57624279b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0f56fa-f569-4601-b95d-9ab1ac86acb4",
        "cursor": {
          "ref": "8187fe0a-42f5-49d4-8a76-cb7aae20c319",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "af0a1b2d-c996-4cb3-a1a9-266136e4a6fc"
        },
        "item": {
          "id": "2c0f56fa-f569-4601-b95d-9ab1ac86acb4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f3f7186e-30b0-4fc8-9552-33d35169cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55f0e4-5d63-47bc-b534-c60642131064",
        "cursor": {
          "ref": "ee787f7e-8568-46d0-b757-7d11f82967c3",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb0baa5c-f0e3-4a01-b2a5-edeba3b230de"
        },
        "item": {
          "id": "da55f0e4-5d63-47bc-b534-c60642131064",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2c4d27c1-eec2-4d6c-bd60-82d1030a540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926e9891-f655-4892-944e-de42756b9619",
        "cursor": {
          "ref": "a04622b1-c67d-4888-ab49-c9ac62850305",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80c2e3e0-b6ad-4fe3-9e26-cbbbdcff9dbb"
        },
        "item": {
          "id": "926e9891-f655-4892-944e-de42756b9619",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fba6d761-299a-4a31-9f5f-95c95714d3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca21f0ee-bb39-4284-be4f-ea3b8713f825",
        "cursor": {
          "ref": "6ddb1569-b331-4a58-ab55-1a9c56f97d8e",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bba2f421-8627-44c4-aa53-dbfe91af648f"
        },
        "item": {
          "id": "ca21f0ee-bb39-4284-be4f-ea3b8713f825",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "77ddce6e-2af3-48e5-9f4d-1fd7b217ef96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a9289e-5ab2-45bc-9128-3706499a4239",
        "cursor": {
          "ref": "6eeda4d3-1946-4bac-b127-57274c55684b",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3880f939-997f-4563-a978-9c3de4c050b0"
        },
        "item": {
          "id": "d4a9289e-5ab2-45bc-9128-3706499a4239",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a024e164-b306-4280-bd39-aeaf26af2148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1179c8ef-d534-4d52-a411-e79504f34841",
        "cursor": {
          "ref": "00b28730-c105-4af1-93ab-42768ef64b0b",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d75f8a10-71b8-4bd4-b915-a4eff541d8ed"
        },
        "item": {
          "id": "1179c8ef-d534-4d52-a411-e79504f34841",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2723b7aa-5da0-47db-980a-080c81f96205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e1e086-6b37-4526-85fb-55bc1ecf5b1d",
        "cursor": {
          "ref": "6fbf6cdb-2849-4e98-88ab-8c67c8c186a6",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "17f913ba-b2c7-4814-99b0-858b778335c6"
        },
        "item": {
          "id": "71e1e086-6b37-4526-85fb-55bc1ecf5b1d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "54184beb-48f2-4d06-8830-66b7719bc4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443ff252-ddf0-47e2-86fd-ff18df437d2e",
        "cursor": {
          "ref": "7520ac88-35dc-434a-8339-ecafc8d85f0c",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8abb777a-09f3-4e46-8895-62372e911f77"
        },
        "item": {
          "id": "443ff252-ddf0-47e2-86fd-ff18df437d2e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "133d3f6e-1850-4561-a3fd-6a90ef99f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14d837f-4baa-4cbf-a63a-cb7f99bae03d",
        "cursor": {
          "ref": "4f7a348d-54b7-4ccf-a377-4fe5d340ffd8",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16d4bf4d-8a8e-4670-88f9-778e3a523c9c"
        },
        "item": {
          "id": "e14d837f-4baa-4cbf-a63a-cb7f99bae03d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "24023ce3-599b-488f-ab01-b21a00f24ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06da1655-c25f-49fa-a05f-dd96a65226c4",
        "cursor": {
          "ref": "46e68016-deb9-439e-8ce4-ad25c730dc5d",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d5552523-fadc-4eee-a16d-08f652aca660"
        },
        "item": {
          "id": "06da1655-c25f-49fa-a05f-dd96a65226c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "251ec1ba-bc51-4ab4-8293-862b86293962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c2010-f8af-4412-b8bb-c386b9c3bc30",
        "cursor": {
          "ref": "3850ad74-0428-4a6a-8b54-fb86e6c00a84",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "029378f8-5afa-4f06-935b-983c77276dbc"
        },
        "item": {
          "id": "046c2010-f8af-4412-b8bb-c386b9c3bc30",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5bf587f8-1f96-4725-809f-aaf152fb8064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c84769-d3f4-4002-b115-fa61f9627ccb",
        "cursor": {
          "ref": "2d5d8d18-2f14-42ce-8ce2-e75707f1cc46",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a886e451-3979-472f-881d-e578f995d872"
        },
        "item": {
          "id": "57c84769-d3f4-4002-b115-fa61f9627ccb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8b4b9d7d-dd38-48e3-b6d7-135ed62e5843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9bdedf-7fd9-4f4e-b83c-31a9159ea990",
        "cursor": {
          "ref": "105e3310-e662-4542-a07c-08905c4ab33f",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4cfd35c3-aad4-41a0-bac2-46cf1b01c993"
        },
        "item": {
          "id": "0f9bdedf-7fd9-4f4e-b83c-31a9159ea990",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a02e7b14-b124-4cfb-b589-3591593f499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab4c2e6-03af-416d-b0d2-92b5479feb20",
        "cursor": {
          "ref": "9334becc-4b6c-460a-818b-4c3e3ce3a528",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d354060a-12ce-462a-82da-4178aca97083"
        },
        "item": {
          "id": "aab4c2e6-03af-416d-b0d2-92b5479feb20",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7bda9b18-2c90-4324-8ab0-8593fdeecc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b966bd-2ca1-4293-956d-b9656dd140c7",
        "cursor": {
          "ref": "9a9a9550-739c-4c3d-b507-4db947d32a68",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "472d572e-f366-4836-ad9e-3a109a01d074"
        },
        "item": {
          "id": "86b966bd-2ca1-4293-956d-b9656dd140c7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3375ca71-1d34-4f93-992a-e9ad16422ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59690ac6-5178-459f-9cac-0756bc2c0833",
        "cursor": {
          "ref": "ec2ab272-bee4-47d2-91e4-0934968c8247",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "311f2c2e-0661-45c5-8c3a-cbf7ecf1149d"
        },
        "item": {
          "id": "59690ac6-5178-459f-9cac-0756bc2c0833",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f2adbb57-5470-43ac-9f85-3dab125b5e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd1f541-1f6b-4438-b177-9eed0e5450b9",
        "cursor": {
          "ref": "3aa28dc2-5272-4e36-ac67-b199766ba681",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c576881-a0b8-4083-9bc3-7883bfa804fe"
        },
        "item": {
          "id": "7dd1f541-1f6b-4438-b177-9eed0e5450b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f9582235-3573-49b2-b1c1-de31b3c9717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08b7c91-6606-483a-ab4c-381a848720f4",
        "cursor": {
          "ref": "de1a1242-236f-48c4-aa07-016f09ca49f0",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5edc9bd4-3f6a-4fb8-9f81-5473b4e61d30"
        },
        "item": {
          "id": "d08b7c91-6606-483a-ab4c-381a848720f4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "459493eb-0455-4465-bab2-3720dd0e157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84286f8e-082c-4f14-947b-251d8b5f1715",
        "cursor": {
          "ref": "e380e511-1a60-4646-baf3-abc573f2eb20",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8beff741-0e9b-46ff-8559-4f7e20cfd3d3"
        },
        "item": {
          "id": "84286f8e-082c-4f14-947b-251d8b5f1715",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eebdf1f7-f6db-47a2-912b-676ee2136554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce590e3-ab68-4709-b843-e98a426fadd7",
        "cursor": {
          "ref": "323624d7-2a43-4e5a-853c-af3e5dba56b6",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "647d90fc-ee42-46de-829a-0c0cf5f55742"
        },
        "item": {
          "id": "2ce590e3-ab68-4709-b843-e98a426fadd7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3632604c-1228-434f-9eae-d7f4145b7beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28076536-d772-48c0-8704-422a541c53f3",
        "cursor": {
          "ref": "f327f240-6e8a-429c-a90d-5b3a4da45cfa",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3e498e6a-a9c6-4ec8-bfd5-ff019dafe834"
        },
        "item": {
          "id": "28076536-d772-48c0-8704-422a541c53f3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eb69118d-4da0-46e1-ae46-336b13f770cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c7900b-9adc-4ccd-a486-7b229707125a",
        "cursor": {
          "ref": "ef315250-f6a6-4c88-97c0-23bc9070380c",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "655993ae-93ac-40d7-ad6d-7abc65feb88e"
        },
        "item": {
          "id": "98c7900b-9adc-4ccd-a486-7b229707125a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "074186e6-0cce-467c-b0eb-7bed63160b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab45bbf1-408f-481c-bd48-9ca21a108a22",
        "cursor": {
          "ref": "72ba5f5b-f403-485d-8306-3795bad6b6d7",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "413eb609-c757-4ccb-bd18-96cd3e2abc40"
        },
        "item": {
          "id": "ab45bbf1-408f-481c-bd48-9ca21a108a22",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0203a9b3-ec95-4e58-bcf3-978178309bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e895f5-4a34-4557-9c05-bad26c746dea",
        "cursor": {
          "ref": "d36839e1-65a1-4766-aab1-93256f5cf33a",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "54ac7315-1329-49fe-ab85-2fe344cce408"
        },
        "item": {
          "id": "d0e895f5-4a34-4557-9c05-bad26c746dea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d939b768-1737-4b53-8162-9a04a7325148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c5ccb1-ac46-453c-8960-e6c7ac193391",
        "cursor": {
          "ref": "d0eaf960-670e-48b0-9849-56d5703e6790",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e6d9245d-4de8-492d-a4f5-07291be1c5bc"
        },
        "item": {
          "id": "e3c5ccb1-ac46-453c-8960-e6c7ac193391",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6f29f2e-c93c-4595-8344-08a4fb754ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50733538-0af4-46db-9141-a327c6901647",
        "cursor": {
          "ref": "a8a8931e-4eb7-4ce1-8563-049b3cf41fe0",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0aa5da00-b392-444f-b1ec-651450254a73"
        },
        "item": {
          "id": "50733538-0af4-46db-9141-a327c6901647",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b50355fb-a831-49bb-921e-f90c1b00b364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2a98e3-caaa-4cbc-a0ae-20f1c507f83b",
        "cursor": {
          "ref": "1e67e653-5093-4133-abd7-fcfbd90efed3",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "913842c0-b27e-4fd5-a769-74a11808795c"
        },
        "item": {
          "id": "9e2a98e3-caaa-4cbc-a0ae-20f1c507f83b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e3d08355-8fca-4173-8bad-60ba0e80a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f41cb7a-5526-4976-9df1-027a6eb89131",
        "cursor": {
          "ref": "bce6028b-0014-4e3a-95cd-2a782e364a29",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8669fe69-b571-4c84-87af-b750016879c1"
        },
        "item": {
          "id": "8f41cb7a-5526-4976-9df1-027a6eb89131",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3354cb7f-c3a9-4a79-bbf7-2e211d8c04df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38578adf-4974-44fe-828c-170e30f4432c",
        "cursor": {
          "ref": "f6edcaa7-c49a-4f9e-b2d0-d706814fa616",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1dc1d17d-1ee0-4b9f-82f7-53784a37fd15"
        },
        "item": {
          "id": "38578adf-4974-44fe-828c-170e30f4432c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c1df0a13-c35b-46ab-a2e1-6b00c4db8f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb054f-92f5-4199-8568-3c06a5a8a8d2",
        "cursor": {
          "ref": "867e71a3-c633-4628-851e-c4ba66cfc3d8",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9c7f68f-2fe7-42b4-a325-f2af12e2df0e"
        },
        "item": {
          "id": "5ffb054f-92f5-4199-8568-3c06a5a8a8d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "86321a7d-ba7f-492c-86e6-478d63334767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a70f1-0154-49aa-bcc9-dcd4e540a4e4",
        "cursor": {
          "ref": "d1dad355-33be-4169-a3dd-66c175fb4989",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dda93ae3-5ff8-4647-b45e-2e81ba972ffa"
        },
        "item": {
          "id": "510a70f1-0154-49aa-bcc9-dcd4e540a4e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93d32c41-077d-4ba1-b1a6-031e3ba952ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4246096e-081d-41da-b70e-2c6b376ca454",
        "cursor": {
          "ref": "e37ae5a7-03dc-40a1-afe0-ee08d6cd6842",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2a643534-ecdb-48f0-9dad-6a291f6d485c"
        },
        "item": {
          "id": "4246096e-081d-41da-b70e-2c6b376ca454",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "857c093e-d977-4709-849e-610528277af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ac968-64f5-4c6e-bec4-646cf6cbebb0",
        "cursor": {
          "ref": "1ccb2cb0-3efc-4ad7-a6f0-a9b19d7366da",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "851748b3-1feb-4626-b485-00c613a88efb"
        },
        "item": {
          "id": "b43ac968-64f5-4c6e-bec4-646cf6cbebb0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c1cf289-9d04-4b65-b926-72e093425986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772bc2b9-3b65-40e1-9f73-ac1a252c2cc5",
        "cursor": {
          "ref": "a6cb4af7-195a-4b33-b53f-b7fd4daea946",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "86c34be8-5ab0-4d7b-bf23-fca5c70d671b"
        },
        "item": {
          "id": "772bc2b9-3b65-40e1-9f73-ac1a252c2cc5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f3287065-51b0-423f-91c5-2ba9950be381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff7842-2b19-424c-8cef-f5b4b8369a68",
        "cursor": {
          "ref": "7b79e1e8-bea3-41b2-b599-8af971388da8",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "df479eaa-4f28-4c73-9990-fdd7d2076845"
        },
        "item": {
          "id": "62ff7842-2b19-424c-8cef-f5b4b8369a68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a8239e20-2d4a-4a88-b6b8-553246a39ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346002b8-e037-46e9-8a03-8bab3194ad86",
        "cursor": {
          "ref": "af9391e7-ed87-4d10-bef7-b9b010ad3531",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "64f06d42-1e82-40f3-99f0-3fd8e54c3e89"
        },
        "item": {
          "id": "346002b8-e037-46e9-8a03-8bab3194ad86",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "15c5955e-55ca-4b86-8ab8-016ad1759e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016f858c-14ff-4b0b-b958-b0f76273a728",
        "cursor": {
          "ref": "671ee8e3-0ea6-4715-8eed-e88b4561eb76",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ddb594b-79cb-44c2-9da8-81bfc5c14a9e"
        },
        "item": {
          "id": "016f858c-14ff-4b0b-b958-b0f76273a728",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5dc0b885-7c1d-4556-894b-a827f3268996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6e5263-af7e-446b-ad15-dcc1b0fd1109",
        "cursor": {
          "ref": "e1b96d3f-8d48-4589-97a0-9afd009fe0a9",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "40adb732-82b1-4138-89fa-c0210cc32101"
        },
        "item": {
          "id": "8f6e5263-af7e-446b-ad15-dcc1b0fd1109",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "610c4192-0c85-404b-9cf4-c61b3d5dee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5296ffef-bc95-40a5-8649-fc647959fbc1",
        "cursor": {
          "ref": "c5a67186-00b1-4549-aefa-a52275e7091e",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2f434313-dcd0-415f-8bbe-e26c904c690e"
        },
        "item": {
          "id": "5296ffef-bc95-40a5-8649-fc647959fbc1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4cf0019f-ccfd-4fbc-b913-2d2943bfea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfd6673-58c9-4966-a4f3-8116a97c2ce8",
        "cursor": {
          "ref": "2cc44bb3-a3f8-4dc7-946f-6044bc974bc0",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "48b6f3df-c1cf-4bb3-9d5e-cbf57d1eb98b"
        },
        "item": {
          "id": "0bfd6673-58c9-4966-a4f3-8116a97c2ce8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f2d74fe5-7dce-4bef-8652-2300a9983546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3d5ac-4ff3-4c68-84b7-0eaec1586f7a",
        "cursor": {
          "ref": "cf8fc2b4-974f-439f-aebe-4bec492aa210",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3a0a0574-f879-46ba-b026-b3a59bf16c61"
        },
        "item": {
          "id": "8ec3d5ac-4ff3-4c68-84b7-0eaec1586f7a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf473cb6-54c0-488d-9860-65acb4c2bcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517b57f3-2b05-45b8-ba78-7972262961dc",
        "cursor": {
          "ref": "6c9dbe26-4c89-45b7-b3d2-8fe042e0dba2",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "98a364dd-686d-4113-9e56-9818e6022a8f"
        },
        "item": {
          "id": "517b57f3-2b05-45b8-ba78-7972262961dc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "130ccea5-2d1e-4555-a5b7-ed5a6725c29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba8025d-3606-4087-a242-a738ff4fdb46",
        "cursor": {
          "ref": "7e756820-2c19-485d-bef6-673602e2e209",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c618e17c-1a3b-47b6-b1cd-c1f08ee539b6"
        },
        "item": {
          "id": "6ba8025d-3606-4087-a242-a738ff4fdb46",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1fb3e9f7-0910-4ce1-92ee-fab05be40eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c848ddf1-09b0-4aea-b600-9a5853ed5743",
        "cursor": {
          "ref": "b555da33-9c70-44f6-b6cd-833c71cc2092",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "39b849ea-e406-4f19-96dc-4cebd53d4f00"
        },
        "item": {
          "id": "c848ddf1-09b0-4aea-b600-9a5853ed5743",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "068e5b90-d10e-4d80-b10e-4046d45b6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fb4a04-0203-409d-9286-fab9c861b50d",
        "cursor": {
          "ref": "24f328c9-ff30-4da8-83eb-8bc94f19cf3c",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6b3650af-146d-41ff-aa02-76c4cf527be4"
        },
        "item": {
          "id": "e2fb4a04-0203-409d-9286-fab9c861b50d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5d7e4f2d-a228-4268-85c2-c02c346eb227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b24dc4-d404-4d3b-877c-cc97eb9d6191",
        "cursor": {
          "ref": "19c485e2-82ae-411d-be97-21bc939c3f81",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ee61fba6-38b8-4dd1-83f4-f63382daed86"
        },
        "item": {
          "id": "40b24dc4-d404-4d3b-877c-cc97eb9d6191",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ec950aa8-f9c7-4bc2-83ac-b7b8c33911f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733e99cd-c044-4a81-b146-5e2968ffc98c",
        "cursor": {
          "ref": "03797cd2-610b-41c6-a22f-9b6fa5163202",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "365e7ea5-aa3a-4835-8cc3-44486b8a43b6"
        },
        "item": {
          "id": "733e99cd-c044-4a81-b146-5e2968ffc98c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "010d5bf7-82a8-4c9e-bc3c-fb1af6cd1324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c3c47f-b1d7-4ac8-8b39-b85e938bc96f",
        "cursor": {
          "ref": "270ea4b3-a480-49c2-8964-1991ba3023e6",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3dc6a573-bbaa-48d1-b419-664a2bfbae56"
        },
        "item": {
          "id": "c2c3c47f-b1d7-4ac8-8b39-b85e938bc96f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "21e70c94-be26-4700-bc5a-4d5dd1abc013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81782915-915f-45fe-8708-7d6b8b9a97e4",
        "cursor": {
          "ref": "1a2a1d7c-3ce2-4d27-9742-3acdfd134991",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3b7f4171-a6db-41bd-8874-afd6b66f5167"
        },
        "item": {
          "id": "81782915-915f-45fe-8708-7d6b8b9a97e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2ee0dd27-91d2-474e-abaf-de8b52040a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ede820-fdbf-4304-a982-db6c99dd2106",
        "cursor": {
          "ref": "039394c9-f7f3-4a3c-97b0-8ce681e61b9a",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db67c378-8f08-4c72-87bb-b36918b5d66d"
        },
        "item": {
          "id": "41ede820-fdbf-4304-a982-db6c99dd2106",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "316794d1-30b4-4981-8ba2-cdd4fe3ec334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ab2c0-a2f2-4799-8a5e-eaecd94cc314",
        "cursor": {
          "ref": "ffe85b3c-4096-49ae-9374-fd0edada0dba",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f33651d9-db16-42e1-af75-693b7b503dfe"
        },
        "item": {
          "id": "659ab2c0-a2f2-4799-8a5e-eaecd94cc314",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9c76a91f-c11b-4045-9946-014983a8696e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8eec4-9efd-4774-8b93-68a8aef2f776",
        "cursor": {
          "ref": "7b6822e9-447f-4d4b-912f-7c2fcaccf605",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "30ef61bd-b6f2-4e6d-a212-5ddc8096873b"
        },
        "item": {
          "id": "62c8eec4-9efd-4774-8b93-68a8aef2f776",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d2e0fbc5-d98f-41ab-9f58-f9e08f429889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57196928-cd0c-4497-876d-d37914826beb",
        "cursor": {
          "ref": "1746a6d0-eb90-4245-b767-11b9410e9a7f",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "34035fd4-f596-44c9-8095-646399ac8885"
        },
        "item": {
          "id": "57196928-cd0c-4497-876d-d37914826beb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa4c5648-e2f5-477a-a919-ca5521ccbad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb107a-af1b-41ed-b92f-c8818831499d",
        "cursor": {
          "ref": "aaf7aeac-6797-4822-8207-f2ee7b015c81",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "307af511-ac36-4cad-bbcc-b33adc6c69eb"
        },
        "item": {
          "id": "1ceb107a-af1b-41ed-b92f-c8818831499d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7d79804e-18fe-4f7b-915e-18be9b2f6c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d48874d-e909-4418-9091-fea9f73975d6",
        "cursor": {
          "ref": "89ca3e99-085d-4909-bdb8-5e56506c4451",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f0ba552-9bca-4149-bf16-8ef27247343a"
        },
        "item": {
          "id": "2d48874d-e909-4418-9091-fea9f73975d6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "403a781a-f466-4ebc-a827-1de4e696ac42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40394126-0cea-401c-a30c-9dc58af4f388",
        "cursor": {
          "ref": "0396959f-3818-4e10-b76f-e664c6c570fb",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0026e264-f0a8-48a6-9861-c3eec5d0df13"
        },
        "item": {
          "id": "40394126-0cea-401c-a30c-9dc58af4f388",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "24ad3c89-9e26-4959-a28c-ad52874688ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644c80f5-0b03-4852-8ab9-aeb6e882fa13",
        "cursor": {
          "ref": "fe33b18c-0701-43ac-9851-329f33d09609",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7240d967-d033-4766-be39-53cab0ee7022"
        },
        "item": {
          "id": "644c80f5-0b03-4852-8ab9-aeb6e882fa13",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fdc53d4b-3474-4ebc-9069-11f118af55ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ccfa31-efe0-4de3-8fc5-77e9ea3f89e7",
        "cursor": {
          "ref": "5674bb37-e211-434a-ae46-68ed9fbbb185",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fa11d47-87b5-4284-9c39-965e5985259f"
        },
        "item": {
          "id": "55ccfa31-efe0-4de3-8fc5-77e9ea3f89e7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "70a14b11-e659-4e8c-a12a-f1b6158a89d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f5b52b-524f-4cca-bf7e-a7146b16b259",
        "cursor": {
          "ref": "625ea092-b99f-48e2-a764-1812129df356",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e0943f0b-d63a-4c88-bfd2-539952bebf30"
        },
        "item": {
          "id": "46f5b52b-524f-4cca-bf7e-a7146b16b259",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "92f9f9f9-f54f-4466-9fc2-18ce7024287f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1c3ad1-f8d8-477d-b1c4-e9550cf23cf0",
        "cursor": {
          "ref": "99e0f430-9cb8-4f82-b9fe-2fbd3497fa96",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d837aa29-1ec6-4bd6-8010-432a14c2ad66"
        },
        "item": {
          "id": "fc1c3ad1-f8d8-477d-b1c4-e9550cf23cf0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "62d32235-01ab-49a9-b3c8-4f51eca45712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77180feb-15f4-470c-8be3-7d75eabd54d6",
        "cursor": {
          "ref": "bcc84efd-6216-4318-83cc-bbb0f9ac3ab4",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f5e2208e-6e31-473a-bbc7-40339d2aa87c"
        },
        "item": {
          "id": "77180feb-15f4-470c-8be3-7d75eabd54d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "264291e3-e37e-4788-b697-85f81cf04741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1bf1b9-aa1b-447e-9a57-f4e00857b553",
        "cursor": {
          "ref": "758127a9-c11b-4fd7-a95c-1c8f5246c4ac",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "50738796-ba31-4a0e-9621-25306ae05305"
        },
        "item": {
          "id": "cc1bf1b9-aa1b-447e-9a57-f4e00857b553",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ca31ce3-8ffa-44c8-b00f-f148ef139334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7327dfc-2e35-4e05-aea1-e479762874e1",
        "cursor": {
          "ref": "69697462-00a6-4d98-8d61-cd4a8dfae8ca",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f373cf2-958b-499c-a95a-c52703551796"
        },
        "item": {
          "id": "b7327dfc-2e35-4e05-aea1-e479762874e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e5980b4-3b2f-495b-ba0d-07bd57b9eae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6ec1c5-d04e-4eea-9f07-3ba209b89c4c",
        "cursor": {
          "ref": "a3c1bb93-1d2d-42e5-b9a7-b98b83a69894",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "23dd4973-3695-4581-ad8d-8e8f67c0815d"
        },
        "item": {
          "id": "9a6ec1c5-d04e-4eea-9f07-3ba209b89c4c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5eb7c841-ed7f-4177-b206-f97a50953712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad877447-ad0c-47ba-a0f1-6f3bd311ae87",
        "cursor": {
          "ref": "834c670b-2dcf-41a7-8ae0-2405e8bd55ef",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa2b7c9c-8f32-4abe-8443-983befb2f6d6"
        },
        "item": {
          "id": "ad877447-ad0c-47ba-a0f1-6f3bd311ae87",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "64e7e12e-f558-45ef-b322-3bb180fba7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24396cea-a763-493f-9745-4ef4959535be",
        "cursor": {
          "ref": "74a3b7ba-c6d7-464e-99b5-7b77d7396615",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c55d6d7c-2eb8-4241-9919-8d91021fcfb0"
        },
        "item": {
          "id": "24396cea-a763-493f-9745-4ef4959535be",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc357292-a678-4147-acea-fa73e3bd16fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350e837f-ba03-44ea-9d57-ddcaa1196808",
        "cursor": {
          "ref": "5ad91d8f-dda3-4fd1-8bd2-b92dd32ecea1",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f32560de-f7a0-417a-851e-9c622b09db33"
        },
        "item": {
          "id": "350e837f-ba03-44ea-9d57-ddcaa1196808",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d072ea7e-8673-4402-9496-d01d662dac81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6787a37b-83ac-453a-9666-a95df87786ee",
        "cursor": {
          "ref": "a0a8bdc0-c3eb-43d4-9e48-8e661eb6b967",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "925526e3-83d2-47c9-ae10-6b0ec38b681e"
        },
        "item": {
          "id": "6787a37b-83ac-453a-9666-a95df87786ee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c995810f-134f-40a1-b0d1-b94595e0bd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e635402b-87a1-4d8d-bea5-fba04a6adac2",
        "cursor": {
          "ref": "ecc19141-034c-4a5c-aae5-157e97f7a67a",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "83c53e76-f0fe-4bc1-b506-8e4ba1e86cdb"
        },
        "item": {
          "id": "e635402b-87a1-4d8d-bea5-fba04a6adac2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78148e1c-74a9-44d4-a536-e5fc4ddda45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2099fe36-f486-44b8-ad00-b172369fa47b",
        "cursor": {
          "ref": "99e6429e-7e6a-4e07-9338-1ed330847839",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bfacd24b-7e31-41ef-a076-eeb84725c765"
        },
        "item": {
          "id": "2099fe36-f486-44b8-ad00-b172369fa47b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5dafb752-fcff-43be-bd48-7c63bcad72a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24450446-c711-441c-bf42-b91b22a17c42",
        "cursor": {
          "ref": "fbf29111-4baa-4377-89fe-acf04dd6c00f",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "10f41659-6c7c-4001-9d8e-2de8b32bd434"
        },
        "item": {
          "id": "24450446-c711-441c-bf42-b91b22a17c42",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "181f38aa-ad1e-4a15-a396-ff0c13072a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e9491a-2715-4003-bc7c-b366b1deb90c",
        "cursor": {
          "ref": "710ea12b-77b1-4cf7-b6b4-55fa49185a13",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0737b583-45d7-49af-b83f-6a22cc56af8f"
        },
        "item": {
          "id": "c1e9491a-2715-4003-bc7c-b366b1deb90c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b85796f7-9c80-4661-b15f-d5bbcd8bb5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e92f23-bb8f-4281-8342-9c5d0b0d4fcd",
        "cursor": {
          "ref": "c359970c-bc5a-42a2-a933-e52ac08ec5b5",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8016f9c8-dc1d-4ac0-b308-d0f038f06bcf"
        },
        "item": {
          "id": "29e92f23-bb8f-4281-8342-9c5d0b0d4fcd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e8b5c7cf-0c75-462e-a59e-46475466bcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72efbf6-05b1-4a33-a7e1-b5bb036977b6",
        "cursor": {
          "ref": "54aaa01b-65fe-4c57-92f6-f711513579d6",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "50322ad5-e5d9-45f6-9863-c3c8587f7455"
        },
        "item": {
          "id": "b72efbf6-05b1-4a33-a7e1-b5bb036977b6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "00ec6de2-3291-484b-b314-2da163c1f3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1b6d76-3533-46b7-a978-01b937eaf1f1",
        "cursor": {
          "ref": "9cc7003c-a471-42b7-a0de-e173ab5e951d",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "55e516d6-af5f-4a16-a06d-1494f6764f30"
        },
        "item": {
          "id": "9a1b6d76-3533-46b7-a978-01b937eaf1f1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed99277c-60d6-4240-a52b-d8326cffce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60daba56-07a4-4e1f-907a-2e8e9c2a9efb",
        "cursor": {
          "ref": "3bc77e7f-9a44-47e9-8d0c-97fa0a75d2da",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a3377e90-1fd1-4175-aa8c-12e34aafcd31"
        },
        "item": {
          "id": "60daba56-07a4-4e1f-907a-2e8e9c2a9efb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0919c9ea-5942-427b-b519-19add84703a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d856e6c-6c6c-4a87-a440-7efb8d2b34da",
        "cursor": {
          "ref": "c941fb10-6464-4018-bee2-3fee7ae5db04",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1cdace89-a64a-4d73-a38e-03429274dae6"
        },
        "item": {
          "id": "4d856e6c-6c6c-4a87-a440-7efb8d2b34da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "620bba16-73a2-4ba1-b3b1-cf9230bffef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb8e7a6-47ff-4ff9-8478-6dcb02f5eddd",
        "cursor": {
          "ref": "a275ede7-00bc-4304-845d-85d54d8ac995",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "18a3a4b1-b945-4270-a776-186b0f97e0d1"
        },
        "item": {
          "id": "9fb8e7a6-47ff-4ff9-8478-6dcb02f5eddd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e280ead5-3742-41d7-a787-8cf1e960e692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b402eb-437a-47af-9428-cde1de16c84c",
        "cursor": {
          "ref": "b7bbb51a-9c70-4488-9763-fdcbdeb51ffc",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c629613-5933-4204-80d5-66ebe2801d16"
        },
        "item": {
          "id": "49b402eb-437a-47af-9428-cde1de16c84c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c84bd21a-8c52-43b0-ae42-be0192246c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67f4b68-195b-4c91-800c-2ece6c1e8eae",
        "cursor": {
          "ref": "33ef3da8-9a9a-4151-9bd4-12616f6a731f",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "44a05f3f-d49e-409c-89ef-a8399e79d264"
        },
        "item": {
          "id": "b67f4b68-195b-4c91-800c-2ece6c1e8eae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "961a84c9-2315-46e6-8e73-c8cd7fbb9ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2ebc2a-11ab-4097-b73b-6311acac4dd1",
        "cursor": {
          "ref": "7a2cc9e6-1782-492f-8f2a-68d7d67fbd90",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2bcbcf0b-c0bd-41fb-b9ce-ea52743e1042"
        },
        "item": {
          "id": "df2ebc2a-11ab-4097-b73b-6311acac4dd1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bddf4764-9de7-4e07-a173-9c319bfc1728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e470e86-d89c-4334-bfd4-8e3c064bf0f9",
        "cursor": {
          "ref": "e5c209e3-7b33-4126-bd85-3dedbdf727c6",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4cee3e9e-f74c-4f57-bdff-fd7b314183c5"
        },
        "item": {
          "id": "8e470e86-d89c-4334-bfd4-8e3c064bf0f9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "59e10c07-7643-48bc-8a79-624a1c053280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cf3709-4cb8-4f0b-ba2e-5826021abe4a",
        "cursor": {
          "ref": "e453d43c-743d-4650-9085-3e6652695c2c",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3530910-fee7-46f4-89c4-21612b292db8"
        },
        "item": {
          "id": "88cf3709-4cb8-4f0b-ba2e-5826021abe4a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e222065-a0dc-444d-920f-84cc066016ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f980dd69-636d-48f2-80e9-9ddae99e3ff5",
        "cursor": {
          "ref": "505e8230-7553-4888-9866-33dbc8250597",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "018c55d4-1bde-4367-aed1-b866e49793eb"
        },
        "item": {
          "id": "f980dd69-636d-48f2-80e9-9ddae99e3ff5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "17555297-a424-4d2a-8cc1-50202f6c17da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46495e15-f9f8-4db6-a92b-0cc86ad9bfab",
        "cursor": {
          "ref": "7ee3fc25-bbf7-4104-89f5-bed3e7b48bf6",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c312d7a7-c175-4115-9257-bb02eb9d0ffc"
        },
        "item": {
          "id": "46495e15-f9f8-4db6-a92b-0cc86ad9bfab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50369e00-bab1-4642-abf1-d973b34bd7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5a6096-4450-4654-9fb0-970e18fae38b",
        "cursor": {
          "ref": "3b8ab4f1-b5b9-4e8c-b53f-cb8b1f6d8ed0",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6aa90495-76f2-475a-ba09-c785caaf4dc8"
        },
        "item": {
          "id": "ca5a6096-4450-4654-9fb0-970e18fae38b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e57c37d2-070f-4190-acf5-5750d7a5705a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c67f3cd-e0bf-4e26-b26c-bf4035023b5d",
        "cursor": {
          "ref": "257c9513-fc2f-40d1-8367-f09bc135cde9",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df83989a-b6bf-49ab-8aac-9d43f5e14512"
        },
        "item": {
          "id": "1c67f3cd-e0bf-4e26-b26c-bf4035023b5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9666f376-7605-4534-a822-9ccf9b412bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b29781-5997-4224-a611-a3c0a3377b92",
        "cursor": {
          "ref": "c508e0fe-7eaa-464c-8c1f-5c5244b9c837",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "429bc264-2457-4fd2-a6f1-a4d983f782eb"
        },
        "item": {
          "id": "53b29781-5997-4224-a611-a3c0a3377b92",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c4349a0-7eff-4e67-acee-fa0dc4ec0475",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a36f38-b3f5-4473-96c5-3f10271add71",
        "cursor": {
          "ref": "57d9db45-566f-4940-b2d5-a6b5b9125b44",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b107d1ab-abed-4b4b-8bce-cd27f58f1041"
        },
        "item": {
          "id": "23a36f38-b3f5-4473-96c5-3f10271add71",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b0cc5227-10e9-4797-b17e-0160cad0cf33",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdc1d7d-46bb-4eac-a58b-e29f4b0f2ee1",
        "cursor": {
          "ref": "bb261d27-e3e8-4992-ba37-259669ef45d6",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1abc9ff6-1bfc-4779-a5e7-90698e062c71"
        },
        "item": {
          "id": "8fdc1d7d-46bb-4eac-a58b-e29f4b0f2ee1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "571274ef-11cf-45e0-b4ab-66dc68b080e1",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdd88a3-eb7e-4762-b053-2a492d6b4335",
        "cursor": {
          "ref": "d9725bee-e768-48e1-894f-68bfa8373bf8",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ac1fd701-924b-4fd2-ac87-2e2bfd2e2ad6"
        },
        "item": {
          "id": "6bdd88a3-eb7e-4762-b053-2a492d6b4335",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6da5acad-fb1a-4604-9412-a0f2a0486ac3",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c87fed-bef1-4d21-94bd-8f959bd61fe6",
        "cursor": {
          "ref": "04b8bb63-020a-4e30-9444-3002ecfad515",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cfd51249-2c8f-4497-98d1-64cdb52d0382"
        },
        "item": {
          "id": "92c87fed-bef1-4d21-94bd-8f959bd61fe6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb56ba36-0f46-48db-8068-fde938ad1d37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c87fed-bef1-4d21-94bd-8f959bd61fe6",
        "cursor": {
          "ref": "04b8bb63-020a-4e30-9444-3002ecfad515",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cfd51249-2c8f-4497-98d1-64cdb52d0382"
        },
        "item": {
          "id": "92c87fed-bef1-4d21-94bd-8f959bd61fe6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb56ba36-0f46-48db-8068-fde938ad1d37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e82af-e4e1-4a70-8537-0ff2c009bbd6",
        "cursor": {
          "ref": "1fdf9b09-40e1-4de3-9a02-41064b5a4e72",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6beba001-3890-4760-b951-62ed82727c4d"
        },
        "item": {
          "id": "389e82af-e4e1-4a70-8537-0ff2c009bbd6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f2cee40f-59f4-4857-943a-0757a50ba282",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf8d893-270e-411a-a050-cbbb49611e20",
        "cursor": {
          "ref": "231f5f15-c4f5-423e-85a5-20439bd630d4",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "daf3145c-131c-4db1-8730-4ed3e6b4d25c"
        },
        "item": {
          "id": "1cf8d893-270e-411a-a050-cbbb49611e20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17df9eca-c5d2-483a-8bb4-93c8cf5c608b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}