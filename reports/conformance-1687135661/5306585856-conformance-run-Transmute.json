{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f921c92e-46c8-4f12-aeba-1122bd09f9f1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d9770b7-884b-4eb9-9e40-ddf70bbe0986",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c4653d7-c891-40dd-b727-e0cdab6453e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16afe79a-0bf0-4693-8fb0-e58955cb7aa4"
                }
              }
            ]
          },
          {
            "id": "4c4f779c-076f-4b5c-afde-e7efaf4c4665",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5013937a-9b6b-4024-ad7b-a8451027ab24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb2b95f6-42e3-4f88-8d92-4e1736aaf1ad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c90de85c-8038-432a-b22c-fba27532fd45",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "243f6813-33fd-42d9-9672-78a94952086e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "195c0a8c-b310-4dc8-a566-f61cf940742b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "728c071a-d2f9-448b-82ba-b06c2337f12c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a84dcfb4-cb59-4399-aeb6-0d55da724fcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e993f605-e22a-4e67-8f0a-f15c11f85e5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03500630-be4c-458f-a996-df6918526af4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4e011e9-e126-437a-810d-f62fc44eedae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8cedcd2-4478-446d-b850-4d890d5c96fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edf08d9b-edfc-4b2a-b32d-7ef5c7ca232e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7683064c-7c0d-4d36-b9a6-871e9af0de07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bff5309-ca9a-4929-aac8-0162609e6c87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e72354e7-a57a-4ac2-80c8-560227c62d1f"
            }
          }
        ]
      },
      {
        "id": "97415765-bf4e-4670-a8ac-b0fea49dd8f1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45190940-391b-4a59-a7c7-7a393614f31a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4daf1d40-e3bd-460b-9c18-a7a794b216e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27ccd27d-9136-48ec-bf21-38b041d21c87",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1932f4-c24d-4dd7-958e-7d2627d09775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52bdc3f6-2c03-45f8-bf8e-cdabbfca0419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d1da96-7ff9-47bc-94bf-e401eabc700d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acb3c4c-3c40-4021-ba0a-438128c8d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "facd5b76-d6d4-40d8-a1e2-7f9c93cb9f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b649e2-d953-4f59-8dd1-81faad939269",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7375fee-df67-48ac-8f5e-a39752322fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead3468d-ace4-4178-9036-a285b43f57f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2b177e8-de50-4d61-a9d6-a42576624001",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7a03847-b9a4-4735-b973-a17a03beb432",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d4b8c8-1c00-4ee8-8609-cdc3841c1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fbad874-0d51-4d8e-b7aa-fa20f80beb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e8315c-0fd2-41c1-aaa2-301369dfb575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff53676-9a58-4e9f-8a6f-ae1e9a6cddc4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59ab6991-4f59-49b8-b33f-7c31059d06a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ab7b27d-e9f6-4b3b-84d9-8e1e6856f282",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3efe533a-5d17-4a82-b74c-838e36593b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "706a8b9c-d3a7-470c-b6b6-be8b0c399f10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bce7e6e9-0709-4b64-b6d2-26ce20321bc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78447e13-7f1a-4b4a-9a88-668f1b1b0aba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55e3a6f5-cce5-4b01-84e1-4ccf9e8e2674",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47dc5845-554b-4e42-879a-63932f2b64cd"
            }
          }
        ]
      },
      {
        "id": "7ee6bccf-221a-4ab0-939b-ed4902774cdc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e84cd259-7ac4-42ce-adad-81b3795bdde2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6e0cac-a04c-42c8-a74b-4b3fa8cf08f4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "82f31ee5-5f9a-4afc-b83f-270040ea4dce",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4721b9c3-bbbc-424b-a864-eb2472a80568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21eed1e-e090-41a9-8085-302ec8f5d78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ca8af6-3343-4991-883c-1ef3d7edf24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45c4bd96-8c21-4e9a-b165-5a53db6565d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7342a116-5109-41c7-b8b5-438f33cb9e1d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e3dd29-0ca6-4be4-a7d6-0d78f41b244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331f2189-64d1-4b84-bbf4-21615b300066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c102c6c0-510d-4c43-8dfb-c0a7a6553584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8355300a-157d-4f0d-9380-c4859f85b332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5a4e0e-d4a8-4942-b858-d0e6a912ed23",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905659de-3731-4a5e-acdd-1cbc50c8c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291b99ed-103c-4286-a9ab-d33a96c8160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b381f50-9a08-4614-87e5-1cb1848b8f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "599c3925-6a87-4a64-a0b3-cb77ed6a5962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750f8c85-d305-4c31-add4-b859ba717c89",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec55bfbd-bd20-4e62-83af-d15b56b2f14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1225e1fb-9f04-4b92-911d-18acf6a4722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0f395a-3aa7-4032-9abe-836e99e15c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f15eca37-e608-4c34-9058-83a74cf02b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65edbf4-3b62-4b5d-bd6b-9134e626f6cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5860f74-81be-4b88-a652-ba4419d7b302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62de729-0472-4d74-9c97-d63963478d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a3a851-eca6-4c3f-af48-6800cdcdbac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92fab4f3-b0cb-4c19-acb3-3b3c587ab1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae125a0-8c07-47e7-bf7d-93bd26ef2106",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730ef7e2-ba4c-4dcb-848a-9dcd9cc970b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1650d555-3d9e-4964-8761-7246d814a6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff93f764-cc6e-43d4-8566-a0d5bb0dbcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64321527-84a4-49ce-b8bd-496f9727694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d446d0b-4645-49cd-b0a6-c0f413b97ae5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f6430e-741c-40d1-a3ce-813735a72ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf70fd7-a2db-4b66-86da-cf8f345fd91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcf8219-1d7c-4d79-9261-0010191675e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab87f34a-765e-4965-9e92-3171de99ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773a0cbc-2c4d-4da6-8860-5fd4e5d52a03",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697d0d91-8977-48b0-895e-c94c25b2df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cacbc37-aabe-43a6-83e2-32ad53274655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0324ecc5-0046-47cb-a13d-b0b0a6762235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a63208-55b3-4fec-bc41-d18365b3e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239dab1-a753-4ab6-9200-c26e6bce62c0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d882616-e92e-4662-a787-9621b7cbe86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d31a453-e154-48f2-8b97-b688230f1596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744c8b29-2563-4dfc-9366-3b44a5d56be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1db452-92cd-488d-b2d8-80832484d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec88c9e3-5157-48e1-b4b0-9b0ed83b5aaf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b39046-a4db-404c-9ff7-ec74d282e00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d37399d-28ca-4bb5-a27d-8194a359236f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d893cdd-6b08-47be-a3cd-34fcda4485a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07daff5a-9e93-48ad-a644-879edc4c6a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8aeed8-5842-459e-8ab5-7ba534e07629",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f952d9de-29b5-49a6-a767-948e40db4f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421f26d5-eb51-4da9-8e41-bd09ada45e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3431b0d4-8db7-41ea-9d38-f543772e7296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71a9f8fc-af34-42ad-adf6-192c965f8d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58923020-6885-46c8-98b5-caec79ec5bde",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af0b70-ad20-4cd2-836d-6356491f2096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd98d299-b61b-49a0-982c-b7af1c8ff345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38dc0db-6598-4228-87ce-5edec17ccdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e628f6c-a32d-4cc3-b029-f864e8edca22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e64e559-5f6d-4c9e-9165-d8614a7eb794",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d66ff-860b-48da-94dd-a23d37366789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e8610b-705a-4ee7-b8c2-603005322948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbed1fd-81d6-4681-a2ac-cf24f164917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef2879d3-1073-4466-8473-c61523410999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f918f8c-5fc6-4320-b3a8-8a015370bca7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb8f7d7-f766-4df7-b1ad-f6bc1891a576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a94dd9-48f1-46e0-9959-1ff36f0c9eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc131bd-80df-42bb-a650-0f452b3d4677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143fd4d1-f7ad-416b-9394-83584767fe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3fb695-9acd-4fc3-b21e-2dc086156c9e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1db98cf-691b-4950-822d-20e56104428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0b2c24-bd44-41ee-a5f9-8a734d18b429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a2c79a-f963-4def-8622-37e6684dc303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b9995f5-de0d-45bf-a140-f1dea56e2511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79958897-a642-44bc-8ca9-b138b33e70e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a451db-4cda-42b9-b92d-30c99d524357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4efeaa-a248-43da-abaa-4d04f9dc93b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bb9867-5959-496b-88e8-54d5430f2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "767cfcf5-2d28-4cb3-90a0-0d6434fdfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e42e2cb-03d0-44db-bcab-4dad2f2dfdca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51057aa-edff-451d-ac64-ff8a51c22956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ec5e07-9fd2-4c1a-a9cc-8b138a82e275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba307dbf-01cc-4f46-bc88-6d8c4f1456d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef8475ec-467a-467f-9f8c-2662a2f9af49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436f36db-33e4-4317-9b74-c64a35fb46c6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b317ee2-e05d-427f-8469-d5a906f1b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508a19d0-826c-49a2-b26a-2e1b30e256a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97277e28-e995-49a1-b48f-48491eb0c4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c48397-a967-4298-a1fb-46f78ffafa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fee0c2-f92b-4e2b-91d2-44f5a6e71cbd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773119e4-c3e7-43c6-8b7a-5272a447b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d08672-6a27-442d-b75a-e570437eb149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f621a676-e045-48bf-b135-b3f8ed8a32ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b67c89b-5306-4544-a354-cceca410ab16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5125ebe7-fd55-4a98-9bb1-adcd022dc69e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b96209b-5264-4fcc-af24-f5eab29c0388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8061f8-82a1-4f6d-b0a4-d57c2943668a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f438ea5-1696-4525-bf59-97ba1901f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c144a-5886-4a03-9213-fdba8353f80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584b1426-40ba-4c40-af0e-1c29a2922a9a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f6f0d0-0e20-4455-b5e9-991aaf9a9be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe1b0a5-3306-4802-a25a-f9ae3116ffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd8ed9-c9c1-4f06-9985-60c8333233b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc5ebb0-de0d-4ac8-b051-4fe0b82d08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01139b09-11e8-4c8f-82ca-840e258ef3f3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b67bfe1-ec65-4e1d-a102-823e6adfd0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b08b70-9c4a-4309-a876-e111f921060b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7612ab25-d647-4449-ab46-2ce1ae87b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfc5c28-b330-410f-b6c1-af83fe1f7ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724cc580-8c86-48f1-83c7-425baa4a639e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c25a7e5-9edd-4710-8720-2cd6d78f6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d625729a-06d6-47bb-9153-7963aa8f475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758fc165-c1fd-4a84-8ac4-5c0a13ec0531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40d15cb1-1646-42dc-a8cb-8202c787dae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe93681-830f-43ef-baef-481886f8d5ec",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee60bc7-4eaa-4bc0-8227-495c45264812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392a85dc-1037-4da9-b0c6-afdd83cb8207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd78f91b-86f5-4023-bca6-885c77b0d267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "154c59c2-0848-41b8-a28c-df9316a8a709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2a793a-e38a-426e-9758-d46cf9bd2b97",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78d8f56-4274-4ad0-9dbb-9ea6d4ab7321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c99b1e-7e43-4947-a7d2-e7ce3a1aae88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e9e805-179c-4cb8-a506-245346447f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab570c30-c15c-4e0f-b2e3-d5c31eb98037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9de2f4-cc5b-40e8-aa06-07118feda583",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da20878-764c-44ab-a87f-1dd83ec071c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e3a707-ebc9-4b10-99b3-4fe7cdf08995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77e2ca3-02ce-4eb3-9431-d0db0c0aa875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d769c8b5-0380-4d30-9211-dcf1f2e2405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895f22e7-2ca5-450e-a443-e764c75e78e7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0600fc-19f9-461e-b17c-70cf4b6f78ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918a24b7-fb41-4ffe-bc00-c51c1f0d9efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f976d4-307d-4669-9845-b307d9bfe8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac1a6e8-9c3c-48c2-ac53-8ad43b9ad173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f28644-c139-41da-bd8d-dd208b5f9ef9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2fe132-e6c8-4eaa-bac8-f591011c8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a9f68b-812d-43fb-aa5e-050f61548246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23da65-88af-4b63-992c-0637e7b5f73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91710d3f-e2a5-4669-b1bb-edee2262858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975bb953-4e92-4e73-8f65-6889fa79a685",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0dee73-6b28-4353-a9f9-0e4d1a2c8d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187229b7-98ef-4914-985e-c72afabb0bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f194d8-97ff-46a3-8894-d7110ed6402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb59007-d907-40b0-9d53-8e89a2404826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2139cd-2e53-4043-adc4-9f3505d1e75a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0708382-b0e2-4e1a-82ec-aaddb233b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087ee9c7-fd7c-4fb9-a858-bc2e0decd3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba130380-52db-40fc-bae4-058890d65f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2b8088-5bd4-470f-995a-edbfbc12edfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b3a00b-2bf2-4778-93ad-03e44f9f8536",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715d6402-3a6e-43e0-b4f8-d27eb64d9293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6556929-1cea-4ac4-b4e9-ecdc2709313d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733e6ede-fdef-4984-84bf-15af72a3bd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7493b2-7de6-4b3f-afbd-60dfce613477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eed701-49ca-408b-9d65-37c0fd81605e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa07b7-d150-4b9d-9f2a-d3f5cc5e0fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb68997-2a92-4443-88d7-f100dea26b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594ad1b9-560b-42fd-adf8-9bbfd77d2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5436fb76-0417-45b2-a23f-4df96937a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c7f144-4cbd-4157-bd0d-fa7bd4011843",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46d9720-0614-4d02-8974-5bed8392ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad3eb8c-2f2b-45b3-8c20-717a4528b368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c7817-e34b-4d65-8874-ddd7ab24fd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff7e38d-4b17-49df-bf22-f66f2fcd74d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d50d3-a745-4f65-9d55-9a8a5a317983",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d31a9-de0c-459e-b35f-0f7f97d9e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbdf11b-02c0-4aea-bb64-0620b1a98d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a117481c-88c6-4c76-858d-0d128dc2da2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9355b0e7-d7ac-4d27-bbc9-77ee9034bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5528ba-b05a-4335-bfac-303e3aa822dc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa08ee1-f080-4367-9c6e-670064e4991d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0592f9c-7623-4a18-842a-347dc8095072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e08b1d-ae59-4543-a1a4-f8e60da37947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c83e1083-1787-4e8d-9ab2-61543b0fcaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db620382-692e-40e9-afce-b051970192be",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ca3c1e-f268-4105-b78d-d186bcc04a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e168d86-6158-409d-ab40-809fd61effae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3161e4-72b0-494d-879a-32ada31d3ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00c40f74-a703-439d-9c3c-23fff353fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2d329d-e8f0-4054-867e-daa86e2a3817",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319bcf38-15f5-44d2-9d27-e41fe29ede19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25cc9e3-69e5-4712-aa03-9f0c7b1356b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ccdce0-056a-4867-8047-f6a0a57eca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee579aa-b168-4309-b197-981feb109096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b7b25-afb5-48ff-a8b4-0a190f3b0b78",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb681e8-5ff2-4174-89e2-8e2280510549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd929ad1-31f1-4e89-b125-9abf710200ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ec9908-b84d-42d5-88c0-e691e0b9c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad44f281-779a-4bdd-a19b-c0581d1b64f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558d22c4-d80c-4929-a146-88532279e99d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a252365-3193-467a-8d22-e48d52382c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6dc321-4a49-49d3-a933-db6d4a0a3278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e98bba-15c0-461b-9311-603dd7947bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b478b8-b444-4157-93e1-a782ecf255e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe8a9b-0a64-4893-8e68-a80a230a1202",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06304c3-4d3d-409e-94c6-976f7980af1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886a5872-55c4-442f-b39b-c89a698b4477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c127cb-ff9b-4715-9c56-a8de5b63b6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0090ac26-07d2-47a0-ab6c-f4615e15dc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed39b07e-53e4-419f-b5fe-2c009d0784e2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93fd226-b48f-4dd4-afb0-462fdbcda5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9d2733-1a3d-477f-8bd8-cf93a4675868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0be107-b7f6-4b22-869c-a5039a51bd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecfa8f7-4ce4-48b8-9b23-ddc2daaf2274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b275dc31-545c-4547-b7ff-f59966188dee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47c49d-884d-415b-9229-304743dd6df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5f7fc6-bb4a-4755-958d-9af29cca4bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a628a92-884b-4c57-8da9-98739f7a1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3d5df4-2c5a-40e1-95ee-46c247002470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4249b58c-6d56-4a8e-8140-4bf76769f0dc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75563ecb-6605-46fa-9d40-3bba0e3ed211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961ebde4-7f94-4b9b-8899-f432ee1eaaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd5e536-ce29-41c3-b343-7146781888af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1349f5-e328-4331-8f8d-9923146f39c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcacf94-0501-4f48-b21e-0da408f06fbd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83deee37-a80e-455e-bdd4-5114e940ea48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9df334-7e83-4130-9598-246650d739b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7091b8-bd82-4941-b12b-bc830752cf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e49d0a-c936-4e70-9ce0-811edec73f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca939e0-6949-4906-8d30-d58a7d6d882e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a341fa4-a991-40d5-a893-8ddee79d722f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e45fd2-d58d-4395-b604-7554b386afda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c99d0c-5517-46a6-8c1a-50445881c39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e991ac-bdba-4bb0-bc4c-479750f2d2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1987a-494b-4e72-8eda-bc8ccfbae26d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc2edfd-4f7a-4af5-8aae-9f9b6d0c6935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf4ef96-c864-4690-8f46-bad664013885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaceda6-4027-496c-b408-f3d684ae2203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fad88d7-01ad-439c-b7cd-beccb5c3eea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7863f8ed-05a1-486e-a225-0b52fc90bf17",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a00233-f824-4371-9859-f2155b058fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093bf712-595c-41e8-bc6c-3825cf7d9b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2862be61-5da0-4652-ae15-949dcc0b33a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c90fdf-a5d1-482b-8c45-d422cde5c254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8972efe-f66c-4c7b-90d6-0a2a8b2a01b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad6b320-d3ef-4034-a489-ec764dd34ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d577c189-eb42-44da-aa2c-190150987055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd42a0b-8b48-4056-a6a7-6282f91f59c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea28caba-aa0b-4ece-b464-63a686d3c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f641538-7806-4a36-8014-750e1f45e1ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e45eaf-d42c-40ba-b33b-34f53ea5f6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd57aac-83cb-47d8-96a5-03db8119b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353bd74c-5e2f-4e7f-8d4b-8e7eeb784a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b87739-cf26-4f8f-8b44-c9cbf60d51da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08896c05-d539-4dca-bdd9-bf282a5e7f87",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053e970f-210d-4f28-a1cc-45d0170e079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff26efb6-23c5-4693-996f-6d583922a663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fcd11f-d44b-4799-ab6e-4f8f6dc678ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac67d58b-1914-4298-a999-8bfd61cdcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926ee1d8-50e8-42fa-9099-f4394e528ab9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ded887-bcc8-4046-b6ec-70750ace7d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a7378b-0923-43c5-b09a-ce84c181e457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc82850-ba78-41e3-9aea-53fa124d462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "635c6929-8ee2-4be9-b23d-0b0928a64dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820e86e2-673e-49b4-8013-61e75e44af39",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb404b6-cb96-44c1-81c3-b1a0e183d2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346549f6-0d6f-4275-ac7a-888f4d8ca79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd1f311-5d95-4b8f-9e36-9e275e5d3447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "595ef15b-e766-455f-9c8b-95e5004a7135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76941a80-7f2a-486d-86ca-c154d89ec86f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c44fbb-72c8-4c51-bf24-2e1ade951d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c5f00a-7778-43ee-bae8-ca7acb7e37a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ac7606-c529-478d-b8d1-cd40985c8460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "515c1392-1504-4f30-bc9a-bc59dcf9b36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6504ffdc-e51a-4ccb-93b8-ae6da6fbe36a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fa8e80-c11e-4990-a319-a8eeee04e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70ef3ae-e649-4b9d-b52b-b60879432ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a890449c-06f4-499c-85a9-dce9f32ea806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e08f21-c52c-4c2b-9448-8f00de048616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3042b5a6-0e04-497a-9ddc-4be00d7bdfa5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9200ad30-8cde-4a1e-8c57-70af389a52c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd43e7e1-ccf8-47c1-8254-987767cc0989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0041a74e-311a-4540-899d-2175fd1bf2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6296f15-17eb-476e-96f0-c92f1ad9988d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326bfde6-bf1f-4bb9-814f-7667d2f0a454",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81be686f-4ce0-4618-9978-90f640a622fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafe82f1-8fd1-48b6-b87b-e91e48bb409e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb960cb2-5867-42d5-b69d-c69af0f739ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1c647733-4b87-456a-9a80-6460bcaa31d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfcd0b0-ae9c-4dd9-a959-95042ca80d23",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b09089c-6b0e-486d-8e5a-97133d1f1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92273b0d-b726-483e-ae46-e4633aa89fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac75ba04-299c-470f-afb0-a1a276a7676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdfda2b-d6d2-4749-bb8a-df4fb7ee5864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09415b7-d9be-433d-a72e-5cb4e5614898",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ef6c27-97f1-45e1-8c0e-ccc7d98f841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd213a1-f044-462a-b28d-507f60572077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dbd66a-f87b-4573-b6be-a10384c94f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc75cdb8-7a91-47bd-8a6b-8db92d500f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026b2a1a-dd7c-4e29-9a71-a82d3560ee35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442fb077-7315-4a41-ae5a-2c45fed8ec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7a957f-ff76-4234-97f4-ad9799e81105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926a044-52d9-4084-a4b7-a40d6df24cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb57fc0f-fdb5-4e34-8346-6688d53cdf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5f3e8-cac5-4510-b12f-8ff89abdcbe1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320404d2-2f24-4bde-905d-b1e5fc1c8d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39944e42-08ee-425b-974b-9d8ff6759cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3184fcf-3c6c-49bf-ab18-69d02779eb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca58531a-34fe-422f-aacd-b2a5a7eec822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1aede-1b4a-4041-accf-ec78eac32805",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c0b7ea-0c15-437d-8595-6a8dc3ed1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d16a16-dfc3-4c9f-a4c7-42ba99c60b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50a21f9-7989-495e-95d2-ee1d20832633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0a7302-2b3e-4a6e-b4a4-e3cb3fb9b627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc9e57b-3d76-4835-a8be-1ff3f952ce94",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ad642-1c21-4625-b65b-1ef20b0fa0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3141a16-ec80-4a70-823b-e3284d385ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c3e61e-f641-4fca-aee9-e0ff4a8418c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6157789e-bc40-4598-9f75-e0fd40750af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffd46aa-0dfc-4229-bfd9-3c3d1eb384a9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02ce4a-ea6d-496a-9a02-5bf2056ab56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb7b9ae-8d87-4260-9b63-4ddc9da00c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ec8ca8-ddaf-4dc9-87a2-c745a24a7965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8775b5b9-8481-4a84-9853-8965712ff599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfc791c-ed14-4047-a5ce-fc48d1de1267",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17470e3-939a-4e87-8b1a-0a7844af519b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1013ddc9-f569-4276-b1dc-6000ba32bafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9b087d-aca5-40fc-a15f-5c568f0daa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581901e2-6b69-4f73-a99c-4f6c21ab8715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e388543b-44b0-4a74-b1fa-838d984f8b92",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964a45f6-1181-43bd-a110-4e7ddf71e47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6653bb-d4c9-4fc2-af2f-7a978206c293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85fcc81-f6aa-4787-a5b1-3f859d78065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ccc3a3-53d2-4d0f-8cbb-8cb6463dfe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e7eb58-dd60-403c-817d-719c5acb2ee6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc0402-65dd-4430-b48b-6a34ded3cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e75d93-7869-4143-94e2-b638f62801ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd0f445-85bf-4743-984b-122ae37be673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "878a2e24-7357-414c-bb29-3fa9ec8b26ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d157792-fc84-4aa9-a9a7-8ef384ab45a0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590a10e4-72b3-4f10-bd8c-1dc605bef0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31690cef-6869-49b7-b0cd-867e4240e279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197b5674-708b-49b5-a593-3d21410306ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b79d4fbb-4a82-4879-9836-51ca6038200c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c383bee-a901-4252-b967-631e1e7061b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42728a1-18e3-48e3-b266-f8312d91b75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1c98f7-38a2-4a99-8c2c-e04f3dad7c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb739a-9f71-4989-9bdf-004d6820f366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4903edee-9081-4c9c-a3b5-b62858bef3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564666c6-7539-47e5-8391-9fb1805c6282",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4616f1-1fcf-4c26-931b-52d90d5ccc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee17fc-5d8d-4f5b-880d-98f701138c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f3eb74-75ba-489e-afa4-4c2b89ba8943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d887db77-c090-482b-9e84-f89ac0eb97b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee39032-699a-44d5-b995-a5dbb7c5f490",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64672f52-bdc7-42ca-819b-13f1c1d3062b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32cd009-ed3a-4c2b-a380-1841b41f0de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233afaff-e4b5-41a1-ad89-2ed1c1ba3603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c70c2894-12a6-40cc-b085-2aab1fe84557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff8e7a7-a490-4f3e-83af-77bca947250f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb77e4f-a5b2-4398-b82c-6658abe565ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda1e94b-d9ea-44a6-b666-fea56d03f0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec989c4-b377-466a-a58d-df7e0aaac221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ff193b-d078-49e3-9dd9-477868eca96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84b58e5-ebc6-4968-88be-34cdb38a2f79",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f1faf0-1f1c-4603-b305-d5a2617dffb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3993b9-78fb-4a45-9b6a-dc3921a12f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9783e13-29aa-47c3-ba07-ab98049a6478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "600c4aa0-70c0-4f9a-b235-2499abb91fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4404025b-fca5-4dcd-a203-384c5ed8a059",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cacb96d-d095-4cdf-b997-fc2749297c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41806c9d-5e75-46dd-9d34-0ec3c93f37fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d691513b-3689-406e-8b27-aec91ac4383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc7d750-1ac3-4bbd-8254-6b92cbda164f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a492b35-689c-445e-accb-5b325478790b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece7cf0-136f-4ef8-9c44-e42db37974cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7ec01d-a302-489e-b2f7-0c2bbf8a07ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748fbd95-e844-47a7-94b3-0552150b0f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdd7daf-52f2-4bdb-a697-7b1238a171da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacfa8a0-6c0f-458f-8ccb-5c2a839f2bdc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaccf4cf-d06a-4754-9d8f-a805edb0cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b9b40c-b4af-4730-bae1-7e1bf9b64c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c50bf71-a4db-44b2-b547-bac3b8c9f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ef434e-6881-4b7a-916a-095d20f45f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a603254e-51e8-434a-8ae1-7246be52452c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae30de0-96e5-477b-b234-2029e0730c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fb7c0a-c0ad-4bf3-a597-878449161a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a249532-c764-420a-ad11-2eaa5cfd015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8290978-8dab-4faf-817c-9b7d4b94b83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f5de53-67d2-4a4c-9646-326fea536ecb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a7243-5b5c-4856-81a7-c6696c1a4b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299f03f7-9df6-4f24-9a71-102012f7614a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfe1175-5ad0-4593-bbdf-51678a1d69a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3aae8d-2a5f-4c0f-80d1-db6a92d29935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6ff166-2257-41fb-af00-059c702adf44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf02b3c-b80d-474d-a844-9177798a05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6c37fb-08ca-42ce-b61a-f203ce1f9526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f071e24f-9257-42ff-b0ea-c429eaeae8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05f3c26-f7de-4254-9533-79c201ca7960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b9ecdf-56d5-46b7-9cb2-558ae9a5e3e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4b1f8-cb7e-40fc-b720-249d78aff21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b7627e-687e-402f-9e39-c5c787ce6e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46637ff5-86a7-4c35-91fb-216c19c35391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac83314c-066c-4ecf-b993-b969337f3fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ea1ea5-f8f9-401d-83a1-a5df5f17a24b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7f34ab-0132-46fa-9240-74b8dc10c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e846669-0270-46c2-8533-d10467b9af9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c0f59-651e-4ce7-8bea-8e4d35d57da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d18e0c4-42a9-4d02-b27b-9c44908dffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c182f162-f0dd-41b6-aaef-d792904b9f41",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea07a17-9b9e-4d22-b018-b35b11f40e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12994141-5de1-4297-8f2c-c1ba95179903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a695309c-3ba5-4189-8bc7-97356d730fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14bb989-1053-41f6-882e-fdc88e8a2a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88438157-1689-431e-9ccf-13051b589053",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd596ec1-5f3a-43dd-98d3-3ed236cee190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a46278a-f880-4aed-a5cd-258fe65769c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66915732-2550-4da2-afe5-76e3dcbc6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27a8df3-18b4-443f-aec6-70970111a052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7200fb2-89e6-4bd2-8591-92d9c8b7a9e0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952fc2db-734b-4e5d-b64a-6d5a0947d96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349702ac-14b4-4b6b-8f2a-16b44bd95c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79c519a-a17c-4047-b28f-dc467b86a7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68843155-ceb6-41d1-b7f5-f17c7f090df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0199673-a693-4160-82c1-e1e468d92801",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5949781-ba3c-43ef-b487-3e44f8fe7fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961fa59d-caf4-4093-8ff2-3ee02daeb33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd48e83-919f-4759-99c0-3c06063df5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c77c5f4a-3318-400b-86f5-c31882571993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e7f6c1-f4df-493b-aed7-a11de710e336",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff6d45b-c30e-476a-8766-7dc45a53fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4fc967-f61c-4ea9-a0ea-a24c21eddabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03d210-c5b9-4dda-b576-64ccca84255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c976593-e73e-4b7a-a7ae-90a637404647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bac8fc-bbc1-4cf5-8169-c1662d439803",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09167d-4d81-4b21-9913-dc11447f616b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e157cbe-9483-4730-b90b-3192d0923e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416ad528-8dfb-471f-93ed-1490f1e2a5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "828af117-9914-49e2-975d-103dd6d1da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4b27f-4500-473c-a9c5-abcba5298094",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d569c917-327f-47aa-9bd2-ed8b101539f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce9b659-3a6a-4e78-8e5a-56f7ac60076b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c905b78-d686-4783-a72b-27a288b0bf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "676ae6d7-24f0-4560-b1f5-6c28f7991b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f267631-984f-4a70-a161-9d9c87423fff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74ae29d-caaa-44e4-ab51-5b4d38f2791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b5321a-76a6-4943-9b00-9459a57331c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678d95d7-96da-4736-8565-37d9a0802a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d76d7d-af7b-4c27-b017-47efb574bc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2216e161-54b6-4f31-9fe0-24a9ea70b9b9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a2c6de-8ce6-4c08-bbff-02a97400d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2347afb4-ea22-4a6d-a61b-4f613967651c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e432cfe-e28b-4007-96e1-f6aab97f4d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "648b9fdc-46f0-43e9-8aa1-cf764de0dad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8790ffb0-fd11-42ba-8bc7-33682285a5cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f108651-525a-4c7f-ad04-1e45402ffd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfe994f-d151-4e80-aead-a40cb6c08628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19336720-3a7b-43f9-b921-d289e47bbd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cf191b-d230-477d-a479-8add8330a648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28a54c4-183a-480d-8afa-f464344951bd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511fc6c5-8f21-4e14-9be8-303ff7fbd212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f8c7a6-284a-4125-99d7-0e0994af2042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c3e991-f221-4212-a34b-0dc2fd89a1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4adc4a-62e0-4864-bf01-14a8ecdc7eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe33cc4f-bacf-47f9-ab5b-c3b22d17faf0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7361c527-8a96-44de-b41a-c86d3567a284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "709e7020-9499-4e6c-9e36-21df85dda88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1483f8-081e-41be-953c-f37d0f6d5887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4fd8a4-29e2-4c1f-ad3a-bd85abeb5eb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a650b5ef-88c1-496a-aaa5-430dbf874688",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ed5f2ab-388a-4f05-b39e-22c690dd147a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b43a7e-2098-4e5d-901c-99d1e31287c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "854f161e-bb19-44bb-ac0d-9d55e3df3e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09acdd9a-a353-4bcd-bb5e-2c02b6491441",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93cb4d27-6323-45a1-ae7d-26ecb96c1e81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "153f88b7-4cfd-44b2-8f14-9c5ed3a00742",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4917a1bc-b330-4efb-8477-ecda73cbc960"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ed93238-556c-43ee-acee-054fd69bb62c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc590201-69cc-414f-8785-7e6e72bd7e1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6555132e-651d-4b9d-85d3-81f35119ef4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53f0be6f-5f62-470f-ae1f-585685da3395"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a157c0f3-0c21-47e8-aad9-8f9d65ba8fc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c22878b7-52bb-4818-8fa2-e5a4d0495c48"
                }
              }
            ]
          },
          {
            "id": "b4f89b08-3bff-4270-a6f5-965841a33704",
            "name": "Positive Testing",
            "item": [
              {
                "id": "21e04d64-2627-435c-b527-19a965ce43b8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b6e530a-6df5-4e74-bd99-36dad4c3e26c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "849ee6ab-2f4f-4c2c-8c9b-525aeeb31db4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be839792-1585-4d6e-90b1-38986a31cfc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3845d94b-3339-45be-a898-19d4d3702a4b"
                    }
                  }
                ]
              },
              {
                "id": "f895144b-61a8-4c3f-a401-47ca8f9f3aed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e449a000-3c43-4956-b841-f05ebfbde6b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc69204e-6394-4e6f-bd6f-80706bafeaa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0531b20c-b329-403d-9b19-f2114fc84d48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce238572-2b93-4a65-8c27-243e4d1d248c"
                    }
                  }
                ]
              },
              {
                "id": "c156d19a-1e8a-4cdc-97f4-e2847d082689",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2566cd01-e0d8-4149-a196-1e49ff5cb49b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "750e62ac-b91f-4d8c-8833-35d0dbb04fd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e1af5da-507c-4830-a56c-a07348129ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3e716d3-fa0d-467a-a512-1a9ee8d2875a"
                    }
                  }
                ]
              },
              {
                "id": "111bb32e-8598-4e12-81e4-6cff65f1d18e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd5235c1-f9f2-41c8-ac32-ba181562c113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96a57206-d0f9-4522-a757-1e5745f939b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a411d9-9c1a-428b-91bd-46b2dfbdb422",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "669097b8-7fab-43f6-b889-56e2e688858b"
                    }
                  }
                ]
              },
              {
                "id": "308659c7-eb67-4993-b26b-014353a2a290",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287aa232-aace-467d-b55e-3834a962e720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "915cc555-2686-450b-9979-e6fc35c9da7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4052142e-bf94-4e83-beeb-42e4605c98b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6fb33d36-19b4-4a2d-be1d-102cbb0b7f9c"
                    }
                  }
                ]
              },
              {
                "id": "667ccb9e-c8a6-48a2-a017-cff1d556ad25",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5d618f8-6430-4c64-837f-b55f37675f2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29571f47-440d-4915-a2e6-827afcff88d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e6d2d8f-89e7-4715-84d0-fcfbe434f553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7eb930c0-6706-4635-8003-cefc7ba94fd9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2e2fbf9-9207-49a2-8305-f53335ea2ef9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83c1dcca-290c-42c1-8978-da0ff7da804a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "535c5284-e34a-445c-b527-74a44994e7cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdb3d737-4d54-4e1b-98a8-245ce51ca2fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feaf29d2-ca14-4b16-b6e7-1d33309f62ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "38245490-6194-42c2-aad7-dbf067c6af82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b545ab8-3626-44e2-b24d-0db652b21416",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab56410e-9c9b-4afb-bbd8-fa536a035c1d"
            }
          }
        ]
      },
      {
        "id": "4b1164a9-7eb8-4437-8e7f-76fcb34a3f3e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "86851ead-c8c0-4a67-8c0f-b8ae919fc385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bee1802-8cce-4098-a622-b155041f2626",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "137c85c7-d65b-4b59-8472-17f1595491ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21ce09-00db-4c87-9c1e-58992b470525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c3a9ff-5836-40d8-9a17-395cd1ff95bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6a1e35-7b36-4be2-a984-ac89aa55affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d539eb-c6f7-4052-92d1-1811027e32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2454e71-b13d-43ce-9c68-b36eb0eeda1a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c112b1f6-49e1-4afd-a92b-9e25ae382e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3753ab51-60a8-489c-89b7-959624aeae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81249907-99fa-4dbb-a762-2fdabd7df3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "038603f8-3b84-4992-a7e0-7c47e3a20f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01a06f-1946-4742-a0a0-07ee4d4e76c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d6527e-22fa-4ecf-b76c-2bc50f9c965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a03563-b7f4-47ce-8ae2-5fdc19a9e0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6648d835-1193-4e5d-a74c-461144106d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a9cd17-1d0c-401f-b32d-05d264f6007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489098f-6568-4bbd-86d6-9dd87bfcfde9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48a39f0-544b-463e-8bbc-e6f1fb2a2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fa8556-db68-4451-852a-9d5b25c55416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d609705-bdad-43ac-8418-278b8f266286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae1d1d0-3cd3-4466-ad68-e61f787b0316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9691b469-39dd-404c-8bae-065f66904ee5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489eece1-d3ba-4d12-a1f4-ac6983b11bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99744f8c-ddb9-4901-b5e9-648526430291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef60d8-3249-4a14-ad93-616303c58463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c91328-14cd-4ba2-a49d-7029f31ed157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802dc6c-3c71-4c34-90ac-4dff8dfef129",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94831e9-b2bb-43af-ae7a-9a13155ba5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ff851a-3d1a-49d9-b321-6274cc7422df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15b665b-938d-412c-8ae4-0231e7ec6397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b3d1ff-b826-44c9-bf4f-97927bad3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d21ceff-0cfc-4955-83da-46b979c7220b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b56e45-bae4-46c0-b1b5-755194e8561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083a83ef-dd80-4511-b462-70bceb4e41e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f0f803-8f0f-4e08-8812-63122e5f449f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e0d36d-d926-443d-be12-0e2fcefeda19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78143478-a6fd-4925-af45-b70d8fc4b76b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10867d44-68a8-4092-acc3-58f5b74f4fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009afee0-b4a0-4e85-85b7-d6891ac1b38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4f7e3-b394-4613-b609-333707ce5489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9076dcf0-09ee-4146-86f3-f13b21325d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93c69c-6441-4845-becc-cf46875cf51b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44cc831-f28c-4439-a61c-bb37d882b010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b6cc1c-089d-44ca-ab21-393596800567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad42ba-d79f-4163-9264-cb8ccc98fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dab8e06-19f1-4ab3-b5f9-3c8ff463d7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bfdd18-211e-4d40-a01b-b5afa750052e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1802241-3fbd-400d-bba6-a61589cb0f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea19a8f-962f-47ec-ac3b-9bbdfdaba9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a152f1-2162-4d47-adb5-d82d4d8542cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8d21dd-f23f-4f29-8a81-2027be61a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03efe9ee-4700-4d0d-9dc3-cfbeb4b63739",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f397a655-5406-4c24-b517-0712a43b7e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccebfac-f015-4b33-9a05-e2579afc3645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66f577a-27d2-4607-bd32-8f046e954a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac628e06-ea7f-4ed1-9b8b-b98cd725203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4f8883-8f92-49f4-8fd5-f35e37023c50",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e75d2-2cf2-41de-a126-1b72cdb7a009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba28cad3-da92-4acc-bbe2-26c7345e3d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad939a8-3e6c-411b-a4e9-86213095aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3beac9e6-80ae-4a07-a589-59c07fd632de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62379041-c88a-4102-89dd-33e282ee5128",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d607db5b-68d3-45fe-be23-3fdc2d282414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5304d23a-f8ca-4d61-b636-1f8970fa33b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c35fea-638f-44af-844d-fae84465fa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7ea817-f68e-4ef9-aedf-2ae10ccb9de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854b536b-f96d-45d3-9d9e-780fee93c8e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570eef93-7245-4f5f-9d60-13f1669490fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e37fb8-eace-4c30-8c2e-75088ef71737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d71266b-b540-452c-852d-e2b45cd9a329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e5e41b-3035-4634-9c02-81957f9bad3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2955a0-2a09-4475-b23c-3affe6a43a44",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daab5ee-1574-422b-a436-e96e7c7d6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1a4e49-7cc3-44d5-bb6c-0530aa3d8c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de79d6c-eae8-4ff2-b6a5-3260458037cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83bac7f-2bcf-44bd-b4c2-5de9d3fd457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9300dbac-93a7-4261-aa47-45b1bad0073e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0786ba-fdab-442f-8903-db334045c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce95297e-8f4d-45ec-b8f2-9f51c745e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7171dfa-6f02-46d2-9271-4e7eb351a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a980666-243d-47eb-a6e2-25f1ce182659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580bb0c8-a8be-4996-8e3c-74ef2208452a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efb3929-5abe-40b3-a3e8-98319ffcdb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad9d57a-61cd-49b4-ba57-9bfdb7c9aad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1769ba58-d46e-4740-a133-d3a513e2db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f001a3-470b-4f67-b1ea-4f063bf32aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dc77fc-34bb-4520-af6a-e5bbb0894571",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0d53bc-84ca-4763-b0b7-d7347bfbde57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c764b10-cbf4-498a-9b07-01bd20924b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b982e3-c0a6-4380-a521-10ba1bdae026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bb60d1-6a5a-4346-a030-37feea421b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ed94fc-b292-4523-a7b7-0b4e15b14f1f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b472dab-fc78-4312-b7a5-129be6f80dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcc027f-6ea2-489d-865c-2360ac3729e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52041004-3c98-49bf-b589-790cf1645783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee433a2c-e67a-45f2-9d9b-859c8d1f97ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1745b477-c58f-4563-a285-851ebf929e89",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49963542-eb77-4e47-ab19-f73242ce8a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9574ea-7a90-4efa-96cd-aa00e3961b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e44bf-333b-47f9-bc1d-c28622177ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fb6b30-574d-45ed-aa5c-38d993c59cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c992b3f-4368-4b15-8c80-e065e0c5d178",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d61bf8-9f9f-4b87-96b6-9156945f06ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d68788-6973-4933-ad48-84100cbc14ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a7f8e7-e8e6-4c53-900b-bdbf849d9e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece3c702-9259-473e-9213-638fcfba2820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa9341-0000-44fe-9e72-444c5b79dcaa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d701858-f76c-441b-a577-f8c005103ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9457bb87-e470-40f7-9fe5-4c26d6f73444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8670505f-55ba-42f5-8d31-efbaf251f2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca29a5c0-f9e6-4ff9-acee-e291a4ddcb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a59c2e2-3c6c-43d9-b44d-b38431b2a837",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069a3e68-077f-4e0a-a314-262fa0ddcf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f75fad6-bbdf-4941-93c2-02406b3f2f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df6dbab-1afa-474d-9872-0f01fac21184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605f7c15-495c-4eac-8147-35ee07ccdaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f3a398-45d8-4c89-bcc3-1fbd0790cad0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcda793-c52f-4914-889b-e2f381836511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40eccae6-a19d-4c88-bd22-edb2e04d3a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eca83c-bbe7-4790-95e8-9f2f01df2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acf51063-3479-4d70-a787-861a38974ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5875fd20-1bb4-44f2-8f59-d3d29b736041",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b29aa39-4c48-4b77-a943-4d745353a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c9b96-6501-4ae1-b99d-3da4e668ec5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d6e186-6c1a-422b-be8a-d8eb33117709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "355f51de-7555-4c8c-8929-2cfbce8472dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c816fea9-25c9-4a07-9349-288f437d78d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904c9bba-4f40-4092-91a7-567b98a864f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d85b2b7-9179-482c-9a06-1f7c7b12f0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275031e1-0f59-41d2-9fd5-96a520eede8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0099b9-0ec4-407e-bbc5-d200b7778c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57dcee8-679a-47a3-b142-9de3ea743eb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f9094d-45fd-4d84-bbd4-fdc344f3be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c955b1f7-8a1c-46c4-8978-33b7650eb157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0494de2-27be-4300-956a-141eb15bafdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ba8542-63fe-4e23-8405-127d18329b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8124e5c-c983-4eb8-8535-32721c60d734",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15356f2c-5ab6-4ba2-afb1-a6fea7286931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96225e56-7ed5-4c9b-b334-39c02a81c8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f664139d-d008-4ad3-8ba5-9f2b4bbfe346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74d2193-b511-4e92-ac58-aff665387337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9776bf4c-cb5e-473d-9fb5-00225df28c83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c50e9f-cd16-4077-8187-3628186cbc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f1d25e-be70-40b4-9545-4715481f591c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc15c80e-2cc4-407c-a2e9-8d50fae8bf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2520fd4-12c0-46b6-a107-27415e7b0d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cc1f76-11c1-478a-af45-404e6f1b76b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a857f6-e4c8-4547-893b-de9c16c46c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c33655-f88f-437d-81a4-8b4c3b8de693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6640a9-7697-43f1-b132-3180346e9ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c8124d-9dc3-40b4-bb63-a177822fbd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4b344-ed57-4205-a3e5-ee168f37ba56",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c79b16-783b-4ca2-99a3-8524f1952de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78ce087-702a-42d5-af72-5386ee4cf330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c83ac76-1c08-4230-a8c4-c2075fe4a139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75456768-4c61-4366-a063-8048f65990e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1283c9c8-8360-4b51-8053-099ededb2841",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bcaa4-f386-45f7-960d-e7b7bf44b288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636cad6f-3435-416a-b57f-f58b4a4b92b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6798b534-2548-42ab-ae24-49939587456c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed5e44f-fea2-4556-ba2b-68815dc40d33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "250f1eba-5d2c-4cf9-ac34-b5fcf82dc594",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42ee7fbe-0360-44e3-806e-f5b8f01de785",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecac1da-4389-4432-b29c-c5cd50e05488",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eca0b2ee-5f12-431c-8976-3cbb4e8806a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9be1c0-8e23-4817-9997-850fcea999ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d96b2c1-57e2-477f-8650-d15575434d21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc190875-d5ae-4105-9d75-c04bc6d3700d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c2a187a-581a-4ea1-b1c9-91b89305b01b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ca83e91-0256-4b3f-878a-2685e0a42596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e94a226-c13f-4259-9e29-12517414b480"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b03de404-38f4-4cae-974d-572b93cca819",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7be01546-045f-45f4-9069-eaeb23f15964"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd42f088-d23a-4e50-9ab0-f972d792c489",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27373288-44db-4321-9b94-eb8f3c2922b9"
            }
          }
        ]
      },
      {
        "id": "8ec42bfe-9b30-4390-a716-891485daf895",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d2773719-4e68-4439-aae4-fa5ae41aec57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66ffeedf-d200-476f-bb53-954bcdfb3ff3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4468dd4a-8418-4191-9859-a44f1c4f00df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29e59f7-f536-4257-8f8a-4a744b19ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad813890-3248-4575-9297-a801927e7cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0516b58-8323-463c-99c2-bf64f9d30320",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4993795e-dea3-4d15-be25-862d3e77f1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74123c49-c27f-49e1-ad32-f756106d4bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01064240-87f4-48a1-a60d-ba0b99d04748",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9677ea7-66df-4d2e-92f0-989df0636b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e52f31-1df0-4b44-9192-fa3a2b4efec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66405be2-9152-42b9-93fb-c90ddb0dfeac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeee22c9-e762-404b-b7e7-1e9b5457fd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e717b4-bd39-4f68-b366-7bc777b24e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6561f747-88fc-42ef-8dfb-a4f0747020f3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be43c9c7-2abc-40f4-8ab6-85d216d6caee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06dfed5f-cfd9-43bb-ba7f-e3d0bc1265d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e353e53b-55af-4069-9cb0-09f3e4a6c88b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21c4e0a-bdb6-4f48-934e-5fc7e3ca088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d19e963-993d-4754-9562-ac9d6e883dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb13117a-127b-485d-b2b2-1d9bf2dae4b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4e145a-6bc6-4af5-9c75-5d9860edea7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637e546c-6ed2-4ce9-8ed0-f1b419bca076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56f594f-5be3-439f-9465-c773a39eda09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108e41d1-5b4f-4b3a-9691-756e34656f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad790a-52bd-4cbf-b4db-89b6b82af77a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ef6c84-9db0-4580-a243-55eafb2576ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da68bfd-f6eb-47bf-a28c-e0594c8927af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5838a49-2a20-42cd-af04-2f16955fff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3026db-8162-45c1-8abe-d09246cb8284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6669699-75c8-4573-85f4-be09b494bfdd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b322802c-7aac-475e-bbeb-b7e413c85ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5187c41-c142-4cf0-90fd-bd3f2732e65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8b1c2a-fb78-4786-a34e-d583bc77a65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2098003-5d2f-49b6-8161-a572869eadf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0966e6a3-a646-4b35-9d83-5aa11b8e9ac2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3685eb-0388-4c2a-8f04-3d8ffed54959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ddc086f-d2b9-4c83-b9d6-c6300a252782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd02d9-0690-438f-bfe0-08c9a6c4fafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61634ef-ba68-48ce-aa78-3388dd4eb296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d06ada-1112-4031-8276-07ecdc539eb1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71955c0a-cf1b-4fc7-9602-b99286d87160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a1cb0d-d5f6-4898-b8e2-665a9aa44bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d548bd7-5bcb-4c71-8ecc-1018e75c7c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652a71eb-5dde-4d13-92e2-034ba4438075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da4172-8c39-4cd4-b151-797038797c6a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaffbd3-9f88-4af7-a88b-b496ab1d6f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc5b342-e1d2-4e85-9beb-74a75dcddb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0053c880-1377-49dd-87f5-11dcd096b65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd95d41-045a-4e0b-9b6b-7d2be70a3075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec83ddbc-c002-46b9-8bd2-261ea98ce4dc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99498774-6557-42da-af4a-518d15bcd398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05d2b7e-2c4e-4ad1-8678-8bcc4e7cbc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2329999-c886-4267-bbb8-a39dd78c19c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092b0a1f-549e-49ef-ac8f-7046cb64cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fa0636-9c2f-47e2-b550-cbb4a592aef5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c1c705-f37e-4ee2-bb09-ba2655a86649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c462fc16-068d-479a-98a1-fb9d36fc49e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57453635-3a2a-4e80-a82f-97b6508abcd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266ee6b2-a0a9-4855-8bf0-9bfa9a8e5ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b053f9-5484-4018-afb7-bafd4e8f85c5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39467a2b-aa80-4c03-b461-ffab5f351f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a107af5-6be2-42d8-87ab-0665c86e1557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18a59bc-455f-40da-a3bb-dc7f12884554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cab1e5-ee11-49e6-ab1a-44c9f0674fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575a6ac7-5936-4d0e-8d4a-3c29aa880228",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe577b1-1cbc-4e6f-9463-d0d8e98133a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4d10b7-ebf0-4aff-bd11-9663615f9b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacccf0d-8682-46aa-8176-c6746fe624b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56df33b4-7cc3-4a76-9c3b-74cd186cdf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061df2db-157e-4e12-b6d5-422a430bd055",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d39ee9-9537-448f-a7c5-483b9aa8d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9c1e40-9cd4-4374-85cf-f13fa6010ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd511e-c099-492e-b1d5-a56936b1a898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246a49c1-3c34-4e7c-93bd-e66df996b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cff70c-3bfd-4897-8480-15beb61e9613",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91eef12-8aaa-4cbc-a905-d291255a3a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f092252f-fc2a-4932-a5d0-8debf16358ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0506ac50-36df-488e-8a41-23eac1c6da51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0e9e5d-2ca2-4168-b5e8-ce5154af153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff2082a-4cdf-4f0c-9150-0259814da007",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871361a5-bd5b-4842-8e59-059e3f8d1ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46899802-f886-4da0-9974-78232c8c179d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b289b724-ea0e-4c5a-8652-6b516866281f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1d3481-bb62-41c8-bd04-c41a46a3a6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d09e546-beb7-4c85-aeb7-c298f8d3dd60",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257ebd45-db28-4754-b0b3-0cbd8851b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febbb31a-e9a6-41b8-9e33-0650ceef68c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca44c60-0675-4a8a-babf-6026a44c1cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803868e7-e837-4b5c-b402-b30313006be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b241f36-120e-4908-8974-2789732c3464",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4b4b98-e94f-48cb-8be2-ab4d184995f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f4b86e-39f2-4a98-b539-a3b064ba705f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e988c65f-e650-472c-bf74-d62c74d58b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d93393a-7688-4d79-89a1-587f5b173b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c104cae3-06a3-44ab-b8be-a296eaf56fc6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df2e0e0-f8f0-418b-8447-8158d6c69981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936aa1a2-df67-4dfd-99fe-2554204f0563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d0e8d-b9fd-4e5d-bc94-1024c1528465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302638a5-2c40-4d32-9e48-e1577dc051ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edef5244-2a1a-417b-b609-b6bdec24f879",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8453bb1c-c1f6-4197-8974-66831f684196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c289d1b9-36ab-474c-b0ea-7e871532a4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1e25a0-e150-49a5-b0c1-e4eafa008d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdf7a1b-6505-49bd-a584-52c916781db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e970f6c2-8239-4328-891b-8e12e97f2197",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e757a75a-5bcf-4476-8413-2928882017d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6adc803-570d-4f66-bde7-f647742a0f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9194eb-9364-498e-bcad-c50ffe71c89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b368197-97c9-4dcf-a79b-37458d27d54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584bf374-48ca-4429-91e3-7a9747f34bf1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9252a50c-a343-4105-b1ac-179054d03b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf1550a-cbff-4789-a5d3-96231280ca5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22d041-e1fd-4b03-905d-2126680681bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb380b2-dd6d-4e50-bee5-541aa30801ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13c13ef-f8a1-44c1-9e91-da21f1fe4ca9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c13688-0c61-4dbb-b3d3-ace9ed2050da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8ffda8-9543-4798-8b16-965ccbf36ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61276b2b-54eb-4de9-ab51-ad01ab844f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bcfc4b-4f4b-4453-9bf7-a33ec1c8babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b23d3b1-4143-46f5-ac12-ee2c76579864",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849d7137-cf7b-4d2d-99bc-25fe4d6a3461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f151a768-ec4b-4948-9bed-e503b80bb444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5bc126-85a2-4587-9a0e-5b5c8c4e0dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5030f969-2517-4216-962e-f5204cd6d3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2834cd2-c598-4f54-83f4-371e7b924594",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf53b51a-e26a-4040-b3be-49edafc72fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b6161b-96a6-4725-9df0-4e6c08430566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d6cb36-f6f2-4097-b30c-e26a717400c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cef78c9-05c9-4395-bb94-1f782b253df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79968e84-9ddb-440b-94f2-4e49415a47db",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd58578-404d-44bb-9b0c-0d12e5e6f064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7caed12-b3e1-4251-bfdc-23fabd20b106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9941ca5-b4a5-4193-a45f-05454d783975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82795f0-8fa5-4d8b-9392-66ef0f022061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8314fa-37fc-4cd5-8c28-74f4e3b955f7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b3dee-43fd-456d-a6b7-9176e0d0bc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d466aab-26a0-4b59-adfd-e3eb01b3672b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176692bc-f157-4032-9105-bf01140d1447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745f1555-e1c2-4d77-8970-ede952402e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c3224f-c745-4a42-9336-6f4c286c1e6f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7be3d0-0729-46f2-99c5-943ae3cbf766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4b2580-2948-472a-8f34-cffdd8bef1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e6e84d-b364-48b6-9aa9-5e789224a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860df517-3863-48f9-923d-a125f36e2794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b780c77a-e725-47ba-a87c-d2cb44398e1c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3513f-f13d-455a-824b-16e47573144c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06061f20-91eb-4101-9779-04e40d02bea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de26919-b703-4b1b-a777-9a4c948a5a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ef2599-2a43-43e5-be6b-a0c3991d7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120686d-3061-4a5e-9f86-0b138a05c075",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da37c040-2f93-46db-b798-29aff7c7ca5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82851faf-4f36-42ce-82c1-f4e6fb978ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075386ee-cabe-4fe2-8489-4c83090198de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd0690d-0c70-422a-b99a-bb10da6e6646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b1fa8f-33ee-48c2-8a25-ddaf5a0a0db2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4542110-efbb-4c9d-be22-10e6a353f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb0304d-7f9c-4204-ba52-e3d9dff92919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1cd4ec-02a0-4bca-88bc-bd580ea8d00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e05086-ff69-4fad-92bb-50ee7dfc02bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7072e-86de-4dd7-8506-00c15129bdd9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6858dd0-b27e-418b-99bb-da045c945a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78eaa99e-0c19-4616-aad2-fc4f789cb572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5728a780-0177-4e42-a3a1-e00a0aef7665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cad7371-bb0a-4506-b623-6d6d2ebec278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e65208-cbdf-4a68-9d79-7fff54ca325d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b761be46-4ab6-4f7a-a640-003749b6add8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba38a139-a951-490c-b6d6-950f31ca6084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6f5bc9-5b46-498b-867c-53231ae53d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dae1ae-fe25-4d10-81d7-9045ba1444b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd072d5-0e07-43d5-8371-dfa9e5e77c2b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d433dba-bfd1-4e76-abd0-3f6c7515f5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e068ce-f50b-43cb-bf87-8c9499436193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728a570a-116f-4f82-b34b-d8b928d0f6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6342aad-ffc4-45ae-a742-65542728bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa6ed91-1876-4a4f-ba5b-0230b6eb02b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17fde8a-3831-4c64-8111-b986f4b2a308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd77129-a257-4651-8295-bfe3ffaf71bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d843435-5e83-47f8-ba66-eb8115a3bfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a7cf8d-e6bc-43d5-b30b-4795119d88cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c664278-8f6f-4312-86fd-d21975e8c550",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5cd54d-651c-4dfc-9767-720dee9751ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b21687-39a9-4932-a405-30c85e766b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb876fc-c95a-4eb7-9212-4c3ff03a72e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809d9920-5a91-47c9-89fb-30e8b62297dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d1999-7454-42b3-98d4-80ef078bd15b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91984d70-4c21-4263-85fd-8b041dc57dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c139bdc-bcd2-47d3-86cd-3ac43f731fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fddabb-701e-4501-b952-c07520061295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05f31d1-b069-41b3-9015-9e3ad6008187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a1363c-f404-4616-98ce-a426e1e8359a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf53afdb-29ed-4f8d-9f20-1be559939b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe46cbdd-9b67-4c44-9500-8027d2451563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f951ff19-5ee2-4442-8136-80894ca2dc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4453ed8c-3bad-46d9-873f-8b1a8dade79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33ad57b-7e59-4654-9d66-c05ff6f996a8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0d0b4a-2013-402f-9eb2-fc677e50c01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3a59c6-cd4c-4f6c-9a45-e109b973a792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0db163a-305a-4e85-9adc-a4077404e77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37821819-f4a0-48c5-9ad1-95cc4a2a20c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f8b6fe-73c7-4c1d-b12a-01b81926bb00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97c3a87-7168-4f07-b780-2485150039e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed68f851-1078-43f2-97c6-30b7c233898d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d799cf13-fa6e-4836-b310-4401687ba269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8fe95b-0f2e-4566-a51f-151a4f463466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab3e19d-5baf-4b4e-9269-e765c9f20a1b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c76b7c-7a89-492a-805a-51b610a9763f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076044ab-58e0-4103-843e-d82c033bcc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa17ea7-5603-429d-ba98-e2d86e7173a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d3884a-53e5-4003-8141-b5553a6f57d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0f53b1-c8b4-45b8-a799-6458cb82c86f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9cc40-6b3b-44c7-99d5-edc37acd3341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbd1d0b-3dea-49dc-8ee7-ebd907fb4c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d54828-4bec-4df2-95c2-d9120faa7efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed192db-6658-4b5d-a27c-cbfa21ba58ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf65d52-6fea-476f-9064-201662342d35",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d5889-7472-4a15-afd4-4ec3128a9592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2939bae-f6f5-4da0-83af-dc006458771e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518d33c6-fd17-4b95-8b3a-08385211b865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9148e8a-543e-4094-ba83-4f8b22553730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6579647e-4a63-4691-b5a2-3f2812699a9a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cbb641-8583-4a58-acc5-729b1bc10368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fb2593-4f99-485b-9aec-83038bea3b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cb89d4-b8b0-4c6f-984e-ee68daa1c568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6300da4c-edff-4892-914d-473e9c18e88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64521ad-6154-44c4-a9f4-970e8057322c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b7169-77a4-4b40-bc0b-780992119553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ca2533-a36c-4299-bf86-6fa2cdf5083d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f173d58-9b5e-474e-8db9-137f103c4f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2f4f87-f3fa-4add-8b61-1d2ca158b6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dfaa5e-98bf-4e72-83ea-1466acb143af",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9bb70a-f215-4a56-bdd9-16adc2337e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3f382e-6131-4ba6-8453-f2e0e3fac9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149e435-8052-458f-bb02-d07e537363ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d82643-94ca-48cb-ac94-7a495cbd8936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e334fe-66de-42cc-826f-3ca6d7e6cce7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563af821-d4b0-48a8-9f3d-3bf3bd28f727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d219c0-1f1d-42e8-b2bd-f8fb0b500441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a293243f-ace6-474a-bfe4-5db9ea3ddcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861b67c2-8b7a-4b8b-bcbb-bc4df622e27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5204520-5a44-4fc1-92c6-f5948fa4373d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82007de3-15bb-47ff-80e3-e784c222412e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a80cd-c697-4c94-b3f4-eea099c41273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5bfa17-031c-4daa-9c50-1160be21c041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6318e703-2f88-4744-80ff-8b253ebeda14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e658b3f-b851-4d8d-b64c-6d1efa1ba40b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb4723c-2c7d-4cd4-a78a-5189b0d83724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad7a522-bcff-46f4-8b07-50c01c48093c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56366eb9-5c01-4ba5-b9fc-4ea87e27bede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdb005b-fc15-4748-b09d-cd738a5089ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915592bf-de3d-4936-bf13-bc8b75815b59",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866e725d-9d9f-4768-a6b6-736cc01a149b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2904376c-fb0d-4748-851b-b73cda33b6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47375a0-f84d-4573-9321-b0c3688457c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97fbd03-99c8-4fe7-9919-07419c8ab33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905bf14c-9f8e-4a7f-977e-8c1d3a7e40e4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad57f110-688d-4c40-863a-5db520a7c000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9dca51-7eec-43ae-ba7a-f0406f415282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f562674-9011-4541-b808-737668a21cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233bb416-9a34-4df7-9e60-7f53375c5b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81df5315-9ee6-4e78-a980-15925d9ab4e3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb08be-7c0e-46cb-9c50-e036b38794a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e37d0dc-e35a-413b-b99d-bf07caae1ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a4296-96b3-452b-9dbe-c7245c116e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13570864-3972-40a0-9642-1ab1a158a999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f11a1-87fd-4b2f-b7fc-f2cb107eea83",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127d0513-cd6b-46f7-95f2-4fdb71b1a6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b3586f-e43e-48fc-84ff-496a39e34f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0c1faf-410d-4135-aa3e-7478d0c582e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f45262-7a5e-41ca-a680-14a5cc74d55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45b6e58-ef36-4a6a-af79-61bc4b8f9263",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06d61ab-b6a3-4446-a833-20d1a013959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a4b422-471f-444c-a680-c96421847436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db76d757-0831-4e47-adbd-565ec2a2d982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e583bb76-77cd-49d7-ac9e-69749d32a433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb9e13-1a39-450b-aa4d-b1292320eade",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1eb54b6-4aa4-4127-85a0-935861a6816b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f3a3d8-e2a9-45e7-aa8a-532e3610b8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81e3fdd-2143-4cbd-8f31-3ca272d96002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bb761d-c40c-4189-a75e-ffb0afc60370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb493578-258f-4a0d-b2fa-4e2e18688e00",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d89ebbf-239f-4b07-90f6-c7c2b50e3daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9751d777-c13b-4ea8-b110-bb43c5d899de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeb6e07-717c-42c1-8b1a-78893da221d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b147f7e-2703-42f2-8b36-6dade4d94dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680cd41-9581-4d9c-acfe-b70693e2ab5f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81ce79e-9d48-4235-b8e6-9772da80308b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fd3d95-a764-4c6e-b923-de0964da4fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73df729e-7971-4ba3-b7fb-c91957611c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bd0567-3493-46f8-8271-42f4e78e2428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4b7454-b161-4ed4-9b0a-97f359ba8e45",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500113fd-86f9-4807-b70e-014a2a442070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7a4abe-ac41-4520-94c3-14cbc9bc7b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eb3752-fa60-48b7-afdc-2515123c6698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee0e2d6-dcf1-486d-91b6-148f8eefc2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977b6dd-31de-467a-b7fc-382dbbb3d875",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7ba30b-725b-4b32-bb27-555623995412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7471cfa7-25a3-4221-8a0c-cb9e52333adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bf3806-30c1-4800-8605-34a0ff4088c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e621dcfc-b3cd-4827-9c03-676d7b20b3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e043fc5e-010b-47f5-9c76-21876c83ea45",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580f4e58-7894-4d9e-ae80-e9a136cb0f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3370496-ec3e-4082-98f6-b09d8bc9be7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6194888-855e-4696-a0da-efdfd9334804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d735c18f-5d78-41a3-8fd2-1d218b18a20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6aa85f-a944-462f-8c47-dc869b292e15",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9decc3c-925f-4a27-97d3-a3121796de69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bf32a3-e8fb-493b-847f-2e1b84f4db79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bced31-e61f-49ec-9b2c-231864e1680b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1332bca7-393b-415a-9164-96a309e4838d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201c927d-9ada-4f64-925b-6138889201c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8b9b5b-0120-477b-95d7-1f5503e3dc61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8587789-256a-455a-9887-9495605dd2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bf0cef-8749-4d02-b230-686c089946c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc9e376-2815-43b9-8cf8-3aab5de27a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bae648-3cc3-4441-8bcc-f06496026a61",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95f141a-ba07-4af9-963c-fa28b019dd37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c5f328-83ae-4c48-ac70-0205d33dc216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9b3157-82d8-4f19-872a-b07e3feab64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fb2ccc-5a5d-4217-9115-169aced66e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afb9ece-507a-4364-aaaf-2a410e10bb23",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f737d-4c86-4515-8e34-f3d829f29872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e4ffdb-0880-447d-9fa8-da2e205ac89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569a176e-ab64-4633-9f02-f096a6ac54b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6601773-78f4-448c-95b1-eda5e7664fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3384f-fa9f-4ab5-bbc4-56a66e94452b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4414bf-d884-456c-b52e-878b836a803b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cddbc0-f2ef-4368-8ea4-ca082ce723a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60f23de-9f56-41c4-8108-8d38781e26fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac09fb9-0ac1-4c0e-b112-6d2ebeccfcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6776d64-58a5-4b5b-88dc-d9895726e633",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd7822a-7a78-43b1-afc6-49395b95deec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550e6188-f599-45cc-9db5-b7ac8f831ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e8c13-7115-49e7-9a32-c7d0412a8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4394286a-0038-426c-a529-2a3fe324b63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9164ab9-8f0c-4bb8-b938-31e1efc58fbb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae466e1-049b-4cb4-ab13-805a0863eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea5c04e-0a10-4125-8eef-0bfdd5bf9213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a5b45d-352d-435b-94ee-8b7731795928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7de9020-d2c1-4be1-971d-a85208b5880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc357fb-0811-4cdc-88bb-4e60acc60ff7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d46b93f-524e-4a3b-839d-353d1e8dcac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb33810-4939-4971-91be-ed98bde13a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3778f9cf-caaf-4b8e-b96d-f92286f92df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af715191-cf52-4326-b392-b436c2ddaf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ddc7ee-9417-4982-9085-62419d09b61f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fa0cf7-54e0-4602-a142-4613e6829a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b68fc50-a88e-45ee-a193-a776c855d556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2b1f1a-6c06-4986-a68e-56ea9e87cd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303969e2-e552-494d-94c0-5af70e20181e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9fb3fa-d068-4d0f-b2f7-f6c39d94a296",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9562145c-c49c-4379-8ab6-844553b72025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514d179b-004c-476c-a0b4-deb7d05383c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41949fc3-1970-40e0-a57f-c6813edaae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8dfc5e-9a35-4f1f-ba56-074b6b1c7e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b94fd38-7890-4648-8d9c-7f2bf3761ab6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ba3bad-4cb8-451a-9088-3fbebe21573b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba44d9be-c067-4307-8f4c-19bb5b55b60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7078ddfa-c7c5-4790-9e57-1940fec414b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605d2336-c13a-4597-90af-f6d789ff9ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cc95dc-0934-4907-ae96-6b28d2daa384",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2e9bd-58d4-4624-a26c-546c0aa55bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb835444-866a-420d-b430-3317911009b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf632ddb-2e17-4ae6-a468-d0d10ef4db1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e716d449-bd8b-4d33-804e-64e4b3f6ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7b6456-1ce4-4f59-98da-8a0b942014dc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd15313-abfd-4d42-bcfd-c01530335340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599fdb3d-58ce-448f-8db4-6e73d21234d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a23ae7-fc11-4598-95d9-1e0ea4a32019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bf0c57-5e9b-4c10-973c-7fb49c817cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734a84c7-8a74-40f6-bced-357353583312",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcad1e0e-d261-4aa5-8b0c-edcd1cb61106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d360fc15-a22f-4a94-a72b-f8713958897f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6e6919-187a-49c3-afc8-e7661ef61a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58043ea9-5748-47c5-8a5f-d67f024506ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93ecc7c-ba1c-43ab-b4d9-c24b8403d25d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb359a16-d50b-435f-90cd-489acc774e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50d3840-3d1a-40f4-aa2b-e8f28172fcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f110d36f-f059-4b20-b492-0e70c935dfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd17107a-2b74-4554-b2cb-454d325e1405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5dd942-f10a-4d53-a66b-7e193c9e7866",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa7d1be-1a81-4d90-ac64-f1ca25fc01a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b91970-64cb-4d68-855c-1542187918d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcbed66-5b23-4b84-848d-9c5c3f76d23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023c3d19-a692-4fa9-9fcd-011043ee7d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d03352-fae6-4137-98b1-1712cf6ab3c2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfa88f7-ab6a-401c-80e0-7b43d5e02a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5239dd78-e0cf-47b3-adeb-fe05a91903ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c7fa8a-f95c-453c-afb8-e5be77d3ce88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f78fda-c2b5-4186-b676-62d620fc2c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cd32eb-9bb2-49b4-ad64-b708c615ed77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efd720a-1589-4fed-99bc-ab77004f05e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d13028-a5db-45ca-b736-f659e646488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d8c06-5260-414e-8a9d-5451678286de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea60487-d921-4425-8d20-22d9c5158437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bf4f03-1dfc-48c1-8aab-b5c67fe3ad57",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5ecaf2-f6e2-4b33-bee0-691b6495b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff66724-8a78-4cd8-a6ae-4db3bc1521b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee555b-1856-4b03-99a5-a7a130ba083d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e739f20b-2960-47c0-b210-1f415924e697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0c573-47cb-4410-8420-e0dc9c37d928",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eba6187-59a3-452a-9ce7-e072b5bb8050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2ea534-ac97-4e11-98f7-701eb5f54bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d61cce-2d85-433e-9659-2c0acb58e2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e488a-fc5f-4b40-8f77-d26ad03c876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42622788-1714-427c-9298-77f689f3d3b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb33e071-bb86-4839-a3a9-a02d8e6edcb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948ce747-b281-4393-b42c-7084f6d7cc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08283156-d499-48ff-b052-b2cf0c4146db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5035e23-47de-43cf-a905-1999665f8f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea54bef4-b242-44a3-bdbd-72cae8a33952",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f5d207-254f-484e-933c-7aa83001009a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012f3ccb-9b97-4c54-ac13-16db19794a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c30b539-ade2-49bc-82ed-f217492a1034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe0b73d-3419-4ccb-9851-4eca2a7a2e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509b64df-7cc0-4bac-8893-701de103ba8b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ef6fae-47af-4a73-8675-98649ff8fe96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713666fe-bafc-4744-a502-91ec3659a696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa3512-1e5b-484a-8ef5-7d933771c6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795af813-7b3f-4d02-9947-6475e12834a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbb2ff7-10e5-45b5-8c2c-5d33bd830f83",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37beb60-1942-417e-aeac-70bdf99c2442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a87ebb-7748-4446-b0c4-5ccbf30aae1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aca323-4f7a-4d72-b4fe-c7412e7fc931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6bf76d-c2dd-4fa2-8c7b-9baf28121334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fb5cdf-5597-47fc-9c62-0b286f03500c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b5262-6bb0-463e-a5f7-d5b1c588d648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a535b16f-aa7b-40af-8871-c34d35ba6afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdbb22f-52b5-4c6b-88b0-1c4b2b8dafe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe75547-3a58-4a59-951f-baa07acc1747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2526ea48-dec2-40fe-8b4f-87d4780459f0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915b4574-6b1d-49b4-8db4-5ddbb7e48224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7883ce-f37b-4aa4-a6f5-d47f2ce3f913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda6f4e-f26c-45a7-9154-0638b92e24ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f83546-8e3c-4186-95cd-246f288684f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a2080-2a7d-4d65-82f8-887fc0eaf605",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f62f2ac-5d95-4c3e-9a98-1c005a5db6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90dca80-ff2f-4247-a742-f694153b9a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02a54a3-361f-4b31-92d4-9711396b03e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc8817a-ac1b-4b9e-8a9b-afe101fe7533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4205f09-c02a-4e8d-8e0b-dacf05823596",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e99e135-8dde-41cd-834e-f3f8221c560d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aeb315d-c2e8-467b-af2e-75e34d5eb2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379382d8-9a69-4c49-b91b-d125de276652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00369391-938b-4cac-8f43-4b5c69ea049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b89647-bfcb-4186-a3fc-88e7c40fb976",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fe4b2e-d197-48c9-b100-c6f9c566b286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab0dea6-ede8-480f-bba1-d763e07d1659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd27eac-0b1e-4b07-af0d-544bac736144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9f5fcd-a513-46fb-b891-9244abb44e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf2b6c-8319-4bd6-bb2d-27286838844d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0231960e-148d-43a9-b932-38051a2da11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d99264a-4a9e-4fe8-829e-f3f89083c23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85a183-7b6f-437e-a54f-8eaa8caa5198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0687845-67f6-4b1c-a049-ff5c5ec7e8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9916ca-9065-4dc1-b33a-ceadbfc52c45",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f904fe-c1eb-4def-a3ce-e8dc98a609a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85e02bb-36a5-43bc-89c2-6bcea661d180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a515d747-bf26-4fdf-ad48-8eab2529ede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63d0816-00de-4bc8-8a68-4a7594ce33e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11be7332-b42b-412e-9390-5d4ac73ae194",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27c7327-35f0-4d63-9e1d-e18171f3f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27613c2-3a93-4bc5-b22b-3fb0ebdd2e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933556d2-7edd-49b0-af3e-f1f6ed0fc5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ff1ebc-f754-4c0c-94d1-1e122b9da45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cec785-d6dd-4dc0-bc8e-c3be98be551b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5ed3de-917d-4fcf-8d4b-c45b9e2f504a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39adcb56-810b-4903-8d95-75a21ad27748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c4e75-f8d6-4ed7-8600-b877a579bfb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc574bf-60a0-40d4-9ae2-a2904f5ab25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a7a8b1-5f16-4b57-8e14-e08bd5287d28",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e6c40-befd-42da-85b5-1cee99fabd8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7952e366-b052-4590-ba35-6820f516ac44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96c5594-739e-49af-9707-0a395aeb1d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c233c263-affa-45a0-917b-9acc7ea0b8d1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1b25fbb-d379-424c-b3ad-ac0507aad709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "351c271c-60e2-46bf-9540-a5849fb214fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d098b819-e879-4bef-8a1a-d0f765a74776",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c0dc523-d7f7-4d96-96be-cf4afe949bec"
                    }
                  }
                ]
              },
              {
                "id": "468497eb-8fb5-4744-9880-a9482419a1a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b50ea8ca-d547-4ef6-9510-f5d36041ce6d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5151afb-234f-4281-9703-45f78e975db2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5e0183c7-6c27-4782-b299-68fc6a1e89ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c71cb2-81fc-4b41-9bc7-5b62eb012fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3621f617-3f44-4752-bea1-d4fd7b9cef24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bee6a1d-e0b0-4139-a584-709b47e9d517",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d21d86-1518-4b86-88bc-0c2ae766e4b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5994b627-8cb5-4222-80d5-b8c5d9c2615c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf68fabf-a1da-4350-9ed4-2f5f087ee4a1"
                    }
                  }
                ]
              },
              {
                "id": "75c4e41f-2af8-4e5f-b580-ff8a1aedb8b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3171b6e3-2c5d-4ebf-84b1-9a08f711a789",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bdb734-e5ce-4634-bd2e-37358a49b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "738cd51a-4d69-4cd3-a135-ebf1dae5ce1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9399fae-f20c-48b5-a48f-b68bd142b51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb5335e-7c15-42b5-bad9-5fe93d8d527c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "951ced25-ed44-4f0e-864d-825423f6cf68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1b86edf-c2e4-4b3f-b9f5-0903b901806b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d0c89d-04cb-456e-bea7-0c63d87d48b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d31031a7-285d-4b8f-8c3d-244f7bed3826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a037d5-b265-4662-a424-5c5ff49ab112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2643bf27-d7da-4625-bde7-3d7215b2b33e"
                    }
                  }
                ]
              },
              {
                "id": "debb8697-59a7-44db-9b6f-9b7ea70aa578",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d71513-2438-48f3-abbc-b562926aba29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36c3eb69-b555-48d4-a424-2faee02493d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75ec75d0-36f5-46a7-b72c-4c11c4df9373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56ef8dab-7a19-463c-8290-0bd9e7aedb93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0da86315-5f0e-4db3-8ee2-8a4fe8ef0d32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3776b9d1-479c-488c-b64f-cb58d9b792ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a875fe39-3d0e-4aab-8a55-d841f5fed4ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41ddc581-e9fe-4a63-8c88-f5fb3ec91026"
            }
          }
        ]
      },
      {
        "id": "e7513da5-2bab-4c21-8585-ef50439811a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36496b94-6be6-4d96-8c9a-e5c87b088b26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93a8ca69-20de-4dfb-abfe-90715bb41af9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d468d39-1600-48b6-9ddb-5ac4dc8b803b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866083e-3c79-4a84-a6cf-2ee28a7099ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "da43b2d4-3ff3-46f5-b9e1-358a533e20f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38f963-44f3-49a9-952b-5326d30b444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e7225b9-7e40-4418-b4f9-67d9226ac518"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f0ae2c7-195b-4271-8eb8-2f0d36ca911b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f57386f-196a-4ed8-ac11-4f8deed738da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c59dd5a-52fa-46a2-89b1-148b4055590a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cae0c01-a460-4f52-9a80-468106e0aa57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65a606b7-c52b-4040-b8d1-61bea7551af6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a4bbb69-9aa2-491c-ad56-0a19323e921f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb6df7e1-3a2b-4265-b878-d67bfff22549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d71d93c-12d2-4f35-b7a6-30bdcbbc689c"
            }
          }
        ]
      },
      {
        "id": "fd46e2ea-7cce-4e21-aacf-c7e3f5f1485b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c828e809-c39a-4b3e-ac21-880b03767896",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecbcd09f-92f4-4d61-a50e-537c6095270e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9511f616-b8f0-44eb-8e09-e9c36fb85e92",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80be6dc-6225-490c-8d6d-30d7875064cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a202802a-b47d-46bb-9354-848605a25011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8034f1f-ecb8-4f77-8381-b61d7cbdabd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ecf947d-b985-46d0-a645-0e9eaf24398d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5655cb95-9a4b-4d7f-8c06-6c8979934952",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfa2bf94-d441-482e-aa49-ec216ccc9516"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c4be3d-39eb-4878-8d4a-4acde74dd758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d29c7fca-8894-4e2b-ae83-a3667783e054"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "155a8510-e51b-4a32-9846-525bbafdb7b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f433ed8-fd4d-493f-81c3-e4f15e4c02f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51531950-aec7-43a5-83d0-dc9b7a331473",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a025e6-a0bb-4473-b95d-55040750ba0c"
            }
          }
        ]
      },
      {
        "id": "fd1f850b-3fea-4248-b8d3-1fd22b4d8226",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ddb0017a-220b-488b-8a58-04c4466cb2e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2dd81f1-a4ab-4b8b-b33e-807a0ba505de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b10ef458-dc62-45b8-9219-aa064bba5772",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a05e4f-bf82-4110-a77d-291d73902992",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e0d05d2-3c72-4659-b1dd-2ba24122128a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc34495-d7e2-4357-af66-505ad0c2bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630c5396-cc4b-49b0-897c-32639f70cee0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "483f45a3-4be2-466e-9bed-945410c89042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0744780b-5363-4853-b669-017447a25902"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b49d3c9-8b9a-4b91-950a-3eb31dd0173b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "874b91f8-14ee-4985-b02e-11812debc3d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9898c9cf-42c6-4747-93fd-482c62a8b80e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09f84aa5-6557-40ac-ad6b-7c955125f79e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6723950-46a3-4501-a01f-9de2844b9b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98cc7b9e-3249-44c1-8066-cb329ab2352c"
            }
          }
        ]
      },
      {
        "id": "45be9855-3db7-4ebb-99c2-eb27f673019a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ee4e678-f746-4f5e-a2c4-90b842d645c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b739cf5-a43b-497d-9d41-8a0223c5e484",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c0fd9715-8d69-47f2-a75d-3301b529ab3f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13907fa4-f91d-4e57-be4a-9687045f0173",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "910f1ab1-cdf3-4508-b07b-a130c101d762",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.0528455284554,
      "responseMin": 13,
      "responseMax": 7141,
      "responseSd": 862.6285984323521,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687135324893,
      "completed": 1687135496050
    },
    "executions": [
      {
        "id": "2d9770b7-884b-4eb9-9e40-ddf70bbe0986",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fcc719b9-135f-4b53-a2e9-4db67ee623d7",
          "httpRequestId": "30fb75e4-83ba-409a-8181-35b4ba13a073"
        },
        "item": {
          "id": "2d9770b7-884b-4eb9-9e40-ddf70bbe0986",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ef92353d-79df-4f91-9122-2992712958bc",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "4c4f779c-076f-4b5c-afde-e7efaf4c4665",
        "cursor": {
          "ref": "22250b08-3801-4304-80b6-280b06008852",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "53aca4ea-2f7a-4330-8781-634c9d855644"
        },
        "item": {
          "id": "4c4f779c-076f-4b5c-afde-e7efaf4c4665",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0a49e259-2000-42a6-8582-59344f99d9d1",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "195c0a8c-b310-4dc8-a566-f61cf940742b",
        "cursor": {
          "ref": "561d8ee8-c9ed-4fb9-9b91-509b87de5ac3",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "56c80632-dc6c-4d45-88ca-236c6f74ede0"
        },
        "item": {
          "id": "195c0a8c-b310-4dc8-a566-f61cf940742b",
          "name": "did_json"
        },
        "response": {
          "id": "48c4224f-9b22-4844-b98b-817e6010bf61",
          "status": "OK",
          "code": 200,
          "responseTime": 976,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ccd27d-9136-48ec-bf21-38b041d21c87",
        "cursor": {
          "ref": "7d6c8902-4f4f-436d-a14e-f44bc7b6a37a",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6210c708-77fb-48f7-82c3-8523695f2a15"
        },
        "item": {
          "id": "27ccd27d-9136-48ec-bf21-38b041d21c87",
          "name": "did:invalid"
        },
        "response": {
          "id": "89d5a3ba-5b4c-435b-af34-d99ba1bac40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ccd27d-9136-48ec-bf21-38b041d21c87",
        "cursor": {
          "ref": "7d6c8902-4f4f-436d-a14e-f44bc7b6a37a",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6210c708-77fb-48f7-82c3-8523695f2a15"
        },
        "item": {
          "id": "27ccd27d-9136-48ec-bf21-38b041d21c87",
          "name": "did:invalid"
        },
        "response": {
          "id": "89d5a3ba-5b4c-435b-af34-d99ba1bac40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d1da96-7ff9-47bc-94bf-e401eabc700d",
        "cursor": {
          "ref": "d7aaf3c6-4e59-472b-8c95-ad87295f650b",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aca55ca5-b113-4b91-96c5-5f1ea332126c"
        },
        "item": {
          "id": "60d1da96-7ff9-47bc-94bf-e401eabc700d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97b4ce55-8538-463b-9ea1-fe1074e55cf1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 702,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b649e2-d953-4f59-8dd1-81faad939269",
        "cursor": {
          "ref": "0e6616d2-5df3-4e4d-8e50-befd7f4cf6ca",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "89412a1b-82d0-4670-ba89-2f11d4833d03"
        },
        "item": {
          "id": "e3b649e2-d953-4f59-8dd1-81faad939269",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "55651b74-ba4a-4ef6-801e-808f1a44a4eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 710,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a03847-b9a4-4735-b973-a17a03beb432",
        "cursor": {
          "ref": "96060385-0977-4365-9292-3d68e4bf017a",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ccd61b89-b081-47b6-8470-62f78c97210d"
        },
        "item": {
          "id": "b7a03847-b9a4-4735-b973-a17a03beb432",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1bff9cd3-c94f-4c9f-814b-f0083cfd91e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab7b27d-e9f6-4b3b-84d9-8e1e6856f282",
        "cursor": {
          "ref": "ee5dc8d9-1393-441b-9bf3-0c9b815b6355",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "44776cf2-b6d3-473e-8880-a6ad569ca4ea"
        },
        "item": {
          "id": "8ab7b27d-e9f6-4b3b-84d9-8e1e6856f282",
          "name": "identifiers"
        },
        "response": {
          "id": "c3743d5d-758d-413a-abb6-1a59e28e5d51",
          "status": "OK",
          "code": 200,
          "responseTime": 1284,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f31ee5-5f9a-4afc-b83f-270040ea4dce",
        "cursor": {
          "ref": "9e95fc50-7bb3-4396-ae83-58ed48c16533",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "131caa5b-ac68-4b45-b1b4-04d45306eb09"
        },
        "item": {
          "id": "82f31ee5-5f9a-4afc-b83f-270040ea4dce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6ef974c5-5db2-47aa-9694-10e42ae403f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7342a116-5109-41c7-b8b5-438f33cb9e1d",
        "cursor": {
          "ref": "b5adbbdc-978a-4f03-b0bc-ea2a2c90b5a8",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22115a50-3817-451c-8be6-811840b8440a"
        },
        "item": {
          "id": "7342a116-5109-41c7-b8b5-438f33cb9e1d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "02297b21-3ec3-4610-abc9-ff3af491611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5a4e0e-d4a8-4942-b858-d0e6a912ed23",
        "cursor": {
          "ref": "1ed08106-453a-46d2-8752-a2e002cb08b2",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c1913ce-6075-4703-97d9-0e7854e1f409"
        },
        "item": {
          "id": "7e5a4e0e-d4a8-4942-b858-d0e6a912ed23",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "268e4c42-c951-4ec7-ae55-7b9b72c60ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750f8c85-d305-4c31-add4-b859ba717c89",
        "cursor": {
          "ref": "bc595407-5c3e-4a46-acc3-350447f3025f",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8e2e69c-0376-41ce-8e99-0f72b2dcff0c"
        },
        "item": {
          "id": "750f8c85-d305-4c31-add4-b859ba717c89",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "80b4a4da-2fa1-4e74-96b8-2f1b12c27870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65edbf4-3b62-4b5d-bd6b-9134e626f6cc",
        "cursor": {
          "ref": "9aaab55e-cef7-4b72-b4b2-eacd6d05d41e",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a02a9aa-5be4-493a-a69f-aff60c5e266e"
        },
        "item": {
          "id": "c65edbf4-3b62-4b5d-bd6b-9134e626f6cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "64b92f05-13f9-4cd4-8b43-46da23872496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae125a0-8c07-47e7-bf7d-93bd26ef2106",
        "cursor": {
          "ref": "af375c4a-8525-42be-816b-5d57fe0eb29a",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f9b4875d-95cd-4e9f-98a0-bc08bc4c39d4"
        },
        "item": {
          "id": "bae125a0-8c07-47e7-bf7d-93bd26ef2106",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5408445d-9754-4039-84fa-233e8fbe2b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d446d0b-4645-49cd-b0a6-c0f413b97ae5",
        "cursor": {
          "ref": "0cb1ccc5-527e-46c1-b117-f76b77cbe6ee",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3b755b87-cc1e-4243-81c0-bd15ee99a534"
        },
        "item": {
          "id": "4d446d0b-4645-49cd-b0a6-c0f413b97ae5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "138354c9-d96f-45c2-ac70-2612a95c1667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773a0cbc-2c4d-4da6-8860-5fd4e5d52a03",
        "cursor": {
          "ref": "c118f566-a6e7-4673-a887-15b41e59fa8b",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b09a1cdd-102b-40f8-bd1e-065858864c0e"
        },
        "item": {
          "id": "773a0cbc-2c4d-4da6-8860-5fd4e5d52a03",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c4c80769-4984-4f4d-aea8-193e87752406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239dab1-a753-4ab6-9200-c26e6bce62c0",
        "cursor": {
          "ref": "31527e4f-5935-43c2-aa40-888dc0f23a02",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d112e901-a004-4926-b022-01d97d255d29"
        },
        "item": {
          "id": "6239dab1-a753-4ab6-9200-c26e6bce62c0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34afaab6-4659-46e2-b79a-a17d8ab7cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec88c9e3-5157-48e1-b4b0-9b0ed83b5aaf",
        "cursor": {
          "ref": "bb261657-4540-42ba-b2d1-efc7fd0a6ba6",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c0b6e7c-2ed2-4945-bdf8-bfcedcb90cb4"
        },
        "item": {
          "id": "ec88c9e3-5157-48e1-b4b0-9b0ed83b5aaf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ae461ae-8d4c-4285-8e54-1aa0321be951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8aeed8-5842-459e-8ab5-7ba534e07629",
        "cursor": {
          "ref": "1b8b3a22-d935-4697-9d47-9cab106ee8a9",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6515a18f-a4a2-4a9b-b4b8-e9d289cdd91a"
        },
        "item": {
          "id": "bf8aeed8-5842-459e-8ab5-7ba534e07629",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a95e473-e4f9-4c6a-81d5-c59efcea64e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58923020-6885-46c8-98b5-caec79ec5bde",
        "cursor": {
          "ref": "b0e6e203-02a1-46bc-a851-aa88f87ba8cb",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4cf1389b-6631-4d65-8c32-e4c5f209d0d3"
        },
        "item": {
          "id": "58923020-6885-46c8-98b5-caec79ec5bde",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "92e96695-99a1-4f7c-9bd1-4f49bc965def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e64e559-5f6d-4c9e-9165-d8614a7eb794",
        "cursor": {
          "ref": "48bd7420-b7e1-41a9-9644-d4586ad464e6",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5ab8d1be-61b5-4a71-8aa8-3d29c5e0a493"
        },
        "item": {
          "id": "7e64e559-5f6d-4c9e-9165-d8614a7eb794",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5a8839c0-61b5-4795-92b4-09bced3568a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f918f8c-5fc6-4320-b3a8-8a015370bca7",
        "cursor": {
          "ref": "2d068c5f-b582-4baf-abf4-0a19c44c4abf",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a2b3a9c2-6fab-4978-9451-9ae379dbd3bd"
        },
        "item": {
          "id": "4f918f8c-5fc6-4320-b3a8-8a015370bca7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69f45231-ff1d-4451-935c-e8ae5f030cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3fb695-9acd-4fc3-b21e-2dc086156c9e",
        "cursor": {
          "ref": "5c32739c-f898-4cec-a844-53543dec91e3",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dd4a6f5f-a448-4c53-931a-806334f7bb91"
        },
        "item": {
          "id": "5e3fb695-9acd-4fc3-b21e-2dc086156c9e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7b7a4104-c4df-42d7-8ee4-631fc64da83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79958897-a642-44bc-8ca9-b138b33e70e0",
        "cursor": {
          "ref": "028746df-afeb-4aec-9c3c-fc9601021855",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "34f8cbfb-c427-4be0-99d8-b23978cc3ceb"
        },
        "item": {
          "id": "79958897-a642-44bc-8ca9-b138b33e70e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c1460843-a342-44ef-af5b-b2afa043e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e42e2cb-03d0-44db-bcab-4dad2f2dfdca",
        "cursor": {
          "ref": "1f2f3b8c-5add-4ba2-9525-da6e0312ab36",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe5d82a0-9771-48a0-9e33-fca75a577b4e"
        },
        "item": {
          "id": "7e42e2cb-03d0-44db-bcab-4dad2f2dfdca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "938ba833-7d83-4332-b76b-6bfc572ccaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436f36db-33e4-4317-9b74-c64a35fb46c6",
        "cursor": {
          "ref": "6d5ea989-9509-481e-a7f1-5c07cbc7d853",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1baa4c77-c404-4621-adae-96df2e13eed9"
        },
        "item": {
          "id": "436f36db-33e4-4317-9b74-c64a35fb46c6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3812cebd-516e-4ca6-95ac-2837d1d772b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fee0c2-f92b-4e2b-91d2-44f5a6e71cbd",
        "cursor": {
          "ref": "3d8c20b8-cc3c-4475-9041-492614f87b70",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7ada8742-46dc-4a89-b156-3569c8eb3dec"
        },
        "item": {
          "id": "f1fee0c2-f92b-4e2b-91d2-44f5a6e71cbd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "513d4726-0d08-4835-bf61-633891f45036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5125ebe7-fd55-4a98-9bb1-adcd022dc69e",
        "cursor": {
          "ref": "7c5ae8c6-e25e-4ca8-8c2a-774ff9a54dea",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c550ee52-2cbd-4603-a5ea-b8ef816f7dc8"
        },
        "item": {
          "id": "5125ebe7-fd55-4a98-9bb1-adcd022dc69e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6862e631-4504-48ef-bb19-e6d0175170b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584b1426-40ba-4c40-af0e-1c29a2922a9a",
        "cursor": {
          "ref": "9f2f995b-5327-4ffc-843f-c68005f2cf0d",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6814af62-aa6f-44b4-8532-1acbcb0730ec"
        },
        "item": {
          "id": "584b1426-40ba-4c40-af0e-1c29a2922a9a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8f79c4cd-05f0-4f73-8cb4-37fb8721a5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01139b09-11e8-4c8f-82ca-840e258ef3f3",
        "cursor": {
          "ref": "ceb78922-5d59-4584-b045-84903228ceb4",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5d55ae13-759c-4adb-82d5-c7d165b8cfc6"
        },
        "item": {
          "id": "01139b09-11e8-4c8f-82ca-840e258ef3f3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f1b4ac3-7742-4934-9e95-0effed5fe5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724cc580-8c86-48f1-83c7-425baa4a639e",
        "cursor": {
          "ref": "9b04c41b-2e44-454b-ac3f-0ac0aef93d41",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "41e22394-ed77-4920-89cd-5b58066b6348"
        },
        "item": {
          "id": "724cc580-8c86-48f1-83c7-425baa4a639e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1faea705-7361-4f97-a179-d8f87be32688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe93681-830f-43ef-baef-481886f8d5ec",
        "cursor": {
          "ref": "ad462d3d-8c85-4897-91cb-b6ce2c76ae81",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a8e7da58-06b9-4fd5-9012-3f5928c3d4bc"
        },
        "item": {
          "id": "6fe93681-830f-43ef-baef-481886f8d5ec",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f0f9270c-8c71-455b-992f-1edab7e21474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2a793a-e38a-426e-9758-d46cf9bd2b97",
        "cursor": {
          "ref": "f2cd7a4a-f889-403c-bdba-70de06799c61",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4408345f-2f63-47ee-83bf-2361b7c57a0f"
        },
        "item": {
          "id": "ec2a793a-e38a-426e-9758-d46cf9bd2b97",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "172bbc80-2521-4a63-a380-e848e20754c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9de2f4-cc5b-40e8-aa06-07118feda583",
        "cursor": {
          "ref": "0eefd1d2-3a27-4ec6-bb8e-3e8033312491",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9dbd6ca0-7568-4182-88dd-1c84f76e2e12"
        },
        "item": {
          "id": "2e9de2f4-cc5b-40e8-aa06-07118feda583",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3fadcd73-4855-4c78-bac6-4ed50852bbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895f22e7-2ca5-450e-a443-e764c75e78e7",
        "cursor": {
          "ref": "cf4d7848-a466-4d3d-8260-d6944561fb84",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6ea06248-ef69-4907-a3da-73f6d51ad0a0"
        },
        "item": {
          "id": "895f22e7-2ca5-450e-a443-e764c75e78e7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3e55f03b-48d9-435b-8ca9-8feb162f8bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f28644-c139-41da-bd8d-dd208b5f9ef9",
        "cursor": {
          "ref": "ec6037eb-a732-4863-8a22-5bf9267bc8b5",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aae738ba-a0ea-48fa-8234-5d382aa2b4ff"
        },
        "item": {
          "id": "f5f28644-c139-41da-bd8d-dd208b5f9ef9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "efef678e-e0d5-46ce-a4f1-2d85478e316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975bb953-4e92-4e73-8f65-6889fa79a685",
        "cursor": {
          "ref": "7df0550f-020e-4222-a4e9-a280afd574e9",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a49b2b68-2f6c-438f-8cff-95bf16d48846"
        },
        "item": {
          "id": "975bb953-4e92-4e73-8f65-6889fa79a685",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "919b6860-5b51-490a-bed3-a4d14557fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2139cd-2e53-4043-adc4-9f3505d1e75a",
        "cursor": {
          "ref": "2b9ffc6f-76a6-4e72-a37d-56074b4905cf",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8f0e9814-dfc5-49ee-b66d-c132e2cc66aa"
        },
        "item": {
          "id": "1c2139cd-2e53-4043-adc4-9f3505d1e75a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a80fc49a-0def-4600-a422-5966bb51ffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b3a00b-2bf2-4778-93ad-03e44f9f8536",
        "cursor": {
          "ref": "1a17a436-cfd1-4802-b1e0-5942b22db41a",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "333d66dc-933e-431e-93bc-c370965c15e2"
        },
        "item": {
          "id": "06b3a00b-2bf2-4778-93ad-03e44f9f8536",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ce0f90a2-30a2-4629-9572-8e20de0205da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eed701-49ca-408b-9d65-37c0fd81605e",
        "cursor": {
          "ref": "257e9302-8e69-4259-be94-0b1e116b6faf",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "56fed64d-3eb6-4649-862b-db56dbcad3d9"
        },
        "item": {
          "id": "13eed701-49ca-408b-9d65-37c0fd81605e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5538c71b-07fd-4446-b1e1-352efca807bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c7f144-4cbd-4157-bd0d-fa7bd4011843",
        "cursor": {
          "ref": "175226f2-ef4c-42ab-bd63-29a6062982b7",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "76397bad-4ad8-4060-92ee-5f2f9069835d"
        },
        "item": {
          "id": "c7c7f144-4cbd-4157-bd0d-fa7bd4011843",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "afeb5adf-18e1-46bd-8ea7-287cf9da8a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d50d3-a745-4f65-9d55-9a8a5a317983",
        "cursor": {
          "ref": "f6e1616f-3198-4c67-8b4c-d34ba4174d10",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "94483637-2142-4e28-aad7-ffbb89214929"
        },
        "item": {
          "id": "e11d50d3-a745-4f65-9d55-9a8a5a317983",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b729a6a-002a-4951-b506-2264974276c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5528ba-b05a-4335-bfac-303e3aa822dc",
        "cursor": {
          "ref": "c42f1c27-654c-4f08-9b80-fda3b6ae4691",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e398e41-905b-4f32-922f-da488ea315ba"
        },
        "item": {
          "id": "6e5528ba-b05a-4335-bfac-303e3aa822dc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d94607e1-1b65-4183-ad37-0aa899ac0681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db620382-692e-40e9-afce-b051970192be",
        "cursor": {
          "ref": "36c2de6b-5be4-4e35-8713-a1822651dd36",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "65b63d0b-0988-4b12-9c5c-a270226a4d0e"
        },
        "item": {
          "id": "db620382-692e-40e9-afce-b051970192be",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2270e46d-13b3-4c2e-a7c5-b8af9a970058",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 849,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2d329d-e8f0-4054-867e-daa86e2a3817",
        "cursor": {
          "ref": "1ae906f7-e73d-4254-a17f-5f282431929a",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3ce35c15-f7c1-4cdd-bd11-5d14dc886e44"
        },
        "item": {
          "id": "6b2d329d-e8f0-4054-867e-daa86e2a3817",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db871510-08fe-4ee2-8957-737a91d84431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b7b25-afb5-48ff-a8b4-0a190f3b0b78",
        "cursor": {
          "ref": "3c9e40ec-d5f3-4cf5-82db-244609f9ff8e",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69f42717-20e5-45a0-a467-2a024b16779a"
        },
        "item": {
          "id": "7d5b7b25-afb5-48ff-a8b4-0a190f3b0b78",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ca487a37-30fd-4d70-a464-639adeee4eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558d22c4-d80c-4929-a146-88532279e99d",
        "cursor": {
          "ref": "8a050f3d-8d6a-4b87-ad5f-e7ab60daf771",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d9ee829e-8f76-4d78-836a-04549f4b192a"
        },
        "item": {
          "id": "558d22c4-d80c-4929-a146-88532279e99d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "525a351b-3fc8-423c-a5f3-55734fc2696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe8a9b-0a64-4893-8e68-a80a230a1202",
        "cursor": {
          "ref": "9edd87c0-d515-4564-9112-dd0b66cbaa59",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dffb18f1-a0e6-4e3d-b47b-5835c96af53a"
        },
        "item": {
          "id": "7bfe8a9b-0a64-4893-8e68-a80a230a1202",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db80456f-772c-4a87-86fd-281c594c23c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed39b07e-53e4-419f-b5fe-2c009d0784e2",
        "cursor": {
          "ref": "bd27611a-a323-4f9a-820d-083e32c1f912",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "133a99b7-8cc5-4fff-b9ad-d4424e8e64be"
        },
        "item": {
          "id": "ed39b07e-53e4-419f-b5fe-2c009d0784e2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d72b374-3558-45d3-95ec-316cb58239b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b275dc31-545c-4547-b7ff-f59966188dee",
        "cursor": {
          "ref": "c58f4e1f-874a-45e8-b917-f0298e0e2d0e",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ab0bb97-dbe9-4325-a838-ee448c1b3686"
        },
        "item": {
          "id": "b275dc31-545c-4547-b7ff-f59966188dee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "329a8d5b-46fb-44cd-9c80-47061c307d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4249b58c-6d56-4a8e-8140-4bf76769f0dc",
        "cursor": {
          "ref": "e8874d7d-aa33-43c3-8067-60edac729ebf",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc8e3fb5-43d2-4777-9415-08612db03396"
        },
        "item": {
          "id": "4249b58c-6d56-4a8e-8140-4bf76769f0dc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "93c23895-0384-4224-824c-8a12df6d5aad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 776,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcacf94-0501-4f48-b21e-0da408f06fbd",
        "cursor": {
          "ref": "309f0e2e-1836-47ce-b207-af27b2388696",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96eb663f-4bd2-4e80-8a8b-151ad9550de8"
        },
        "item": {
          "id": "afcacf94-0501-4f48-b21e-0da408f06fbd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9a64087e-4980-46cb-8803-c2b7d1bd66ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca939e0-6949-4906-8d30-d58a7d6d882e",
        "cursor": {
          "ref": "2504a553-9a42-404c-bb3d-3b5dcf0074d5",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d8e0650a-da15-479b-a172-8fbfb8d97d98"
        },
        "item": {
          "id": "cca939e0-6949-4906-8d30-d58a7d6d882e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fa630087-c5f4-495c-bdf6-c63b2ed25f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1987a-494b-4e72-8eda-bc8ccfbae26d",
        "cursor": {
          "ref": "db934f82-03de-403f-a008-99f71f5ebcf9",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b30612b-0db4-4b54-b605-0df093240b37"
        },
        "item": {
          "id": "76c1987a-494b-4e72-8eda-bc8ccfbae26d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "da1a5e0e-513a-4dc3-8c07-f60203fc58c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7863f8ed-05a1-486e-a225-0b52fc90bf17",
        "cursor": {
          "ref": "6e8004f0-3ebf-46a1-b587-ffb0fa41af75",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e9eede51-98ca-4aed-a406-72308344c9e7"
        },
        "item": {
          "id": "7863f8ed-05a1-486e-a225-0b52fc90bf17",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "14b36431-2f61-45ef-a710-80ff05cf1ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8972efe-f66c-4c7b-90d6-0a2a8b2a01b4",
        "cursor": {
          "ref": "07914720-21cd-45b4-9d9e-0991088cb12a",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b28cf7da-4de3-4cb4-8ff1-aa807e097161"
        },
        "item": {
          "id": "a8972efe-f66c-4c7b-90d6-0a2a8b2a01b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8aed023d-7687-41e2-8196-8d34ad22fa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f641538-7806-4a36-8014-750e1f45e1ca",
        "cursor": {
          "ref": "3eed21ba-d63e-4017-865b-8d6667422efd",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9a6dcf0-d958-4398-bcfe-d31554049d03"
        },
        "item": {
          "id": "5f641538-7806-4a36-8014-750e1f45e1ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8f8437be-c14f-4158-8dd0-a237d785ea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08896c05-d539-4dca-bdd9-bf282a5e7f87",
        "cursor": {
          "ref": "ba26c877-5592-45a3-81d7-b8362d12211d",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0e0269c1-c47d-47db-b763-48e9c3eae7a6"
        },
        "item": {
          "id": "08896c05-d539-4dca-bdd9-bf282a5e7f87",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ecb00c38-6e09-4499-ad67-b0938798caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926ee1d8-50e8-42fa-9099-f4394e528ab9",
        "cursor": {
          "ref": "f256637b-2687-44e7-9004-f2926197a626",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ae76e074-f707-4bf4-b2fa-707a37fc5823"
        },
        "item": {
          "id": "926ee1d8-50e8-42fa-9099-f4394e528ab9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ff54a0e2-1198-45eb-9533-221a98d09775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820e86e2-673e-49b4-8013-61e75e44af39",
        "cursor": {
          "ref": "691def73-dd9b-4d32-bc84-33a989ae0a93",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f4c6f730-65ad-4083-89d1-1ee5a72a6486"
        },
        "item": {
          "id": "820e86e2-673e-49b4-8013-61e75e44af39",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3462dd57-7e2f-49c2-98fa-7b581ee00da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76941a80-7f2a-486d-86ca-c154d89ec86f",
        "cursor": {
          "ref": "9a293c52-390c-46ce-8474-cae5f097a67f",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c9d55c5-c034-4bb2-908d-887d3558a24d"
        },
        "item": {
          "id": "76941a80-7f2a-486d-86ca-c154d89ec86f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "78a05c25-b20e-4e6b-8745-fa5b1bc85cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6504ffdc-e51a-4ccb-93b8-ae6da6fbe36a",
        "cursor": {
          "ref": "663918a9-2934-4433-a132-0e371a7e337c",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f3bee2e-28d8-4b02-8594-12585ae1fa59"
        },
        "item": {
          "id": "6504ffdc-e51a-4ccb-93b8-ae6da6fbe36a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e2941f84-b3e7-40fc-9725-22a090bf5fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3042b5a6-0e04-497a-9ddc-4be00d7bdfa5",
        "cursor": {
          "ref": "1eb2df48-2386-4f4c-863e-7e70b993e420",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "481ffd00-1587-437d-bd40-747458b42074"
        },
        "item": {
          "id": "3042b5a6-0e04-497a-9ddc-4be00d7bdfa5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1fd6b284-d5ae-4fb4-8ac4-eadc883c836d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326bfde6-bf1f-4bb9-814f-7667d2f0a454",
        "cursor": {
          "ref": "a4b4f2fc-b5d0-4c47-b887-5387b9cc6cc3",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0dd8c833-cfc1-462e-b8eb-f31266aaa3b2"
        },
        "item": {
          "id": "326bfde6-bf1f-4bb9-814f-7667d2f0a454",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8d0935be-c573-42f0-84cc-4cec275dc407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfcd0b0-ae9c-4dd9-a959-95042ca80d23",
        "cursor": {
          "ref": "b7a68041-cac1-44db-a988-ab4aa9b0fd7b",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "47763b68-2be0-4418-819e-1782c552748f"
        },
        "item": {
          "id": "fdfcd0b0-ae9c-4dd9-a959-95042ca80d23",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e27af663-2845-42d6-a008-5ee36df94f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09415b7-d9be-433d-a72e-5cb4e5614898",
        "cursor": {
          "ref": "a155cbe4-f1c4-4289-a6dc-33d94b391c91",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39d7478a-7049-4489-8890-fafc6bae2b3a"
        },
        "item": {
          "id": "c09415b7-d9be-433d-a72e-5cb4e5614898",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3fb987a9-0c32-45c9-809e-0f7413bb9da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026b2a1a-dd7c-4e29-9a71-a82d3560ee35",
        "cursor": {
          "ref": "2196f7dd-6ae2-480d-ae7c-c0a4fc8a4d16",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ffbdabc5-009a-4c2c-817a-6c2a47d88a99"
        },
        "item": {
          "id": "026b2a1a-dd7c-4e29-9a71-a82d3560ee35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0b31d8d0-2d7d-4681-ade9-0537a6f06d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5f3e8-cac5-4510-b12f-8ff89abdcbe1",
        "cursor": {
          "ref": "c3883463-310a-44ea-9f46-ad58ed91835c",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9519f9e8-e093-4866-9fcd-d9c6c0c5c03b"
        },
        "item": {
          "id": "07f5f3e8-cac5-4510-b12f-8ff89abdcbe1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "43959c1a-e08a-4844-bc12-0638997e6423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1aede-1b4a-4041-accf-ec78eac32805",
        "cursor": {
          "ref": "2f56b539-ac84-481a-bad9-28f49f46e9a1",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1bd57ebd-e014-4f7a-8030-24a9b8449a2e"
        },
        "item": {
          "id": "5aa1aede-1b4a-4041-accf-ec78eac32805",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "13661cf4-e53f-4dc7-abaf-4a888c12c983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc9e57b-3d76-4835-a8be-1ff3f952ce94",
        "cursor": {
          "ref": "cb87c2df-93e9-4ea1-a92f-4b9992121c23",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "65ed031d-bcc6-482e-ab8c-f2f57f3b365a"
        },
        "item": {
          "id": "2bc9e57b-3d76-4835-a8be-1ff3f952ce94",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "93da9602-d9ab-4b51-b4a5-1b7d862b2eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffd46aa-0dfc-4229-bfd9-3c3d1eb384a9",
        "cursor": {
          "ref": "8d567bc4-6fc2-4ca5-a97f-02ca9a192865",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "36f919e0-afb8-4972-8633-be8a3e9cd266"
        },
        "item": {
          "id": "bffd46aa-0dfc-4229-bfd9-3c3d1eb384a9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8ab5cb0b-1330-4cdf-9c8f-f2143c9dd9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfc791c-ed14-4047-a5ce-fc48d1de1267",
        "cursor": {
          "ref": "aa2f522f-7428-4775-9d90-fdd777aaa004",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bf2d7cf0-bc83-4589-8337-dd2088b45762"
        },
        "item": {
          "id": "5dfc791c-ed14-4047-a5ce-fc48d1de1267",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "78ab9dc7-4e2b-48dc-ad4a-d74292b615ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e388543b-44b0-4a74-b1fa-838d984f8b92",
        "cursor": {
          "ref": "983f6983-a6cb-40dd-a1de-4012b7261127",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "38c67e56-0a46-4d8d-b254-e2bbe3009cae"
        },
        "item": {
          "id": "e388543b-44b0-4a74-b1fa-838d984f8b92",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a73be329-8edb-4cc4-87a7-f54cda178b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e7eb58-dd60-403c-817d-719c5acb2ee6",
        "cursor": {
          "ref": "3720fc1c-a62a-45c2-b14d-31a4261b873f",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49a6af51-7217-4fe2-8435-be0a67c0c472"
        },
        "item": {
          "id": "62e7eb58-dd60-403c-817d-719c5acb2ee6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7c7ffc7e-39dd-487a-b495-cb1bca8e996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d157792-fc84-4aa9-a9a7-8ef384ab45a0",
        "cursor": {
          "ref": "25cb18bd-d3e4-499f-add8-c34f8bff4cc3",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79cfe57b-925a-4dd9-b8f9-b5b40329247b"
        },
        "item": {
          "id": "2d157792-fc84-4aa9-a9a7-8ef384ab45a0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f4c0ebc5-a966-40b7-bed1-dc996c65dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c383bee-a901-4252-b967-631e1e7061b3",
        "cursor": {
          "ref": "e049b42a-7149-4423-a69a-e20ea288f787",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "49f1f7bf-cde6-44ee-bec2-02d2d021bc90"
        },
        "item": {
          "id": "3c383bee-a901-4252-b967-631e1e7061b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8861b8ba-bc57-425c-8a7c-f8467d4f2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564666c6-7539-47e5-8391-9fb1805c6282",
        "cursor": {
          "ref": "96fc33ab-f7f5-4341-8be4-6ad23d0d054f",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "21663572-1474-4c51-8d7b-be811c473b4a"
        },
        "item": {
          "id": "564666c6-7539-47e5-8391-9fb1805c6282",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1db11a53-6f65-4ff5-bd81-d938d974beec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee39032-699a-44d5-b995-a5dbb7c5f490",
        "cursor": {
          "ref": "2db4e1cd-5b29-4e2f-9dc6-a17b00981534",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d3cd592c-e28e-485f-a096-3302cbc1ff82"
        },
        "item": {
          "id": "7ee39032-699a-44d5-b995-a5dbb7c5f490",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b0f3e043-7523-48ac-843a-54f02861169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff8e7a7-a490-4f3e-83af-77bca947250f",
        "cursor": {
          "ref": "e9afabd3-8190-419f-bc88-9a2372c0331e",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a1357bb-f0c0-40f2-b417-ec6eb0052f63"
        },
        "item": {
          "id": "bff8e7a7-a490-4f3e-83af-77bca947250f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7a2ba7ed-0a16-4c3d-a1ea-62cff12e9c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84b58e5-ebc6-4968-88be-34cdb38a2f79",
        "cursor": {
          "ref": "e030fac8-f66a-466c-bae9-0f5cf2032e7e",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c7397720-4be7-415d-84e6-489c02c70659"
        },
        "item": {
          "id": "e84b58e5-ebc6-4968-88be-34cdb38a2f79",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3c72457d-9312-4477-bb4b-6c79b2d148c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4404025b-fca5-4dcd-a203-384c5ed8a059",
        "cursor": {
          "ref": "68926fb6-f32a-4b5f-9239-de4ef484d57f",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b6e4d10a-5bac-4c8a-bdea-a7e62f442e46"
        },
        "item": {
          "id": "4404025b-fca5-4dcd-a203-384c5ed8a059",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f6a6306a-d2bb-4b9d-9dae-ad33bb58239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a492b35-689c-445e-accb-5b325478790b",
        "cursor": {
          "ref": "0e53c8cf-b010-4fc7-8bd7-773f7ac67612",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4aa72bf3-9866-467a-9806-097f5e511c6a"
        },
        "item": {
          "id": "7a492b35-689c-445e-accb-5b325478790b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b01ec50f-84ac-48e9-9b04-e4248590d2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacfa8a0-6c0f-458f-8ccb-5c2a839f2bdc",
        "cursor": {
          "ref": "d618ff31-3a40-423d-90ca-6a6fb8e4598c",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6834c9bb-85ed-48df-a412-a7d7b30e3a29"
        },
        "item": {
          "id": "eacfa8a0-6c0f-458f-8ccb-5c2a839f2bdc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f4fedb12-68e3-4a23-ab37-2f24aca3cbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a603254e-51e8-434a-8ae1-7246be52452c",
        "cursor": {
          "ref": "4b9d4c84-2115-4433-b1da-662ae7e49d99",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "591b8d5f-0332-45ff-85f2-687cd121bb2c"
        },
        "item": {
          "id": "a603254e-51e8-434a-8ae1-7246be52452c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b77a24b2-5c16-4ca8-933f-a9529585b2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f5de53-67d2-4a4c-9646-326fea536ecb",
        "cursor": {
          "ref": "f7523d42-32b8-4f25-a562-e9d8072f7790",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dd737b76-0158-4c71-8d34-3ee247c23fc2"
        },
        "item": {
          "id": "b6f5de53-67d2-4a4c-9646-326fea536ecb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e06d1e93-34dd-436b-929a-0ff32a4efd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6ff166-2257-41fb-af00-059c702adf44",
        "cursor": {
          "ref": "3471f173-4f1c-4ed4-9552-eec8d43f8d7c",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a84a6800-3348-4408-8615-ee215d4e3780"
        },
        "item": {
          "id": "9c6ff166-2257-41fb-af00-059c702adf44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "26277094-ca67-4da7-85d0-69d1d6d267e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b9ecdf-56d5-46b7-9cb2-558ae9a5e3e4",
        "cursor": {
          "ref": "4e744c32-eb30-43a5-8345-a5b0c89d3011",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6fabe91e-a4da-4d95-a298-d2b748761734"
        },
        "item": {
          "id": "60b9ecdf-56d5-46b7-9cb2-558ae9a5e3e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "06b75e80-1fae-4daf-81c3-94c2674fb828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea1ea5-f8f9-401d-83a1-a5df5f17a24b",
        "cursor": {
          "ref": "6aa27383-f128-4db2-a002-b67074c7e224",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa90a659-3344-40f5-a434-ae7e7ea2f708"
        },
        "item": {
          "id": "a5ea1ea5-f8f9-401d-83a1-a5df5f17a24b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "96189405-548b-4fb8-9151-d3b547a7b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c182f162-f0dd-41b6-aaef-d792904b9f41",
        "cursor": {
          "ref": "d96da18b-4498-4a4c-b9e1-150303470d34",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e39e5701-5895-4217-bc3d-02dded050dac"
        },
        "item": {
          "id": "c182f162-f0dd-41b6-aaef-d792904b9f41",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e0456999-ab04-4e23-a187-1bee4cd8c8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88438157-1689-431e-9ccf-13051b589053",
        "cursor": {
          "ref": "a3ecf1c8-2279-4946-92dc-dc88e16c3cdd",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef405b81-6092-4b4b-b387-78788e043bd5"
        },
        "item": {
          "id": "88438157-1689-431e-9ccf-13051b589053",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b32297d6-75d0-4333-aded-3943a2027fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7200fb2-89e6-4bd2-8591-92d9c8b7a9e0",
        "cursor": {
          "ref": "44b459e7-8b78-4a0a-9cf3-7b1f7574b4c4",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2ae35616-5869-4e99-ac0e-28b1ef33bab2"
        },
        "item": {
          "id": "c7200fb2-89e6-4bd2-8591-92d9c8b7a9e0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1c6ee171-21da-4988-8c43-5aebdc00651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0199673-a693-4160-82c1-e1e468d92801",
        "cursor": {
          "ref": "039dc9f5-7b33-4e9b-b3ba-21ddfd24e6d0",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b3390d66-554c-4cb7-9498-ad89ebd4ca46"
        },
        "item": {
          "id": "e0199673-a693-4160-82c1-e1e468d92801",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8a94e60b-4955-43e9-908a-611e54fecad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e7f6c1-f4df-493b-aed7-a11de710e336",
        "cursor": {
          "ref": "08731292-2d11-4e68-8b18-7c41c1a880b7",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "af6c089c-a16e-4e3e-af07-123a34fab2c0"
        },
        "item": {
          "id": "e0e7f6c1-f4df-493b-aed7-a11de710e336",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "633ac533-44ac-4c61-afe8-5f10aa772d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bac8fc-bbc1-4cf5-8169-c1662d439803",
        "cursor": {
          "ref": "7fbf1a57-87a6-4746-8915-6968fe22edb1",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8db42861-d1d3-4b76-b0ba-856d466a1d91"
        },
        "item": {
          "id": "b0bac8fc-bbc1-4cf5-8169-c1662d439803",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "73cd0904-1144-4c91-b702-301c8010b15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4b27f-4500-473c-a9c5-abcba5298094",
        "cursor": {
          "ref": "78653cd9-32a4-41c6-a385-83156f3a18b9",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "287ed097-31cb-4651-97c9-e4cd03e3a805"
        },
        "item": {
          "id": "7ad4b27f-4500-473c-a9c5-abcba5298094",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7301c90c-f86f-41d9-91b9-5e33269cdeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f267631-984f-4a70-a161-9d9c87423fff",
        "cursor": {
          "ref": "59031697-9673-4cc5-88e7-b7f7edb301a7",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "47e0d2e9-eb30-41fd-b3df-f42d76f3aa59"
        },
        "item": {
          "id": "8f267631-984f-4a70-a161-9d9c87423fff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "20ec31b9-2f58-4018-a21e-9595dddfef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2216e161-54b6-4f31-9fe0-24a9ea70b9b9",
        "cursor": {
          "ref": "14261106-fc11-4f77-b7a6-23a140f7012b",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "def1d541-7a1a-42f7-a51a-1699643e9c17"
        },
        "item": {
          "id": "2216e161-54b6-4f31-9fe0-24a9ea70b9b9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "382fbbc3-7ce5-4f84-b961-be768163c302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8790ffb0-fd11-42ba-8bc7-33682285a5cc",
        "cursor": {
          "ref": "df89ed8e-81ec-45c5-9bc0-36c861e900d5",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00725199-2023-4923-abd9-4ef07e6afd2f"
        },
        "item": {
          "id": "8790ffb0-fd11-42ba-8bc7-33682285a5cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f7536181-1c6d-4b35-8d00-4fa64bc3a24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28a54c4-183a-480d-8afa-f464344951bd",
        "cursor": {
          "ref": "e968fc7d-a4e4-4e52-8782-8f058c827f6c",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "823fce51-4e9a-4348-80d9-7e462b229f8f"
        },
        "item": {
          "id": "d28a54c4-183a-480d-8afa-f464344951bd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "51adb22a-200a-4fef-95f0-19154c6f98d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe33cc4f-bacf-47f9-ab5b-c3b22d17faf0",
        "cursor": {
          "ref": "5a4394a8-9fd5-4c16-be32-79001ba89ded",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9a46a626-7245-4f63-91b1-e0a78492e6c4"
        },
        "item": {
          "id": "fe33cc4f-bacf-47f9-ab5b-c3b22d17faf0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5441ae17-3ffb-4f43-99c5-6786e7e0f9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed5f2ab-388a-4f05-b39e-22c690dd147a",
        "cursor": {
          "ref": "793aa618-f361-4c41-a0c0-ef0b45d94d8d",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9ff36191-0c56-4274-b398-ea3424c010a1"
        },
        "item": {
          "id": "0ed5f2ab-388a-4f05-b39e-22c690dd147a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f99abff-a025-47f8-9dfa-d8b53294ca26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e04d64-2627-435c-b527-19a965ce43b8",
        "cursor": {
          "ref": "c818ec04-b71f-42cf-b373-c3434ce36af3",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e67676dd-0b06-4209-b232-9753a0c6f6a2"
        },
        "item": {
          "id": "21e04d64-2627-435c-b527-19a965ce43b8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b10d0ae-c610-45cc-9c95-16603e3c3204",
          "status": "Created",
          "code": 201,
          "responseTime": 5995,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f895144b-61a8-4c3f-a401-47ca8f9f3aed",
        "cursor": {
          "ref": "3508c896-9473-462a-8967-90a291ade395",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "658b9929-5e6f-4bad-a72d-f7aaa7a62be4"
        },
        "item": {
          "id": "f895144b-61a8-4c3f-a401-47ca8f9f3aed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "da4ba55c-0335-4676-80b5-1e0fcae6df30",
          "status": "Created",
          "code": 201,
          "responseTime": 5409,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c156d19a-1e8a-4cdc-97f4-e2847d082689",
        "cursor": {
          "ref": "746276c2-447f-4dd1-ad88-6f2441780754",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "46667e07-da0a-4280-8027-7455d19bdc56"
        },
        "item": {
          "id": "c156d19a-1e8a-4cdc-97f4-e2847d082689",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17273ff6-7eaa-463d-890d-427ae1d4a32a",
          "status": "Created",
          "code": 201,
          "responseTime": 5351,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "111bb32e-8598-4e12-81e4-6cff65f1d18e",
        "cursor": {
          "ref": "93887783-5987-488e-98de-d14855bc5563",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a5e86a9b-6735-40c8-aeb6-0d382290fa55"
        },
        "item": {
          "id": "111bb32e-8598-4e12-81e4-6cff65f1d18e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6d069d3f-29c3-4ec3-84a7-5ba41b2168cb",
          "status": "Created",
          "code": 201,
          "responseTime": 6233,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "308659c7-eb67-4993-b26b-014353a2a290",
        "cursor": {
          "ref": "561bdf02-cda8-468c-ac3f-85602a4eaec1",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8ad583d9-7186-4ca8-bf3b-af8bd8bc5606"
        },
        "item": {
          "id": "308659c7-eb67-4993-b26b-014353a2a290",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f9385ae7-f089-4ccd-bd53-be4757d557d3",
          "status": "Created",
          "code": 201,
          "responseTime": 5551,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "667ccb9e-c8a6-48a2-a017-cff1d556ad25",
        "cursor": {
          "ref": "953bbe98-acb8-48c6-998a-a4664c541ee1",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74f08146-3448-4d80-ba90-ef24893642d0"
        },
        "item": {
          "id": "667ccb9e-c8a6-48a2-a017-cff1d556ad25",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7f689a7-1e04-4477-95e3-47c1a11ee8d6",
          "status": "Created",
          "code": 201,
          "responseTime": 7141,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137c85c7-d65b-4b59-8472-17f1595491ce",
        "cursor": {
          "ref": "107052f8-ef2a-4f38-8b1a-8ef91fffe5b9",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2875e52e-eca5-4adb-a399-9cf20dac63ad"
        },
        "item": {
          "id": "137c85c7-d65b-4b59-8472-17f1595491ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e71a14df-062a-43a4-ab87-a712774d229e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2454e71-b13d-43ce-9c68-b36eb0eeda1a",
        "cursor": {
          "ref": "c81bd810-e06d-40eb-ba50-730ee7431eca",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab45307a-8f81-4d16-b6ed-a5a0eb344130"
        },
        "item": {
          "id": "a2454e71-b13d-43ce-9c68-b36eb0eeda1a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adefdd79-3e45-4f50-8d52-b2e7f5374e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01a06f-1946-4742-a0a0-07ee4d4e76c4",
        "cursor": {
          "ref": "02603753-29c7-47d2-9c29-8b2ee5b9239c",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1dd48575-6961-47e7-acaa-327ac22bd12b"
        },
        "item": {
          "id": "be01a06f-1946-4742-a0a0-07ee4d4e76c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2390d520-2da9-40dd-8521-d52374412f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489098f-6568-4bbd-86d6-9dd87bfcfde9",
        "cursor": {
          "ref": "8678dd64-df71-4a3e-8ff7-250a5532c3bc",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "930f3dd7-e32d-4e8d-a0e9-5605fcf251a8"
        },
        "item": {
          "id": "e489098f-6568-4bbd-86d6-9dd87bfcfde9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0faa0af-4888-4c37-bde2-6067a6c04227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9691b469-39dd-404c-8bae-065f66904ee5",
        "cursor": {
          "ref": "01a051df-7848-4a88-925c-727d6143e802",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b653ede2-4fd1-43fb-b072-1e51063823d8"
        },
        "item": {
          "id": "9691b469-39dd-404c-8bae-065f66904ee5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c266d80d-fbb4-41bc-8162-a7f255048412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802dc6c-3c71-4c34-90ac-4dff8dfef129",
        "cursor": {
          "ref": "e5831050-c368-4526-b918-58a7ca2191c4",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e6271962-4ee9-4e5f-8811-b00d33f183c1"
        },
        "item": {
          "id": "2802dc6c-3c71-4c34-90ac-4dff8dfef129",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c50d963c-e032-4950-b8de-972cad12542c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d21ceff-0cfc-4955-83da-46b979c7220b",
        "cursor": {
          "ref": "e974d224-88b5-4fe2-ab98-eb52452c6d79",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "569bdf0f-22de-46a1-abf0-c745937cfc20"
        },
        "item": {
          "id": "0d21ceff-0cfc-4955-83da-46b979c7220b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "928fc8eb-249b-4fe2-9761-d79a758f7c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78143478-a6fd-4925-af45-b70d8fc4b76b",
        "cursor": {
          "ref": "8296ac20-782c-4d30-987d-5cd128ef3540",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "181ed717-4642-4b8d-85fe-0feb955268e2"
        },
        "item": {
          "id": "78143478-a6fd-4925-af45-b70d8fc4b76b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26bcb8f8-8df2-4d00-811e-66ee111b674b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93c69c-6441-4845-becc-cf46875cf51b",
        "cursor": {
          "ref": "bb452dfc-99ef-4363-af3a-98532b2800db",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4eaea624-b6c1-4e20-8486-405b6af001ff"
        },
        "item": {
          "id": "bf93c69c-6441-4845-becc-cf46875cf51b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e1f314b-c2e5-4b3b-b6f7-695a4d4fb880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bfdd18-211e-4d40-a01b-b5afa750052e",
        "cursor": {
          "ref": "0c679f8c-c172-4d51-9b38-3c897d411083",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "da973b39-35e8-4159-8759-2dbe9a9433f1"
        },
        "item": {
          "id": "35bfdd18-211e-4d40-a01b-b5afa750052e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ed7a8e3-8bbf-46ef-96d9-2a2ecb2565b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03efe9ee-4700-4d0d-9dc3-cfbeb4b63739",
        "cursor": {
          "ref": "0be280a5-83b3-4d4a-89a9-5361da13a60e",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be7f9659-4cda-4d56-a0a0-2666ea704838"
        },
        "item": {
          "id": "03efe9ee-4700-4d0d-9dc3-cfbeb4b63739",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1db5131e-fe25-4381-b4c5-c957bce9d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4f8883-8f92-49f4-8fd5-f35e37023c50",
        "cursor": {
          "ref": "829d2aeb-6dad-4a53-a6cb-fa3924e60468",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d749554b-da11-4b9a-ba69-788fd15262b1"
        },
        "item": {
          "id": "4a4f8883-8f92-49f4-8fd5-f35e37023c50",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3bb2c045-c432-4ba7-b9a9-669694b43026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62379041-c88a-4102-89dd-33e282ee5128",
        "cursor": {
          "ref": "3fb4c630-361a-4394-8c53-640276e3b24a",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "645061d6-e0d5-4002-a3f6-dc8b55627a83"
        },
        "item": {
          "id": "62379041-c88a-4102-89dd-33e282ee5128",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1ed65d0-d2c0-433a-8403-db58575f76b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854b536b-f96d-45d3-9d9e-780fee93c8e8",
        "cursor": {
          "ref": "8f4de2b6-f188-4e44-b4a3-2c30c120064a",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fd5f5f01-c6a5-48de-9c0e-d1ddcdd8f723"
        },
        "item": {
          "id": "854b536b-f96d-45d3-9d9e-780fee93c8e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "332f0517-cf69-476a-a27d-2cc3bb029217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2955a0-2a09-4475-b23c-3affe6a43a44",
        "cursor": {
          "ref": "90f196e7-5374-42ab-b7d6-f3d4915de8a1",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f1b8e17-5cb4-4617-9467-902a50a89791"
        },
        "item": {
          "id": "7d2955a0-2a09-4475-b23c-3affe6a43a44",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e32f7cb-dd0c-4515-8e0e-c75a1158ace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300dbac-93a7-4261-aa47-45b1bad0073e",
        "cursor": {
          "ref": "c4690771-cf62-43d4-a0ec-f420674f4f06",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fc1c1f2-30ea-4a56-99cf-d3e20664e487"
        },
        "item": {
          "id": "9300dbac-93a7-4261-aa47-45b1bad0073e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8936cf1-b50a-4653-a222-c9af4565b6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580bb0c8-a8be-4996-8e3c-74ef2208452a",
        "cursor": {
          "ref": "77019768-730a-40ab-8252-12193ab73595",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f23b4594-7160-4060-80fd-25b37127b726"
        },
        "item": {
          "id": "580bb0c8-a8be-4996-8e3c-74ef2208452a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2646893d-15b2-423c-99fe-dde2dccd6a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dc77fc-34bb-4520-af6a-e5bbb0894571",
        "cursor": {
          "ref": "d48878fb-3b27-479b-9163-399e4f36672d",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "58f14335-1e95-4b68-9244-dfb40b34432c"
        },
        "item": {
          "id": "a1dc77fc-34bb-4520-af6a-e5bbb0894571",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12f9f7a8-6ffa-476b-ba5a-a66dcf8ffeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ed94fc-b292-4523-a7b7-0b4e15b14f1f",
        "cursor": {
          "ref": "8ef2f7f3-5864-4e06-9739-89d5f62cc3c7",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d360820e-d7c2-4d14-b338-af281df5d7cf"
        },
        "item": {
          "id": "d0ed94fc-b292-4523-a7b7-0b4e15b14f1f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "efdcda03-e29d-460f-a984-208e5384e534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1745b477-c58f-4563-a285-851ebf929e89",
        "cursor": {
          "ref": "d71dfde3-90b8-4270-bac2-ec24652aad2f",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "52b9b553-3c05-4751-90eb-62be9bcc10fc"
        },
        "item": {
          "id": "1745b477-c58f-4563-a285-851ebf929e89",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fab2bd5d-c76d-40ca-b6c3-3d02568d7e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c992b3f-4368-4b15-8c80-e065e0c5d178",
        "cursor": {
          "ref": "d84420ee-e851-457b-a137-8a5664665ba7",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "df133e79-4514-4562-b8ce-33e69931350e"
        },
        "item": {
          "id": "6c992b3f-4368-4b15-8c80-e065e0c5d178",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4923be40-ac11-4557-a45e-2a4e001b88a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa9341-0000-44fe-9e72-444c5b79dcaa",
        "cursor": {
          "ref": "4d5d9a88-0222-4575-a4e6-49c02c22fa11",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a199f2a2-4ddd-4acb-a9d0-75b3956e9b1f"
        },
        "item": {
          "id": "28fa9341-0000-44fe-9e72-444c5b79dcaa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8797d517-8209-4992-8850-0b29ce9b7d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a59c2e2-3c6c-43d9-b44d-b38431b2a837",
        "cursor": {
          "ref": "d21a6bd3-b62e-4cda-9447-7e8ddcc53aa2",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7cb0d2e6-fee5-42fb-8fdc-8e8acd775b98"
        },
        "item": {
          "id": "0a59c2e2-3c6c-43d9-b44d-b38431b2a837",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7f44b025-bf71-4abf-8c76-0c726cf85047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f3a398-45d8-4c89-bcc3-1fbd0790cad0",
        "cursor": {
          "ref": "116fdb8a-6048-41d2-9be2-496da130eb03",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1e3629f0-314f-4cbf-a778-560c42d92268"
        },
        "item": {
          "id": "25f3a398-45d8-4c89-bcc3-1fbd0790cad0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4ccd8cd3-13dd-414b-b511-00beabaf20a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5875fd20-1bb4-44f2-8f59-d3d29b736041",
        "cursor": {
          "ref": "3646de3c-e44b-4167-8399-ef4948a8f76a",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "687e652a-5ee1-43fc-961b-0ebbd4390031"
        },
        "item": {
          "id": "5875fd20-1bb4-44f2-8f59-d3d29b736041",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0adc338e-b5b4-4668-a7ec-c1e3a6e2977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c816fea9-25c9-4a07-9349-288f437d78d4",
        "cursor": {
          "ref": "ddb38e26-f1c1-407a-8d22-3e22effee1b0",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "636c247f-af13-4326-acfa-c6d79c7974e5"
        },
        "item": {
          "id": "c816fea9-25c9-4a07-9349-288f437d78d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eee38b27-ba68-465f-8003-04914b5803a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57dcee8-679a-47a3-b142-9de3ea743eb5",
        "cursor": {
          "ref": "8f536a55-7056-44e3-8bc1-b1c0cc9b576a",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "483a1db2-bb7f-4b87-87cd-2baf93901be2"
        },
        "item": {
          "id": "d57dcee8-679a-47a3-b142-9de3ea743eb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6534fe2a-5ac4-4297-a3cb-ac2cc766d15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8124e5c-c983-4eb8-8535-32721c60d734",
        "cursor": {
          "ref": "e5c38f34-271d-4e9c-b07e-e4126462893b",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f6e5c2d-54b8-4f2a-ad97-211f9c0075b3"
        },
        "item": {
          "id": "e8124e5c-c983-4eb8-8535-32721c60d734",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5e138bf-167d-470f-bc7c-766389dd7f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9776bf4c-cb5e-473d-9fb5-00225df28c83",
        "cursor": {
          "ref": "825a3187-7d24-4c37-aae1-e8d92a09b7db",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "86f24720-9af2-4303-81f7-7dcde1c00307"
        },
        "item": {
          "id": "9776bf4c-cb5e-473d-9fb5-00225df28c83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b1c32eaf-3685-4ee5-9064-49c113931baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc1f76-11c1-478a-af45-404e6f1b76b9",
        "cursor": {
          "ref": "c21c0406-b280-43d1-b844-5b2e6756461a",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1450e01b-7bda-4a09-81a1-6caa4f39cc86"
        },
        "item": {
          "id": "28cc1f76-11c1-478a-af45-404e6f1b76b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7b6cfd69-fff8-4037-b69a-78d5ec5c99fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4b344-ed57-4205-a3e5-ee168f37ba56",
        "cursor": {
          "ref": "df697af9-d85d-4cf9-8ca3-71f5a7680733",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e053ae83-5ec2-4ac1-a551-046ef10858b9"
        },
        "item": {
          "id": "28e4b344-ed57-4205-a3e5-ee168f37ba56",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75a01b38-95fb-459d-ba96-8f676a8158f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1283c9c8-8360-4b51-8053-099ededb2841",
        "cursor": {
          "ref": "65cf5faa-b2f2-4162-812d-760baad298c1",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4cb6aa83-b3d4-4fb8-a933-aae0d2b40891"
        },
        "item": {
          "id": "1283c9c8-8360-4b51-8053-099ededb2841",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0fefa2da-d89c-41cf-a2bb-06401c4887ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee7fbe-0360-44e3-806e-f5b8f01de785",
        "cursor": {
          "ref": "5b97e76d-ef8c-4e1f-ba12-373c7df57ed5",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be747a9f-012b-400a-b361-7ff7731a0b60"
        },
        "item": {
          "id": "42ee7fbe-0360-44e3-806e-f5b8f01de785",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41d90a09-ad94-421f-94eb-273a08a286cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4468dd4a-8418-4191-9859-a44f1c4f00df",
        "cursor": {
          "ref": "64612f1f-4cb6-4c04-830d-9fb8f09e5b08",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a18cadd5-3052-4473-9b9e-793b8867a932"
        },
        "item": {
          "id": "4468dd4a-8418-4191-9859-a44f1c4f00df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e20897e8-27bf-4a03-afdb-856af54fafda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0516b58-8323-463c-99c2-bf64f9d30320",
        "cursor": {
          "ref": "222db954-15a1-47d1-89a6-638509962616",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fb297dea-a700-46a5-aa07-54c94eb2db7c"
        },
        "item": {
          "id": "a0516b58-8323-463c-99c2-bf64f9d30320",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9582683b-de8d-4642-b8f4-ae138cfb4599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01064240-87f4-48a1-a60d-ba0b99d04748",
        "cursor": {
          "ref": "c87eb5e5-2786-48ca-b10d-1bb91910c436",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9ac0b41a-6640-4fc9-8eba-5a0b83e82348"
        },
        "item": {
          "id": "01064240-87f4-48a1-a60d-ba0b99d04748",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cced371b-3c87-4f70-837c-7b95e01284fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66405be2-9152-42b9-93fb-c90ddb0dfeac",
        "cursor": {
          "ref": "d7efb345-bc02-4721-b488-2bece46e026a",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2dda8b79-eb46-4e25-8411-d0674c85e0d6"
        },
        "item": {
          "id": "66405be2-9152-42b9-93fb-c90ddb0dfeac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a766f38-58f7-420a-9d7f-714589f130de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6561f747-88fc-42ef-8dfb-a4f0747020f3",
        "cursor": {
          "ref": "6c639a92-a00c-4632-b934-481f7037b802",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2ecca79a-62cd-4143-8ee6-5de20719ce13"
        },
        "item": {
          "id": "6561f747-88fc-42ef-8dfb-a4f0747020f3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9cf53339-61e1-4e77-a1ea-cf93128471de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e353e53b-55af-4069-9cb0-09f3e4a6c88b",
        "cursor": {
          "ref": "685204c5-a53c-44a9-8cc2-17ae5a28fb83",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "042d7d09-feb4-4db0-babc-707c5d2f62d7"
        },
        "item": {
          "id": "e353e53b-55af-4069-9cb0-09f3e4a6c88b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2603b9ff-feab-488c-9bc7-500766382bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb13117a-127b-485d-b2b2-1d9bf2dae4b2",
        "cursor": {
          "ref": "7d0b6813-a624-48ee-99a9-4066c5c8f3c6",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "514ad0d6-acc5-40f1-a294-40b3a3e7484f"
        },
        "item": {
          "id": "fb13117a-127b-485d-b2b2-1d9bf2dae4b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "feacc3cb-e2c9-43d1-9b20-02b6458b777f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad790a-52bd-4cbf-b4db-89b6b82af77a",
        "cursor": {
          "ref": "aa1ef70f-3ed9-4732-9092-75c83bb5a1e6",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dcec8b69-b19a-4aaf-a8dc-f71109c2f08f"
        },
        "item": {
          "id": "11ad790a-52bd-4cbf-b4db-89b6b82af77a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9ba51e61-59a0-42f1-80e1-1db096bfadf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6669699-75c8-4573-85f4-be09b494bfdd",
        "cursor": {
          "ref": "84f18fef-0654-44c8-8127-c61d6d02f187",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7fccf05d-ab8b-4c7a-a1a1-1dcfd7b7df6d"
        },
        "item": {
          "id": "e6669699-75c8-4573-85f4-be09b494bfdd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e276b985-6853-4070-8775-803a334ac317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0966e6a3-a646-4b35-9d83-5aa11b8e9ac2",
        "cursor": {
          "ref": "ea6c866b-d5f3-4bbe-baaa-c47ffacc79a0",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cdc810aa-a707-46b8-8b1d-5feed69a298c"
        },
        "item": {
          "id": "0966e6a3-a646-4b35-9d83-5aa11b8e9ac2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fea0ffdd-e935-44c0-b1d0-b96fa16957de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d06ada-1112-4031-8276-07ecdc539eb1",
        "cursor": {
          "ref": "3a133b93-8ab8-41ed-b0c6-e12530780768",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "84bcde18-f14d-43fe-ac0e-6e04d25cd516"
        },
        "item": {
          "id": "15d06ada-1112-4031-8276-07ecdc539eb1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ad5e8ac0-507d-4604-b834-d100041788ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da4172-8c39-4cd4-b151-797038797c6a",
        "cursor": {
          "ref": "295b5b89-25f2-4dd8-b170-742ca648c337",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0f5e05cc-31c6-45dd-aeab-40a1d6713a34"
        },
        "item": {
          "id": "d7da4172-8c39-4cd4-b151-797038797c6a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4465440-b255-484a-b5f4-61e2bafd9d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec83ddbc-c002-46b9-8bd2-261ea98ce4dc",
        "cursor": {
          "ref": "c7febe53-c7d5-4ca6-9641-8a5328deb222",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3308f45d-4047-4bf1-a065-bce06cead81a"
        },
        "item": {
          "id": "ec83ddbc-c002-46b9-8bd2-261ea98ce4dc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "96e4938d-fa1d-4b34-8a98-95676d84767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa0636-9c2f-47e2-b550-cbb4a592aef5",
        "cursor": {
          "ref": "28617e17-e0b5-4be2-b982-0ce0d1c2e266",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b4fee86f-8841-4968-83e3-d8073132d906"
        },
        "item": {
          "id": "e0fa0636-9c2f-47e2-b550-cbb4a592aef5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5db65ee9-d449-40fc-ace6-28f9d5a840b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b053f9-5484-4018-afb7-bafd4e8f85c5",
        "cursor": {
          "ref": "2f2a7f5d-925e-4100-aac0-b813668683c5",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f3b40ad7-7ea2-4526-84d1-d88157791076"
        },
        "item": {
          "id": "e2b053f9-5484-4018-afb7-bafd4e8f85c5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0531e17e-0554-44cc-9261-926bc0afe508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575a6ac7-5936-4d0e-8d4a-3c29aa880228",
        "cursor": {
          "ref": "09cadb93-02de-4647-96d1-ea56cd1453da",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "001eb132-1181-47f7-abbe-d2c574a64eef"
        },
        "item": {
          "id": "575a6ac7-5936-4d0e-8d4a-3c29aa880228",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3187a1e8-18d8-4d7c-b13a-0e320950704f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061df2db-157e-4e12-b6d5-422a430bd055",
        "cursor": {
          "ref": "458d5a67-f39b-45e1-9ac8-e300ea28a552",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "380b9943-0c2b-4849-a75b-597aa67efc32"
        },
        "item": {
          "id": "061df2db-157e-4e12-b6d5-422a430bd055",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c147fcbb-337f-4126-bb18-2b3db4029a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cff70c-3bfd-4897-8480-15beb61e9613",
        "cursor": {
          "ref": "06ff3e08-eecd-4ee9-bd1e-4479e5ff7862",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "351aeaea-41c5-47f8-a28b-7ab55ea8e64d"
        },
        "item": {
          "id": "d9cff70c-3bfd-4897-8480-15beb61e9613",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c753c150-934b-4d2a-93ad-de30c9846971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff2082a-4cdf-4f0c-9150-0259814da007",
        "cursor": {
          "ref": "90e84387-bfca-4571-9aca-a6255e05c62b",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "69b06d7a-e7cb-455e-b121-25438dca7edc"
        },
        "item": {
          "id": "2ff2082a-4cdf-4f0c-9150-0259814da007",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bae8783b-f4a6-4e55-b58a-d804c468e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d09e546-beb7-4c85-aeb7-c298f8d3dd60",
        "cursor": {
          "ref": "b89fef55-9a31-45de-996a-3679d7ebf8b4",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "34a4ce7c-ffe3-42d7-bbf0-4785f48da3e9"
        },
        "item": {
          "id": "9d09e546-beb7-4c85-aeb7-c298f8d3dd60",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f271d6fe-5abf-4a05-9ee9-68c8f01f399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b241f36-120e-4908-8974-2789732c3464",
        "cursor": {
          "ref": "5af148ea-c86f-4542-83f1-d6bae9b011c2",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "25b44afa-adb2-4c0f-a71e-b7ce29759227"
        },
        "item": {
          "id": "5b241f36-120e-4908-8974-2789732c3464",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "87158ce5-925e-43ad-88ae-2132b5826c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c104cae3-06a3-44ab-b8be-a296eaf56fc6",
        "cursor": {
          "ref": "c0841ed3-d856-45ad-b15e-850cb3dae9e9",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "56384450-a2ae-4fc6-b49c-9e2effc1743a"
        },
        "item": {
          "id": "c104cae3-06a3-44ab-b8be-a296eaf56fc6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b4d5eed0-8753-48de-8918-27c412b9e69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edef5244-2a1a-417b-b609-b6bdec24f879",
        "cursor": {
          "ref": "25c3a0ec-ac1b-416c-ab73-db8ed2ee5132",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3d197482-eca7-4b5c-b8e3-f0122341c8b7"
        },
        "item": {
          "id": "edef5244-2a1a-417b-b609-b6bdec24f879",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61e3b390-ad84-4af9-9493-15ee05a5ee77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970f6c2-8239-4328-891b-8e12e97f2197",
        "cursor": {
          "ref": "99bd98a6-bbdc-41b4-812d-1e3af29673cf",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "de764c02-e918-4bff-b8bd-18ede176a479"
        },
        "item": {
          "id": "e970f6c2-8239-4328-891b-8e12e97f2197",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d6bfd0ad-93b3-4170-864a-b176f8112a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584bf374-48ca-4429-91e3-7a9747f34bf1",
        "cursor": {
          "ref": "c1a074eb-086f-49e7-9078-6436383300df",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "42c5f4c5-3cbf-4504-a414-78d27378f610"
        },
        "item": {
          "id": "584bf374-48ca-4429-91e3-7a9747f34bf1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d111617b-6477-49b9-911d-61443ce94fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13c13ef-f8a1-44c1-9e91-da21f1fe4ca9",
        "cursor": {
          "ref": "0a0195bb-99c5-4d9f-818d-59b2f0bbf857",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d73e566-2491-4400-acad-48253b8d939f"
        },
        "item": {
          "id": "c13c13ef-f8a1-44c1-9e91-da21f1fe4ca9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fafa8e2a-5fd2-4238-ac07-dd8af099f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b23d3b1-4143-46f5-ac12-ee2c76579864",
        "cursor": {
          "ref": "76c97e0d-9fcc-4452-ae24-4a3b2193ec21",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ea937235-f8ac-401e-8fcd-f251c6f1ad9e"
        },
        "item": {
          "id": "1b23d3b1-4143-46f5-ac12-ee2c76579864",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88527a23-5fc3-42c6-bafa-5a3e2c7c99de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2834cd2-c598-4f54-83f4-371e7b924594",
        "cursor": {
          "ref": "44daae15-4294-4769-9ab4-9473320c9171",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11a0cb55-49c4-4449-bb34-be6a90fbe5a9"
        },
        "item": {
          "id": "c2834cd2-c598-4f54-83f4-371e7b924594",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d4d0c348-59ed-4f05-b65e-ec38172a4658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79968e84-9ddb-440b-94f2-4e49415a47db",
        "cursor": {
          "ref": "163097ed-0bd6-4f06-8f51-f6776cfe0437",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ea25d146-f46f-4ed2-818f-45dffc43e681"
        },
        "item": {
          "id": "79968e84-9ddb-440b-94f2-4e49415a47db",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d66f3c17-3347-46b6-ada9-798d1eb8aaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8314fa-37fc-4cd5-8c28-74f4e3b955f7",
        "cursor": {
          "ref": "4f012569-233b-435f-a7e3-806a134e7588",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52007842-7b97-43be-8015-8554037512dc"
        },
        "item": {
          "id": "9d8314fa-37fc-4cd5-8c28-74f4e3b955f7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "df33a90f-584c-4ce1-a691-10c2b6efa3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c3224f-c745-4a42-9336-6f4c286c1e6f",
        "cursor": {
          "ref": "e413ec27-e5f1-4f9f-b56b-765449c0296b",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9441728a-bab7-4d93-b324-cc571a1da9ce"
        },
        "item": {
          "id": "50c3224f-c745-4a42-9336-6f4c286c1e6f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f98b0dcf-f188-4f55-9fbd-733adfe89471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b780c77a-e725-47ba-a87c-d2cb44398e1c",
        "cursor": {
          "ref": "bffeb576-e740-4660-b462-9b3797802382",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9af32274-e6a4-43c6-a680-3217181ca822"
        },
        "item": {
          "id": "b780c77a-e725-47ba-a87c-d2cb44398e1c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39215329-6f6d-44f1-b7e6-08e7ba69e804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120686d-3061-4a5e-9f86-0b138a05c075",
        "cursor": {
          "ref": "8e493084-085b-4392-b167-af9b327aaa43",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f357dede-f1b3-413c-8d3f-96fc10789ecd"
        },
        "item": {
          "id": "e120686d-3061-4a5e-9f86-0b138a05c075",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e970f9c8-f0a3-4173-901e-6bf5c4ca016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b1fa8f-33ee-48c2-8a25-ddaf5a0a0db2",
        "cursor": {
          "ref": "765b5085-3f48-4d3f-b2a2-a72e9d017cf0",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5921634f-0a5a-4d06-876a-18b65026bad8"
        },
        "item": {
          "id": "76b1fa8f-33ee-48c2-8a25-ddaf5a0a0db2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7d47204-30ad-40db-ba20-5776f55a8081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7072e-86de-4dd7-8506-00c15129bdd9",
        "cursor": {
          "ref": "6764b07f-3629-475d-b049-71164dfdcd1c",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6fd65f3c-ef0e-4c10-b830-f753e1f7295b"
        },
        "item": {
          "id": "12b7072e-86de-4dd7-8506-00c15129bdd9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6da4a9d6-a92f-41f5-974c-b5830045f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e65208-cbdf-4a68-9d79-7fff54ca325d",
        "cursor": {
          "ref": "7d019b48-0366-45d8-a3d4-4f233bef6e5e",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa250b8d-3bf6-465c-9c72-5ec5519f8e46"
        },
        "item": {
          "id": "a2e65208-cbdf-4a68-9d79-7fff54ca325d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d7f0aff2-22d3-4edb-8f4b-658a9766ba73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd072d5-0e07-43d5-8371-dfa9e5e77c2b",
        "cursor": {
          "ref": "5144ca63-aaa9-42c3-ba18-87ccdf91b326",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cda3f953-bff2-4644-a916-0a3e5340a5bc"
        },
        "item": {
          "id": "bbd072d5-0e07-43d5-8371-dfa9e5e77c2b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "88a9b682-bd3f-4cdd-ac2f-cc25d33fece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa6ed91-1876-4a4f-ba5b-0230b6eb02b1",
        "cursor": {
          "ref": "8037507f-afd4-41cc-86ce-fa0bd704b85d",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "72a58b67-1464-4193-a92e-532f97c66773"
        },
        "item": {
          "id": "0fa6ed91-1876-4a4f-ba5b-0230b6eb02b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9f717a1f-fce9-4d69-bdbf-1c38b734ebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c664278-8f6f-4312-86fd-d21975e8c550",
        "cursor": {
          "ref": "9c719561-1528-442e-ac7e-48d7bd7eda85",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e0799d30-d8cc-4fbc-9fdd-1832658861da"
        },
        "item": {
          "id": "3c664278-8f6f-4312-86fd-d21975e8c550",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3bea6c26-f02d-4405-a294-4712c9e32ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d1999-7454-42b3-98d4-80ef078bd15b",
        "cursor": {
          "ref": "856f65a9-81d2-4f11-93b6-62bfde5b66e9",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0a168907-ad12-4a69-a914-7e34a2cc9a91"
        },
        "item": {
          "id": "db5d1999-7454-42b3-98d4-80ef078bd15b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9dbe80ca-e3f0-4bad-b3c2-4f574f477d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a1363c-f404-4616-98ce-a426e1e8359a",
        "cursor": {
          "ref": "a3d6411b-3c40-4dfc-9045-10e71c2b7acf",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c9dfed3b-0b4a-4061-8ccf-d8b9bf4543c0"
        },
        "item": {
          "id": "c3a1363c-f404-4616-98ce-a426e1e8359a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f81b8911-9c3c-4944-98a1-17f100c46fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33ad57b-7e59-4654-9d66-c05ff6f996a8",
        "cursor": {
          "ref": "4a847eae-3c37-441b-849c-eba7041fa3fc",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d67f7281-22ac-41fb-ab29-6c0d10bc2fa4"
        },
        "item": {
          "id": "d33ad57b-7e59-4654-9d66-c05ff6f996a8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eb0b4de7-f761-46d8-b987-9186b8e2e482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f8b6fe-73c7-4c1d-b12a-01b81926bb00",
        "cursor": {
          "ref": "84d2b9bb-aaf7-472c-9ae1-bdaa508f9cb1",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0d568b7-a2a4-4aa2-a47a-b7192e27807d"
        },
        "item": {
          "id": "09f8b6fe-73c7-4c1d-b12a-01b81926bb00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "106a1c82-326a-4463-9e04-6660a725ce9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab3e19d-5baf-4b4e-9269-e765c9f20a1b",
        "cursor": {
          "ref": "dd202912-d820-4b02-86bd-14e1d030e66f",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ca65dd65-50e2-4064-97bc-6d647543123d"
        },
        "item": {
          "id": "2ab3e19d-5baf-4b4e-9269-e765c9f20a1b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "412a5335-6068-40ae-8773-266e5ecadf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0f53b1-c8b4-45b8-a799-6458cb82c86f",
        "cursor": {
          "ref": "464dac96-3551-48b8-93b2-9c7da20860fb",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cdd4091b-3d74-4804-a459-c4ce18ba8a36"
        },
        "item": {
          "id": "0f0f53b1-c8b4-45b8-a799-6458cb82c86f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2dee2c7a-db8d-4d31-834f-bdba00712938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf65d52-6fea-476f-9064-201662342d35",
        "cursor": {
          "ref": "0469e257-63bf-465d-b071-b0fe6edbafa9",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0924593f-5f28-4cc9-90a3-6292b76e5e78"
        },
        "item": {
          "id": "bcf65d52-6fea-476f-9064-201662342d35",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e1b364d6-f265-4bda-b173-724cf1321f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6579647e-4a63-4691-b5a2-3f2812699a9a",
        "cursor": {
          "ref": "2ccc6efd-fd5a-4476-97eb-8ae2623d048b",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3bc24626-e011-4e08-801e-7a632d6a93f5"
        },
        "item": {
          "id": "6579647e-4a63-4691-b5a2-3f2812699a9a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b47d4f79-085b-4f62-bc69-586aa3a481cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64521ad-6154-44c4-a9f4-970e8057322c",
        "cursor": {
          "ref": "a4b43cb5-a27c-4ea6-a8fa-e14fd49af050",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b82c3b7-f9c9-4046-a15f-ac6fa3d99416"
        },
        "item": {
          "id": "d64521ad-6154-44c4-a9f4-970e8057322c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e88c717-fb22-4183-b6fa-5fd1f9c70a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfaa5e-98bf-4e72-83ea-1466acb143af",
        "cursor": {
          "ref": "4dd2bb99-6708-4ddc-b6f8-9be1b74d24b0",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a102ce8b-f336-43ff-b155-c8573bf9ecb7"
        },
        "item": {
          "id": "17dfaa5e-98bf-4e72-83ea-1466acb143af",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "81e65975-af52-46d3-8e2f-545e67aa20f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e334fe-66de-42cc-826f-3ca6d7e6cce7",
        "cursor": {
          "ref": "c4ea2207-9897-43f3-8d1b-bef5be4f98fd",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c6319d81-84c4-4813-9a6b-7d044d7d2da3"
        },
        "item": {
          "id": "60e334fe-66de-42cc-826f-3ca6d7e6cce7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "367fad36-7719-440f-94be-7f28d1577340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5204520-5a44-4fc1-92c6-f5948fa4373d",
        "cursor": {
          "ref": "ef38dc63-e784-4d46-89de-1567b4c09411",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e8df7a7-bb6c-4db1-88a9-12afc11e0fa3"
        },
        "item": {
          "id": "f5204520-5a44-4fc1-92c6-f5948fa4373d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7a51bfc4-a4f4-4c2a-86a9-ded2aa7cb043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e658b3f-b851-4d8d-b64c-6d1efa1ba40b",
        "cursor": {
          "ref": "481f3700-c5f4-4337-96a3-4b489b8a3e4b",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1105da53-83bb-402d-a66e-c4251962c229"
        },
        "item": {
          "id": "6e658b3f-b851-4d8d-b64c-6d1efa1ba40b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa1d4a64-9c25-4dfc-8403-b16e869aac51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915592bf-de3d-4936-bf13-bc8b75815b59",
        "cursor": {
          "ref": "ce6ee603-eb4c-444d-b0de-054da21a278c",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "840eb210-4fcb-4393-9e80-a48730e78af4"
        },
        "item": {
          "id": "915592bf-de3d-4936-bf13-bc8b75815b59",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f78c637b-b07c-4a99-be65-9e0fce212027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905bf14c-9f8e-4a7f-977e-8c1d3a7e40e4",
        "cursor": {
          "ref": "2a265c2c-c17f-42dd-8982-dcc2fc31f9a4",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d8a9093e-f837-4610-8e1f-ae253158aea4"
        },
        "item": {
          "id": "905bf14c-9f8e-4a7f-977e-8c1d3a7e40e4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e94c7488-5450-4111-afa3-4590b85714d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81df5315-9ee6-4e78-a980-15925d9ab4e3",
        "cursor": {
          "ref": "7a7c0067-830c-4e36-a2b0-d41a2bd96819",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14fe1c56-8772-482f-adb4-8f20c1deb398"
        },
        "item": {
          "id": "81df5315-9ee6-4e78-a980-15925d9ab4e3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "de8c5d9f-0c0a-4999-8823-954c366cabaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f11a1-87fd-4b2f-b7fc-f2cb107eea83",
        "cursor": {
          "ref": "35cce8bc-8912-4e71-847f-46f80e736ac1",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "007d195e-ed82-4c79-a7db-3d4e7d8802a6"
        },
        "item": {
          "id": "813f11a1-87fd-4b2f-b7fc-f2cb107eea83",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e2de14f9-9b58-4e25-8718-24942fd421a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45b6e58-ef36-4a6a-af79-61bc4b8f9263",
        "cursor": {
          "ref": "ec9a75e0-09e1-454d-a7d4-2366c5d2161f",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c6d4db6b-40d2-4e1d-b156-3dd6cdcf2504"
        },
        "item": {
          "id": "b45b6e58-ef36-4a6a-af79-61bc4b8f9263",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "23711217-4a1d-4680-bd3a-677493963e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb9e13-1a39-450b-aa4d-b1292320eade",
        "cursor": {
          "ref": "fe4c6c12-24d1-4bb1-a099-8d48df47715c",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e4721ad8-1b61-4b03-ac3a-b719ec9f1eb2"
        },
        "item": {
          "id": "50cb9e13-1a39-450b-aa4d-b1292320eade",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "40cc23a4-9e91-451a-afaa-058d3d8add15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb493578-258f-4a0d-b2fa-4e2e18688e00",
        "cursor": {
          "ref": "e033a77e-18e1-4b22-bd38-4ba4bc402e44",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fde57526-2e1e-4065-bc77-932b3083dc78"
        },
        "item": {
          "id": "bb493578-258f-4a0d-b2fa-4e2e18688e00",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "21fb1525-4a28-4650-a4f0-5671891c55e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680cd41-9581-4d9c-acfe-b70693e2ab5f",
        "cursor": {
          "ref": "c98d9700-5ae9-40d8-8410-8a9dbd0a99ef",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db0d9035-20e5-4c73-bfa4-a377ccf2cd1b"
        },
        "item": {
          "id": "c680cd41-9581-4d9c-acfe-b70693e2ab5f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2c90907e-296c-497c-b27b-210adf0e88ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4b7454-b161-4ed4-9b0a-97f359ba8e45",
        "cursor": {
          "ref": "178cde7d-516f-4c6b-98bb-7c9da46f31f7",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "94dc8a6a-062c-4e54-86c0-0a63a2112cdf"
        },
        "item": {
          "id": "dd4b7454-b161-4ed4-9b0a-97f359ba8e45",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e12e4c68-bd4b-42d7-aa5b-de555c7de4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977b6dd-31de-467a-b7fc-382dbbb3d875",
        "cursor": {
          "ref": "ecd91228-2c7d-4eae-804e-103ecf70b89f",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8cda2a40-2f53-48df-9783-433d5f389272"
        },
        "item": {
          "id": "7977b6dd-31de-467a-b7fc-382dbbb3d875",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8cd1083f-1d9f-419a-b753-e03edde27199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e043fc5e-010b-47f5-9c76-21876c83ea45",
        "cursor": {
          "ref": "657f8de1-011c-4da9-9315-4d8bc5d1902a",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7d2e4da6-4e69-44eb-920d-a91ab568f630"
        },
        "item": {
          "id": "e043fc5e-010b-47f5-9c76-21876c83ea45",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "11223e4a-2368-403e-b9bb-02a47885c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6aa85f-a944-462f-8c47-dc869b292e15",
        "cursor": {
          "ref": "c9381b84-d3cb-46fe-859d-a46b2fd86a12",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "76266918-87ee-4b0a-8350-4be6d0f8f692"
        },
        "item": {
          "id": "7c6aa85f-a944-462f-8c47-dc869b292e15",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "019a5660-dc04-4c75-ab33-c5a64598c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201c927d-9ada-4f64-925b-6138889201c6",
        "cursor": {
          "ref": "c893fe4e-5ebc-4300-9dcb-fadff91b06c8",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ebe73f40-8d0c-45e4-932a-d1f6bfcd5f36"
        },
        "item": {
          "id": "201c927d-9ada-4f64-925b-6138889201c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "15b3a634-abf7-42c3-b354-ee90e91bcfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bae648-3cc3-4441-8bcc-f06496026a61",
        "cursor": {
          "ref": "ab166d9f-9b46-4092-8a2f-ec63d467a7a0",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3389cf7f-3730-4f87-821c-9c5736bf54d0"
        },
        "item": {
          "id": "62bae648-3cc3-4441-8bcc-f06496026a61",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "186e27de-87db-48a6-8e49-f137fa0ad920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb9ece-507a-4364-aaaf-2a410e10bb23",
        "cursor": {
          "ref": "74a4899e-25d0-4918-aa5c-23d981ea12df",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c58d868d-fc05-4bb4-8a1a-bf87ab0e51e9"
        },
        "item": {
          "id": "3afb9ece-507a-4364-aaaf-2a410e10bb23",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8e464b99-1066-4c4b-a027-ae0488998cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3384f-fa9f-4ab5-bbc4-56a66e94452b",
        "cursor": {
          "ref": "9c861cf9-7868-4499-8740-cb2050f76773",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9ed69a2b-a373-4fb3-83a6-98faa8503731"
        },
        "item": {
          "id": "f9d3384f-fa9f-4ab5-bbc4-56a66e94452b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f3730928-9a93-404c-924b-eb9eede9a1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6776d64-58a5-4b5b-88dc-d9895726e633",
        "cursor": {
          "ref": "4ba56a5e-7f6f-4252-a1dd-10c8fadfb97c",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5c2d1b83-eea3-4234-b386-785acd68f1ea"
        },
        "item": {
          "id": "b6776d64-58a5-4b5b-88dc-d9895726e633",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "79c60fe8-f197-447b-a012-d82d9acf94f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9164ab9-8f0c-4bb8-b938-31e1efc58fbb",
        "cursor": {
          "ref": "01ff1760-c091-49e6-a3ea-170ca78fa0b2",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f397f94d-73a0-4afb-af36-43094ea5be24"
        },
        "item": {
          "id": "d9164ab9-8f0c-4bb8-b938-31e1efc58fbb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa977476-be61-448a-bcc0-d36c75fa2f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc357fb-0811-4cdc-88bb-4e60acc60ff7",
        "cursor": {
          "ref": "7c222ae3-2bf6-4de4-928b-33c4da75d964",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "acfb0ae7-73bc-4ed2-9f21-76efea73d29a"
        },
        "item": {
          "id": "ddc357fb-0811-4cdc-88bb-4e60acc60ff7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db040ed4-5474-431c-957f-1a2b1938fe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ddc7ee-9417-4982-9085-62419d09b61f",
        "cursor": {
          "ref": "c247e699-ffed-46f1-ad91-70e0152da063",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fe97c27e-2ca5-4a26-970f-5eb6ad29ed6f"
        },
        "item": {
          "id": "97ddc7ee-9417-4982-9085-62419d09b61f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "24381acb-b484-4b46-87c7-5abb50ae682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9fb3fa-d068-4d0f-b2f7-f6c39d94a296",
        "cursor": {
          "ref": "83e7313d-5293-43f2-8ec5-a1b9a73165ed",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ae7c6c7d-9829-48c9-93c3-aa648a8516b1"
        },
        "item": {
          "id": "8e9fb3fa-d068-4d0f-b2f7-f6c39d94a296",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a288c029-75ef-4843-b7a7-100945178c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b94fd38-7890-4648-8d9c-7f2bf3761ab6",
        "cursor": {
          "ref": "cb01ce07-7a64-4732-aa9b-9a7f13258a46",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cecdd985-ee44-4480-bbde-018ed4570a66"
        },
        "item": {
          "id": "4b94fd38-7890-4648-8d9c-7f2bf3761ab6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9294e338-2df0-44fd-b6b7-2736bab17a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc95dc-0934-4907-ae96-6b28d2daa384",
        "cursor": {
          "ref": "ab6fd925-9761-4569-be43-85145ef59c32",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9101a031-ecb0-4e1e-9b96-bb0d2987b362"
        },
        "item": {
          "id": "28cc95dc-0934-4907-ae96-6b28d2daa384",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "05ebd766-ae3b-46e6-b8f8-563b90e83170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7b6456-1ce4-4f59-98da-8a0b942014dc",
        "cursor": {
          "ref": "7a90901f-b750-4dc8-88a9-a57b1c716002",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fab7d6df-a2c7-4dca-b8b3-97af38095d7c"
        },
        "item": {
          "id": "2e7b6456-1ce4-4f59-98da-8a0b942014dc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "80dffaf7-2193-4460-8af9-2289168caee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734a84c7-8a74-40f6-bced-357353583312",
        "cursor": {
          "ref": "a77bbd11-01f7-464f-bd1c-a36e62f0379c",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1b8771dd-46c7-43e1-a58b-271a6acea7b7"
        },
        "item": {
          "id": "734a84c7-8a74-40f6-bced-357353583312",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b3a67540-dd29-4890-854a-6e887f8a5a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93ecc7c-ba1c-43ab-b4d9-c24b8403d25d",
        "cursor": {
          "ref": "1ee6964d-1127-4a33-94cd-de715945930c",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c28be9ef-8a3a-44e3-91a8-68c23c132553"
        },
        "item": {
          "id": "d93ecc7c-ba1c-43ab-b4d9-c24b8403d25d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ad05c3d1-b416-413d-b7ae-4c9c16278c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5dd942-f10a-4d53-a66b-7e193c9e7866",
        "cursor": {
          "ref": "9b27fec9-d9ae-41eb-a69d-d8fdf9f0bcfd",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a9192f4b-bc77-4cdf-b44e-08a2d63e7a8b"
        },
        "item": {
          "id": "3b5dd942-f10a-4d53-a66b-7e193c9e7866",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2bc54bf7-f33d-4fff-8e05-2f0b0266a58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d03352-fae6-4137-98b1-1712cf6ab3c2",
        "cursor": {
          "ref": "23d9952d-34f1-46d7-8fd4-63b33d91250b",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fd667e66-6f36-4f74-8b41-0d9e9cf0f939"
        },
        "item": {
          "id": "12d03352-fae6-4137-98b1-1712cf6ab3c2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0726c3d8-c985-4185-b7a0-c7b2e0c24b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cd32eb-9bb2-49b4-ad64-b708c615ed77",
        "cursor": {
          "ref": "f558ad50-e037-4fb1-9ce2-85194ebd2c24",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "34e6d078-54d1-43a9-a009-52a8df1db4ee"
        },
        "item": {
          "id": "f1cd32eb-9bb2-49b4-ad64-b708c615ed77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "535c858e-d2ad-41cb-9686-b81584e5dfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bf4f03-1dfc-48c1-8aab-b5c67fe3ad57",
        "cursor": {
          "ref": "db0a4e54-7eaf-440c-ab85-00ab261b522b",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cb723618-e201-4a91-a1f3-f5b806d26ce2"
        },
        "item": {
          "id": "24bf4f03-1dfc-48c1-8aab-b5c67fe3ad57",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fcc08bad-5152-4613-b736-b077768a9129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0c573-47cb-4410-8420-e0dc9c37d928",
        "cursor": {
          "ref": "d8a48869-c075-4da1-aefb-33e6ceddb291",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0778aae4-7ce7-4947-87eb-f7c07aff75f0"
        },
        "item": {
          "id": "bca0c573-47cb-4410-8420-e0dc9c37d928",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0f9acabe-c1d2-43b2-8cbf-6bb4c256a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42622788-1714-427c-9298-77f689f3d3b9",
        "cursor": {
          "ref": "4707073c-18b8-4523-a764-dc5fbc3ab530",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "85dbf5e6-31ce-471b-a9a0-3c990544cdc9"
        },
        "item": {
          "id": "42622788-1714-427c-9298-77f689f3d3b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9c08169b-a6c2-433d-a6b8-a87da93892b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea54bef4-b242-44a3-bdbd-72cae8a33952",
        "cursor": {
          "ref": "68563738-1740-456a-bb9e-3636b5c4d216",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "106d7440-0dea-4907-872d-01acb0067dc4"
        },
        "item": {
          "id": "ea54bef4-b242-44a3-bdbd-72cae8a33952",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e3ede670-52bf-48fd-a8e0-9ea939e77a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509b64df-7cc0-4bac-8893-701de103ba8b",
        "cursor": {
          "ref": "e564ddbc-182b-4ea3-9770-7d739a4f0d4f",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "17013301-9561-436f-96e7-263498f91a5f"
        },
        "item": {
          "id": "509b64df-7cc0-4bac-8893-701de103ba8b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9c43467b-4c0f-49e4-95bb-6953b1098308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbb2ff7-10e5-45b5-8c2c-5d33bd830f83",
        "cursor": {
          "ref": "d338333a-cd0d-4eb5-a8a5-f829554a6ecb",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9c09d32-22b9-4370-9ab5-e699322b1426"
        },
        "item": {
          "id": "6bbb2ff7-10e5-45b5-8c2c-5d33bd830f83",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9731f3f6-1b44-498a-9e2a-9b45c88a3833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fb5cdf-5597-47fc-9c62-0b286f03500c",
        "cursor": {
          "ref": "93ec0d9c-020a-4934-92fd-8cdc7f260dd9",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6be427a7-9eb4-4e96-87c4-9b363e02a772"
        },
        "item": {
          "id": "b8fb5cdf-5597-47fc-9c62-0b286f03500c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "78af727a-60c3-4113-a686-6717310390f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2526ea48-dec2-40fe-8b4f-87d4780459f0",
        "cursor": {
          "ref": "ae882f63-7d15-46d7-9bc2-47b6bf5f32e5",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a8416740-43fd-42ed-b9e0-723c9e7a9271"
        },
        "item": {
          "id": "2526ea48-dec2-40fe-8b4f-87d4780459f0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bdab63a0-93c7-4081-982b-d6e7515dc484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a2080-2a7d-4d65-82f8-887fc0eaf605",
        "cursor": {
          "ref": "b6e78905-9ac6-4d43-b201-aa540d8f2ab4",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8ff5823c-487b-4ba0-a47f-cac9914fa28c"
        },
        "item": {
          "id": "936a2080-2a7d-4d65-82f8-887fc0eaf605",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f4f8d2c9-1cc7-4927-bd7f-18cf340ec138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4205f09-c02a-4e8d-8e0b-dacf05823596",
        "cursor": {
          "ref": "b6bc2d0c-2c7d-44e5-b1f6-9a5078334b23",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3fb49b35-4897-4607-93b5-9493057522f6"
        },
        "item": {
          "id": "e4205f09-c02a-4e8d-8e0b-dacf05823596",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "583da6dc-c308-4301-9c8b-bd93b4e855e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b89647-bfcb-4186-a3fc-88e7c40fb976",
        "cursor": {
          "ref": "82f7773b-9094-4235-a1c2-f3cbed9c20e1",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e272b08-996c-474b-8004-74001f884356"
        },
        "item": {
          "id": "53b89647-bfcb-4186-a3fc-88e7c40fb976",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2fafd020-a997-43f5-866b-6e285ff21b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf2b6c-8319-4bd6-bb2d-27286838844d",
        "cursor": {
          "ref": "34b052aa-c143-4479-9c79-44f5b1f7cd12",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4efda95b-8663-430f-8cdf-d92dc2bdfd0d"
        },
        "item": {
          "id": "1bcf2b6c-8319-4bd6-bb2d-27286838844d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2dec0e0e-6ce4-4a4e-8a03-ae4fd3db3a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9916ca-9065-4dc1-b33a-ceadbfc52c45",
        "cursor": {
          "ref": "b07a6a79-d5f8-47dd-af7c-eec7f85955fe",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b2552ef0-5306-49db-864d-4920082dc060"
        },
        "item": {
          "id": "2a9916ca-9065-4dc1-b33a-ceadbfc52c45",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4b4dc5f-63ef-480a-ab4a-a43e038ade2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11be7332-b42b-412e-9390-5d4ac73ae194",
        "cursor": {
          "ref": "7c70491a-ad54-41f2-acb5-7d7c23461388",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c2bca2f-98c7-46ca-84bb-ca54caa69f5e"
        },
        "item": {
          "id": "11be7332-b42b-412e-9390-5d4ac73ae194",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e6ba480-b6c5-47bb-8d97-68d9ff4ba2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cec785-d6dd-4dc0-bc8e-c3be98be551b",
        "cursor": {
          "ref": "0364b0b5-a17a-41c6-9750-99f74e08354c",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f1cc6c68-03b5-4189-894d-4dfda713ca4f"
        },
        "item": {
          "id": "66cec785-d6dd-4dc0-bc8e-c3be98be551b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fbb05438-15c5-4121-a648-2e6b3722fb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a7a8b1-5f16-4b57-8e14-e08bd5287d28",
        "cursor": {
          "ref": "a23291c3-e8e6-4ba4-a0f0-beee8e66e0f6",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5c679a85-2b14-468b-aca3-77f854c0638f"
        },
        "item": {
          "id": "34a7a8b1-5f16-4b57-8e14-e08bd5287d28",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "95ede8f5-5711-41ab-be51-a267f53da175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50ea8ca-d547-4ef6-9510-f5d36041ce6d",
        "cursor": {
          "ref": "46b19be8-6e8b-4041-aa2e-c79c0c52226c",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ea3be411-53a0-4c45-af64-59998fc92765"
        },
        "item": {
          "id": "b50ea8ca-d547-4ef6-9510-f5d36041ce6d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "81611e30-2e5f-4d0e-bf7c-c41afcb2ddd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3171b6e3-2c5d-4ebf-84b1-9a08f711a789",
        "cursor": {
          "ref": "8f8ee4dd-3fb3-4414-8b5a-8bab55aadbae",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "19396a62-f155-4d07-820b-2dbc7e6b031c"
        },
        "item": {
          "id": "3171b6e3-2c5d-4ebf-84b1-9a08f711a789",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80eaab4f-4e43-4276-9507-12b1332383cd",
          "status": "OK",
          "code": 200,
          "responseTime": 449,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b86edf-c2e4-4b3f-b9f5-0903b901806b",
        "cursor": {
          "ref": "2e4be0e4-239d-41b2-8080-698e5e3ad0dd",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5b8bfa8b-7166-4811-96a6-1b10b373d8fc"
        },
        "item": {
          "id": "e1b86edf-c2e4-4b3f-b9f5-0903b901806b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1a23a7d0-f553-4e8d-a347-29e537cd2542",
          "status": "OK",
          "code": 200,
          "responseTime": 1464,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "debb8697-59a7-44db-9b6f-9b7ea70aa578",
        "cursor": {
          "ref": "7ebcbfb3-8b84-4e0c-a306-ef50629fbaef",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d90415a7-7d29-45d7-a8f4-1eb31cbd45ac"
        },
        "item": {
          "id": "debb8697-59a7-44db-9b6f-9b7ea70aa578",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d1b33ac-4eae-4778-9f91-b844ac2e3bc2",
          "status": "OK",
          "code": 200,
          "responseTime": 1511,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d468d39-1600-48b6-9ddb-5ac4dc8b803b",
        "cursor": {
          "ref": "2e2d87dc-87b5-47a0-bf00-d8997e4ab853",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c17c2d2-37bd-4872-a08b-8dac421dbc34"
        },
        "item": {
          "id": "0d468d39-1600-48b6-9ddb-5ac4dc8b803b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aea9789a-4bb7-49e0-84ac-9ad97aa49c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d468d39-1600-48b6-9ddb-5ac4dc8b803b",
        "cursor": {
          "ref": "2e2d87dc-87b5-47a0-bf00-d8997e4ab853",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c17c2d2-37bd-4872-a08b-8dac421dbc34"
        },
        "item": {
          "id": "0d468d39-1600-48b6-9ddb-5ac4dc8b803b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aea9789a-4bb7-49e0-84ac-9ad97aa49c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9511f616-b8f0-44eb-8e09-e9c36fb85e92",
        "cursor": {
          "ref": "a59603b0-6b44-4554-9ab5-4a44bd955ef7",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bfc273e2-1670-4433-a4fe-e8f2dab72b21"
        },
        "item": {
          "id": "9511f616-b8f0-44eb-8e09-e9c36fb85e92",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0512af13-c42e-45ce-9ee6-bc1b57256419",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ef458-dc62-45b8-9219-aa064bba5772",
        "cursor": {
          "ref": "424932a2-064d-4346-9396-5e130daeac8c",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "df725cc7-7879-4cfb-bc72-83f12981a348"
        },
        "item": {
          "id": "b10ef458-dc62-45b8-9219-aa064bba5772",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8efbf6da-4acf-4435-87a9-a533dbdb4595",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}